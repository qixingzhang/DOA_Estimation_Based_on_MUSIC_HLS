// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<71> fft::ap_ST_fsm_state1 = "1";
const sc_lv<71> fft::ap_ST_fsm_state2 = "10";
const sc_lv<71> fft::ap_ST_fsm_state3 = "100";
const sc_lv<71> fft::ap_ST_fsm_state4 = "1000";
const sc_lv<71> fft::ap_ST_fsm_state5 = "10000";
const sc_lv<71> fft::ap_ST_fsm_state6 = "100000";
const sc_lv<71> fft::ap_ST_fsm_state7 = "1000000";
const sc_lv<71> fft::ap_ST_fsm_state8 = "10000000";
const sc_lv<71> fft::ap_ST_fsm_state9 = "100000000";
const sc_lv<71> fft::ap_ST_fsm_state10 = "1000000000";
const sc_lv<71> fft::ap_ST_fsm_state11 = "10000000000";
const sc_lv<71> fft::ap_ST_fsm_state12 = "100000000000";
const sc_lv<71> fft::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<71> fft::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<71> fft::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<71> fft::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<71> fft::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fft::ap_const_lv32_2F = "101111";
const sc_lv<32> fft::ap_const_lv32_38 = "111000";
const sc_lv<32> fft::ap_const_lv32_40 = "1000000";
const sc_lv<32> fft::ap_const_lv32_45 = "1000101";
const sc_lv<32> fft::ap_const_lv32_2 = "10";
const sc_lv<1> fft::ap_const_lv1_0 = "0";
const sc_lv<32> fft::ap_const_lv32_7 = "111";
const sc_lv<32> fft::ap_const_lv32_26 = "100110";
const sc_lv<32> fft::ap_const_lv32_28 = "101000";
const sc_lv<32> fft::ap_const_lv32_29 = "101001";
const sc_lv<1> fft::ap_const_lv1_1 = "1";
const sc_lv<32> fft::ap_const_lv32_2D = "101101";
const bool fft::ap_const_boolean_0 = false;
const sc_lv<32> fft::ap_const_lv32_2E = "101110";
const sc_lv<32> fft::ap_const_lv32_33 = "110011";
const sc_lv<32> fft::ap_const_lv32_3D = "111101";
const sc_lv<4> fft::ap_const_lv4_1 = "1";
const sc_lv<32> fft::ap_const_lv32_1 = "1";
const sc_lv<10> fft::ap_const_lv10_0 = "0000000000";
const sc_lv<32> fft::ap_const_lv32_46 = "1000110";
const sc_lv<32> fft::ap_const_lv32_2C = "101100";
const sc_lv<32> fft::ap_const_lv32_37 = "110111";
const sc_lv<32> fft::ap_const_lv32_3E = "111110";
const sc_lv<32> fft::ap_const_lv32_3F = "111111";
const sc_lv<32> fft::ap_const_lv32_34 = "110100";
const sc_lv<32> fft::ap_const_lv32_39 = "111001";
const sc_lv<32> fft::ap_const_lv32_41 = "1000001";
const sc_lv<32> fft::ap_const_lv32_30 = "110000";
const sc_lv<32> fft::ap_const_lv32_27 = "100111";
const sc_lv<64> fft::ap_const_lv64_C01921FB5444261E = "1100000000011001001000011111101101010100010001000010011000011110";
const sc_lv<32> fft::ap_const_lv32_8 = "1000";
const sc_lv<4> fft::ap_const_lv4_B = "1011";
const sc_lv<11> fft::ap_const_lv11_1 = "1";
const sc_lv<32> fft::ap_const_lv32_A = "1010";
const sc_lv<10> fft::ap_const_lv10_1 = "1";
const sc_lv<32> fft::ap_const_lv32_1F = "11111";
const sc_lv<22> fft::ap_const_lv22_1 = "1";
const sc_lv<2> fft::ap_const_lv2_0 = "00";
const sc_lv<2> fft::ap_const_lv2_1 = "1";
const sc_lv<32> fft::ap_const_lv32_2A = "101010";
const sc_lv<32> fft::ap_const_lv32_2B = "101011";
const sc_lv<32> fft::ap_const_lv32_35 = "110101";
const sc_lv<32> fft::ap_const_lv32_36 = "110110";
const sc_lv<32> fft::ap_const_lv32_3A = "111010";
const sc_lv<32> fft::ap_const_lv32_3B = "111011";
const sc_lv<32> fft::ap_const_lv32_3C = "111100";
const sc_lv<32> fft::ap_const_lv32_42 = "1000010";
const sc_lv<32> fft::ap_const_lv32_43 = "1000011";
const sc_lv<32> fft::ap_const_lv32_44 = "1000100";
const bool fft::ap_const_boolean_1 = true;

fft::fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sin_or_cos_float_s_fu_152 = new sin_or_cos_float_s("grp_sin_or_cos_float_s_fu_152");
    grp_sin_or_cos_float_s_fu_152->ap_clk(ap_clk);
    grp_sin_or_cos_float_s_fu_152->ap_rst(ap_rst);
    grp_sin_or_cos_float_s_fu_152->ap_start(grp_sin_or_cos_float_s_fu_152_ap_start);
    grp_sin_or_cos_float_s_fu_152->ap_done(grp_sin_or_cos_float_s_fu_152_ap_done);
    grp_sin_or_cos_float_s_fu_152->ap_idle(grp_sin_or_cos_float_s_fu_152_ap_idle);
    grp_sin_or_cos_float_s_fu_152->ap_ready(grp_sin_or_cos_float_s_fu_152_ap_ready);
    grp_sin_or_cos_float_s_fu_152->t_in(p_x_assign_reg_131);
    grp_sin_or_cos_float_s_fu_152->do_cos(grp_sin_or_cos_float_s_fu_152_do_cos);
    grp_sin_or_cos_float_s_fu_152->ap_return(grp_sin_or_cos_float_s_fu_152_ap_return);
    grp_sin_or_cos_float_s_fu_168 = new sin_or_cos_float_s("grp_sin_or_cos_float_s_fu_168");
    grp_sin_or_cos_float_s_fu_168->ap_clk(ap_clk);
    grp_sin_or_cos_float_s_fu_168->ap_rst(ap_rst);
    grp_sin_or_cos_float_s_fu_168->ap_start(grp_sin_or_cos_float_s_fu_168_ap_start);
    grp_sin_or_cos_float_s_fu_168->ap_done(grp_sin_or_cos_float_s_fu_168_ap_done);
    grp_sin_or_cos_float_s_fu_168->ap_idle(grp_sin_or_cos_float_s_fu_168_ap_idle);
    grp_sin_or_cos_float_s_fu_168->ap_ready(grp_sin_or_cos_float_s_fu_168_ap_ready);
    grp_sin_or_cos_float_s_fu_168->t_in(p_x_assign_reg_131);
    grp_sin_or_cos_float_s_fu_168->do_cos(grp_sin_or_cos_float_s_fu_168_do_cos);
    grp_sin_or_cos_float_s_fu_168->ap_return(grp_sin_or_cos_float_s_fu_168_ap_return);
    grp_bit_reverse_fu_184 = new bit_reverse("grp_bit_reverse_fu_184");
    grp_bit_reverse_fu_184->ap_clk(ap_clk);
    grp_bit_reverse_fu_184->ap_rst(ap_rst);
    grp_bit_reverse_fu_184->ap_start(grp_bit_reverse_fu_184_ap_start);
    grp_bit_reverse_fu_184->ap_done(grp_bit_reverse_fu_184_ap_done);
    grp_bit_reverse_fu_184->ap_idle(grp_bit_reverse_fu_184_ap_idle);
    grp_bit_reverse_fu_184->ap_ready(grp_bit_reverse_fu_184_ap_ready);
    grp_bit_reverse_fu_184->X_R_address0(grp_bit_reverse_fu_184_X_R_address0);
    grp_bit_reverse_fu_184->X_R_ce0(grp_bit_reverse_fu_184_X_R_ce0);
    grp_bit_reverse_fu_184->X_R_we0(grp_bit_reverse_fu_184_X_R_we0);
    grp_bit_reverse_fu_184->X_R_d0(grp_bit_reverse_fu_184_X_R_d0);
    grp_bit_reverse_fu_184->X_R_q0(X_R_q0);
    grp_bit_reverse_fu_184->X_R_address1(grp_bit_reverse_fu_184_X_R_address1);
    grp_bit_reverse_fu_184->X_R_ce1(grp_bit_reverse_fu_184_X_R_ce1);
    grp_bit_reverse_fu_184->X_R_we1(grp_bit_reverse_fu_184_X_R_we1);
    grp_bit_reverse_fu_184->X_R_d1(grp_bit_reverse_fu_184_X_R_d1);
    grp_bit_reverse_fu_184->X_R_q1(X_R_q1);
    grp_bit_reverse_fu_184->X_I_address0(grp_bit_reverse_fu_184_X_I_address0);
    grp_bit_reverse_fu_184->X_I_ce0(grp_bit_reverse_fu_184_X_I_ce0);
    grp_bit_reverse_fu_184->X_I_we0(grp_bit_reverse_fu_184_X_I_we0);
    grp_bit_reverse_fu_184->X_I_d0(grp_bit_reverse_fu_184_X_I_d0);
    grp_bit_reverse_fu_184->X_I_q0(X_I_q0);
    grp_bit_reverse_fu_184->X_I_address1(grp_bit_reverse_fu_184_X_I_address1);
    grp_bit_reverse_fu_184->X_I_ce1(grp_bit_reverse_fu_184_X_I_ce1);
    grp_bit_reverse_fu_184->X_I_we1(grp_bit_reverse_fu_184_X_I_we1);
    grp_bit_reverse_fu_184->X_I_d1(grp_bit_reverse_fu_184_X_I_d1);
    grp_bit_reverse_fu_184->X_I_q1(X_I_q1);
    music_faddfsub_32ibs_U23 = new music_faddfsub_32ibs<1,5,32,32,32>("music_faddfsub_32ibs_U23");
    music_faddfsub_32ibs_U23->clk(ap_clk);
    music_faddfsub_32ibs_U23->reset(ap_rst);
    music_faddfsub_32ibs_U23->din0(grp_fu_192_p0);
    music_faddfsub_32ibs_U23->din1(grp_fu_192_p1);
    music_faddfsub_32ibs_U23->opcode(grp_fu_192_opcode);
    music_faddfsub_32ibs_U23->ce(grp_fu_192_ce);
    music_faddfsub_32ibs_U23->dout(grp_fu_192_p2);
    music_faddfsub_32ibs_U24 = new music_faddfsub_32ibs<1,5,32,32,32>("music_faddfsub_32ibs_U24");
    music_faddfsub_32ibs_U24->clk(ap_clk);
    music_faddfsub_32ibs_U24->reset(ap_rst);
    music_faddfsub_32ibs_U24->din0(grp_fu_197_p0);
    music_faddfsub_32ibs_U24->din1(grp_fu_197_p1);
    music_faddfsub_32ibs_U24->opcode(grp_fu_197_opcode);
    music_faddfsub_32ibs_U24->ce(ap_var_for_const0);
    music_faddfsub_32ibs_U24->dout(grp_fu_197_p2);
    music_fmul_32ns_3jbC_U25 = new music_fmul_32ns_3jbC<1,4,32,32,32>("music_fmul_32ns_3jbC_U25");
    music_fmul_32ns_3jbC_U25->clk(ap_clk);
    music_fmul_32ns_3jbC_U25->reset(ap_rst);
    music_fmul_32ns_3jbC_U25->din0(reg_228);
    music_fmul_32ns_3jbC_U25->din1(c_reg_400);
    music_fmul_32ns_3jbC_U25->ce(ap_var_for_const0);
    music_fmul_32ns_3jbC_U25->dout(grp_fu_201_p2);
    music_fmul_32ns_3jbC_U26 = new music_fmul_32ns_3jbC<1,4,32,32,32>("music_fmul_32ns_3jbC_U26");
    music_fmul_32ns_3jbC_U26->clk(ap_clk);
    music_fmul_32ns_3jbC_U26->reset(ap_rst);
    music_fmul_32ns_3jbC_U26->din0(reg_235);
    music_fmul_32ns_3jbC_U26->din1(s_reg_406);
    music_fmul_32ns_3jbC_U26->ce(ap_var_for_const0);
    music_fmul_32ns_3jbC_U26->dout(grp_fu_205_p2);
    music_fmul_32ns_3jbC_U27 = new music_fmul_32ns_3jbC<1,4,32,32,32>("music_fmul_32ns_3jbC_U27");
    music_fmul_32ns_3jbC_U27->clk(ap_clk);
    music_fmul_32ns_3jbC_U27->reset(ap_rst);
    music_fmul_32ns_3jbC_U27->din0(reg_235);
    music_fmul_32ns_3jbC_U27->din1(c_reg_400);
    music_fmul_32ns_3jbC_U27->ce(ap_var_for_const0);
    music_fmul_32ns_3jbC_U27->dout(grp_fu_209_p2);
    music_fmul_32ns_3jbC_U28 = new music_fmul_32ns_3jbC<1,4,32,32,32>("music_fmul_32ns_3jbC_U28");
    music_fmul_32ns_3jbC_U28->clk(ap_clk);
    music_fmul_32ns_3jbC_U28->reset(ap_rst);
    music_fmul_32ns_3jbC_U28->din0(reg_228);
    music_fmul_32ns_3jbC_U28->din1(s_reg_406);
    music_fmul_32ns_3jbC_U28->ce(ap_var_for_const0);
    music_fmul_32ns_3jbC_U28->dout(grp_fu_213_p2);
    music_fptrunc_64nkbM_U29 = new music_fptrunc_64nkbM<1,2,64,32>("music_fptrunc_64nkbM_U29");
    music_fptrunc_64nkbM_U29->clk(ap_clk);
    music_fptrunc_64nkbM_U29->reset(ap_rst);
    music_fptrunc_64nkbM_U29->din0(tmp_s_reg_367);
    music_fptrunc_64nkbM_U29->ce(ap_var_for_const0);
    music_fptrunc_64nkbM_U29->dout(grp_fu_217_p1);
    music_ddiv_64ns_6lbW_U30 = new music_ddiv_64ns_6lbW<1,31,64,64,64>("music_ddiv_64ns_6lbW_U30");
    music_ddiv_64ns_6lbW_U30->clk(ap_clk);
    music_ddiv_64ns_6lbW_U30->reset(ap_rst);
    music_ddiv_64ns_6lbW_U30->din0(ap_var_for_const1);
    music_ddiv_64ns_6lbW_U30->din1(tmp_reg_362);
    music_ddiv_64ns_6lbW_U30->ce(ap_var_for_const0);
    music_ddiv_64ns_6lbW_U30->dout(grp_fu_220_p2);
    music_sitodp_32nsmb6_U31 = new music_sitodp_32nsmb6<1,6,32,64>("music_sitodp_32nsmb6_U31");
    music_sitodp_32nsmb6_U31->clk(ap_clk);
    music_sitodp_32nsmb6_U31->reset(ap_rst);
    music_sitodp_32nsmb6_U31->din0(grp_fu_225_p0);
    music_sitodp_32nsmb6_U31->ce(ap_var_for_const0);
    music_sitodp_32nsmb6_U31->dout(grp_fu_225_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DFTpts_fu_264_p2);
    sensitive << ( zext_ln159_fu_254_p1 );

    SC_METHOD(thread_X_I_address0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( X_I_addr_reg_425 );
    sensitive << ( X_I_addr_1_reg_435 );
    sensitive << ( grp_bit_reverse_fu_184_X_I_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( sext_ln181_fu_330_p1 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_X_I_address1);
    sensitive << ( grp_bit_reverse_fu_184_X_I_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_I_ce0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_bit_reverse_fu_184_X_I_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_X_I_ce1);
    sensitive << ( grp_bit_reverse_fu_184_X_I_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_I_d0);
    sensitive << ( reg_248 );
    sensitive << ( tmp_24_reg_470 );
    sensitive << ( grp_bit_reverse_fu_184_X_I_d0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_X_I_d1);
    sensitive << ( grp_bit_reverse_fu_184_X_I_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_I_we0);
    sensitive << ( grp_bit_reverse_fu_184_X_I_we0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_X_I_we1);
    sensitive << ( grp_bit_reverse_fu_184_X_I_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_R_address0);
    sensitive << ( X_R_addr_reg_420 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( X_R_addr_1_reg_430 );
    sensitive << ( grp_bit_reverse_fu_184_X_R_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( sext_ln181_fu_330_p1 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_X_R_address1);
    sensitive << ( grp_bit_reverse_fu_184_X_R_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_R_ce0);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_bit_reverse_fu_184_X_R_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_X_R_ce1);
    sensitive << ( grp_bit_reverse_fu_184_X_R_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_R_d0);
    sensitive << ( reg_242 );
    sensitive << ( tmp_23_reg_465 );
    sensitive << ( grp_bit_reverse_fu_184_X_R_d0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_X_R_d1);
    sensitive << ( grp_bit_reverse_fu_184_X_R_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_R_we0);
    sensitive << ( grp_bit_reverse_fu_184_X_R_we0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_X_R_we1);
    sensitive << ( grp_bit_reverse_fu_184_X_R_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state46_on_subcall_done);
    sensitive << ( grp_sin_or_cos_float_s_fu_152_ap_done );
    sensitive << ( grp_sin_or_cos_float_s_fu_168_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln159_fu_258_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln159_fu_258_p2 );

    SC_METHOD(thread_grp_bit_reverse_fu_184_ap_start);
    sensitive << ( grp_bit_reverse_fu_184_ap_start_reg );

    SC_METHOD(thread_grp_fu_192_ce);
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_block_state46_on_subcall_done );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );

    SC_METHOD(thread_grp_fu_192_opcode);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( icmp_ln169_fu_292_p2 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_fu_192_p0);
    sensitive << ( reg_228 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( tmp_19_reg_445 );
    sensitive << ( p_x_assign_reg_131 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_fu_192_p1);
    sensitive << ( reg_242 );
    sensitive << ( e_reg_377 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( tmp_20_reg_450 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_fu_197_opcode);
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_fu_197_p0);
    sensitive << ( reg_235 );
    sensitive << ( tmp_21_reg_455 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_fu_197_p1);
    sensitive << ( reg_248 );
    sensitive << ( tmp_22_reg_460 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state66 );

    SC_METHOD(thread_grp_fu_225_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( DFTpts_fu_264_p2 );

    SC_METHOD(thread_grp_sin_or_cos_float_s_fu_152_ap_start);
    sensitive << ( grp_sin_or_cos_float_s_fu_152_ap_start_reg );

    SC_METHOD(thread_grp_sin_or_cos_float_s_fu_152_do_cos);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_grp_sin_or_cos_float_s_fu_168_ap_start);
    sensitive << ( grp_sin_or_cos_float_s_fu_168_ap_start_reg );

    SC_METHOD(thread_grp_sin_or_cos_float_s_fu_168_do_cos);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_i_8_fu_342_p2);
    sensitive << ( zext_ln161_reg_350 );
    sensitive << ( i_0_reg_143 );

    SC_METHOD(thread_i_cast_fu_288_p1);
    sensitive << ( i_reg_120 );

    SC_METHOD(thread_i_lower_fu_325_p2);
    sensitive << ( numBF_reg_372 );
    sensitive << ( i_0_reg_143 );

    SC_METHOD(thread_icmp_ln159_fu_258_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( stage_0_reg_108 );

    SC_METHOD(thread_icmp_ln169_fu_292_p2);
    sensitive << ( trunc_ln_reg_356 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( i_reg_120 );

    SC_METHOD(thread_icmp_ln177_fu_319_p2);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( tmp_42_fu_309_p4 );

    SC_METHOD(thread_j_fu_297_p2);
    sensitive << ( i_reg_120 );

    SC_METHOD(thread_numBF_fu_285_p1);
    sensitive << ( trunc_ln_reg_356 );

    SC_METHOD(thread_sext_ln181_fu_330_p1);
    sensitive << ( i_lower_fu_325_p2 );

    SC_METHOD(thread_sext_ln184_fu_336_p1);
    sensitive << ( i_0_reg_143 );

    SC_METHOD(thread_stage_fu_303_p2);
    sensitive << ( stage_0_reg_108 );

    SC_METHOD(thread_tmp_42_fu_309_p4);
    sensitive << ( i_0_reg_143 );

    SC_METHOD(thread_zext_ln159_fu_254_p1);
    sensitive << ( stage_0_reg_108 );

    SC_METHOD(thread_zext_ln161_fu_270_p1);
    sensitive << ( DFTpts_fu_264_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln159_fu_258_p2 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( icmp_ln169_fu_292_p2 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_block_state46_on_subcall_done );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( icmp_ln177_fu_319_p2 );
    sensitive << ( grp_bit_reverse_fu_184_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000001";
    grp_sin_or_cos_float_s_fu_152_ap_start_reg = SC_LOGIC_0;
    grp_sin_or_cos_float_s_fu_168_ap_start_reg = SC_LOGIC_0;
    grp_bit_reverse_fu_184_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_R_address0, "(port)X_R_address0");
    sc_trace(mVcdFile, X_R_ce0, "(port)X_R_ce0");
    sc_trace(mVcdFile, X_R_we0, "(port)X_R_we0");
    sc_trace(mVcdFile, X_R_d0, "(port)X_R_d0");
    sc_trace(mVcdFile, X_R_q0, "(port)X_R_q0");
    sc_trace(mVcdFile, X_R_address1, "(port)X_R_address1");
    sc_trace(mVcdFile, X_R_ce1, "(port)X_R_ce1");
    sc_trace(mVcdFile, X_R_we1, "(port)X_R_we1");
    sc_trace(mVcdFile, X_R_d1, "(port)X_R_d1");
    sc_trace(mVcdFile, X_R_q1, "(port)X_R_q1");
    sc_trace(mVcdFile, X_I_address0, "(port)X_I_address0");
    sc_trace(mVcdFile, X_I_ce0, "(port)X_I_ce0");
    sc_trace(mVcdFile, X_I_we0, "(port)X_I_we0");
    sc_trace(mVcdFile, X_I_d0, "(port)X_I_d0");
    sc_trace(mVcdFile, X_I_q0, "(port)X_I_q0");
    sc_trace(mVcdFile, X_I_address1, "(port)X_I_address1");
    sc_trace(mVcdFile, X_I_ce1, "(port)X_I_ce1");
    sc_trace(mVcdFile, X_I_we1, "(port)X_I_we1");
    sc_trace(mVcdFile, X_I_d1, "(port)X_I_d1");
    sc_trace(mVcdFile, X_I_q1, "(port)X_I_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_228, "reg_228");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, reg_235, "reg_235");
    sc_trace(mVcdFile, grp_fu_192_p2, "grp_fu_192_p2");
    sc_trace(mVcdFile, reg_242, "reg_242");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, reg_248, "reg_248");
    sc_trace(mVcdFile, zext_ln161_fu_270_p1, "zext_ln161_fu_270_p1");
    sc_trace(mVcdFile, zext_ln161_reg_350, "zext_ln161_reg_350");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln159_fu_258_p2, "icmp_ln159_fu_258_p2");
    sc_trace(mVcdFile, trunc_ln_reg_356, "trunc_ln_reg_356");
    sc_trace(mVcdFile, grp_fu_225_p1, "grp_fu_225_p1");
    sc_trace(mVcdFile, tmp_reg_362, "tmp_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fu_220_p2, "grp_fu_220_p2");
    sc_trace(mVcdFile, tmp_s_reg_367, "tmp_s_reg_367");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, numBF_fu_285_p1, "numBF_fu_285_p1");
    sc_trace(mVcdFile, numBF_reg_372, "numBF_reg_372");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, grp_fu_217_p1, "grp_fu_217_p1");
    sc_trace(mVcdFile, e_reg_377, "e_reg_377");
    sc_trace(mVcdFile, i_cast_fu_288_p1, "i_cast_fu_288_p1");
    sc_trace(mVcdFile, i_cast_reg_382, "i_cast_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, j_fu_297_p2, "j_fu_297_p2");
    sc_trace(mVcdFile, j_reg_390, "j_reg_390");
    sc_trace(mVcdFile, stage_fu_303_p2, "stage_fu_303_p2");
    sc_trace(mVcdFile, icmp_ln169_fu_292_p2, "icmp_ln169_fu_292_p2");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_ap_return, "grp_sin_or_cos_float_s_fu_152_ap_return");
    sc_trace(mVcdFile, c_reg_400, "c_reg_400");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_ap_ready, "grp_sin_or_cos_float_s_fu_152_ap_ready");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_ap_done, "grp_sin_or_cos_float_s_fu_152_ap_done");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_ap_ready, "grp_sin_or_cos_float_s_fu_168_ap_ready");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_ap_done, "grp_sin_or_cos_float_s_fu_168_ap_done");
    sc_trace(mVcdFile, ap_block_state46_on_subcall_done, "ap_block_state46_on_subcall_done");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_ap_return, "grp_sin_or_cos_float_s_fu_168_ap_return");
    sc_trace(mVcdFile, s_reg_406, "s_reg_406");
    sc_trace(mVcdFile, a_reg_412, "a_reg_412");
    sc_trace(mVcdFile, X_R_addr_reg_420, "X_R_addr_reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, icmp_ln177_fu_319_p2, "icmp_ln177_fu_319_p2");
    sc_trace(mVcdFile, X_I_addr_reg_425, "X_I_addr_reg_425");
    sc_trace(mVcdFile, X_R_addr_1_reg_430, "X_R_addr_1_reg_430");
    sc_trace(mVcdFile, X_I_addr_1_reg_435, "X_I_addr_1_reg_435");
    sc_trace(mVcdFile, i_8_fu_342_p2, "i_8_fu_342_p2");
    sc_trace(mVcdFile, i_8_reg_440, "i_8_reg_440");
    sc_trace(mVcdFile, grp_fu_201_p2, "grp_fu_201_p2");
    sc_trace(mVcdFile, tmp_19_reg_445, "tmp_19_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, grp_fu_205_p2, "grp_fu_205_p2");
    sc_trace(mVcdFile, tmp_20_reg_450, "tmp_20_reg_450");
    sc_trace(mVcdFile, grp_fu_209_p2, "grp_fu_209_p2");
    sc_trace(mVcdFile, tmp_21_reg_455, "tmp_21_reg_455");
    sc_trace(mVcdFile, grp_fu_213_p2, "grp_fu_213_p2");
    sc_trace(mVcdFile, tmp_22_reg_460, "tmp_22_reg_460");
    sc_trace(mVcdFile, tmp_23_reg_465, "tmp_23_reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, tmp_24_reg_470, "tmp_24_reg_470");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_ap_start, "grp_sin_or_cos_float_s_fu_152_ap_start");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_ap_idle, "grp_sin_or_cos_float_s_fu_152_ap_idle");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_do_cos, "grp_sin_or_cos_float_s_fu_152_do_cos");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_ap_start, "grp_sin_or_cos_float_s_fu_168_ap_start");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_ap_idle, "grp_sin_or_cos_float_s_fu_168_ap_idle");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_do_cos, "grp_sin_or_cos_float_s_fu_168_do_cos");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_ap_start, "grp_bit_reverse_fu_184_ap_start");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_ap_done, "grp_bit_reverse_fu_184_ap_done");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_ap_idle, "grp_bit_reverse_fu_184_ap_idle");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_ap_ready, "grp_bit_reverse_fu_184_ap_ready");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_address0, "grp_bit_reverse_fu_184_X_R_address0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_ce0, "grp_bit_reverse_fu_184_X_R_ce0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_we0, "grp_bit_reverse_fu_184_X_R_we0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_d0, "grp_bit_reverse_fu_184_X_R_d0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_address1, "grp_bit_reverse_fu_184_X_R_address1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_ce1, "grp_bit_reverse_fu_184_X_R_ce1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_we1, "grp_bit_reverse_fu_184_X_R_we1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_R_d1, "grp_bit_reverse_fu_184_X_R_d1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_address0, "grp_bit_reverse_fu_184_X_I_address0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_ce0, "grp_bit_reverse_fu_184_X_I_ce0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_we0, "grp_bit_reverse_fu_184_X_I_we0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_d0, "grp_bit_reverse_fu_184_X_I_d0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_address1, "grp_bit_reverse_fu_184_X_I_address1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_ce1, "grp_bit_reverse_fu_184_X_I_ce1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_we1, "grp_bit_reverse_fu_184_X_I_we1");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_X_I_d1, "grp_bit_reverse_fu_184_X_I_d1");
    sc_trace(mVcdFile, stage_0_reg_108, "stage_0_reg_108");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_reg_120, "i_reg_120");
    sc_trace(mVcdFile, p_x_assign_reg_131, "p_x_assign_reg_131");
    sc_trace(mVcdFile, i_0_reg_143, "i_0_reg_143");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_152_ap_start_reg, "grp_sin_or_cos_float_s_fu_152_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, grp_sin_or_cos_float_s_fu_168_ap_start_reg, "grp_sin_or_cos_float_s_fu_168_ap_start_reg");
    sc_trace(mVcdFile, grp_bit_reverse_fu_184_ap_start_reg, "grp_bit_reverse_fu_184_ap_start_reg");
    sc_trace(mVcdFile, sext_ln181_fu_330_p1, "sext_ln181_fu_330_p1");
    sc_trace(mVcdFile, sext_ln184_fu_336_p1, "sext_ln184_fu_336_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, grp_fu_192_p0, "grp_fu_192_p0");
    sc_trace(mVcdFile, grp_fu_192_p1, "grp_fu_192_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, grp_fu_197_p0, "grp_fu_197_p0");
    sc_trace(mVcdFile, grp_fu_197_p1, "grp_fu_197_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_225_p0, "grp_fu_225_p0");
    sc_trace(mVcdFile, zext_ln159_fu_254_p1, "zext_ln159_fu_254_p1");
    sc_trace(mVcdFile, DFTpts_fu_264_p2, "DFTpts_fu_264_p2");
    sc_trace(mVcdFile, tmp_42_fu_309_p4, "tmp_42_fu_309_p4");
    sc_trace(mVcdFile, i_lower_fu_325_p2, "i_lower_fu_325_p2");
    sc_trace(mVcdFile, grp_fu_192_opcode, "grp_fu_192_opcode");
    sc_trace(mVcdFile, grp_fu_192_ce, "grp_fu_192_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, grp_fu_197_opcode, "grp_fu_197_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fft::~fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sin_or_cos_float_s_fu_152;
    delete grp_sin_or_cos_float_s_fu_168;
    delete grp_bit_reverse_fu_184;
    delete music_faddfsub_32ibs_U23;
    delete music_faddfsub_32ibs_U24;
    delete music_fmul_32ns_3jbC_U25;
    delete music_fmul_32ns_3jbC_U26;
    delete music_fmul_32ns_3jbC_U27;
    delete music_fmul_32ns_3jbC_U28;
    delete music_fptrunc_64nkbM_U29;
    delete music_ddiv_64ns_6lbW_U30;
    delete music_sitodp_32nsmb6_U31;
}

void fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fft::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_C01921FB5444261E;
}

void fft::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_bit_reverse_fu_184_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_bit_reverse_fu_184_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bit_reverse_fu_184_ap_ready.read())) {
            grp_bit_reverse_fu_184_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sin_or_cos_float_s_fu_152_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
            grp_sin_or_cos_float_s_fu_152_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sin_or_cos_float_s_fu_152_ap_ready.read())) {
            grp_sin_or_cos_float_s_fu_152_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sin_or_cos_float_s_fu_168_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
            grp_sin_or_cos_float_s_fu_168_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sin_or_cos_float_s_fu_168_ap_ready.read())) {
            grp_sin_or_cos_float_s_fu_168_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        i_0_reg_143 = i_8_reg_440.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
                esl_seteq<1,1,1>(ap_block_state46_on_subcall_done.read(), ap_const_boolean_0))) {
        i_0_reg_143 = i_cast_reg_382.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln177_fu_319_p2.read()))) {
        i_reg_120 = j_reg_390.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        i_reg_120 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln177_fu_319_p2.read()))) {
        p_x_assign_reg_131 = a_reg_412.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        p_x_assign_reg_131 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(icmp_ln169_fu_292_p2.read(), ap_const_lv1_1))) {
        stage_0_reg_108 = stage_fu_303_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_bit_reverse_fu_184_ap_done.read(), ap_const_logic_1))) {
        stage_0_reg_108 = ap_const_lv4_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln177_fu_319_p2.read()))) {
        X_I_addr_1_reg_435 =  (sc_lv<10>) (sext_ln184_fu_336_p1.read());
        X_I_addr_reg_425 =  (sc_lv<10>) (sext_ln181_fu_330_p1.read());
        X_R_addr_1_reg_430 =  (sc_lv<10>) (sext_ln184_fu_336_p1.read());
        X_R_addr_reg_420 =  (sc_lv<10>) (sext_ln181_fu_330_p1.read());
        i_8_reg_440 = i_8_fu_342_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(ap_block_state46_on_subcall_done.read(), ap_const_boolean_0))) {
        a_reg_412 = grp_fu_192_p2.read();
        c_reg_400 = grp_sin_or_cos_float_s_fu_152_ap_return.read();
        s_reg_406 = grp_sin_or_cos_float_s_fu_168_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        e_reg_377 = grp_fu_217_p1.read();
        numBF_reg_372 = numBF_fu_285_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        i_cast_reg_382 = i_cast_fu_288_p1.read();
        j_reg_390 = j_fu_297_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        reg_228 = X_R_q0.read();
        reg_235 = X_I_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()))) {
        reg_242 = grp_fu_192_p2.read();
        reg_248 = grp_fu_197_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        tmp_19_reg_445 = grp_fu_201_p2.read();
        tmp_20_reg_450 = grp_fu_205_p2.read();
        tmp_21_reg_455 = grp_fu_209_p2.read();
        tmp_22_reg_460 = grp_fu_213_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        tmp_23_reg_465 = grp_fu_192_p2.read();
        tmp_24_reg_470 = grp_fu_197_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_reg_362 = grp_fu_225_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        tmp_s_reg_367 = grp_fu_220_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln159_fu_258_p2.read(), ap_const_lv1_0))) {
        trunc_ln_reg_356 = DFTpts_fu_264_p2.read().range(10, 1);
        zext_ln161_reg_350 = zext_ln161_fu_270_p1.read();
    }
}

void fft::thread_DFTpts_fu_264_p2() {
    DFTpts_fu_264_p2 = (!zext_ln159_fu_254_p1.read().is_01())? sc_lv<11>(): ap_const_lv11_1 << (unsigned short)zext_ln159_fu_254_p1.read().to_uint();
}

void fft::thread_X_I_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        X_I_address0 = X_I_addr_reg_425.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        X_I_address0 = X_I_addr_1_reg_435.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        X_I_address0 =  (sc_lv<10>) (sext_ln181_fu_330_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_address0 = grp_bit_reverse_fu_184_X_I_address0.read();
    } else {
        X_I_address0 = "XXXXXXXXXX";
    }
}

void fft::thread_X_I_address1() {
    X_I_address1 = grp_bit_reverse_fu_184_X_I_address1.read();
}

void fft::thread_X_I_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        X_I_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_ce0 = grp_bit_reverse_fu_184_X_I_ce0.read();
    } else {
        X_I_ce0 = ap_const_logic_0;
    }
}

void fft::thread_X_I_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_ce1 = grp_bit_reverse_fu_184_X_I_ce1.read();
    } else {
        X_I_ce1 = ap_const_logic_0;
    }
}

void fft::thread_X_I_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        X_I_d0 = reg_248.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        X_I_d0 = tmp_24_reg_470.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_d0 = grp_bit_reverse_fu_184_X_I_d0.read();
    } else {
        X_I_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_X_I_d1() {
    X_I_d1 = grp_bit_reverse_fu_184_X_I_d1.read();
}

void fft::thread_X_I_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()))) {
        X_I_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_we0 = grp_bit_reverse_fu_184_X_I_we0.read();
    } else {
        X_I_we0 = ap_const_logic_0;
    }
}

void fft::thread_X_I_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_we1 = grp_bit_reverse_fu_184_X_I_we1.read();
    } else {
        X_I_we1 = ap_const_logic_0;
    }
}

void fft::thread_X_R_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        X_R_address0 = X_R_addr_reg_420.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        X_R_address0 = X_R_addr_1_reg_430.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        X_R_address0 =  (sc_lv<10>) (sext_ln181_fu_330_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_address0 = grp_bit_reverse_fu_184_X_R_address0.read();
    } else {
        X_R_address0 = "XXXXXXXXXX";
    }
}

void fft::thread_X_R_address1() {
    X_R_address1 = grp_bit_reverse_fu_184_X_R_address1.read();
}

void fft::thread_X_R_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
        X_R_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_ce0 = grp_bit_reverse_fu_184_X_R_ce0.read();
    } else {
        X_R_ce0 = ap_const_logic_0;
    }
}

void fft::thread_X_R_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_ce1 = grp_bit_reverse_fu_184_X_R_ce1.read();
    } else {
        X_R_ce1 = ap_const_logic_0;
    }
}

void fft::thread_X_R_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        X_R_d0 = reg_242.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        X_R_d0 = tmp_23_reg_465.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_d0 = grp_bit_reverse_fu_184_X_R_d0.read();
    } else {
        X_R_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_X_R_d1() {
    X_R_d1 = grp_bit_reverse_fu_184_X_R_d1.read();
}

void fft::thread_X_R_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()))) {
        X_R_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_we0 = grp_bit_reverse_fu_184_X_R_we0.read();
    } else {
        X_R_we0 = ap_const_logic_0;
    }
}

void fft::thread_X_R_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_we1 = grp_bit_reverse_fu_184_X_R_we1.read();
    } else {
        X_R_we1 = ap_const_logic_0;
    }
}

void fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fft::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fft::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fft::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void fft::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void fft::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void fft::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void fft::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void fft::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void fft::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void fft::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void fft::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void fft::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void fft::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void fft::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void fft::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void fft::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void fft::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void fft::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void fft::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void fft::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void fft::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void fft::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void fft::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void fft::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void fft::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void fft::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void fft::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void fft::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void fft::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void fft::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void fft::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void fft::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void fft::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void fft::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fft::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fft::thread_ap_block_state46_on_subcall_done() {
    ap_block_state46_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_sin_or_cos_float_s_fu_152_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_sin_or_cos_float_s_fu_168_ap_done.read()));
}

void fft::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln159_fu_258_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fft::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln159_fu_258_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fft::thread_grp_bit_reverse_fu_184_ap_start() {
    grp_bit_reverse_fu_184_ap_start = grp_bit_reverse_fu_184_ap_start_reg.read();
}

void fft::thread_grp_fu_192_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(ap_block_state46_on_subcall_done.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()))) {
        grp_fu_192_ce = ap_const_logic_1;
    } else {
        grp_fu_192_ce = ap_const_logic_0;
    }
}

void fft::thread_grp_fu_192_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        grp_fu_192_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln169_fu_292_p2.read())))) {
        grp_fu_192_opcode = ap_const_lv2_0;
    } else {
        grp_fu_192_opcode =  (sc_lv<2>) ("XX");
    }
}

void fft::thread_grp_fu_192_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
        grp_fu_192_p0 = reg_228.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        grp_fu_192_p0 = tmp_19_reg_445.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_192_p0 = p_x_assign_reg_131.read();
    } else {
        grp_fu_192_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_192_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
        grp_fu_192_p1 = reg_242.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        grp_fu_192_p1 = tmp_20_reg_450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_192_p1 = e_reg_377.read();
    } else {
        grp_fu_192_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_197_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_fu_197_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
        grp_fu_197_opcode = ap_const_lv2_0;
    } else {
        grp_fu_197_opcode =  (sc_lv<2>) ("XX");
    }
}

void fft::thread_grp_fu_197_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
        grp_fu_197_p0 = reg_235.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        grp_fu_197_p0 = tmp_21_reg_455.read();
    } else {
        grp_fu_197_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_197_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
        grp_fu_197_p1 = reg_248.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        grp_fu_197_p1 = tmp_22_reg_460.read();
    } else {
        grp_fu_197_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_225_p0() {
    grp_fu_225_p0 = esl_zext<32,11>(DFTpts_fu_264_p2.read());
}

void fft::thread_grp_sin_or_cos_float_s_fu_152_ap_start() {
    grp_sin_or_cos_float_s_fu_152_ap_start = grp_sin_or_cos_float_s_fu_152_ap_start_reg.read();
}

void fft::thread_grp_sin_or_cos_float_s_fu_152_do_cos() {
    grp_sin_or_cos_float_s_fu_152_do_cos =  (sc_logic) (ap_const_lv1_1[0]);
}

void fft::thread_grp_sin_or_cos_float_s_fu_168_ap_start() {
    grp_sin_or_cos_float_s_fu_168_ap_start = grp_sin_or_cos_float_s_fu_168_ap_start_reg.read();
}

void fft::thread_grp_sin_or_cos_float_s_fu_168_do_cos() {
    grp_sin_or_cos_float_s_fu_168_do_cos =  (sc_logic) (ap_const_lv1_0[0]);
}

void fft::thread_i_8_fu_342_p2() {
    i_8_fu_342_p2 = (!zext_ln161_reg_350.read().is_01() || !i_0_reg_143.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln161_reg_350.read()) + sc_bigint<32>(i_0_reg_143.read()));
}

void fft::thread_i_cast_fu_288_p1() {
    i_cast_fu_288_p1 = esl_zext<32,10>(i_reg_120.read());
}

void fft::thread_i_lower_fu_325_p2() {
    i_lower_fu_325_p2 = (!i_0_reg_143.read().is_01() || !numBF_reg_372.read().is_01())? sc_lv<32>(): (sc_bigint<32>(i_0_reg_143.read()) + sc_biguint<32>(numBF_reg_372.read()));
}

void fft::thread_icmp_ln159_fu_258_p2() {
    icmp_ln159_fu_258_p2 = (!stage_0_reg_108.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(stage_0_reg_108.read() == ap_const_lv4_B);
}

void fft::thread_icmp_ln169_fu_292_p2() {
    icmp_ln169_fu_292_p2 = (!i_reg_120.read().is_01() || !trunc_ln_reg_356.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_120.read() == trunc_ln_reg_356.read());
}

void fft::thread_icmp_ln177_fu_319_p2() {
    icmp_ln177_fu_319_p2 = (!tmp_42_fu_309_p4.read().is_01() || !ap_const_lv22_1.is_01())? sc_lv<1>(): (sc_bigint<22>(tmp_42_fu_309_p4.read()) < sc_bigint<22>(ap_const_lv22_1));
}

void fft::thread_j_fu_297_p2() {
    j_fu_297_p2 = (!i_reg_120.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_120.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void fft::thread_numBF_fu_285_p1() {
    numBF_fu_285_p1 = esl_zext<32,10>(trunc_ln_reg_356.read());
}

void fft::thread_sext_ln181_fu_330_p1() {
    sext_ln181_fu_330_p1 = esl_sext<64,32>(i_lower_fu_325_p2.read());
}

void fft::thread_sext_ln184_fu_336_p1() {
    sext_ln184_fu_336_p1 = esl_sext<64,32>(i_0_reg_143.read());
}

void fft::thread_stage_fu_303_p2() {
    stage_fu_303_p2 = (!stage_0_reg_108.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(stage_0_reg_108.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fft::thread_tmp_42_fu_309_p4() {
    tmp_42_fu_309_p4 = i_0_reg_143.read().range(31, 10);
}

void fft::thread_zext_ln159_fu_254_p1() {
    zext_ln159_fu_254_p1 = esl_zext<11,4>(stage_0_reg_108.read());
}

void fft::thread_zext_ln161_fu_270_p1() {
    zext_ln161_fu_270_p1 = esl_zext<32,11>(DFTpts_fu_264_p2.read());
}

void fft::thread_ap_NS_fsm() {
    if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_bit_reverse_fu_184_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln159_fu_258_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(icmp_ln169_fu_292_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(ap_block_state46_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state47;
        } else {
            ap_NS_fsm = ap_ST_fsm_state46;
        }
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln177_fu_319_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state48;
        }
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,71,71>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<71>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

