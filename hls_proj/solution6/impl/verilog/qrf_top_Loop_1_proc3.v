// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module qrf_top_Loop_1_proc3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        Qi_M_real_address0,
        Qi_M_real_ce0,
        Qi_M_real_we0,
        Qi_M_real_d0,
        Qi_M_real_q0,
        Qi_M_real_address1,
        Qi_M_real_ce1,
        Qi_M_real_we1,
        Qi_M_real_d1,
        Qi_M_real_q1,
        Qi_M_imag_address0,
        Qi_M_imag_ce0,
        Qi_M_imag_we0,
        Qi_M_imag_d0,
        Qi_M_imag_q0,
        Qi_M_imag_address1,
        Qi_M_imag_ce1,
        Qi_M_imag_we1,
        Qi_M_imag_d1,
        Qi_M_imag_q1,
        Ri_M_real_address0,
        Ri_M_real_ce0,
        Ri_M_real_we0,
        Ri_M_real_d0,
        Ri_M_real_q0,
        Ri_M_real_address1,
        Ri_M_real_ce1,
        Ri_M_real_we1,
        Ri_M_real_d1,
        Ri_M_real_q1,
        Ri_M_imag_address0,
        Ri_M_imag_ce0,
        Ri_M_imag_we0,
        Ri_M_imag_d0,
        Ri_M_imag_q0,
        Ri_M_imag_address1,
        Ri_M_imag_ce1,
        Ri_M_imag_we1,
        Ri_M_imag_d1,
        Ri_M_imag_q1,
        A_M_real_address0,
        A_M_real_ce0,
        A_M_real_q0,
        A_M_imag_address0,
        A_M_imag_ce0,
        A_M_imag_q0
);

parameter    ap_ST_fsm_state1 = 169'd1;
parameter    ap_ST_fsm_state2 = 169'd2;
parameter    ap_ST_fsm_state3 = 169'd4;
parameter    ap_ST_fsm_state4 = 169'd8;
parameter    ap_ST_fsm_state5 = 169'd16;
parameter    ap_ST_fsm_state6 = 169'd32;
parameter    ap_ST_fsm_state7 = 169'd64;
parameter    ap_ST_fsm_state8 = 169'd128;
parameter    ap_ST_fsm_pp1_stage0 = 169'd256;
parameter    ap_ST_fsm_state11 = 169'd512;
parameter    ap_ST_fsm_state12 = 169'd1024;
parameter    ap_ST_fsm_state13 = 169'd2048;
parameter    ap_ST_fsm_state14 = 169'd4096;
parameter    ap_ST_fsm_state15 = 169'd8192;
parameter    ap_ST_fsm_state16 = 169'd16384;
parameter    ap_ST_fsm_state17 = 169'd32768;
parameter    ap_ST_fsm_state18 = 169'd65536;
parameter    ap_ST_fsm_state19 = 169'd131072;
parameter    ap_ST_fsm_state20 = 169'd262144;
parameter    ap_ST_fsm_state21 = 169'd524288;
parameter    ap_ST_fsm_state22 = 169'd1048576;
parameter    ap_ST_fsm_state23 = 169'd2097152;
parameter    ap_ST_fsm_state24 = 169'd4194304;
parameter    ap_ST_fsm_state25 = 169'd8388608;
parameter    ap_ST_fsm_state26 = 169'd16777216;
parameter    ap_ST_fsm_state27 = 169'd33554432;
parameter    ap_ST_fsm_state28 = 169'd67108864;
parameter    ap_ST_fsm_state29 = 169'd134217728;
parameter    ap_ST_fsm_state30 = 169'd268435456;
parameter    ap_ST_fsm_state31 = 169'd536870912;
parameter    ap_ST_fsm_state32 = 169'd1073741824;
parameter    ap_ST_fsm_state33 = 169'd2147483648;
parameter    ap_ST_fsm_state34 = 169'd4294967296;
parameter    ap_ST_fsm_state35 = 169'd8589934592;
parameter    ap_ST_fsm_state36 = 169'd17179869184;
parameter    ap_ST_fsm_state37 = 169'd34359738368;
parameter    ap_ST_fsm_state38 = 169'd68719476736;
parameter    ap_ST_fsm_state39 = 169'd137438953472;
parameter    ap_ST_fsm_state40 = 169'd274877906944;
parameter    ap_ST_fsm_state41 = 169'd549755813888;
parameter    ap_ST_fsm_state42 = 169'd1099511627776;
parameter    ap_ST_fsm_state43 = 169'd2199023255552;
parameter    ap_ST_fsm_state44 = 169'd4398046511104;
parameter    ap_ST_fsm_state45 = 169'd8796093022208;
parameter    ap_ST_fsm_state46 = 169'd17592186044416;
parameter    ap_ST_fsm_state47 = 169'd35184372088832;
parameter    ap_ST_fsm_state48 = 169'd70368744177664;
parameter    ap_ST_fsm_state49 = 169'd140737488355328;
parameter    ap_ST_fsm_state50 = 169'd281474976710656;
parameter    ap_ST_fsm_state51 = 169'd562949953421312;
parameter    ap_ST_fsm_state52 = 169'd1125899906842624;
parameter    ap_ST_fsm_state53 = 169'd2251799813685248;
parameter    ap_ST_fsm_state54 = 169'd4503599627370496;
parameter    ap_ST_fsm_state55 = 169'd9007199254740992;
parameter    ap_ST_fsm_state56 = 169'd18014398509481984;
parameter    ap_ST_fsm_state57 = 169'd36028797018963968;
parameter    ap_ST_fsm_state58 = 169'd72057594037927936;
parameter    ap_ST_fsm_state59 = 169'd144115188075855872;
parameter    ap_ST_fsm_state60 = 169'd288230376151711744;
parameter    ap_ST_fsm_state61 = 169'd576460752303423488;
parameter    ap_ST_fsm_state62 = 169'd1152921504606846976;
parameter    ap_ST_fsm_state63 = 169'd2305843009213693952;
parameter    ap_ST_fsm_state64 = 169'd4611686018427387904;
parameter    ap_ST_fsm_state65 = 169'd9223372036854775808;
parameter    ap_ST_fsm_state66 = 169'd18446744073709551616;
parameter    ap_ST_fsm_state67 = 169'd36893488147419103232;
parameter    ap_ST_fsm_state68 = 169'd73786976294838206464;
parameter    ap_ST_fsm_state69 = 169'd147573952589676412928;
parameter    ap_ST_fsm_state70 = 169'd295147905179352825856;
parameter    ap_ST_fsm_state71 = 169'd590295810358705651712;
parameter    ap_ST_fsm_state72 = 169'd1180591620717411303424;
parameter    ap_ST_fsm_state73 = 169'd2361183241434822606848;
parameter    ap_ST_fsm_state74 = 169'd4722366482869645213696;
parameter    ap_ST_fsm_state75 = 169'd9444732965739290427392;
parameter    ap_ST_fsm_state76 = 169'd18889465931478580854784;
parameter    ap_ST_fsm_state77 = 169'd37778931862957161709568;
parameter    ap_ST_fsm_state78 = 169'd75557863725914323419136;
parameter    ap_ST_fsm_state79 = 169'd151115727451828646838272;
parameter    ap_ST_fsm_state80 = 169'd302231454903657293676544;
parameter    ap_ST_fsm_state81 = 169'd604462909807314587353088;
parameter    ap_ST_fsm_state82 = 169'd1208925819614629174706176;
parameter    ap_ST_fsm_state83 = 169'd2417851639229258349412352;
parameter    ap_ST_fsm_state84 = 169'd4835703278458516698824704;
parameter    ap_ST_fsm_state85 = 169'd9671406556917033397649408;
parameter    ap_ST_fsm_state86 = 169'd19342813113834066795298816;
parameter    ap_ST_fsm_state87 = 169'd38685626227668133590597632;
parameter    ap_ST_fsm_state88 = 169'd77371252455336267181195264;
parameter    ap_ST_fsm_state89 = 169'd154742504910672534362390528;
parameter    ap_ST_fsm_state90 = 169'd309485009821345068724781056;
parameter    ap_ST_fsm_state91 = 169'd618970019642690137449562112;
parameter    ap_ST_fsm_state92 = 169'd1237940039285380274899124224;
parameter    ap_ST_fsm_state93 = 169'd2475880078570760549798248448;
parameter    ap_ST_fsm_state94 = 169'd4951760157141521099596496896;
parameter    ap_ST_fsm_state95 = 169'd9903520314283042199192993792;
parameter    ap_ST_fsm_state96 = 169'd19807040628566084398385987584;
parameter    ap_ST_fsm_state97 = 169'd39614081257132168796771975168;
parameter    ap_ST_fsm_state98 = 169'd79228162514264337593543950336;
parameter    ap_ST_fsm_state99 = 169'd158456325028528675187087900672;
parameter    ap_ST_fsm_state100 = 169'd316912650057057350374175801344;
parameter    ap_ST_fsm_state101 = 169'd633825300114114700748351602688;
parameter    ap_ST_fsm_state102 = 169'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state103 = 169'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state104 = 169'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state105 = 169'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state106 = 169'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state107 = 169'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state108 = 169'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state109 = 169'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state110 = 169'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state111 = 169'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state112 = 169'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state113 = 169'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state114 = 169'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state115 = 169'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state116 = 169'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state117 = 169'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state118 = 169'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state119 = 169'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state120 = 169'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state121 = 169'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state122 = 169'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state123 = 169'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state124 = 169'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state125 = 169'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state126 = 169'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state127 = 169'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state128 = 169'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state129 = 169'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state130 = 169'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state131 = 169'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state132 = 169'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state133 = 169'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state134 = 169'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state135 = 169'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state136 = 169'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state137 = 169'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state138 = 169'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state139 = 169'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state140 = 169'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state141 = 169'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state142 = 169'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state143 = 169'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state144 = 169'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state145 = 169'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state146 = 169'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state147 = 169'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state148 = 169'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state149 = 169'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state150 = 169'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state151 = 169'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state152 = 169'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state153 = 169'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state154 = 169'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state155 = 169'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state156 = 169'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state157 = 169'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state158 = 169'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state159 = 169'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state160 = 169'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_pp2_stage0 = 169'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_pp2_stage1 = 169'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_pp2_stage2 = 169'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_pp2_stage3 = 169'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state181 = 169'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_pp3_stage0 = 169'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_pp3_stage1 = 169'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_pp3_stage2 = 169'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_pp3_stage3 = 169'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state202 = 169'd374144419156711147060143317175368453031918731001856;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] Qi_M_real_address0;
output   Qi_M_real_ce0;
output   Qi_M_real_we0;
output  [31:0] Qi_M_real_d0;
input  [31:0] Qi_M_real_q0;
output  [3:0] Qi_M_real_address1;
output   Qi_M_real_ce1;
output   Qi_M_real_we1;
output  [31:0] Qi_M_real_d1;
input  [31:0] Qi_M_real_q1;
output  [3:0] Qi_M_imag_address0;
output   Qi_M_imag_ce0;
output   Qi_M_imag_we0;
output  [31:0] Qi_M_imag_d0;
input  [31:0] Qi_M_imag_q0;
output  [3:0] Qi_M_imag_address1;
output   Qi_M_imag_ce1;
output   Qi_M_imag_we1;
output  [31:0] Qi_M_imag_d1;
input  [31:0] Qi_M_imag_q1;
output  [3:0] Ri_M_real_address0;
output   Ri_M_real_ce0;
output   Ri_M_real_we0;
output  [31:0] Ri_M_real_d0;
input  [31:0] Ri_M_real_q0;
output  [3:0] Ri_M_real_address1;
output   Ri_M_real_ce1;
output   Ri_M_real_we1;
output  [31:0] Ri_M_real_d1;
input  [31:0] Ri_M_real_q1;
output  [3:0] Ri_M_imag_address0;
output   Ri_M_imag_ce0;
output   Ri_M_imag_we0;
output  [31:0] Ri_M_imag_d0;
input  [31:0] Ri_M_imag_q0;
output  [3:0] Ri_M_imag_address1;
output   Ri_M_imag_ce1;
output   Ri_M_imag_we1;
output  [31:0] Ri_M_imag_d1;
input  [31:0] Ri_M_imag_q1;
output  [3:0] A_M_real_address0;
output   A_M_real_ce0;
input  [31:0] A_M_real_q0;
output  [3:0] A_M_imag_address0;
output   A_M_imag_ce0;
input  [31:0] A_M_imag_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] Qi_M_real_address0;
reg Qi_M_real_ce0;
reg Qi_M_real_we0;
reg[31:0] Qi_M_real_d0;
reg[3:0] Qi_M_real_address1;
reg Qi_M_real_ce1;
reg Qi_M_real_we1;
reg[3:0] Qi_M_imag_address0;
reg Qi_M_imag_ce0;
reg Qi_M_imag_we0;
reg[3:0] Qi_M_imag_address1;
reg Qi_M_imag_ce1;
reg Qi_M_imag_we1;
reg[31:0] Qi_M_imag_d1;
reg[3:0] Ri_M_real_address0;
reg Ri_M_real_ce0;
reg Ri_M_real_we0;
reg[31:0] Ri_M_real_d0;
reg[3:0] Ri_M_real_address1;
reg Ri_M_real_ce1;
reg Ri_M_real_we1;
reg[31:0] Ri_M_real_d1;
reg[3:0] Ri_M_imag_address0;
reg Ri_M_imag_ce0;
reg Ri_M_imag_we0;
reg[31:0] Ri_M_imag_d0;
reg[3:0] Ri_M_imag_address1;
reg Ri_M_imag_ce1;
reg Ri_M_imag_we1;
reg[31:0] Ri_M_imag_d1;
reg A_M_real_ce0;
reg A_M_imag_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [168:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] c12_0_i_reg_421;
reg   [2:0] k_0_i_reg_645;
reg   [2:0] k13_0_i_reg_656;
reg   [31:0] reg_828;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state162_pp2_stage1_iter0;
wire    ap_block_state166_pp2_stage1_iter1;
wire    ap_block_state170_pp2_stage1_iter2;
wire    ap_block_state174_pp2_stage1_iter3;
wire    ap_block_state178_pp2_stage1_iter4;
wire    ap_block_pp2_stage1_11001;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] icmp_ln511_reg_2710;
reg   [0:0] icmp_ln513_reg_2719;
reg   [31:0] reg_836;
reg   [31:0] reg_844;
reg   [31:0] reg_854;
wire   [31:0] grp_fu_761_p2;
reg   [31:0] reg_864;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state105;
wire   [31:0] grp_fu_765_p2;
reg   [31:0] reg_870;
wire   [31:0] grp_fu_689_p2;
reg   [31:0] reg_876;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state161_pp2_stage0_iter0;
wire    ap_block_state165_pp2_stage0_iter1;
wire    ap_block_state169_pp2_stage0_iter2;
wire    ap_block_state173_pp2_stage0_iter3;
wire    ap_block_state177_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state182_pp3_stage0_iter0;
wire    ap_block_state186_pp3_stage0_iter1;
wire    ap_block_state190_pp3_stage0_iter2;
wire    ap_block_state194_pp3_stage0_iter3;
wire    ap_block_state198_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state139;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] icmp_ln521_reg_2757;
wire   [31:0] grp_fu_693_p2;
reg   [31:0] reg_882;
wire   [31:0] grp_fu_697_p2;
reg   [31:0] reg_888;
wire   [31:0] grp_fu_667_p2;
reg   [31:0] reg_894;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state183_pp3_stage1_iter0;
wire    ap_block_state187_pp3_stage1_iter1;
wire    ap_block_state191_pp3_stage1_iter2;
wire    ap_block_state195_pp3_stage1_iter3;
wire    ap_block_state199_pp3_stage1_iter4;
wire    ap_block_pp3_stage1_11001;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state144;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] icmp_ln513_reg_2719_pp2_iter2_reg;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] icmp_ln521_reg_2757_pp3_iter2_reg;
wire   [31:0] grp_fu_671_p2;
reg   [31:0] reg_902;
wire   [31:0] grp_fu_705_p2;
reg   [31:0] reg_912;
wire   [31:0] grp_fu_710_p2;
reg   [31:0] reg_918;
wire   [31:0] grp_fu_677_p2;
reg   [31:0] reg_923;
wire    ap_CS_fsm_pp2_stage3;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_state164_pp2_stage3_iter0;
wire    ap_block_state168_pp2_stage3_iter1;
wire    ap_block_state172_pp2_stage3_iter2;
wire    ap_block_state176_pp2_stage3_iter3;
wire    ap_block_state180_pp2_stage3_iter4;
wire    ap_block_pp2_stage3_11001;
reg   [0:0] icmp_ln513_reg_2719_pp2_iter3_reg;
reg    ap_enable_reg_pp2_iter4;
reg   [0:0] icmp_ln513_reg_2719_pp2_iter4_reg;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state163_pp2_stage2_iter0;
wire    ap_block_state167_pp2_stage2_iter1;
wire    ap_block_state171_pp2_stage2_iter2;
wire    ap_block_state175_pp2_stage2_iter3;
wire    ap_block_state179_pp2_stage2_iter4;
wire    ap_block_pp2_stage2_11001;
wire    ap_CS_fsm_pp3_stage3;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_state185_pp3_stage3_iter0;
wire    ap_block_state189_pp3_stage3_iter1;
wire    ap_block_state193_pp3_stage3_iter2;
wire    ap_block_state197_pp3_stage3_iter3;
wire    ap_block_state201_pp3_stage3_iter4;
wire    ap_block_pp3_stage3_11001;
reg   [0:0] icmp_ln521_reg_2757_pp3_iter3_reg;
reg    ap_enable_reg_pp3_iter4;
reg   [0:0] icmp_ln521_reg_2757_pp3_iter4_reg;
wire    ap_CS_fsm_pp3_stage2;
wire    ap_block_state184_pp3_stage2_iter0;
wire    ap_block_state188_pp3_stage2_iter1;
wire    ap_block_state192_pp3_stage2_iter2;
wire    ap_block_state196_pp3_stage2_iter3;
wire    ap_block_state200_pp3_stage2_iter4;
wire    ap_block_pp3_stage2_11001;
reg   [31:0] reg_933;
reg   [0:0] icmp_ln513_reg_2719_pp2_iter1_reg;
reg   [0:0] icmp_ln521_reg_2757_pp3_iter1_reg;
reg   [31:0] reg_938;
reg   [31:0] reg_943;
reg   [31:0] reg_948;
reg   [31:0] reg_953;
reg   [31:0] reg_958;
reg   [31:0] reg_963;
reg   [31:0] reg_968;
reg   [31:0] reg_973;
reg   [31:0] reg_978;
reg   [31:0] reg_983;
reg   [31:0] reg_988;
reg   [31:0] reg_993;
reg   [31:0] reg_998;
reg   [31:0] reg_1003;
reg   [31:0] reg_1008;
reg   [31:0] reg_1013;
reg   [31:0] reg_1018;
reg   [31:0] reg_1023;
wire   [1:0] add_ln459_fu_1029_p2;
reg   [1:0] add_ln459_reg_2249;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln459_1_fu_1049_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] add_ln460_fu_1067_p2;
reg   [1:0] add_ln460_reg_2265;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln460_1_fu_1087_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln471_fu_1105_p2;
wire    ap_CS_fsm_state6;
wire   [2:0] r_fu_1111_p2;
reg   [2:0] r_reg_2285;
wire   [5:0] zext_ln1067_1_fu_1129_p1;
reg   [5:0] zext_ln1067_1_reg_2290;
reg   [3:0] Qi_M_real_addr_1_reg_2296;
reg   [3:0] Qi_M_imag_addr_1_reg_2301;
wire   [2:0] c_2_fu_1151_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln480_fu_1178_p2;
reg   [0:0] icmp_ln480_reg_2317;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [2:0] c_fu_1184_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln482_1_fu_1199_p1;
reg   [63:0] zext_ln482_1_reg_2326;
wire   [3:0] add_ln486_fu_1221_p2;
reg   [3:0] add_ln486_reg_2345;
wire    ap_CS_fsm_state12;
wire   [1:0] select_ln486_fu_1233_p3;
reg   [1:0] select_ln486_reg_2350;
wire   [0:0] icmp_ln486_fu_1215_p2;
wire   [0:0] select_ln486_1_fu_1254_p3;
reg   [0:0] select_ln486_1_reg_2355;
wire   [2:0] zext_ln486_fu_1266_p1;
reg   [2:0] zext_ln486_reg_2359;
wire   [2:0] select_ln486_3_fu_1290_p3;
reg   [2:0] select_ln486_3_reg_2364;
wire   [2:0] select_ln486_4_fu_1308_p3;
reg   [2:0] select_ln486_4_reg_2369;
wire   [31:0] xor_ln486_fu_1320_p2;
reg   [31:0] xor_ln486_reg_2374;
wire   [2:0] zext_ln498_fu_1326_p1;
reg   [2:0] zext_ln498_reg_2379;
wire   [0:0] icmp_ln499_fu_1330_p2;
wire   [4:0] zext_ln503_fu_1344_p1;
reg   [4:0] zext_ln503_reg_2388;
reg   [3:0] Ri_M_real_addr_2_reg_2394;
reg   [3:0] Ri_M_imag_addr_2_reg_2400;
wire   [4:0] zext_ln503_2_fu_1368_p1;
reg   [4:0] zext_ln503_2_reg_2406;
reg   [3:0] Ri_M_real_addr_3_reg_2412;
reg   [3:0] Ri_M_imag_addr_3_reg_2417;
wire   [31:0] p_Val2_39_fu_1384_p1;
reg   [31:0] p_Val2_39_reg_2422;
wire   [31:0] d1_4_fu_1404_p1;
reg   [31:0] d1_4_reg_2427;
wire   [31:0] d2_5_fu_1433_p1;
reg   [31:0] d2_5_reg_2439;
wire   [31:0] largest_9_fu_1462_p1;
reg   [31:0] largest_9_reg_2452;
wire   [31:0] d3_7_fu_1491_p1;
reg   [31:0] d3_7_reg_2466;
wire   [0:0] or_ln179_fu_1530_p2;
reg   [0:0] or_ln179_reg_2478;
wire   [0:0] or_ln179_1_fu_1548_p2;
reg   [0:0] or_ln179_1_reg_2486;
wire   [0:0] or_ln179_2_fu_1576_p2;
reg   [0:0] or_ln179_2_reg_2494;
wire   [0:0] or_ln179_3_fu_1604_p2;
reg   [0:0] or_ln179_3_reg_2502;
wire   [31:0] largest_10_fu_1630_p1;
reg   [31:0] largest_10_reg_2510;
wire   [31:0] d3_fu_1656_p1;
reg   [31:0] d3_reg_2518;
wire   [0:0] or_ln189_fu_1683_p2;
reg   [0:0] or_ln189_reg_2526;
wire   [0:0] or_ln189_1_fu_1711_p2;
reg   [0:0] or_ln189_1_reg_2532;
wire   [0:0] and_ln179_1_fu_1753_p2;
reg   [0:0] and_ln179_1_reg_2538;
wire    ap_CS_fsm_state14;
wire   [0:0] and_ln189_2_fu_1813_p2;
reg   [0:0] and_ln189_2_reg_2546;
wire   [0:0] and_ln184_7_fu_1837_p2;
reg   [0:0] and_ln184_7_reg_2552;
wire   [31:0] largest_8_fu_1854_p3;
reg   [31:0] largest_8_reg_2560;
wire    ap_CS_fsm_state15;
wire   [31:0] d1_3_fu_1871_p3;
wire    ap_CS_fsm_state16;
wire   [31:0] d2_4_fu_1883_p3;
wire   [31:0] d3_6_fu_1896_p3;
wire   [0:0] and_ln201_1_fu_1938_p2;
reg   [0:0] and_ln201_1_reg_2585;
wire   [31:0] grp_fu_769_p2;
reg   [31:0] x3_1_reg_2589;
wire   [31:0] grp_fu_818_p2;
reg   [31:0] tmp_i_i_reg_2595;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state61;
wire   [31:0] c_tmp_M_real_fu_1997_p1;
wire    ap_CS_fsm_state62;
wire   [0:0] and_ln284_2_fu_1976_p2;
wire   [31:0] grp_fu_715_p2;
reg   [31:0] tmp_i_i1_reg_2613;
wire   [31:0] grp_fu_720_p2;
reg   [31:0] tmp_i_i2_reg_2618;
wire   [31:0] grp_fu_725_p2;
reg   [31:0] tmp_5_i_i2_reg_2623;
wire   [31:0] grp_fu_730_p2;
reg   [31:0] tmp_6_i_i2_reg_2628;
wire   [31:0] grp_fu_681_p2;
reg   [31:0] tmp_2_i_i2_reg_2633;
wire   [31:0] grp_fu_685_p2;
reg   [31:0] tmp_7_i_i2_reg_2638;
wire    ap_CS_fsm_state86;
wire   [31:0] grp_fu_773_p2;
wire   [0:0] and_ln189_fu_2071_p2;
reg   [0:0] and_ln189_reg_2663;
wire    ap_CS_fsm_state88;
wire   [31:0] largest_1_fu_2077_p3;
reg   [31:0] largest_1_reg_2669;
wire    ap_CS_fsm_state89;
wire   [31:0] d3_1_fu_2083_p3;
wire    ap_CS_fsm_state90;
wire   [0:0] and_ln201_fu_2124_p2;
reg   [0:0] and_ln201_reg_2683;
reg   [31:0] tmp_i_i7_reg_2687;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state160;
wire   [0:0] icmp_ln511_fu_2146_p2;
wire   [2:0] k_fu_2152_p2;
reg   [2:0] k_reg_2714;
wire   [0:0] icmp_ln513_fu_2158_p2;
reg   [3:0] Ri_M_real_addr_4_reg_2723;
reg   [3:0] Ri_M_real_addr_4_reg_2723_pp2_iter1_reg;
reg   [3:0] Ri_M_real_addr_4_reg_2723_pp2_iter2_reg;
reg   [3:0] Ri_M_real_addr_4_reg_2723_pp2_iter3_reg;
reg   [3:0] Ri_M_real_addr_4_reg_2723_pp2_iter4_reg;
reg   [3:0] Ri_M_real_addr_5_reg_2728;
reg   [3:0] Ri_M_real_addr_5_reg_2728_pp2_iter1_reg;
reg   [3:0] Ri_M_real_addr_5_reg_2728_pp2_iter2_reg;
reg   [3:0] Ri_M_real_addr_5_reg_2728_pp2_iter3_reg;
reg   [3:0] Ri_M_real_addr_5_reg_2728_pp2_iter4_reg;
reg   [3:0] Ri_M_imag_addr_4_reg_2733;
reg   [3:0] Ri_M_imag_addr_4_reg_2733_pp2_iter1_reg;
reg   [3:0] Ri_M_imag_addr_4_reg_2733_pp2_iter2_reg;
reg   [3:0] Ri_M_imag_addr_4_reg_2733_pp2_iter3_reg;
reg   [3:0] Ri_M_imag_addr_4_reg_2733_pp2_iter4_reg;
reg   [3:0] Ri_M_imag_addr_5_reg_2738;
reg   [3:0] Ri_M_imag_addr_5_reg_2738_pp2_iter1_reg;
reg   [3:0] Ri_M_imag_addr_5_reg_2738_pp2_iter2_reg;
reg   [3:0] Ri_M_imag_addr_5_reg_2738_pp2_iter3_reg;
reg   [3:0] Ri_M_imag_addr_5_reg_2738_pp2_iter4_reg;
wire   [31:0] add_ln521_1_fu_2197_p2;
reg   [31:0] add_ln521_1_reg_2743;
wire    ap_CS_fsm_state181;
wire   [0:0] icmp_ln519_fu_2202_p2;
reg   [0:0] icmp_ln519_reg_2748;
wire   [2:0] k_1_fu_2208_p2;
reg   [2:0] k_1_reg_2752;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln521_fu_2218_p2;
reg   [3:0] Qi_M_real_addr_3_reg_2761;
reg   [3:0] Qi_M_real_addr_3_reg_2761_pp3_iter1_reg;
reg   [3:0] Qi_M_real_addr_3_reg_2761_pp3_iter2_reg;
reg   [3:0] Qi_M_real_addr_3_reg_2761_pp3_iter3_reg;
reg   [3:0] Qi_M_real_addr_3_reg_2761_pp3_iter4_reg;
reg   [3:0] Qi_M_real_addr_4_reg_2767;
reg   [3:0] Qi_M_real_addr_4_reg_2767_pp3_iter1_reg;
reg   [3:0] Qi_M_real_addr_4_reg_2767_pp3_iter2_reg;
reg   [3:0] Qi_M_real_addr_4_reg_2767_pp3_iter3_reg;
reg   [3:0] Qi_M_real_addr_4_reg_2767_pp3_iter4_reg;
reg   [3:0] Qi_M_imag_addr_3_reg_2772;
reg   [3:0] Qi_M_imag_addr_3_reg_2772_pp3_iter1_reg;
reg   [3:0] Qi_M_imag_addr_3_reg_2772_pp3_iter2_reg;
reg   [3:0] Qi_M_imag_addr_3_reg_2772_pp3_iter3_reg;
reg   [3:0] Qi_M_imag_addr_3_reg_2772_pp3_iter4_reg;
reg   [3:0] Qi_M_imag_addr_4_reg_2778;
reg   [3:0] Qi_M_imag_addr_4_reg_2778_pp3_iter1_reg;
reg   [3:0] Qi_M_imag_addr_4_reg_2778_pp3_iter2_reg;
reg   [3:0] Qi_M_imag_addr_4_reg_2778_pp3_iter3_reg;
reg   [3:0] Qi_M_imag_addr_4_reg_2778_pp3_iter4_reg;
reg   [31:0] p_t_real_2_reg_2783;
reg   [31:0] p_t_imag_2_reg_2789;
reg   [31:0] p_t_real_3_reg_2795;
reg   [31:0] p_t_imag_3_reg_2801;
wire   [1:0] grp_fu_823_p2;
wire    ap_CS_fsm_state202;
wire    ap_CS_fsm_state8;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state87;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state161;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state182;
wire    ap_block_pp3_stage3_subdone;
reg   [1:0] phi_ln459_reg_352;
reg    ap_block_state1;
wire   [0:0] icmp_ln459_fu_1055_p2;
wire   [0:0] icmp_ln459_1_fu_1061_p2;
reg   [1:0] phi_ln459_1_reg_364;
reg   [1:0] phi_ln460_reg_375;
wire   [0:0] icmp_ln460_fu_1093_p2;
wire   [0:0] icmp_ln460_1_fu_1099_p2;
reg   [1:0] phi_ln460_1_reg_387;
reg   [2:0] r_0_i_reg_398;
wire    ap_CS_fsm_state11;
reg   [2:0] c_0_i_reg_410;
wire   [0:0] icmp_ln472_fu_1145_p2;
reg   [3:0] indvar_flatten_reg_432;
reg   [2:0] j_0_i_reg_443;
reg   [1:0] i_0_i_reg_454;
reg   [31:0] sqrt_mag_a_mag_b_reg_465;
reg   [31:0] tmp_M_real_1_reg_477;
reg   [31:0] tmp_M_imag_3_reg_486;
reg   [31:0] tmp_M_real_2_reg_497;
reg   [31:0] s_tmp_M_imag_reg_508;
reg   [31:0] tmp_M_real_reg_519;
wire    ap_CS_fsm_state136;
wire   [0:0] and_ln306_fu_2140_p2;
reg   [31:0] s_tmp_M_imag_2_reg_530;
reg   [31:0] mag_M_real_reg_632;
reg   [31:0] ap_phi_mux_p_f_assign_phi_fu_544_p4;
wire   [31:0] tmp_M_imag_2_fu_2056_p1;
reg   [31:0] p_r_M_imag_5_reg_552;
reg   [31:0] p_r_M_real_6_reg_563;
reg   [31:0] p_r_M_imag_3_reg_575;
wire   [31:0] tmp_M_imag_6_fu_2026_p1;
reg   [31:0] p_r_M_real_5_reg_586;
wire   [31:0] bitcast_ln444_1_fu_2041_p1;
reg   [31:0] p_r_M_real_3_reg_597;
reg   [31:0] p_r_M_imag_2_reg_609;
wire   [31:0] tmp_M_imag_4_fu_2011_p1;
reg   [31:0] p_r_M_real_2_reg_620;
reg   [2:0] ap_phi_mux_k_0_i_phi_fu_649_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_k13_0_i_phi_fu_660_p4;
wire    ap_block_pp3_stage0;
wire   [63:0] zext_ln1027_fu_1043_p1;
wire   [63:0] zext_ln1027_1_fu_1081_p1;
wire   [63:0] zext_ln1067_2_fu_1139_p1;
wire   [63:0] zext_ln1067_4_fu_1172_p1;
wire   [0:0] icmp_ln474_fu_1157_p2;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln503_1_fu_1354_p1;
wire   [63:0] zext_ln503_3_fu_1378_p1;
wire   [63:0] zext_ln114_1_fu_2172_p1;
wire   [63:0] zext_ln114_2_fu_2183_p1;
wire   [63:0] zext_ln114_4_fu_2232_p1;
wire   [63:0] zext_ln114_5_fu_2243_p1;
wire    ap_block_pp3_stage1;
wire    ap_block_pp3_stage2;
wire    ap_block_pp3_stage3;
wire    ap_block_pp2_stage1;
wire    ap_block_pp2_stage2;
wire    ap_block_pp2_stage3;
reg   [31:0] grp_fu_667_p0;
reg   [31:0] grp_fu_667_p1;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state140;
reg   [31:0] grp_fu_671_p0;
reg   [31:0] grp_fu_671_p1;
reg   [31:0] grp_fu_677_p0;
reg   [31:0] grp_fu_677_p1;
reg   [31:0] grp_fu_689_p0;
reg   [31:0] grp_fu_689_p1;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state132;
reg   [31:0] grp_fu_693_p0;
reg   [31:0] grp_fu_693_p1;
reg   [31:0] grp_fu_697_p0;
reg   [31:0] grp_fu_697_p1;
reg   [31:0] grp_fu_705_p0;
reg   [31:0] grp_fu_705_p1;
reg   [31:0] grp_fu_710_p0;
reg   [31:0] grp_fu_761_p0;
reg   [31:0] grp_fu_761_p1;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state145;
reg   [31:0] grp_fu_765_p0;
reg   [31:0] grp_fu_765_p1;
reg   [31:0] grp_fu_769_p0;
reg   [31:0] grp_fu_769_p1;
reg   [31:0] grp_fu_778_p0;
reg   [31:0] grp_fu_778_p1;
reg   [31:0] grp_fu_782_p0;
reg   [31:0] grp_fu_782_p1;
reg   [31:0] grp_fu_786_p0;
reg   [31:0] grp_fu_786_p1;
reg   [31:0] grp_fu_790_p0;
reg   [31:0] grp_fu_790_p1;
wire   [31:0] grp_fu_802_p1;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state120;
reg   [1:0] grp_fu_823_p0;
wire   [3:0] tmp_3_fu_1035_p3;
wire   [3:0] tmp_9_fu_1073_p3;
wire   [4:0] tmp_5_fu_1121_p3;
wire   [5:0] zext_ln1067_fu_1117_p1;
wire   [5:0] add_ln1067_fu_1133_p2;
wire   [5:0] zext_ln1067_3_fu_1163_p1;
wire   [5:0] add_ln1067_1_fu_1167_p2;
wire   [5:0] zext_ln482_fu_1190_p1;
wire   [5:0] add_ln482_fu_1194_p2;
wire   [0:0] icmp_ln490_fu_1205_p2;
wire   [0:0] icmp_ln498_fu_1227_p2;
wire   [2:0] add_ln513_1_fu_1242_p2;
wire   [0:0] icmp_ln490_1_fu_1248_p2;
wire   [2:0] zext_ln499_1_fu_1262_p1;
wire   [2:0] zext_ln499_fu_1211_p1;
wire   [2:0] sub_ln499_fu_1270_p2;
wire   [2:0] sub_ln499_1_fu_1276_p2;
wire   [2:0] add_ln513_fu_1302_p2;
wire   [31:0] zext_ln486_1_fu_1316_p1;
wire   [2:0] select_ln486_2_fu_1282_p3;
wire   [3:0] tmp_7_fu_1336_p3;
wire   [4:0] zext_ln513_fu_1298_p1;
wire   [4:0] add_ln503_1_fu_1348_p2;
wire   [3:0] tmp_8_fu_1360_p3;
wire   [4:0] add_ln503_2_fu_1372_p2;
wire   [30:0] trunc_ln368_2_fu_1388_p1;
wire   [31:0] p_Result_26_fu_1396_p3;
wire   [31:0] p_Val2_36_fu_1413_p1;
wire   [30:0] trunc_ln368_3_fu_1417_p1;
wire   [31:0] p_Result_27_fu_1425_p3;
wire   [31:0] p_Val2_37_fu_1442_p1;
wire   [30:0] trunc_ln368_4_fu_1446_p1;
wire   [31:0] p_Result_28_fu_1454_p3;
wire   [31:0] p_Val2_38_fu_1471_p1;
wire   [30:0] trunc_ln368_5_fu_1475_p1;
wire   [31:0] p_Result_29_fu_1483_p3;
wire   [7:0] tmp_13_fu_1498_p4;
wire   [22:0] trunc_ln189_2_fu_1392_p1;
wire   [0:0] icmp_ln179_1_fu_1524_p2;
wire   [0:0] icmp_ln179_fu_1518_p2;
wire   [7:0] tmp_14_fu_1508_p4;
wire   [22:0] trunc_ln189_3_fu_1421_p1;
wire   [0:0] icmp_ln179_3_fu_1542_p2;
wire   [0:0] icmp_ln179_2_fu_1536_p2;
wire   [7:0] tmp_18_fu_1554_p4;
wire   [22:0] trunc_ln189_4_fu_1450_p1;
wire   [0:0] icmp_ln179_5_fu_1570_p2;
wire   [0:0] icmp_ln179_4_fu_1564_p2;
wire   [7:0] tmp_20_fu_1582_p4;
wire   [22:0] trunc_ln189_5_fu_1479_p1;
wire   [0:0] icmp_ln179_7_fu_1598_p2;
wire   [0:0] icmp_ln179_6_fu_1592_p2;
wire   [31:0] p_Val2_s_fu_1610_p1;
wire   [30:0] trunc_ln368_fu_1614_p1;
wire   [31:0] p_Result_30_fu_1622_p3;
wire   [31:0] p_Val2_34_fu_1636_p1;
wire   [30:0] trunc_ln368_1_fu_1640_p1;
wire   [31:0] p_Result_31_fu_1648_p3;
wire   [7:0] tmp_1_fu_1661_p4;
wire   [22:0] trunc_ln189_fu_1618_p1;
wire   [0:0] icmp_ln189_1_fu_1677_p2;
wire   [0:0] icmp_ln189_fu_1671_p2;
wire   [7:0] tmp_4_fu_1689_p4;
wire   [22:0] trunc_ln189_1_fu_1644_p1;
wire   [0:0] icmp_ln189_3_fu_1705_p2;
wire   [0:0] icmp_ln189_2_fu_1699_p2;
wire   [0:0] and_ln179_fu_1717_p2;
wire   [0:0] grp_fu_778_p2;
wire   [0:0] and_ln179_3_fu_1727_p2;
wire   [0:0] grp_fu_782_p2;
wire   [0:0] and_ln179_5_fu_1737_p2;
wire   [0:0] grp_fu_786_p2;
wire   [0:0] and_ln179_4_fu_1731_p2;
wire   [0:0] and_ln179_6_fu_1741_p2;
wire   [0:0] and_ln179_7_fu_1747_p2;
wire   [0:0] and_ln179_2_fu_1721_p2;
wire   [0:0] grp_fu_790_p2;
wire   [0:0] and_ln184_1_fu_1765_p2;
wire   [0:0] grp_fu_794_p2;
wire   [0:0] and_ln184_3_fu_1775_p2;
wire   [0:0] grp_fu_798_p2;
wire   [0:0] grp_fu_802_p2;
wire   [0:0] grp_fu_806_p2;
wire   [0:0] and_ln189_6_fu_1797_p2;
wire   [0:0] grp_fu_810_p2;
wire   [0:0] and_ln189_5_fu_1791_p2;
wire   [0:0] and_ln189_7_fu_1801_p2;
wire   [0:0] and_ln189_8_fu_1807_p2;
wire   [0:0] and_ln189_4_fu_1785_p2;
wire   [0:0] and_ln184_2_fu_1769_p2;
wire   [0:0] and_ln184_4_fu_1779_p2;
wire   [0:0] and_ln184_fu_1759_p2;
wire   [0:0] xor_ln179_fu_1819_p2;
wire   [0:0] and_ln184_6_fu_1831_p2;
wire   [0:0] and_ln184_5_fu_1825_p2;
wire   [31:0] largest_6_fu_1843_p3;
wire   [31:0] largest_7_fu_1848_p3;
wire   [31:0] d1_fu_1866_p3;
wire   [31:0] d2_fu_1878_p3;
wire   [31:0] d3_4_fu_1861_p3;
wire   [31:0] d3_5_fu_1890_p3;
wire   [31:0] bitcast_ln201_1_fu_1903_p1;
wire   [7:0] tmp_29_fu_1906_p4;
wire   [22:0] trunc_ln201_1_fu_1916_p1;
wire   [0:0] icmp_ln201_3_fu_1926_p2;
wire   [0:0] icmp_ln201_2_fu_1920_p2;
wire   [0:0] or_ln201_1_fu_1932_p2;
wire   [0:0] and_ln284_fu_1944_p2;
wire   [0:0] and_ln284_1_fu_1949_p2;
wire   [0:0] and_ln284_3_fu_1954_p2;
wire   [0:0] and_ln284_4_fu_1959_p2;
wire   [0:0] and_ln284_6_fu_1970_p2;
wire   [0:0] and_ln284_5_fu_1964_p2;
wire   [0:0] p_Result_s_fu_1982_p3;
wire   [31:0] p_Result_25_fu_1989_p3;
wire   [31:0] bitcast_ln155_3_fu_2001_p1;
wire   [31:0] xor_ln155_1_fu_2005_p2;
wire   [31:0] bitcast_ln155_5_fu_2016_p1;
wire   [31:0] xor_ln155_2_fu_2020_p2;
wire   [31:0] bitcast_ln444_fu_2031_p1;
wire   [31:0] xor_ln444_fu_2035_p2;
wire   [31:0] bitcast_ln155_fu_2046_p1;
wire   [31:0] xor_ln155_fu_2050_p2;
wire   [0:0] and_ln189_1_fu_2061_p2;
wire   [0:0] and_ln189_3_fu_2065_p2;
wire   [31:0] bitcast_ln201_fu_2089_p1;
wire   [7:0] tmp_11_fu_2092_p4;
wire   [22:0] trunc_ln201_fu_2102_p1;
wire   [0:0] icmp_ln201_1_fu_2112_p2;
wire   [0:0] icmp_ln201_fu_2106_p2;
wire   [0:0] or_ln201_fu_2118_p2;
wire   [0:0] and_ln306_1_fu_2130_p2;
wire   [0:0] and_ln306_2_fu_2135_p2;
wire   [4:0] zext_ln114_fu_2163_p1;
wire   [4:0] add_ln114_fu_2167_p2;
wire   [4:0] add_ln114_2_fu_2178_p2;
wire   [2:0] add_ln521_fu_2189_p2;
wire   [31:0] zext_ln521_fu_2193_p1;
wire   [31:0] zext_ln519_fu_2214_p1;
wire   [4:0] zext_ln114_3_fu_2223_p1;
wire   [4:0] add_ln114_3_fu_2227_p2;
wire   [4:0] add_ln114_4_fu_2238_p2;
reg   [1:0] grp_fu_667_opcode;
wire    ap_block_pp2_stage1_00001;
wire    ap_block_pp2_stage2_00001;
wire    ap_block_pp2_stage3_00001;
wire    ap_block_pp2_stage0_00001;
wire    ap_block_pp3_stage1_00001;
wire    ap_block_pp3_stage2_00001;
wire    ap_block_pp3_stage3_00001;
wire    ap_block_pp3_stage0_00001;
reg   [1:0] grp_fu_677_opcode;
reg   [4:0] grp_fu_778_opcode;
reg   [4:0] grp_fu_782_opcode;
reg   [4:0] grp_fu_786_opcode;
reg   [4:0] grp_fu_790_opcode;
reg   [168:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 169'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

music_faddfsub_32OgC #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32OgC_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_667_p0),
    .din1(grp_fu_667_p1),
    .opcode(grp_fu_667_opcode),
    .ce(1'b1),
    .dout(grp_fu_667_p2)
);

music_fadd_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3cud_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_671_p0),
    .din1(grp_fu_671_p1),
    .ce(1'b1),
    .dout(grp_fu_671_p2)
);

music_faddfsub_32OgC #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32OgC_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_677_p0),
    .din1(grp_fu_677_p1),
    .opcode(grp_fu_677_opcode),
    .ce(1'b1),
    .dout(grp_fu_677_p2)
);

music_fadd_32ns_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3cud_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i1_reg_2613),
    .din1(tmp_i_i2_reg_2618),
    .ce(1'b1),
    .dout(grp_fu_681_p2)
);

music_fsub_32ns_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3bkb_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_i_i2_reg_2623),
    .din1(tmp_6_i_i2_reg_2628),
    .ce(1'b1),
    .dout(grp_fu_685_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_689_p0),
    .din1(grp_fu_689_p1),
    .ce(1'b1),
    .dout(grp_fu_689_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_693_p0),
    .din1(grp_fu_693_p1),
    .ce(1'b1),
    .dout(grp_fu_693_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_697_p0),
    .din1(grp_fu_697_p1),
    .ce(1'b1),
    .dout(grp_fu_697_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_705_p0),
    .din1(grp_fu_705_p1),
    .ce(1'b1),
    .dout(grp_fu_705_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_710_p0),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_710_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_844),
    .din1(sqrt_mag_a_mag_b_reg_465),
    .ce(1'b1),
    .dout(grp_fu_715_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_854),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_720_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_854),
    .din1(sqrt_mag_a_mag_b_reg_465),
    .ce(1'b1),
    .dout(grp_fu_725_p2)
);

music_fmul_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3dEe_U167(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_844),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_730_p2)
);

music_fdiv_32ns_3PgM #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3PgM_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_761_p0),
    .din1(grp_fu_761_p1),
    .ce(1'b1),
    .dout(grp_fu_761_p2)
);

music_fdiv_32ns_3PgM #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3PgM_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_765_p0),
    .din1(grp_fu_765_p1),
    .ce(1'b1),
    .dout(grp_fu_765_p2)
);

music_fdiv_32ns_3PgM #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3PgM_U170(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_769_p0),
    .din1(grp_fu_769_p1),
    .ce(1'b1),
    .dout(grp_fu_769_p2)
);

music_fdiv_32ns_3PgM #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3PgM_U171(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_i_i2_reg_2638),
    .din1(reg_902),
    .ce(1'b1),
    .dout(grp_fu_773_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U172(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_778_p0),
    .din1(grp_fu_778_p1),
    .ce(1'b1),
    .opcode(grp_fu_778_opcode),
    .dout(grp_fu_778_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U173(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_782_p0),
    .din1(grp_fu_782_p1),
    .ce(1'b1),
    .opcode(grp_fu_782_opcode),
    .dout(grp_fu_782_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_786_p0),
    .din1(grp_fu_786_p1),
    .ce(1'b1),
    .opcode(grp_fu_786_opcode),
    .dout(grp_fu_786_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_790_p0),
    .din1(grp_fu_790_p1),
    .ce(1'b1),
    .opcode(grp_fu_790_opcode),
    .dout(grp_fu_790_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U176(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d2_5_fu_1433_p1),
    .din1(largest_9_fu_1462_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_794_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U177(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(d2_5_fu_1433_p1),
    .din1(d3_7_fu_1491_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_798_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U178(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(largest_9_fu_1462_p1),
    .din1(grp_fu_802_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_802_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U179(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(largest_9_fu_1462_p1),
    .din1(d2_5_fu_1433_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_806_p2)
);

music_fcmp_32ns_3QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3QgW_U180(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(largest_9_fu_1462_p1),
    .din1(d3_7_fu_1491_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_810_p2)
);

music_fsqrt_32ns_Rg6 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsqrt_32ns_Rg6_U181(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(reg_894),
    .ce(1'b1),
    .dout(grp_fu_818_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln486_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state161) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state182) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state181)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if ((1'b1 == ap_CS_fsm_state181)) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c12_0_i_reg_421 <= 3'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln480_fu_1178_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c12_0_i_reg_421 <= c_fu_1184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        c_0_i_reg_410 <= c_2_fu_1151_p2;
    end else if (((icmp_ln471_fu_1105_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        c_0_i_reg_410 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln471_fu_1105_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_0_i_reg_454 <= 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        i_0_i_reg_454 <= grp_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln471_fu_1105_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        indvar_flatten_reg_432 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        indvar_flatten_reg_432 <= add_ln486_reg_2345;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln471_fu_1105_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        j_0_i_reg_443 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state202)) begin
        j_0_i_reg_443 <= select_ln486_3_reg_2364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln519_reg_2748 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        k13_0_i_reg_656 <= k_1_reg_2752;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        k13_0_i_reg_656 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln511_reg_2710 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k_0_i_reg_645 <= k_reg_2714;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        k_0_i_reg_645 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln201_fu_2124_p2) & (1'b1 == ap_CS_fsm_state90))) begin
        mag_M_real_reg_632 <= 32'd0;
    end else if (((1'd0 == and_ln201_reg_2683) & (1'b1 == ap_CS_fsm_state135))) begin
        mag_M_real_reg_632 <= grp_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_imag_2_reg_609 <= tmp_M_imag_4_fu_2011_p1;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_imag_2_reg_609 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_imag_3_reg_575 <= tmp_M_imag_6_fu_2026_p1;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_imag_3_reg_575 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_imag_5_reg_552 <= tmp_M_imag_3_reg_486;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_imag_5_reg_552 <= tmp_M_imag_2_fu_2056_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_real_2_reg_620 <= tmp_M_real_1_reg_477;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_real_2_reg_620 <= 32'd1065353216;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_real_3_reg_597 <= tmp_M_real_2_reg_497;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_real_3_reg_597 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_real_5_reg_586 <= bitcast_ln444_1_fu_2041_p1;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_real_5_reg_586 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            p_r_M_real_6_reg_563 <= tmp_M_real_1_reg_477;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            p_r_M_real_6_reg_563 <= tmp_M_real_reg_519;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln459_fu_1055_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln459_1_reg_364 <= add_ln459_1_fu_1049_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln459_1_reg_364 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln459_fu_1055_p2 == 1'd1) & (icmp_ln459_1_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln459_reg_352 <= add_ln459_reg_2249;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln459_reg_352 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln460_fu_1093_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln460_1_reg_387 <= add_ln460_1_fu_1087_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln460_1_reg_387 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln459_1_fu_1061_p2 == 1'd1) & (icmp_ln459_fu_1055_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln460_reg_375 <= 2'd0;
    end else if (((icmp_ln460_fu_1093_p2 == 1'd1) & (icmp_ln460_1_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln460_reg_375 <= add_ln460_reg_2265;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln460_1_fu_1099_p2 == 1'd1) & (icmp_ln460_fu_1093_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        r_0_i_reg_398 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_0_i_reg_398 <= r_reg_2285;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln306_fu_2140_p2) & (1'b1 == ap_CS_fsm_state136))) begin
        s_tmp_M_imag_2_reg_530 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        s_tmp_M_imag_2_reg_530 <= grp_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        s_tmp_M_imag_reg_508 <= grp_fu_773_p2;
    end else if (((1'd1 == and_ln284_2_fu_1976_p2) & (1'b1 == ap_CS_fsm_state62))) begin
        s_tmp_M_imag_reg_508 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln201_1_fu_1938_p2) & (1'b1 == ap_CS_fsm_state16))) begin
        sqrt_mag_a_mag_b_reg_465 <= 32'd0;
    end else if (((1'd0 == and_ln201_1_reg_2585) & (1'b1 == ap_CS_fsm_state61))) begin
        sqrt_mag_a_mag_b_reg_465 <= grp_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        tmp_M_imag_3_reg_486 <= grp_fu_765_p2;
    end else if (((1'd1 == and_ln284_2_fu_1976_p2) & (1'b1 == ap_CS_fsm_state62))) begin
        tmp_M_imag_3_reg_486 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        tmp_M_real_1_reg_477 <= grp_fu_761_p2;
    end else if (((1'd1 == and_ln284_2_fu_1976_p2) & (1'b1 == ap_CS_fsm_state62))) begin
        tmp_M_real_1_reg_477 <= c_tmp_M_real_fu_1997_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        tmp_M_real_2_reg_497 <= grp_fu_769_p2;
    end else if (((1'd1 == and_ln284_2_fu_1976_p2) & (1'b1 == ap_CS_fsm_state62))) begin
        tmp_M_real_2_reg_497 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln306_fu_2140_p2) & (1'b1 == ap_CS_fsm_state136))) begin
        tmp_M_real_reg_519 <= 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state160)) begin
        tmp_M_real_reg_519 <= grp_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln471_fu_1105_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        Qi_M_imag_addr_1_reg_2301 <= zext_ln1067_2_fu_1139_p1;
        Qi_M_real_addr_1_reg_2296 <= zext_ln1067_2_fu_1139_p1;
        zext_ln1067_1_reg_2290[4 : 2] <= zext_ln1067_1_fu_1129_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln521_fu_2218_p2 == 1'd0) & (icmp_ln519_fu_2202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Qi_M_imag_addr_3_reg_2772 <= zext_ln114_4_fu_2232_p1;
        Qi_M_imag_addr_4_reg_2778 <= zext_ln114_5_fu_2243_p1;
        Qi_M_real_addr_3_reg_2761 <= zext_ln114_4_fu_2232_p1;
        Qi_M_real_addr_4_reg_2767 <= zext_ln114_5_fu_2243_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Qi_M_imag_addr_3_reg_2772_pp3_iter1_reg <= Qi_M_imag_addr_3_reg_2772;
        Qi_M_imag_addr_3_reg_2772_pp3_iter2_reg <= Qi_M_imag_addr_3_reg_2772_pp3_iter1_reg;
        Qi_M_imag_addr_3_reg_2772_pp3_iter3_reg <= Qi_M_imag_addr_3_reg_2772_pp3_iter2_reg;
        Qi_M_imag_addr_3_reg_2772_pp3_iter4_reg <= Qi_M_imag_addr_3_reg_2772_pp3_iter3_reg;
        Qi_M_imag_addr_4_reg_2778_pp3_iter1_reg <= Qi_M_imag_addr_4_reg_2778;
        Qi_M_imag_addr_4_reg_2778_pp3_iter2_reg <= Qi_M_imag_addr_4_reg_2778_pp3_iter1_reg;
        Qi_M_imag_addr_4_reg_2778_pp3_iter3_reg <= Qi_M_imag_addr_4_reg_2778_pp3_iter2_reg;
        Qi_M_imag_addr_4_reg_2778_pp3_iter4_reg <= Qi_M_imag_addr_4_reg_2778_pp3_iter3_reg;
        Qi_M_real_addr_3_reg_2761_pp3_iter1_reg <= Qi_M_real_addr_3_reg_2761;
        Qi_M_real_addr_3_reg_2761_pp3_iter2_reg <= Qi_M_real_addr_3_reg_2761_pp3_iter1_reg;
        Qi_M_real_addr_3_reg_2761_pp3_iter3_reg <= Qi_M_real_addr_3_reg_2761_pp3_iter2_reg;
        Qi_M_real_addr_3_reg_2761_pp3_iter4_reg <= Qi_M_real_addr_3_reg_2761_pp3_iter3_reg;
        Qi_M_real_addr_4_reg_2767_pp3_iter1_reg <= Qi_M_real_addr_4_reg_2767;
        Qi_M_real_addr_4_reg_2767_pp3_iter2_reg <= Qi_M_real_addr_4_reg_2767_pp3_iter1_reg;
        Qi_M_real_addr_4_reg_2767_pp3_iter3_reg <= Qi_M_real_addr_4_reg_2767_pp3_iter2_reg;
        Qi_M_real_addr_4_reg_2767_pp3_iter4_reg <= Qi_M_real_addr_4_reg_2767_pp3_iter3_reg;
        icmp_ln519_reg_2748 <= icmp_ln519_fu_2202_p2;
        icmp_ln521_reg_2757_pp3_iter1_reg <= icmp_ln521_reg_2757;
        icmp_ln521_reg_2757_pp3_iter2_reg <= icmp_ln521_reg_2757_pp3_iter1_reg;
        icmp_ln521_reg_2757_pp3_iter3_reg <= icmp_ln521_reg_2757_pp3_iter2_reg;
        icmp_ln521_reg_2757_pp3_iter4_reg <= icmp_ln521_reg_2757_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln499_fu_1330_p2 == 1'd1) & (icmp_ln486_fu_1215_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        Ri_M_imag_addr_2_reg_2400 <= zext_ln503_1_fu_1354_p1;
        Ri_M_imag_addr_3_reg_2417 <= zext_ln503_3_fu_1378_p1;
        Ri_M_real_addr_2_reg_2394 <= zext_ln503_1_fu_1354_p1;
        Ri_M_real_addr_3_reg_2412 <= zext_ln503_3_fu_1378_p1;
        zext_ln503_2_reg_2406[3 : 2] <= zext_ln503_2_fu_1368_p1[3 : 2];
        zext_ln503_reg_2388[3 : 2] <= zext_ln503_fu_1344_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln511_fu_2146_p2 == 1'd0) & (icmp_ln513_fu_2158_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Ri_M_imag_addr_4_reg_2733 <= zext_ln114_1_fu_2172_p1;
        Ri_M_imag_addr_5_reg_2738 <= zext_ln114_2_fu_2183_p1;
        Ri_M_real_addr_4_reg_2723 <= zext_ln114_1_fu_2172_p1;
        Ri_M_real_addr_5_reg_2728 <= zext_ln114_2_fu_2183_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Ri_M_imag_addr_4_reg_2733_pp2_iter1_reg <= Ri_M_imag_addr_4_reg_2733;
        Ri_M_imag_addr_4_reg_2733_pp2_iter2_reg <= Ri_M_imag_addr_4_reg_2733_pp2_iter1_reg;
        Ri_M_imag_addr_4_reg_2733_pp2_iter3_reg <= Ri_M_imag_addr_4_reg_2733_pp2_iter2_reg;
        Ri_M_imag_addr_4_reg_2733_pp2_iter4_reg <= Ri_M_imag_addr_4_reg_2733_pp2_iter3_reg;
        Ri_M_imag_addr_5_reg_2738_pp2_iter1_reg <= Ri_M_imag_addr_5_reg_2738;
        Ri_M_imag_addr_5_reg_2738_pp2_iter2_reg <= Ri_M_imag_addr_5_reg_2738_pp2_iter1_reg;
        Ri_M_imag_addr_5_reg_2738_pp2_iter3_reg <= Ri_M_imag_addr_5_reg_2738_pp2_iter2_reg;
        Ri_M_imag_addr_5_reg_2738_pp2_iter4_reg <= Ri_M_imag_addr_5_reg_2738_pp2_iter3_reg;
        Ri_M_real_addr_4_reg_2723_pp2_iter1_reg <= Ri_M_real_addr_4_reg_2723;
        Ri_M_real_addr_4_reg_2723_pp2_iter2_reg <= Ri_M_real_addr_4_reg_2723_pp2_iter1_reg;
        Ri_M_real_addr_4_reg_2723_pp2_iter3_reg <= Ri_M_real_addr_4_reg_2723_pp2_iter2_reg;
        Ri_M_real_addr_4_reg_2723_pp2_iter4_reg <= Ri_M_real_addr_4_reg_2723_pp2_iter3_reg;
        Ri_M_real_addr_5_reg_2728_pp2_iter1_reg <= Ri_M_real_addr_5_reg_2728;
        Ri_M_real_addr_5_reg_2728_pp2_iter2_reg <= Ri_M_real_addr_5_reg_2728_pp2_iter1_reg;
        Ri_M_real_addr_5_reg_2728_pp2_iter3_reg <= Ri_M_real_addr_5_reg_2728_pp2_iter2_reg;
        Ri_M_real_addr_5_reg_2728_pp2_iter4_reg <= Ri_M_real_addr_5_reg_2728_pp2_iter3_reg;
        icmp_ln511_reg_2710 <= icmp_ln511_fu_2146_p2;
        icmp_ln513_reg_2719_pp2_iter1_reg <= icmp_ln513_reg_2719;
        icmp_ln513_reg_2719_pp2_iter2_reg <= icmp_ln513_reg_2719_pp2_iter1_reg;
        icmp_ln513_reg_2719_pp2_iter3_reg <= icmp_ln513_reg_2719_pp2_iter2_reg;
        icmp_ln513_reg_2719_pp2_iter4_reg <= icmp_ln513_reg_2719_pp2_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln459_reg_2249 <= add_ln459_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln460_reg_2265 <= add_ln460_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln486_reg_2345 <= add_ln486_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state181)) begin
        add_ln521_1_reg_2743 <= add_ln521_1_fu_2197_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        and_ln179_1_reg_2538 <= and_ln179_1_fu_1753_p2;
        and_ln184_7_reg_2552 <= and_ln184_7_fu_1837_p2;
        and_ln189_2_reg_2546 <= and_ln189_2_fu_1813_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        and_ln189_reg_2663 <= and_ln189_fu_2071_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        and_ln201_1_reg_2585 <= and_ln201_1_fu_1938_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        and_ln201_reg_2683 <= and_ln201_fu_2124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        d1_4_reg_2427[30 : 0] <= d1_4_fu_1404_p1[30 : 0];
        d2_5_reg_2439[30 : 0] <= d2_5_fu_1433_p1[30 : 0];
        d3_7_reg_2466[30 : 0] <= d3_7_fu_1491_p1[30 : 0];
        largest_9_reg_2452[30 : 0] <= largest_9_fu_1462_p1[30 : 0];
        or_ln179_1_reg_2486 <= or_ln179_1_fu_1548_p2;
        or_ln179_2_reg_2494 <= or_ln179_2_fu_1576_p2;
        or_ln179_3_reg_2502 <= or_ln179_3_fu_1604_p2;
        or_ln179_reg_2478 <= or_ln179_fu_1530_p2;
        p_Val2_39_reg_2422 <= p_Val2_39_fu_1384_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        d3_reg_2518[30 : 0] <= d3_fu_1656_p1[30 : 0];
        largest_10_reg_2510[30 : 0] <= largest_10_fu_1630_p1[30 : 0];
        or_ln189_1_reg_2532 <= or_ln189_1_fu_1711_p2;
        or_ln189_reg_2526 <= or_ln189_fu_1683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln480_reg_2317 <= icmp_ln480_fu_1178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln511_fu_2146_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln513_reg_2719 <= icmp_ln513_fu_2158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln519_fu_2202_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln521_reg_2757 <= icmp_ln521_fu_2218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        k_1_reg_2752 <= k_1_fu_2208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        k_reg_2714 <= k_fu_2152_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        largest_1_reg_2669[30 : 0] <= largest_1_fu_2077_p3[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        largest_8_reg_2560[30 : 0] <= largest_8_fu_1854_p3[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757 == 1'd0) & (icmp_ln519_reg_2748 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        p_t_imag_2_reg_2789 <= Qi_M_imag_q0;
        p_t_imag_3_reg_2801 <= Qi_M_imag_q1;
        p_t_real_2_reg_2783 <= Qi_M_real_q0;
        p_t_real_3_reg_2795 <= Qi_M_real_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        r_reg_2285 <= r_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        reg_1003 <= grp_fu_667_p2;
        reg_1008 <= grp_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_1013 <= grp_fu_667_p2;
        reg_1018 <= grp_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln521_reg_2757_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln513_reg_2719_pp2_iter3_reg == 1'd0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_1023 <= grp_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln513_reg_2719 == 1'd0) & (icmp_ln511_reg_2710 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        reg_828 <= Ri_M_real_q0;
        reg_836 <= Ri_M_imag_q0;
        reg_844 <= Ri_M_real_q1;
        reg_854 <= Ri_M_imag_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_864 <= grp_fu_761_p2;
        reg_870 <= grp_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state35) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln521_reg_2757 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln513_reg_2719 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_876 <= grp_fu_689_p2;
        reg_882 <= grp_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state35) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln521_reg_2757 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln513_reg_2719 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_888 <= grp_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | ((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        reg_894 <= grp_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state40) | ((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        reg_902 <= grp_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state65) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln521_reg_2757 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln513_reg_2719 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_912 <= grp_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state65))) begin
        reg_918 <= grp_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state70) | ((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln521_reg_2757_pp3_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln521_reg_2757_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln513_reg_2719_pp2_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln513_reg_2719_pp2_iter3_reg == 1'd0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((icmp_ln513_reg_2719_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        reg_923 <= grp_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        reg_933 <= grp_fu_689_p2;
        reg_938 <= grp_fu_693_p2;
        reg_943 <= grp_fu_697_p2;
        reg_948 <= grp_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        reg_953 <= grp_fu_689_p2;
        reg_958 <= grp_fu_693_p2;
        reg_963 <= grp_fu_697_p2;
        reg_968 <= grp_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)))) begin
        reg_973 <= grp_fu_689_p2;
        reg_978 <= grp_fu_693_p2;
        reg_983 <= grp_fu_697_p2;
        reg_988 <= grp_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        reg_993 <= grp_fu_667_p2;
        reg_998 <= grp_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln486_fu_1215_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        select_ln486_1_reg_2355 <= select_ln486_1_fu_1254_p3;
        select_ln486_3_reg_2364 <= select_ln486_3_fu_1290_p3;
        select_ln486_4_reg_2369 <= select_ln486_4_fu_1308_p3;
        select_ln486_reg_2350 <= select_ln486_fu_1233_p3;
        xor_ln486_reg_2374 <= xor_ln486_fu_1320_p2;
        zext_ln486_reg_2359[0] <= zext_ln486_fu_1266_p1[0];
        zext_ln498_reg_2379[1 : 0] <= zext_ln498_fu_1326_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        tmp_2_i_i2_reg_2633 <= grp_fu_681_p2;
        tmp_7_i_i2_reg_2638 <= grp_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        tmp_5_i_i2_reg_2623 <= grp_fu_725_p2;
        tmp_6_i_i2_reg_2628 <= grp_fu_730_p2;
        tmp_i_i1_reg_2613 <= grp_fu_715_p2;
        tmp_i_i2_reg_2618 <= grp_fu_720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        tmp_i_i7_reg_2687 <= grp_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        tmp_i_i_reg_2595 <= grp_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        x3_1_reg_2589 <= grp_fu_769_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln480_fu_1178_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        zext_ln482_1_reg_2326[5 : 0] <= zext_ln482_1_fu_1199_p1[5 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_M_imag_ce0 = 1'b1;
    end else begin
        A_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_M_real_ce0 = 1'b1;
    end else begin
        A_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Qi_M_imag_address0 = zext_ln114_4_fu_2232_p1;
    end else if (((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_imag_address0 = Qi_M_imag_addr_1_reg_2301;
    end else if (((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_imag_address0 = zext_ln1067_4_fu_1172_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Qi_M_imag_address0 = zext_ln1027_fu_1043_p1;
    end else begin
        Qi_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3))) begin
        Qi_M_imag_address1 = Qi_M_imag_addr_4_reg_2778_pp3_iter4_reg;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        Qi_M_imag_address1 = Qi_M_imag_addr_3_reg_2772_pp3_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Qi_M_imag_address1 = zext_ln114_5_fu_2243_p1;
    end else begin
        Qi_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        Qi_M_imag_ce0 = 1'b1;
    end else begin
        Qi_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp3_stage1_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        Qi_M_imag_ce1 = 1'b1;
    end else begin
        Qi_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp3_iter4 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3))) begin
            Qi_M_imag_d1 = reg_923;
        end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
            Qi_M_imag_d1 = reg_1023;
        end else begin
            Qi_M_imag_d1 = 'bx;
        end
    end else begin
        Qi_M_imag_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_imag_we0 = 1'b1;
    end else begin
        Qi_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln521_reg_2757_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
        Qi_M_imag_we1 = 1'b1;
    end else begin
        Qi_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Qi_M_real_address0 = zext_ln114_4_fu_2232_p1;
    end else if (((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_real_address0 = Qi_M_real_addr_1_reg_2296;
    end else if (((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_real_address0 = zext_ln1067_4_fu_1172_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Qi_M_real_address0 = zext_ln1027_fu_1043_p1;
    end else begin
        Qi_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage2))) begin
        Qi_M_real_address1 = Qi_M_real_addr_4_reg_2767_pp3_iter4_reg;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        Qi_M_real_address1 = Qi_M_real_addr_3_reg_2761_pp3_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Qi_M_real_address1 = zext_ln114_5_fu_2243_p1;
    end else begin
        Qi_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        Qi_M_real_ce0 = 1'b1;
    end else begin
        Qi_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        Qi_M_real_ce1 = 1'b1;
    end else begin
        Qi_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_real_d0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_real_d0 = 32'd0;
    end else begin
        Qi_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1157_p2 == 1'd1) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1157_p2 == 1'd0) & (icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_real_we0 = 1'b1;
    end else begin
        Qi_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln521_reg_2757_pp3_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln521_reg_2757_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)))) begin
        Qi_M_real_we1 = 1'b1;
    end else begin
        Qi_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        Ri_M_imag_address0 = Ri_M_imag_addr_4_reg_2733_pp2_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Ri_M_imag_address0 = zext_ln114_1_fu_2172_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Ri_M_imag_address0 = zext_ln503_1_fu_1354_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Ri_M_imag_address0 = zext_ln482_1_reg_2326;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_imag_address0 = zext_ln1027_1_fu_1081_p1;
    end else begin
        Ri_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
        Ri_M_imag_address1 = Ri_M_imag_addr_5_reg_2738_pp2_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Ri_M_imag_address1 = zext_ln114_2_fu_2183_p1;
    end else if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        Ri_M_imag_address1 = Ri_M_imag_addr_3_reg_2417;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        Ri_M_imag_address1 = Ri_M_imag_addr_2_reg_2400;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Ri_M_imag_address1 = zext_ln503_3_fu_1378_p1;
    end else begin
        Ri_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        Ri_M_imag_ce0 = 1'b1;
    end else begin
        Ri_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87)) | ((1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        Ri_M_imag_ce1 = 1'b1;
    end else begin
        Ri_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        Ri_M_imag_d0 = reg_1023;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Ri_M_imag_d0 = A_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_imag_d0 = 32'd0;
    end else begin
        Ri_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
        Ri_M_imag_d1 = reg_923;
    end else if ((((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87)))) begin
        Ri_M_imag_d1 = 32'd0;
    end else begin
        Ri_M_imag_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln480_reg_2317 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        Ri_M_imag_we0 = 1'b1;
    end else begin
        Ri_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln513_reg_2719_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)))) begin
        Ri_M_imag_we1 = 1'b1;
    end else begin
        Ri_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        Ri_M_real_address0 = Ri_M_real_addr_4_reg_2723_pp2_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Ri_M_real_address0 = zext_ln114_1_fu_2172_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Ri_M_real_address0 = zext_ln503_1_fu_1354_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Ri_M_real_address0 = zext_ln482_1_reg_2326;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_real_address0 = zext_ln1027_1_fu_1081_p1;
    end else begin
        Ri_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        Ri_M_real_address1 = Ri_M_real_addr_5_reg_2728_pp2_iter4_reg;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Ri_M_real_address1 = zext_ln114_2_fu_2183_p1;
    end else if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
        Ri_M_real_address1 = Ri_M_real_addr_3_reg_2412;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87))) begin
        Ri_M_real_address1 = Ri_M_real_addr_2_reg_2394;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Ri_M_real_address1 = zext_ln503_3_fu_1378_p1;
    end else begin
        Ri_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        Ri_M_real_ce0 = 1'b1;
    end else begin
        Ri_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        Ri_M_real_ce1 = 1'b1;
    end else begin
        Ri_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        Ri_M_real_d0 = reg_923;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Ri_M_real_d0 = A_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_real_d0 = 32'd0;
    end else begin
        Ri_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        Ri_M_real_d1 = reg_923;
    end else if ((((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87)))) begin
        Ri_M_real_d1 = ap_phi_mux_p_f_assign_phi_fu_544_p4;
    end else begin
        Ri_M_real_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln480_reg_2317 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter4_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        Ri_M_real_we0 = 1'b1;
    end else begin
        Ri_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state87)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state87)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln513_reg_2719_pp2_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
        Ri_M_real_we1 = 1'b1;
    end else begin
        Ri_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln480_fu_1178_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln511_fu_2146_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state161 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state161 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln519_fu_2202_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state182 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state182 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln486_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_2748 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_k13_0_i_phi_fu_660_p4 = k_1_reg_2752;
    end else begin
        ap_phi_mux_k13_0_i_phi_fu_660_p4 = k13_0_i_reg_656;
    end
end

always @ (*) begin
    if (((icmp_ln511_reg_2710 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_k_0_i_phi_fu_649_p4 = k_reg_2714;
    end else begin
        ap_phi_mux_k_0_i_phi_fu_649_p4 = k_0_i_reg_645;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        if ((select_ln486_1_reg_2355 == 1'd0)) begin
            ap_phi_mux_p_f_assign_phi_fu_544_p4 = sqrt_mag_a_mag_b_reg_465;
        end else if ((select_ln486_1_reg_2355 == 1'd1)) begin
            ap_phi_mux_p_f_assign_phi_fu_544_p4 = mag_M_real_reg_632;
        end else begin
            ap_phi_mux_p_f_assign_phi_fu_544_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_p_f_assign_phi_fu_544_p4 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln486_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage2_00001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage3_00001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage1_00001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage2_00001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage3_00001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln521_reg_2757_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_00001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_00001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln513_reg_2719_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_00001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_667_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_667_opcode = 2'd0;
    end else begin
        grp_fu_667_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_667_p0 = reg_973;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_667_p0 = reg_953;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_667_p0 = reg_933;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state66) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_667_p0 = reg_876;
    end else if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_667_p0 = reg_902;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_667_p0 = reg_882;
    end else begin
        grp_fu_667_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_667_p1 = reg_978;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_667_p1 = reg_958;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_667_p1 = reg_938;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state66) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_667_p1 = reg_882;
    end else if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_667_p1 = reg_894;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_667_p1 = reg_888;
    end else begin
        grp_fu_667_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_671_p0 = reg_983;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_671_p0 = reg_963;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_671_p0 = reg_943;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state66) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_671_p0 = reg_888;
    end else if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_671_p0 = reg_876;
    end else begin
        grp_fu_671_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_671_p1 = reg_988;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_671_p1 = reg_968;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_671_p1 = reg_948;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_671_p1 = reg_912;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_671_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_671_p1 = 32'd1065353216;
    end else begin
        grp_fu_671_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_677_opcode = 2'd1;
    end else if ((((icmp_ln521_reg_2757_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage2_00001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage2_00001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage3_00001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage3_00001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((icmp_ln521_reg_2757_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage1_00001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((icmp_ln521_reg_2757_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_00001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln513_reg_2719_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_00001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln513_reg_2719_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_00001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        grp_fu_677_opcode = 2'd0;
    end else begin
        grp_fu_677_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_677_p0 = reg_1008;
    end else if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_677_p0 = reg_1003;
    end else if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_677_p0 = reg_902;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_677_p0 = reg_894;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_677_p0 = reg_912;
    end else begin
        grp_fu_677_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_677_p1 = reg_1018;
    end else if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_677_p1 = reg_1013;
    end else if ((((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_677_p1 = reg_998;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_677_p1 = reg_993;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_677_p1 = reg_918;
    end else begin
        grp_fu_677_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_689_p0 = p_r_M_real_6_reg_563;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_689_p0 = p_r_M_real_5_reg_586;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_689_p0 = p_r_M_real_3_reg_597;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_689_p0 = p_r_M_real_2_reg_620;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_689_p0 = reg_844;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_689_p0 = largest_1_reg_2669;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_689_p0 = reg_828;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_689_p0 = largest_8_reg_2560;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_689_p0 = reg_864;
    end else begin
        grp_fu_689_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_689_p1 = p_t_real_2_reg_2783;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)))) begin
        grp_fu_689_p1 = p_t_real_3_reg_2795;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_689_p1 = Qi_M_real_q0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3))) begin
        grp_fu_689_p1 = reg_828;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_689_p1 = reg_844;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_fu_689_p1 = Ri_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_689_p1 = mag_M_real_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_689_p1 = tmp_i_i7_reg_2687;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_689_p1 = sqrt_mag_a_mag_b_reg_465;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_689_p1 = tmp_i_i_reg_2595;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_689_p1 = reg_864;
    end else begin
        grp_fu_689_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_693_p0 = p_r_M_imag_5_reg_552;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_693_p0 = p_r_M_imag_3_reg_575;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_693_p0 = p_r_M_imag_2_reg_609;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_693_p0 = reg_854;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_693_p0 = reg_836;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_693_p0 = reg_870;
    end else begin
        grp_fu_693_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_693_p1 = p_t_imag_2_reg_2789;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)))) begin
        grp_fu_693_p1 = p_t_imag_3_reg_2801;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_693_p1 = Qi_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3))) begin
        grp_fu_693_p1 = reg_836;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_693_p1 = reg_854;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_fu_693_p1 = Ri_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state136))) begin
        grp_fu_693_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_693_p1 = reg_870;
    end else begin
        grp_fu_693_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_697_p0 = p_r_M_imag_5_reg_552;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_697_p0 = p_r_M_imag_3_reg_575;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_697_p0 = p_r_M_imag_2_reg_609;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_697_p0 = mag_M_real_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_697_p0 = sqrt_mag_a_mag_b_reg_465;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_697_p0 = x3_1_reg_2589;
    end else begin
        grp_fu_697_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_697_p1 = p_t_real_2_reg_2783;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)))) begin
        grp_fu_697_p1 = p_t_real_3_reg_2795;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_697_p1 = Qi_M_real_q0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3))) begin
        grp_fu_697_p1 = reg_828;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_697_p1 = reg_844;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_fu_697_p1 = Ri_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_697_p1 = mag_M_real_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_697_p1 = sqrt_mag_a_mag_b_reg_465;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_697_p1 = x3_1_reg_2589;
    end else begin
        grp_fu_697_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)))) begin
        grp_fu_705_p0 = p_r_M_real_6_reg_563;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3)) | ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3)))) begin
        grp_fu_705_p0 = p_r_M_real_5_reg_586;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_705_p0 = p_r_M_real_3_reg_597;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1)))) begin
        grp_fu_705_p0 = p_r_M_real_2_reg_620;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_705_p0 = reg_854;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_705_p0 = reg_836;
    end else begin
        grp_fu_705_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_705_p1 = p_t_imag_2_reg_2789;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)))) begin
        grp_fu_705_p1 = p_t_imag_3_reg_2801;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_705_p1 = Qi_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3))) begin
        grp_fu_705_p1 = reg_836;
    end else if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2)))) begin
        grp_fu_705_p1 = reg_854;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        grp_fu_705_p1 = Ri_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_705_p1 = mag_M_real_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_705_p1 = sqrt_mag_a_mag_b_reg_465;
    end else begin
        grp_fu_705_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_710_p0 = reg_844;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_710_p0 = reg_828;
    end else begin
        grp_fu_710_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_761_p0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_761_p0 = reg_894;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_761_p0 = d1_3_fu_1871_p3;
    end else begin
        grp_fu_761_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_761_p1 = largest_1_reg_2669;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_761_p1 = reg_902;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_761_p1 = largest_8_reg_2560;
    end else begin
        grp_fu_761_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_765_p0 = d3_1_fu_2083_p3;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_765_p0 = reg_923;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_765_p0 = d2_4_fu_1883_p3;
    end else begin
        grp_fu_765_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_765_p1 = largest_1_reg_2669;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_765_p1 = reg_902;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_765_p1 = largest_8_reg_2560;
    end else begin
        grp_fu_765_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_769_p0 = tmp_2_i_i2_reg_2633;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_769_p0 = d3_6_fu_1896_p3;
    end else begin
        grp_fu_769_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_769_p1 = reg_902;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_769_p1 = largest_8_reg_2560;
    end else begin
        grp_fu_769_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_778_opcode = 5'd1;
    end else if ((((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        grp_fu_778_opcode = 5'd2;
    end else begin
        grp_fu_778_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        grp_fu_778_p0 = largest_10_reg_2510;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_778_p0 = largest_1_fu_2077_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_778_p0 = d1_4_reg_2427;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_778_p0 = largest_8_fu_1854_p3;
    end else if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_778_p0 = largest_10_fu_1630_p1;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_778_p0 = d1_4_fu_1404_p1;
    end else begin
        grp_fu_778_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state15) | ((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        grp_fu_778_p1 = 32'd0;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_778_p1 = d2_5_fu_1433_p1;
    end else begin
        grp_fu_778_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_782_opcode = 5'd1;
    end else if ((((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        grp_fu_782_opcode = 5'd2;
    end else begin
        grp_fu_782_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        grp_fu_782_p0 = d3_reg_2518;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_782_p0 = d2_5_reg_2439;
    end else if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_782_p0 = largest_10_fu_1630_p1;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_782_p0 = d1_4_fu_1404_p1;
    end else begin
        grp_fu_782_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_782_p1 = 32'd0;
    end else if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_782_p1 = d3_fu_1656_p1;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_782_p1 = largest_9_fu_1462_p1;
    end else begin
        grp_fu_782_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_786_opcode = 5'd1;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_786_opcode = 5'd2;
    end else begin
        grp_fu_786_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_786_p0 = largest_9_reg_2452;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_786_p0 = d1_4_fu_1404_p1;
    end else begin
        grp_fu_786_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_786_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_786_p1 = d3_7_fu_1491_p1;
    end else begin
        grp_fu_786_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_790_opcode = 5'd1;
    end else if (((select_ln486_1_reg_2355 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_790_opcode = 5'd2;
    end else begin
        grp_fu_790_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_790_p0 = d3_7_reg_2466;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_790_p0 = d2_5_fu_1433_p1;
    end else begin
        grp_fu_790_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_790_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_790_p1 = d1_4_fu_1404_p1;
    end else begin
        grp_fu_790_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        grp_fu_823_p0 = select_ln486_reg_2350;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_823_p0 = select_ln486_fu_1233_p3;
    end else begin
        grp_fu_823_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln459_1_fu_1061_p2 == 1'd1) & (icmp_ln459_fu_1055_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln459_fu_1055_p2 == 1'd1) & (icmp_ln459_1_fu_1061_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln460_1_fu_1099_p2 == 1'd1) & (icmp_ln460_fu_1093_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln460_fu_1093_p2 == 1'd1) & (icmp_ln460_1_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln471_fu_1105_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln472_fu_1145_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln480_fu_1178_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln480_fu_1178_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln486_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln499_fu_1330_p2 == 1'd0) & (icmp_ln486_fu_1215_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state202;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((select_ln486_1_reg_2355 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'd1 == and_ln201_1_fu_1938_p2) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((1'd1 == and_ln284_2_fu_1976_p2) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((1'd1 == and_ln201_fu_2124_p2) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            if (((1'd0 == and_ln306_fu_2140_p2) & (1'b1 == ap_CS_fsm_state136))) begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln511_fu_2146_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((icmp_ln511_fu_2146_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state181;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((~((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone)) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state181;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln519_fu_2202_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((icmp_ln519_fu_2202_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state202;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((~((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone)) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state202;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_M_imag_address0 = zext_ln482_1_fu_1199_p1;

assign A_M_real_address0 = zext_ln482_1_fu_1199_p1;

assign Qi_M_imag_d0 = 32'd0;

assign Qi_M_real_d1 = reg_923;

assign add_ln1067_1_fu_1167_p2 = (zext_ln1067_1_reg_2290 + zext_ln1067_3_fu_1163_p1);

assign add_ln1067_fu_1133_p2 = (zext_ln1067_fu_1117_p1 + zext_ln1067_1_fu_1129_p1);

assign add_ln114_2_fu_2178_p2 = (zext_ln503_2_reg_2406 + zext_ln114_fu_2163_p1);

assign add_ln114_3_fu_2227_p2 = (zext_ln503_reg_2388 + zext_ln114_3_fu_2223_p1);

assign add_ln114_4_fu_2238_p2 = (zext_ln503_2_reg_2406 + zext_ln114_3_fu_2223_p1);

assign add_ln114_fu_2167_p2 = (zext_ln503_reg_2388 + zext_ln114_fu_2163_p1);

assign add_ln459_1_fu_1049_p2 = (phi_ln459_1_reg_364 + 2'd1);

assign add_ln459_fu_1029_p2 = (phi_ln459_reg_352 + 2'd1);

assign add_ln460_1_fu_1087_p2 = (phi_ln460_1_reg_387 + 2'd1);

assign add_ln460_fu_1067_p2 = (phi_ln460_reg_375 + 2'd1);

assign add_ln482_fu_1194_p2 = (zext_ln1067_1_reg_2290 + zext_ln482_fu_1190_p1);

assign add_ln486_fu_1221_p2 = (indvar_flatten_reg_432 + 4'd1);

assign add_ln503_1_fu_1348_p2 = (zext_ln513_fu_1298_p1 + zext_ln503_fu_1344_p1);

assign add_ln503_2_fu_1372_p2 = (zext_ln513_fu_1298_p1 + zext_ln503_2_fu_1368_p1);

assign add_ln513_1_fu_1242_p2 = (j_0_i_reg_443 + 3'd1);

assign add_ln513_fu_1302_p2 = (j_0_i_reg_443 + 3'd2);

assign add_ln521_1_fu_2197_p2 = (zext_ln521_fu_2193_p1 + xor_ln486_reg_2374);

assign add_ln521_fu_2189_p2 = (zext_ln498_reg_2379 + zext_ln486_reg_2359);

assign and_ln179_1_fu_1753_p2 = (and_ln179_7_fu_1747_p2 & and_ln179_2_fu_1721_p2);

assign and_ln179_2_fu_1721_p2 = (grp_fu_778_p2 & and_ln179_fu_1717_p2);

assign and_ln179_3_fu_1727_p2 = (or_ln179_reg_2478 & or_ln179_2_reg_2494);

assign and_ln179_4_fu_1731_p2 = (grp_fu_782_p2 & and_ln179_3_fu_1727_p2);

assign and_ln179_5_fu_1737_p2 = (or_ln179_reg_2478 & or_ln179_3_reg_2502);

assign and_ln179_6_fu_1741_p2 = (grp_fu_786_p2 & and_ln179_5_fu_1737_p2);

assign and_ln179_7_fu_1747_p2 = (and_ln179_6_fu_1741_p2 & and_ln179_4_fu_1731_p2);

assign and_ln179_fu_1717_p2 = (or_ln179_reg_2478 & or_ln179_1_reg_2486);

assign and_ln184_1_fu_1765_p2 = (or_ln179_2_reg_2494 & or_ln179_1_reg_2486);

assign and_ln184_2_fu_1769_p2 = (grp_fu_794_p2 & and_ln184_1_fu_1765_p2);

assign and_ln184_3_fu_1775_p2 = (or_ln179_3_reg_2502 & or_ln179_1_reg_2486);

assign and_ln184_4_fu_1779_p2 = (grp_fu_798_p2 & and_ln184_3_fu_1775_p2);

assign and_ln184_5_fu_1825_p2 = (and_ln184_4_fu_1779_p2 & and_ln184_2_fu_1769_p2);

assign and_ln184_6_fu_1831_p2 = (xor_ln179_fu_1819_p2 & and_ln184_fu_1759_p2);

assign and_ln184_7_fu_1837_p2 = (and_ln184_6_fu_1831_p2 & and_ln184_5_fu_1825_p2);

assign and_ln184_fu_1759_p2 = (grp_fu_790_p2 & and_ln179_fu_1717_p2);

assign and_ln189_1_fu_2061_p2 = (or_ln189_reg_2526 & or_ln189_1_reg_2532);

assign and_ln189_2_fu_1813_p2 = (and_ln189_8_fu_1807_p2 & and_ln189_4_fu_1785_p2);

assign and_ln189_3_fu_2065_p2 = (grp_fu_782_p2 & and_ln189_1_fu_2061_p2);

assign and_ln189_4_fu_1785_p2 = (grp_fu_802_p2 & and_ln179_3_fu_1727_p2);

assign and_ln189_5_fu_1791_p2 = (grp_fu_806_p2 & and_ln184_1_fu_1765_p2);

assign and_ln189_6_fu_1797_p2 = (or_ln179_3_reg_2502 & or_ln179_2_reg_2494);

assign and_ln189_7_fu_1801_p2 = (grp_fu_810_p2 & and_ln189_6_fu_1797_p2);

assign and_ln189_8_fu_1807_p2 = (and_ln189_7_fu_1801_p2 & and_ln189_5_fu_1791_p2);

assign and_ln189_fu_2071_p2 = (grp_fu_778_p2 & and_ln189_3_fu_2065_p2);

assign and_ln201_1_fu_1938_p2 = (or_ln201_1_fu_1932_p2 & grp_fu_778_p2);

assign and_ln201_fu_2124_p2 = (or_ln201_fu_2118_p2 & grp_fu_778_p2);

assign and_ln284_1_fu_1949_p2 = (or_ln179_1_reg_2486 & grp_fu_782_p2);

assign and_ln284_2_fu_1976_p2 = (and_ln284_6_fu_1970_p2 & and_ln284_5_fu_1964_p2);

assign and_ln284_3_fu_1954_p2 = (or_ln179_2_reg_2494 & grp_fu_786_p2);

assign and_ln284_4_fu_1959_p2 = (or_ln179_3_reg_2502 & grp_fu_790_p2);

assign and_ln284_5_fu_1964_p2 = (and_ln284_fu_1944_p2 & and_ln284_1_fu_1949_p2);

assign and_ln284_6_fu_1970_p2 = (and_ln284_4_fu_1959_p2 & and_ln284_3_fu_1954_p2);

assign and_ln284_fu_1944_p2 = (or_ln179_reg_2478 & grp_fu_778_p2);

assign and_ln306_1_fu_2130_p2 = (or_ln189_reg_2526 & grp_fu_778_p2);

assign and_ln306_2_fu_2135_p2 = (or_ln189_1_reg_2532 & grp_fu_782_p2);

assign and_ln306_fu_2140_p2 = (and_ln306_2_fu_2135_p2 & and_ln306_1_fu_2130_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd88];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state170_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp2_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp2_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state174_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state175_pp2_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state176_pp2_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state177_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state178_pp2_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state179_pp2_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state180_pp2_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state182_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state183_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state184_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state185_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state186_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state187_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state188_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state189_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state190_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state191_pp3_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state192_pp3_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state193_pp3_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state194_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state195_pp3_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state196_pp3_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state197_pp3_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state198_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state199_pp3_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state200_pp3_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state201_pp3_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign bitcast_ln155_3_fu_2001_p1 = tmp_M_imag_3_reg_486;

assign bitcast_ln155_5_fu_2016_p1 = s_tmp_M_imag_reg_508;

assign bitcast_ln155_fu_2046_p1 = s_tmp_M_imag_2_reg_530;

assign bitcast_ln201_1_fu_1903_p1 = largest_8_reg_2560;

assign bitcast_ln201_fu_2089_p1 = largest_1_reg_2669;

assign bitcast_ln444_1_fu_2041_p1 = xor_ln444_fu_2035_p2;

assign bitcast_ln444_fu_2031_p1 = tmp_M_real_2_reg_497;

assign c_2_fu_1151_p2 = (c_0_i_reg_410 + 3'd1);

assign c_fu_1184_p2 = (c12_0_i_reg_421 + 3'd1);

assign c_tmp_M_real_fu_1997_p1 = p_Result_25_fu_1989_p3;

assign d1_3_fu_1871_p3 = ((and_ln184_7_reg_2552[0:0] === 1'b1) ? d1_4_reg_2427 : d1_fu_1866_p3);

assign d1_4_fu_1404_p1 = p_Result_26_fu_1396_p3;

assign d1_fu_1866_p3 = ((and_ln179_1_reg_2538[0:0] === 1'b1) ? d2_5_reg_2439 : d1_4_reg_2427);

assign d2_4_fu_1883_p3 = ((and_ln184_7_reg_2552[0:0] === 1'b1) ? largest_9_reg_2452 : d2_fu_1878_p3);

assign d2_5_fu_1433_p1 = p_Result_27_fu_1425_p3;

assign d2_fu_1878_p3 = ((and_ln179_1_reg_2538[0:0] === 1'b1) ? largest_9_reg_2452 : d2_5_reg_2439);

assign d3_1_fu_2083_p3 = ((and_ln189_reg_2663[0:0] === 1'b1) ? d3_reg_2518 : largest_10_reg_2510);

assign d3_4_fu_1861_p3 = ((and_ln189_2_reg_2546[0:0] === 1'b1) ? d3_7_reg_2466 : largest_9_reg_2452);

assign d3_5_fu_1890_p3 = ((and_ln179_1_reg_2538[0:0] === 1'b1) ? d3_7_reg_2466 : d3_4_fu_1861_p3);

assign d3_6_fu_1896_p3 = ((and_ln184_7_reg_2552[0:0] === 1'b1) ? d3_7_reg_2466 : d3_5_fu_1890_p3);

assign d3_7_fu_1491_p1 = p_Result_29_fu_1483_p3;

assign d3_fu_1656_p1 = p_Result_31_fu_1648_p3;

assign grp_fu_802_p1 = p_Result_26_fu_1396_p3;

assign grp_fu_823_p2 = ($signed(grp_fu_823_p0) + $signed(2'd3));

assign icmp_ln179_1_fu_1524_p2 = ((trunc_ln189_2_fu_1392_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_2_fu_1536_p2 = ((tmp_14_fu_1508_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln179_3_fu_1542_p2 = ((trunc_ln189_3_fu_1421_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_4_fu_1564_p2 = ((tmp_18_fu_1554_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln179_5_fu_1570_p2 = ((trunc_ln189_4_fu_1450_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_6_fu_1592_p2 = ((tmp_20_fu_1582_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln179_7_fu_1598_p2 = ((trunc_ln189_5_fu_1479_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_1518_p2 = ((tmp_13_fu_1498_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln189_1_fu_1677_p2 = ((trunc_ln189_fu_1618_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln189_2_fu_1699_p2 = ((tmp_4_fu_1689_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln189_3_fu_1705_p2 = ((trunc_ln189_1_fu_1644_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_1671_p2 = ((tmp_1_fu_1661_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln201_1_fu_2112_p2 = ((trunc_ln201_fu_2102_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln201_2_fu_1920_p2 = ((tmp_29_fu_1906_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln201_3_fu_1926_p2 = ((trunc_ln201_1_fu_1916_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_2106_p2 = ((tmp_11_fu_2092_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln459_1_fu_1061_p2 = ((phi_ln459_reg_352 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln459_fu_1055_p2 = ((phi_ln459_1_reg_364 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln460_1_fu_1099_p2 = ((phi_ln460_reg_375 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln460_fu_1093_p2 = ((phi_ln460_1_reg_387 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln471_fu_1105_p2 = ((r_0_i_reg_398 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln472_fu_1145_p2 = ((c_0_i_reg_410 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln474_fu_1157_p2 = ((r_0_i_reg_398 == c_0_i_reg_410) ? 1'b1 : 1'b0);

assign icmp_ln480_fu_1178_p2 = ((c12_0_i_reg_421 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln486_fu_1215_p2 = ((indvar_flatten_reg_432 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln490_1_fu_1248_p2 = ((add_ln513_1_fu_1242_p2 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln490_fu_1205_p2 = ((j_0_i_reg_443 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln498_fu_1227_p2 = ((i_0_i_reg_454 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln499_fu_1330_p2 = (($signed(zext_ln498_fu_1326_p1) > $signed(select_ln486_2_fu_1282_p3)) ? 1'b1 : 1'b0);

assign icmp_ln511_fu_2146_p2 = ((ap_phi_mux_k_0_i_phi_fu_649_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln513_fu_2158_p2 = ((ap_phi_mux_k_0_i_phi_fu_649_p4 < select_ln486_4_reg_2369) ? 1'b1 : 1'b0);

assign icmp_ln519_fu_2202_p2 = ((ap_phi_mux_k13_0_i_phi_fu_660_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln521_fu_2218_p2 = (($signed(zext_ln519_fu_2214_p1) < $signed(add_ln521_1_reg_2743)) ? 1'b1 : 1'b0);

assign k_1_fu_2208_p2 = (ap_phi_mux_k13_0_i_phi_fu_660_p4 + 3'd1);

assign k_fu_2152_p2 = (ap_phi_mux_k_0_i_phi_fu_649_p4 + 3'd1);

assign largest_10_fu_1630_p1 = p_Result_30_fu_1622_p3;

assign largest_1_fu_2077_p3 = ((and_ln189_reg_2663[0:0] === 1'b1) ? largest_10_reg_2510 : d3_reg_2518);

assign largest_6_fu_1843_p3 = ((and_ln189_2_reg_2546[0:0] === 1'b1) ? largest_9_reg_2452 : d3_7_reg_2466);

assign largest_7_fu_1848_p3 = ((and_ln179_1_reg_2538[0:0] === 1'b1) ? d1_4_reg_2427 : largest_6_fu_1843_p3);

assign largest_8_fu_1854_p3 = ((and_ln184_7_reg_2552[0:0] === 1'b1) ? d2_5_reg_2439 : largest_7_fu_1848_p3);

assign largest_9_fu_1462_p1 = p_Result_28_fu_1454_p3;

assign or_ln179_1_fu_1548_p2 = (icmp_ln179_3_fu_1542_p2 | icmp_ln179_2_fu_1536_p2);

assign or_ln179_2_fu_1576_p2 = (icmp_ln179_5_fu_1570_p2 | icmp_ln179_4_fu_1564_p2);

assign or_ln179_3_fu_1604_p2 = (icmp_ln179_7_fu_1598_p2 | icmp_ln179_6_fu_1592_p2);

assign or_ln179_fu_1530_p2 = (icmp_ln179_fu_1518_p2 | icmp_ln179_1_fu_1524_p2);

assign or_ln189_1_fu_1711_p2 = (icmp_ln189_3_fu_1705_p2 | icmp_ln189_2_fu_1699_p2);

assign or_ln189_fu_1683_p2 = (icmp_ln189_fu_1671_p2 | icmp_ln189_1_fu_1677_p2);

assign or_ln201_1_fu_1932_p2 = (icmp_ln201_3_fu_1926_p2 | icmp_ln201_2_fu_1920_p2);

assign or_ln201_fu_2118_p2 = (icmp_ln201_fu_2106_p2 | icmp_ln201_1_fu_2112_p2);

assign p_Result_25_fu_1989_p3 = {{p_Result_s_fu_1982_p3}, {31'd1065353216}};

assign p_Result_26_fu_1396_p3 = {{1'd0}, {trunc_ln368_2_fu_1388_p1}};

assign p_Result_27_fu_1425_p3 = {{1'd0}, {trunc_ln368_3_fu_1417_p1}};

assign p_Result_28_fu_1454_p3 = {{1'd0}, {trunc_ln368_4_fu_1446_p1}};

assign p_Result_29_fu_1483_p3 = {{1'd0}, {trunc_ln368_5_fu_1475_p1}};

assign p_Result_30_fu_1622_p3 = {{1'd0}, {trunc_ln368_fu_1614_p1}};

assign p_Result_31_fu_1648_p3 = {{1'd0}, {trunc_ln368_1_fu_1640_p1}};

assign p_Result_s_fu_1982_p3 = p_Val2_39_reg_2422[32'd31];

assign p_Val2_34_fu_1636_p1 = Ri_M_imag_q1;

assign p_Val2_36_fu_1413_p1 = Ri_M_imag_q0;

assign p_Val2_37_fu_1442_p1 = Ri_M_real_q1;

assign p_Val2_38_fu_1471_p1 = Ri_M_imag_q1;

assign p_Val2_39_fu_1384_p1 = Ri_M_real_q0;

assign p_Val2_s_fu_1610_p1 = Ri_M_real_q1;

assign r_fu_1111_p2 = (r_0_i_reg_398 + 3'd1);

assign select_ln486_1_fu_1254_p3 = ((icmp_ln498_fu_1227_p2[0:0] === 1'b1) ? icmp_ln490_1_fu_1248_p2 : icmp_ln490_fu_1205_p2);

assign select_ln486_2_fu_1282_p3 = ((icmp_ln498_fu_1227_p2[0:0] === 1'b1) ? sub_ln499_fu_1270_p2 : sub_ln499_1_fu_1276_p2);

assign select_ln486_3_fu_1290_p3 = ((icmp_ln498_fu_1227_p2[0:0] === 1'b1) ? add_ln513_1_fu_1242_p2 : j_0_i_reg_443);

assign select_ln486_4_fu_1308_p3 = ((icmp_ln498_fu_1227_p2[0:0] === 1'b1) ? add_ln513_fu_1302_p2 : add_ln513_1_fu_1242_p2);

assign select_ln486_fu_1233_p3 = ((icmp_ln498_fu_1227_p2[0:0] === 1'b1) ? 2'd3 : i_0_i_reg_454);

assign sub_ln499_1_fu_1276_p2 = (j_0_i_reg_443 - zext_ln499_fu_1211_p1);

assign sub_ln499_fu_1270_p2 = (add_ln513_1_fu_1242_p2 - zext_ln499_1_fu_1262_p1);

assign tmp_11_fu_2092_p4 = {{bitcast_ln201_fu_2089_p1[30:23]}};

assign tmp_13_fu_1498_p4 = {{p_Val2_39_fu_1384_p1[30:23]}};

assign tmp_14_fu_1508_p4 = {{p_Val2_36_fu_1413_p1[30:23]}};

assign tmp_18_fu_1554_p4 = {{p_Val2_37_fu_1442_p1[30:23]}};

assign tmp_1_fu_1661_p4 = {{p_Val2_s_fu_1610_p1[30:23]}};

assign tmp_20_fu_1582_p4 = {{p_Val2_38_fu_1471_p1[30:23]}};

assign tmp_29_fu_1906_p4 = {{bitcast_ln201_1_fu_1903_p1[30:23]}};

assign tmp_3_fu_1035_p3 = {{phi_ln459_reg_352}, {phi_ln459_1_reg_364}};

assign tmp_4_fu_1689_p4 = {{p_Val2_34_fu_1636_p1[30:23]}};

assign tmp_5_fu_1121_p3 = {{r_0_i_reg_398}, {2'd0}};

assign tmp_7_fu_1336_p3 = {{grp_fu_823_p2}, {2'd0}};

assign tmp_8_fu_1360_p3 = {{select_ln486_fu_1233_p3}, {2'd0}};

assign tmp_9_fu_1073_p3 = {{phi_ln460_reg_375}, {phi_ln460_1_reg_387}};

assign tmp_M_imag_2_fu_2056_p1 = xor_ln155_fu_2050_p2;

assign tmp_M_imag_4_fu_2011_p1 = xor_ln155_1_fu_2005_p2;

assign tmp_M_imag_6_fu_2026_p1 = xor_ln155_2_fu_2020_p2;

assign trunc_ln189_1_fu_1644_p1 = p_Val2_34_fu_1636_p1[22:0];

assign trunc_ln189_2_fu_1392_p1 = p_Val2_39_fu_1384_p1[22:0];

assign trunc_ln189_3_fu_1421_p1 = p_Val2_36_fu_1413_p1[22:0];

assign trunc_ln189_4_fu_1450_p1 = p_Val2_37_fu_1442_p1[22:0];

assign trunc_ln189_5_fu_1479_p1 = p_Val2_38_fu_1471_p1[22:0];

assign trunc_ln189_fu_1618_p1 = p_Val2_s_fu_1610_p1[22:0];

assign trunc_ln201_1_fu_1916_p1 = bitcast_ln201_1_fu_1903_p1[22:0];

assign trunc_ln201_fu_2102_p1 = bitcast_ln201_fu_2089_p1[22:0];

assign trunc_ln368_1_fu_1640_p1 = p_Val2_34_fu_1636_p1[30:0];

assign trunc_ln368_2_fu_1388_p1 = p_Val2_39_fu_1384_p1[30:0];

assign trunc_ln368_3_fu_1417_p1 = p_Val2_36_fu_1413_p1[30:0];

assign trunc_ln368_4_fu_1446_p1 = p_Val2_37_fu_1442_p1[30:0];

assign trunc_ln368_5_fu_1475_p1 = p_Val2_38_fu_1471_p1[30:0];

assign trunc_ln368_fu_1614_p1 = p_Val2_s_fu_1610_p1[30:0];

assign xor_ln155_1_fu_2005_p2 = (bitcast_ln155_3_fu_2001_p1 ^ 32'd2147483648);

assign xor_ln155_2_fu_2020_p2 = (bitcast_ln155_5_fu_2016_p1 ^ 32'd2147483648);

assign xor_ln155_fu_2050_p2 = (bitcast_ln155_fu_2046_p1 ^ 32'd2147483648);

assign xor_ln179_fu_1819_p2 = (1'd1 ^ and_ln179_1_fu_1753_p2);

assign xor_ln444_fu_2035_p2 = (bitcast_ln444_fu_2031_p1 ^ 32'd2147483648);

assign xor_ln486_fu_1320_p2 = (zext_ln486_1_fu_1316_p1 ^ 32'd4294967295);

assign zext_ln1027_1_fu_1081_p1 = tmp_9_fu_1073_p3;

assign zext_ln1027_fu_1043_p1 = tmp_3_fu_1035_p3;

assign zext_ln1067_1_fu_1129_p1 = tmp_5_fu_1121_p3;

assign zext_ln1067_2_fu_1139_p1 = add_ln1067_fu_1133_p2;

assign zext_ln1067_3_fu_1163_p1 = c_0_i_reg_410;

assign zext_ln1067_4_fu_1172_p1 = add_ln1067_1_fu_1167_p2;

assign zext_ln1067_fu_1117_p1 = r_0_i_reg_398;

assign zext_ln114_1_fu_2172_p1 = add_ln114_fu_2167_p2;

assign zext_ln114_2_fu_2183_p1 = add_ln114_2_fu_2178_p2;

assign zext_ln114_3_fu_2223_p1 = ap_phi_mux_k13_0_i_phi_fu_660_p4;

assign zext_ln114_4_fu_2232_p1 = add_ln114_3_fu_2227_p2;

assign zext_ln114_5_fu_2243_p1 = add_ln114_4_fu_2238_p2;

assign zext_ln114_fu_2163_p1 = ap_phi_mux_k_0_i_phi_fu_649_p4;

assign zext_ln482_1_fu_1199_p1 = add_ln482_fu_1194_p2;

assign zext_ln482_fu_1190_p1 = c12_0_i_reg_421;

assign zext_ln486_1_fu_1316_p1 = select_ln486_3_fu_1290_p3;

assign zext_ln486_fu_1266_p1 = select_ln486_1_fu_1254_p3;

assign zext_ln498_fu_1326_p1 = select_ln486_fu_1233_p3;

assign zext_ln499_1_fu_1262_p1 = icmp_ln490_1_fu_1248_p2;

assign zext_ln499_fu_1211_p1 = icmp_ln490_fu_1205_p2;

assign zext_ln503_1_fu_1354_p1 = add_ln503_1_fu_1348_p2;

assign zext_ln503_2_fu_1368_p1 = tmp_8_fu_1360_p3;

assign zext_ln503_3_fu_1378_p1 = add_ln503_2_fu_1372_p2;

assign zext_ln503_fu_1344_p1 = tmp_7_fu_1336_p3;

assign zext_ln513_fu_1298_p1 = select_ln486_3_fu_1290_p3;

assign zext_ln519_fu_2214_p1 = ap_phi_mux_k13_0_i_phi_fu_660_p4;

assign zext_ln521_fu_2193_p1 = add_ln521_fu_2189_p2;

always @ (posedge ap_clk) begin
    zext_ln1067_1_reg_2290[1:0] <= 2'b00;
    zext_ln1067_1_reg_2290[5] <= 1'b0;
    zext_ln482_1_reg_2326[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln486_reg_2359[2:1] <= 2'b00;
    zext_ln498_reg_2379[2] <= 1'b0;
    zext_ln503_reg_2388[1:0] <= 2'b00;
    zext_ln503_reg_2388[4] <= 1'b0;
    zext_ln503_2_reg_2406[1:0] <= 2'b00;
    zext_ln503_2_reg_2406[4] <= 1'b0;
    d1_4_reg_2427[31] <= 1'b0;
    d2_5_reg_2439[31] <= 1'b0;
    largest_9_reg_2452[31] <= 1'b0;
    d3_7_reg_2466[31] <= 1'b0;
    largest_10_reg_2510[31] <= 1'b0;
    d3_reg_2518[31] <= 1'b0;
    largest_8_reg_2560[31] <= 1'b0;
    largest_1_reg_2669[31] <= 1'b0;
end

endmodule //qrf_top_Loop_1_proc3
