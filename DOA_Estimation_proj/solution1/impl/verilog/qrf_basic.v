// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module qrf_basic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_M_real_address0,
        A_M_real_ce0,
        A_M_real_q0,
        A_M_imag_address0,
        A_M_imag_ce0,
        A_M_imag_q0,
        Q_M_real_address0,
        Q_M_real_ce0,
        Q_M_real_we0,
        Q_M_real_d0,
        Q_M_imag_address0,
        Q_M_imag_ce0,
        Q_M_imag_we0,
        Q_M_imag_d0,
        R_M_real_address0,
        R_M_real_ce0,
        R_M_real_we0,
        R_M_real_d0,
        R_M_imag_address0,
        R_M_imag_ce0,
        R_M_imag_we0,
        R_M_imag_d0
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_state9 = 51'd256;
parameter    ap_ST_fsm_state10 = 51'd512;
parameter    ap_ST_fsm_state11 = 51'd1024;
parameter    ap_ST_fsm_state12 = 51'd2048;
parameter    ap_ST_fsm_state13 = 51'd4096;
parameter    ap_ST_fsm_state14 = 51'd8192;
parameter    ap_ST_fsm_state15 = 51'd16384;
parameter    ap_ST_fsm_state16 = 51'd32768;
parameter    ap_ST_fsm_state17 = 51'd65536;
parameter    ap_ST_fsm_state18 = 51'd131072;
parameter    ap_ST_fsm_state19 = 51'd262144;
parameter    ap_ST_fsm_state20 = 51'd524288;
parameter    ap_ST_fsm_state21 = 51'd1048576;
parameter    ap_ST_fsm_state22 = 51'd2097152;
parameter    ap_ST_fsm_state23 = 51'd4194304;
parameter    ap_ST_fsm_state24 = 51'd8388608;
parameter    ap_ST_fsm_state25 = 51'd16777216;
parameter    ap_ST_fsm_state26 = 51'd33554432;
parameter    ap_ST_fsm_state27 = 51'd67108864;
parameter    ap_ST_fsm_state28 = 51'd134217728;
parameter    ap_ST_fsm_state29 = 51'd268435456;
parameter    ap_ST_fsm_state30 = 51'd536870912;
parameter    ap_ST_fsm_state31 = 51'd1073741824;
parameter    ap_ST_fsm_state32 = 51'd2147483648;
parameter    ap_ST_fsm_state33 = 51'd4294967296;
parameter    ap_ST_fsm_state34 = 51'd8589934592;
parameter    ap_ST_fsm_state35 = 51'd17179869184;
parameter    ap_ST_fsm_state36 = 51'd34359738368;
parameter    ap_ST_fsm_state37 = 51'd68719476736;
parameter    ap_ST_fsm_state38 = 51'd137438953472;
parameter    ap_ST_fsm_state39 = 51'd274877906944;
parameter    ap_ST_fsm_state40 = 51'd549755813888;
parameter    ap_ST_fsm_state41 = 51'd1099511627776;
parameter    ap_ST_fsm_state42 = 51'd2199023255552;
parameter    ap_ST_fsm_state43 = 51'd4398046511104;
parameter    ap_ST_fsm_state44 = 51'd8796093022208;
parameter    ap_ST_fsm_state45 = 51'd17592186044416;
parameter    ap_ST_fsm_state46 = 51'd35184372088832;
parameter    ap_ST_fsm_state47 = 51'd70368744177664;
parameter    ap_ST_fsm_state48 = 51'd140737488355328;
parameter    ap_ST_fsm_state49 = 51'd281474976710656;
parameter    ap_ST_fsm_state50 = 51'd562949953421312;
parameter    ap_ST_fsm_state51 = 51'd1125899906842624;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] A_M_real_address0;
output   A_M_real_ce0;
input  [31:0] A_M_real_q0;
output  [3:0] A_M_imag_address0;
output   A_M_imag_ce0;
input  [31:0] A_M_imag_q0;
output  [3:0] Q_M_real_address0;
output   Q_M_real_ce0;
output   Q_M_real_we0;
output  [31:0] Q_M_real_d0;
output  [3:0] Q_M_imag_address0;
output   Q_M_imag_ce0;
output   Q_M_imag_we0;
output  [31:0] Q_M_imag_d0;
output  [3:0] R_M_real_address0;
output   R_M_real_ce0;
output   R_M_real_we0;
output  [31:0] R_M_real_d0;
output  [3:0] R_M_imag_address0;
output   R_M_imag_ce0;
output   R_M_imag_we0;
output  [31:0] R_M_imag_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_M_real_ce0;
reg A_M_imag_ce0;
reg Q_M_real_ce0;
reg Q_M_real_we0;
reg Q_M_imag_ce0;
reg Q_M_imag_we0;
reg R_M_real_ce0;
reg R_M_real_we0;
reg R_M_imag_ce0;
reg R_M_imag_we0;

(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] Ri_M_real_q0;
reg   [31:0] reg_700;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
wire   [31:0] Ri_M_imag_q0;
reg   [31:0] reg_709;
wire   [31:0] Ri_M_real_q1;
reg   [31:0] reg_718;
wire   [31:0] Ri_M_imag_q1;
reg   [31:0] reg_727;
wire   [31:0] grp_fu_597_p2;
reg   [31:0] reg_736;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state35;
wire   [31:0] grp_fu_602_p2;
reg   [31:0] reg_741;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] reg_746;
wire   [31:0] grp_fu_612_p2;
reg   [31:0] reg_751;
wire   [31:0] grp_fu_617_p2;
reg   [31:0] reg_756;
wire   [31:0] grp_fu_622_p2;
reg   [31:0] reg_761;
wire   [31:0] grp_fu_627_p2;
reg   [31:0] reg_766;
wire   [31:0] grp_fu_632_p2;
reg   [31:0] reg_771;
wire   [31:0] grp_fu_637_p2;
reg   [31:0] reg_776;
wire   [31:0] grp_fu_642_p2;
reg   [31:0] reg_781;
wire   [31:0] grp_fu_647_p2;
reg   [31:0] reg_786;
wire   [31:0] grp_fu_652_p2;
reg   [31:0] reg_791;
wire   [31:0] grp_fu_657_p2;
reg   [31:0] reg_796;
wire   [31:0] grp_fu_662_p2;
reg   [31:0] reg_801;
wire   [31:0] grp_fu_667_p2;
reg   [31:0] reg_806;
wire   [31:0] grp_fu_672_p2;
reg   [31:0] reg_811;
wire   [31:0] grp_fu_565_p2;
reg   [31:0] reg_816;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state29;
wire   [31:0] grp_fu_569_p2;
reg   [31:0] reg_822;
wire   [31:0] grp_fu_573_p2;
reg   [31:0] reg_828;
wire   [31:0] grp_fu_577_p2;
reg   [31:0] reg_834;
wire   [31:0] grp_fu_581_p2;
reg   [31:0] reg_840;
wire    ap_CS_fsm_state40;
wire   [31:0] grp_fu_585_p2;
reg   [31:0] reg_845;
wire   [31:0] grp_fu_589_p2;
reg   [31:0] reg_850;
wire   [31:0] grp_fu_593_p2;
reg   [31:0] reg_855;
reg   [31:0] reg_860;
wire    ap_CS_fsm_state45;
reg   [31:0] reg_866;
reg   [31:0] reg_872;
reg   [31:0] reg_878;
wire   [1:0] add_ln459_fu_884_p2;
reg   [1:0] add_ln459_reg_1433;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln459_1_fu_890_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] add_ln460_fu_922_p2;
reg   [1:0] add_ln460_reg_1449;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln460_1_fu_928_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] r_fu_966_p2;
reg   [2:0] r_reg_1468;
wire    ap_CS_fsm_state6;
wire   [5:0] zext_ln1067_fu_984_p1;
reg   [5:0] zext_ln1067_reg_1473;
wire   [0:0] icmp_ln471_fu_960_p2;
reg   [3:0] Qi_M_real_addr_1_reg_1479;
reg   [3:0] Qi_M_imag_addr_1_reg_1484;
wire   [2:0] c_1_fu_1006_p2;
wire    ap_CS_fsm_state7;
wire   [2:0] c_fu_1039_p2;
reg   [2:0] c_reg_1503;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln482_2_fu_1054_p1;
reg   [63:0] zext_ln482_2_reg_1508;
wire   [0:0] icmp_ln480_fu_1033_p2;
wire   [2:0] j_fu_1070_p2;
reg   [2:0] j_reg_1527;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln490_fu_1076_p2;
reg   [0:0] icmp_ln490_reg_1533;
wire   [0:0] icmp_ln486_fu_1064_p2;
wire   [2:0] sub_ln499_fu_1090_p2;
reg   [2:0] sub_ln499_reg_1538;
wire   [4:0] zext_ln521_fu_1096_p1;
reg   [4:0] zext_ln521_reg_1543;
wire   [31:0] add_ln521_fu_1106_p2;
reg   [31:0] add_ln521_reg_1549;
wire   [31:0] zext_ln498_fu_1112_p1;
reg   [31:0] zext_ln498_reg_1554;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln499_fu_1126_p2;
reg   [0:0] icmp_ln499_reg_1562;
wire   [0:0] icmp_ln498_fu_1120_p2;
wire   [4:0] zext_ln503_fu_1139_p1;
reg   [4:0] zext_ln503_reg_1566;
reg   [3:0] Ri_M_real_addr_2_reg_1572;
reg   [3:0] Ri_M_imag_addr_2_reg_1578;
wire   [4:0] zext_ln503_2_fu_1162_p1;
reg   [4:0] zext_ln503_2_reg_1584;
reg   [3:0] Ri_M_real_addr_3_reg_1590;
reg   [3:0] Ri_M_imag_addr_3_reg_1595;
reg   [31:0] p_r_M_imag_4_reg_1600;
wire    ap_CS_fsm_state14;
wire    grp_qrf_givens_float_s_fu_556_ap_ready;
wire    grp_qrf_givens_float_s_fu_556_ap_done;
reg   [31:0] p_r_M_real_4_reg_1606;
reg   [31:0] p_r_M_imag_3_reg_1612;
reg   [31:0] p_r_M_real_3_reg_1618;
reg   [31:0] p_r_M_imag_1_reg_1624;
reg   [31:0] p_r_M_real_1_reg_1630;
reg   [31:0] p_r_M_imag_reg_1636;
reg   [31:0] p_r_M_real_reg_1642;
wire   [2:0] k_fu_1220_p2;
reg   [2:0] k_reg_1651;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln513_fu_1226_p2;
reg   [0:0] icmp_ln513_reg_1656;
wire   [0:0] icmp_ln511_fu_1214_p2;
reg   [3:0] Ri_M_real_addr_5_reg_1660;
reg   [3:0] Ri_M_real_addr_6_reg_1665;
reg   [3:0] Ri_M_imag_addr_5_reg_1670;
reg   [3:0] Ri_M_imag_addr_6_reg_1675;
wire   [31:0] add_ln521_1_fu_1257_p2;
reg   [31:0] add_ln521_1_reg_1680;
wire   [2:0] k_1_fu_1271_p2;
reg   [2:0] k_1_reg_1688;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln521_fu_1277_p2;
reg   [0:0] icmp_ln521_reg_1693;
wire   [0:0] icmp_ln519_fu_1265_p2;
reg   [3:0] Qi_M_real_addr_4_reg_1697;
reg   [3:0] Qi_M_real_addr_5_reg_1703;
reg   [3:0] Qi_M_imag_addr_4_reg_1709;
reg   [3:0] Qi_M_imag_addr_5_reg_1715;
wire   [1:0] grp_fu_693_p2;
wire   [31:0] Qi_M_real_q0;
wire    ap_CS_fsm_state32;
wire   [31:0] Qi_M_imag_q0;
wire   [31:0] Qi_M_real_q1;
wire   [31:0] Qi_M_imag_q1;
wire   [2:0] r_1_fu_1314_p2;
reg   [2:0] r_1_reg_1761;
wire    ap_CS_fsm_state47;
wire   [5:0] zext_ln545_fu_1320_p1;
reg   [5:0] zext_ln545_reg_1766;
wire   [0:0] icmp_ln532_fu_1308_p2;
wire   [5:0] zext_ln533_fu_1332_p1;
reg   [5:0] zext_ln533_reg_1771;
wire   [2:0] c_2_fu_1342_p2;
reg   [2:0] c_2_reg_1780;
wire    ap_CS_fsm_state48;
wire   [5:0] add_ln538_fu_1364_p2;
reg   [5:0] add_ln538_reg_1785;
wire   [0:0] icmp_ln533_fu_1336_p2;
wire   [2:0] c_3_fu_1406_p2;
reg   [2:0] c_3_reg_1803;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln543_fu_1412_p2;
reg   [0:0] icmp_ln543_reg_1808;
wire   [0:0] icmp_ln541_fu_1400_p2;
wire   [63:0] zext_ln545_2_fu_1427_p1;
reg   [63:0] zext_ln545_2_reg_1812;
reg   [3:0] Qi_M_real_address0;
reg    Qi_M_real_ce0;
reg    Qi_M_real_we0;
reg   [31:0] Qi_M_real_d0;
reg   [3:0] Qi_M_real_address1;
reg    Qi_M_real_ce1;
reg    Qi_M_real_we1;
reg   [3:0] Qi_M_imag_address0;
reg    Qi_M_imag_ce0;
reg    Qi_M_imag_we0;
reg   [31:0] Qi_M_imag_d0;
reg   [3:0] Qi_M_imag_address1;
reg    Qi_M_imag_ce1;
reg    Qi_M_imag_we1;
reg   [3:0] Ri_M_real_address0;
reg    Ri_M_real_ce0;
reg    Ri_M_real_we0;
reg   [31:0] Ri_M_real_d0;
reg   [3:0] Ri_M_real_address1;
reg    Ri_M_real_ce1;
reg    Ri_M_real_we1;
reg   [31:0] Ri_M_real_d1;
reg   [3:0] Ri_M_imag_address0;
reg    Ri_M_imag_ce0;
reg    Ri_M_imag_we0;
reg   [31:0] Ri_M_imag_d0;
reg   [3:0] Ri_M_imag_address1;
reg    Ri_M_imag_ce1;
reg    Ri_M_imag_we1;
reg   [31:0] Ri_M_imag_d1;
wire    grp_qrf_givens_float_s_fu_556_ap_start;
wire    grp_qrf_givens_float_s_fu_556_ap_idle;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_0;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_1;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_2;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_3;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_4;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_5;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_6;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_7;
wire   [31:0] grp_qrf_givens_float_s_fu_556_ap_return_8;
reg   [1:0] phi_ln459_reg_397;
wire   [0:0] icmp_ln459_fu_910_p2;
wire   [0:0] icmp_ln459_1_fu_916_p2;
reg   [1:0] phi_ln459_1_reg_409;
reg   [1:0] phi_ln460_reg_420;
wire   [0:0] icmp_ln460_fu_948_p2;
wire   [0:0] icmp_ln460_1_fu_954_p2;
reg   [1:0] phi_ln460_1_reg_432;
reg   [2:0] r_0_reg_443;
reg   [2:0] c_0_reg_455;
wire   [0:0] icmp_ln472_fu_1000_p2;
reg   [2:0] c12_0_reg_466;
wire    ap_CS_fsm_state9;
reg   [2:0] j_0_reg_477;
wire   [1:0] ap_phi_mux_i_0_phi_fu_492_p4;
reg   [1:0] i_0_reg_488;
reg   [2:0] k_0_reg_500;
wire    ap_CS_fsm_state30;
reg   [2:0] k13_0_reg_511;
wire    ap_CS_fsm_state46;
reg   [2:0] r14_0_reg_522;
reg   [2:0] c15_0_reg_534;
wire    ap_CS_fsm_state49;
reg   [2:0] c16_0_reg_545;
wire    ap_CS_fsm_state51;
reg    grp_qrf_givens_float_s_fu_556_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln1027_fu_904_p1;
wire   [63:0] zext_ln1027_1_fu_942_p1;
wire   [63:0] zext_ln1067_1_fu_994_p1;
wire   [63:0] zext_ln1067_3_fu_1027_p1;
wire   [0:0] icmp_ln474_fu_1012_p2;
wire   [63:0] zext_ln503_1_fu_1148_p1;
wire   [63:0] zext_ln503_3_fu_1171_p1;
wire   [63:0] zext_ln516_1_fu_1240_p1;
wire   [63:0] zext_ln516_2_fu_1251_p1;
wire   [63:0] zext_ln524_1_fu_1291_p1;
wire   [63:0] zext_ln524_2_fu_1302_p1;
wire   [63:0] zext_ln538_3_fu_1374_p1;
wire   [63:0] zext_ln538_2_fu_1380_p1;
reg   [31:0] grp_fu_565_p0;
reg   [31:0] grp_fu_565_p1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state41;
reg   [31:0] grp_fu_569_p0;
reg   [31:0] grp_fu_569_p1;
reg   [31:0] grp_fu_573_p0;
reg   [31:0] grp_fu_573_p1;
reg   [31:0] grp_fu_577_p0;
reg   [31:0] grp_fu_577_p1;
reg   [31:0] grp_fu_597_p1;
reg   [31:0] grp_fu_602_p1;
reg   [31:0] grp_fu_607_p1;
reg   [31:0] grp_fu_612_p1;
reg   [31:0] grp_fu_617_p1;
reg   [31:0] grp_fu_622_p1;
reg   [31:0] grp_fu_627_p1;
reg   [31:0] grp_fu_632_p1;
reg   [31:0] grp_fu_637_p1;
reg   [31:0] grp_fu_642_p1;
reg   [31:0] grp_fu_647_p1;
reg   [31:0] grp_fu_652_p1;
reg   [31:0] grp_fu_657_p1;
reg   [31:0] grp_fu_662_p1;
reg   [31:0] grp_fu_667_p1;
reg   [31:0] grp_fu_672_p1;
reg   [1:0] grp_fu_693_p0;
wire   [3:0] tmp_5_fu_896_p3;
wire   [3:0] tmp_12_fu_934_p3;
wire   [4:0] tmp_7_fu_976_p3;
wire   [5:0] zext_ln482_fu_972_p1;
wire   [5:0] add_ln1067_fu_988_p2;
wire   [5:0] zext_ln1067_2_fu_1018_p1;
wire   [5:0] add_ln1067_1_fu_1022_p2;
wire   [5:0] zext_ln482_1_fu_1045_p1;
wire   [5:0] add_ln482_fu_1049_p2;
wire   [2:0] zext_ln499_fu_1086_p1;
wire   [31:0] zext_ln486_fu_1060_p1;
wire   [31:0] zext_ln490_fu_1082_p1;
wire   [31:0] xor_ln521_fu_1100_p2;
wire   [2:0] zext_ln498_2_fu_1116_p1;
wire   [3:0] tmp_9_fu_1131_p3;
wire   [4:0] add_ln503_1_fu_1143_p2;
wire   [3:0] tmp_10_fu_1154_p3;
wire   [4:0] add_ln503_2_fu_1166_p2;
wire   [4:0] zext_ln516_fu_1231_p1;
wire   [4:0] add_ln516_fu_1235_p2;
wire   [4:0] add_ln516_1_fu_1246_p2;
wire   [31:0] zext_ln519_fu_1261_p1;
wire   [4:0] zext_ln524_fu_1282_p1;
wire   [4:0] add_ln524_fu_1286_p2;
wire   [4:0] add_ln524_1_fu_1297_p2;
wire   [4:0] tmp_8_fu_1324_p3;
wire   [4:0] tmp_11_fu_1352_p3;
wire   [5:0] zext_ln538_1_fu_1360_p1;
wire   [5:0] zext_ln538_fu_1348_p1;
wire   [5:0] add_ln538_1_fu_1369_p2;
wire   [31:0] bitcast_ln155_fu_1385_p1;
wire   [31:0] xor_ln155_fu_1389_p2;
wire   [5:0] zext_ln545_1_fu_1418_p1;
wire   [5:0] add_ln545_fu_1422_p2;
reg   [1:0] grp_fu_565_opcode;
reg   [1:0] grp_fu_573_opcode;
reg   [50:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
#0 grp_qrf_givens_float_s_fu_556_ap_start_reg = 1'b0;
end

qrf_basic_Qi_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Qi_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Qi_M_real_address0),
    .ce0(Qi_M_real_ce0),
    .we0(Qi_M_real_we0),
    .d0(Qi_M_real_d0),
    .q0(Qi_M_real_q0),
    .address1(Qi_M_real_address1),
    .ce1(Qi_M_real_ce1),
    .we1(Qi_M_real_we1),
    .d1(reg_860),
    .q1(Qi_M_real_q1)
);

qrf_basic_Qi_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Qi_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Qi_M_imag_address0),
    .ce0(Qi_M_imag_ce0),
    .we0(Qi_M_imag_we0),
    .d0(Qi_M_imag_d0),
    .q0(Qi_M_imag_q0),
    .address1(Qi_M_imag_address1),
    .ce1(Qi_M_imag_ce1),
    .we1(Qi_M_imag_we1),
    .d1(reg_866),
    .q1(Qi_M_imag_q1)
);

qrf_basic_Qi_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Ri_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ri_M_real_address0),
    .ce0(Ri_M_real_ce0),
    .we0(Ri_M_real_we0),
    .d0(Ri_M_real_d0),
    .q0(Ri_M_real_q0),
    .address1(Ri_M_real_address1),
    .ce1(Ri_M_real_ce1),
    .we1(Ri_M_real_we1),
    .d1(Ri_M_real_d1),
    .q1(Ri_M_real_q1)
);

qrf_basic_Qi_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Ri_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ri_M_imag_address0),
    .ce0(Ri_M_imag_ce0),
    .we0(Ri_M_imag_we0),
    .d0(Ri_M_imag_d0),
    .q0(Ri_M_imag_q0),
    .address1(Ri_M_imag_address1),
    .ce1(Ri_M_imag_ce1),
    .we1(Ri_M_imag_we1),
    .d1(Ri_M_imag_d1),
    .q1(Ri_M_imag_q1)
);

qrf_givens_float_s grp_qrf_givens_float_s_fu_556(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_qrf_givens_float_s_fu_556_ap_start),
    .ap_done(grp_qrf_givens_float_s_fu_556_ap_done),
    .ap_idle(grp_qrf_givens_float_s_fu_556_ap_idle),
    .ap_ready(grp_qrf_givens_float_s_fu_556_ap_ready),
    .extra_pass(icmp_ln490_reg_1533),
    .a_M_real(reg_700),
    .a_M_imag(reg_709),
    .b_M_real(reg_718),
    .b_M_imag(reg_727),
    .ap_return_0(grp_qrf_givens_float_s_fu_556_ap_return_0),
    .ap_return_1(grp_qrf_givens_float_s_fu_556_ap_return_1),
    .ap_return_2(grp_qrf_givens_float_s_fu_556_ap_return_2),
    .ap_return_3(grp_qrf_givens_float_s_fu_556_ap_return_3),
    .ap_return_4(grp_qrf_givens_float_s_fu_556_ap_return_4),
    .ap_return_5(grp_qrf_givens_float_s_fu_556_ap_return_5),
    .ap_return_6(grp_qrf_givens_float_s_fu_556_ap_return_6),
    .ap_return_7(grp_qrf_givens_float_s_fu_556_ap_return_7),
    .ap_return_8(grp_qrf_givens_float_s_fu_556_ap_return_8)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(grp_fu_565_p1),
    .opcode(grp_fu_565_opcode),
    .ce(1'b1),
    .dout(grp_fu_565_p2)
);

music_fadd_32ns_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3ocq_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_569_p0),
    .din1(grp_fu_569_p1),
    .ce(1'b1),
    .dout(grp_fu_569_p2)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_573_p0),
    .din1(grp_fu_573_p1),
    .opcode(grp_fu_573_opcode),
    .ce(1'b1),
    .dout(grp_fu_573_p2)
);

music_fadd_32ns_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3ocq_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_577_p0),
    .din1(grp_fu_577_p1),
    .ce(1'b1),
    .dout(grp_fu_577_p2)
);

music_fsub_32ns_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3rcU_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_776),
    .din1(reg_781),
    .ce(1'b1),
    .dout(grp_fu_581_p2)
);

music_fadd_32ns_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3ocq_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_786),
    .din1(reg_791),
    .ce(1'b1),
    .dout(grp_fu_585_p2)
);

music_fsub_32ns_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3rcU_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_796),
    .din1(reg_801),
    .ce(1'b1),
    .dout(grp_fu_589_p2)
);

music_fadd_32ns_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3ocq_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_806),
    .din1(reg_811),
    .ce(1'b1),
    .dout(grp_fu_593_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_reg_1642),
    .din1(grp_fu_597_p1),
    .ce(1'b1),
    .dout(grp_fu_597_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_reg_1636),
    .din1(grp_fu_602_p1),
    .ce(1'b1),
    .dout(grp_fu_602_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_reg_1636),
    .din1(grp_fu_607_p1),
    .ce(1'b1),
    .dout(grp_fu_607_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_reg_1642),
    .din1(grp_fu_612_p1),
    .ce(1'b1),
    .dout(grp_fu_612_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_1_reg_1630),
    .din1(grp_fu_617_p1),
    .ce(1'b1),
    .dout(grp_fu_617_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_1_reg_1624),
    .din1(grp_fu_622_p1),
    .ce(1'b1),
    .dout(grp_fu_622_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_1_reg_1624),
    .din1(grp_fu_627_p1),
    .ce(1'b1),
    .dout(grp_fu_627_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_1_reg_1630),
    .din1(grp_fu_632_p1),
    .ce(1'b1),
    .dout(grp_fu_632_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_3_reg_1618),
    .din1(grp_fu_637_p1),
    .ce(1'b1),
    .dout(grp_fu_637_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_3_reg_1612),
    .din1(grp_fu_642_p1),
    .ce(1'b1),
    .dout(grp_fu_642_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_3_reg_1612),
    .din1(grp_fu_647_p1),
    .ce(1'b1),
    .dout(grp_fu_647_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_3_reg_1618),
    .din1(grp_fu_652_p1),
    .ce(1'b1),
    .dout(grp_fu_652_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_4_reg_1606),
    .din1(grp_fu_657_p1),
    .ce(1'b1),
    .dout(grp_fu_657_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_4_reg_1600),
    .din1(grp_fu_662_p1),
    .ce(1'b1),
    .dout(grp_fu_662_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_imag_4_reg_1600),
    .din1(grp_fu_667_p1),
    .ce(1'b1),
    .dout(grp_fu_667_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_r_M_real_4_reg_1606),
    .din1(grp_fu_672_p1),
    .ce(1'b1),
    .dout(grp_fu_672_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_qrf_givens_float_s_fu_556_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_qrf_givens_float_s_fu_556_ap_start_reg <= 1'b1;
        end else if ((grp_qrf_givens_float_s_fu_556_ap_ready == 1'b1)) begin
            grp_qrf_givens_float_s_fu_556_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln472_fu_1000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        c12_0_reg_466 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        c12_0_reg_466 <= c_reg_1503;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        c15_0_reg_534 <= c_2_reg_1780;
    end else if (((icmp_ln532_fu_1308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        c15_0_reg_534 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln533_fu_1336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        c16_0_reg_545 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        c16_0_reg_545 <= c_3_reg_1803;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        c_0_reg_455 <= c_1_fu_1006_p2;
    end else if (((icmp_ln471_fu_960_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        c_0_reg_455 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & ((icmp_ln519_fu_1265_p2 == 1'd1) | (icmp_ln499_reg_1562 == 1'd0)))) begin
        i_0_reg_488 <= grp_fu_693_p2;
    end else if (((icmp_ln486_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_reg_488 <= 2'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln471_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        j_0_reg_477 <= 3'd0;
    end else if (((icmp_ln498_fu_1120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        j_0_reg_477 <= j_reg_1527;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln511_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        k13_0_reg_511 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        k13_0_reg_511 <= k_1_reg_1688;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_0_reg_500 <= k_reg_1651;
    end else if (((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        k_0_reg_500 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln459_fu_910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln459_1_reg_409 <= add_ln459_1_fu_890_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln459_1_reg_409 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln459_fu_910_p2 == 1'd1) & (icmp_ln459_1_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln459_reg_397 <= add_ln459_reg_1433;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln459_reg_397 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln460_fu_948_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln460_1_reg_432 <= add_ln460_1_fu_928_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln460_1_reg_432 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln459_1_fu_916_p2 == 1'd1) & (icmp_ln459_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln460_reg_420 <= 2'd0;
    end else if (((icmp_ln460_fu_948_p2 == 1'd1) & (icmp_ln460_1_fu_954_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln460_reg_420 <= add_ln460_reg_1449;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln486_fu_1064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        r14_0_reg_522 <= 3'd0;
    end else if (((icmp_ln541_fu_1400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        r14_0_reg_522 <= r_1_reg_1761;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln460_1_fu_954_p2 == 1'd1) & (icmp_ln460_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        r_0_reg_443 <= 3'd0;
    end else if (((icmp_ln480_fu_1033_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        r_0_reg_443 <= r_reg_1468;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln471_fu_960_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        Qi_M_imag_addr_1_reg_1484 <= zext_ln1067_1_fu_994_p1;
        Qi_M_real_addr_1_reg_1479 <= zext_ln1067_1_fu_994_p1;
        zext_ln1067_reg_1473[4 : 2] <= zext_ln1067_fu_984_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln499_reg_1562 == 1'd1) & (icmp_ln519_fu_1265_p2 == 1'd0) & (icmp_ln521_fu_1277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        Qi_M_imag_addr_4_reg_1709 <= zext_ln524_1_fu_1291_p1;
        Qi_M_imag_addr_5_reg_1715 <= zext_ln524_2_fu_1302_p1;
        Qi_M_real_addr_4_reg_1697 <= zext_ln524_1_fu_1291_p1;
        Qi_M_real_addr_5_reg_1703 <= zext_ln524_2_fu_1302_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln499_fu_1126_p2 == 1'd1) & (icmp_ln498_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        Ri_M_imag_addr_2_reg_1578 <= zext_ln503_1_fu_1148_p1;
        Ri_M_imag_addr_3_reg_1595 <= zext_ln503_3_fu_1171_p1;
        Ri_M_real_addr_2_reg_1572 <= zext_ln503_1_fu_1148_p1;
        Ri_M_real_addr_3_reg_1590 <= zext_ln503_3_fu_1171_p1;
        zext_ln503_2_reg_1584[3 : 2] <= zext_ln503_2_fu_1162_p1[3 : 2];
        zext_ln503_reg_1566[3 : 2] <= zext_ln503_fu_1139_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln511_fu_1214_p2 == 1'd0) & (icmp_ln513_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        Ri_M_imag_addr_5_reg_1670 <= zext_ln516_1_fu_1240_p1;
        Ri_M_imag_addr_6_reg_1675 <= zext_ln516_2_fu_1251_p1;
        Ri_M_real_addr_5_reg_1660 <= zext_ln516_1_fu_1240_p1;
        Ri_M_real_addr_6_reg_1665 <= zext_ln516_2_fu_1251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln459_reg_1433 <= add_ln459_fu_884_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln460_reg_1449 <= add_ln460_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln511_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln521_1_reg_1680 <= add_ln521_1_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln486_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln521_reg_1549 <= add_ln521_fu_1106_p2;
        icmp_ln490_reg_1533 <= icmp_ln490_fu_1076_p2;
        sub_ln499_reg_1538 <= sub_ln499_fu_1090_p2;
        zext_ln521_reg_1543[2 : 0] <= zext_ln521_fu_1096_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln533_fu_1336_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        add_ln538_reg_1785 <= add_ln538_fu_1364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        c_2_reg_1780 <= c_2_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        c_3_reg_1803 <= c_3_fu_1406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c_reg_1503 <= c_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln498_fu_1120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        icmp_ln499_reg_1562 <= icmp_ln499_fu_1126_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln511_fu_1214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        icmp_ln513_reg_1656 <= icmp_ln513_fu_1226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln499_reg_1562 == 1'd1) & (icmp_ln519_fu_1265_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        icmp_ln521_reg_1693 <= icmp_ln521_fu_1277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln541_fu_1400_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        icmp_ln543_reg_1808 <= icmp_ln543_fu_1412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_1527 <= j_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln499_reg_1562 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        k_1_reg_1688 <= k_1_fu_1271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_reg_1651 <= k_fu_1220_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        p_r_M_imag_1_reg_1624 <= grp_qrf_givens_float_s_fu_556_ap_return_3;
        p_r_M_imag_3_reg_1612 <= grp_qrf_givens_float_s_fu_556_ap_return_5;
        p_r_M_imag_4_reg_1600 <= grp_qrf_givens_float_s_fu_556_ap_return_7;
        p_r_M_imag_reg_1636 <= grp_qrf_givens_float_s_fu_556_ap_return_1;
        p_r_M_real_1_reg_1630 <= grp_qrf_givens_float_s_fu_556_ap_return_2;
        p_r_M_real_3_reg_1618 <= grp_qrf_givens_float_s_fu_556_ap_return_4;
        p_r_M_real_4_reg_1606 <= grp_qrf_givens_float_s_fu_556_ap_return_6;
        p_r_M_real_reg_1642 <= grp_qrf_givens_float_s_fu_556_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        r_1_reg_1761 <= r_1_fu_1314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        r_reg_1468 <= r_fu_966_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_700 <= Ri_M_real_q0;
        reg_709 <= Ri_M_imag_q0;
        reg_718 <= Ri_M_real_q1;
        reg_727 <= Ri_M_imag_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_736 <= grp_fu_597_p2;
        reg_741 <= grp_fu_602_p2;
        reg_746 <= grp_fu_607_p2;
        reg_751 <= grp_fu_612_p2;
        reg_756 <= grp_fu_617_p2;
        reg_761 <= grp_fu_622_p2;
        reg_766 <= grp_fu_627_p2;
        reg_771 <= grp_fu_632_p2;
        reg_776 <= grp_fu_637_p2;
        reg_781 <= grp_fu_642_p2;
        reg_786 <= grp_fu_647_p2;
        reg_791 <= grp_fu_652_p2;
        reg_796 <= grp_fu_657_p2;
        reg_801 <= grp_fu_662_p2;
        reg_806 <= grp_fu_667_p2;
        reg_811 <= grp_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_816 <= grp_fu_565_p2;
        reg_822 <= grp_fu_569_p2;
        reg_828 <= grp_fu_573_p2;
        reg_834 <= grp_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_840 <= grp_fu_581_p2;
        reg_845 <= grp_fu_585_p2;
        reg_850 <= grp_fu_589_p2;
        reg_855 <= grp_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40))) begin
        reg_860 <= grp_fu_565_p2;
        reg_866 <= grp_fu_569_p2;
        reg_872 <= grp_fu_573_p2;
        reg_878 <= grp_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln480_fu_1033_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        zext_ln482_2_reg_1508[5 : 0] <= zext_ln482_2_fu_1054_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        zext_ln498_reg_1554[1 : 0] <= zext_ln498_fu_1112_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln532_fu_1308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        zext_ln533_reg_1771[4 : 2] <= zext_ln533_fu_1332_p1[4 : 2];
        zext_ln545_reg_1766[2 : 0] <= zext_ln545_fu_1320_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln541_fu_1400_p2 == 1'd0) & (icmp_ln543_fu_1412_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        zext_ln545_2_reg_1812[5 : 0] <= zext_ln545_2_fu_1427_p1[5 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_M_imag_ce0 = 1'b1;
    end else begin
        A_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_M_real_ce0 = 1'b1;
    end else begin
        A_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        Q_M_imag_ce0 = 1'b1;
    end else begin
        Q_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        Q_M_imag_we0 = 1'b1;
    end else begin
        Q_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        Q_M_real_ce0 = 1'b1;
    end else begin
        Q_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        Q_M_real_we0 = 1'b1;
    end else begin
        Q_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        Qi_M_imag_address0 = Qi_M_imag_addr_5_reg_1715;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Qi_M_imag_address0 = zext_ln524_1_fu_1291_p1;
    end else if (((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_imag_address0 = Qi_M_imag_addr_1_reg_1484;
    end else if (((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_imag_address0 = zext_ln1067_3_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Qi_M_imag_address0 = zext_ln1027_fu_904_p1;
    end else begin
        Qi_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        Qi_M_imag_address1 = zext_ln538_3_fu_1374_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        Qi_M_imag_address1 = Qi_M_imag_addr_4_reg_1709;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Qi_M_imag_address1 = zext_ln524_2_fu_1302_p1;
    end else begin
        Qi_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_imag_ce0 = 1'b1;
    end else begin
        Qi_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state31))) begin
        Qi_M_imag_ce1 = 1'b1;
    end else begin
        Qi_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        Qi_M_imag_d0 = reg_878;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_imag_d0 = 32'd0;
    end else begin
        Qi_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln521_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_imag_we0 = 1'b1;
    end else begin
        Qi_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln521_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        Qi_M_imag_we1 = 1'b1;
    end else begin
        Qi_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        Qi_M_real_address0 = Qi_M_real_addr_5_reg_1703;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Qi_M_real_address0 = zext_ln524_1_fu_1291_p1;
    end else if (((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_real_address0 = Qi_M_real_addr_1_reg_1479;
    end else if (((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_real_address0 = zext_ln1067_3_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Qi_M_real_address0 = zext_ln1027_fu_904_p1;
    end else begin
        Qi_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        Qi_M_real_address1 = zext_ln538_3_fu_1374_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        Qi_M_real_address1 = Qi_M_real_addr_4_reg_1697;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Qi_M_real_address1 = zext_ln524_2_fu_1302_p1;
    end else begin
        Qi_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_real_ce0 = 1'b1;
    end else begin
        Qi_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state31))) begin
        Qi_M_real_ce1 = 1'b1;
    end else begin
        Qi_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        Qi_M_real_d0 = reg_872;
    end else if (((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        Qi_M_real_d0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_real_d0 = 32'd0;
    end else begin
        Qi_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln521_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln474_fu_1012_p2 == 1'd1) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln474_fu_1012_p2 == 1'd0) & (icmp_ln472_fu_1000_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        Qi_M_real_we0 = 1'b1;
    end else begin
        Qi_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln521_reg_1693 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        Qi_M_real_we1 = 1'b1;
    end else begin
        Qi_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        R_M_imag_ce0 = 1'b1;
    end else begin
        R_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln543_reg_1808 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        R_M_imag_we0 = 1'b1;
    end else begin
        R_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        R_M_real_ce0 = 1'b1;
    end else begin
        R_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln543_reg_1808 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        R_M_real_we0 = 1'b1;
    end else begin
        R_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        Ri_M_imag_address0 = zext_ln545_2_fu_1427_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_imag_address0 = Ri_M_imag_addr_5_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Ri_M_imag_address0 = zext_ln516_1_fu_1240_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Ri_M_imag_address0 = zext_ln503_1_fu_1148_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Ri_M_imag_address0 = zext_ln482_2_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_imag_address0 = zext_ln1027_1_fu_942_p1;
    end else begin
        Ri_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_imag_address1 = Ri_M_imag_addr_6_reg_1675;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Ri_M_imag_address1 = zext_ln516_2_fu_1251_p1;
    end else if (((icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        Ri_M_imag_address1 = Ri_M_imag_addr_3_reg_1595;
    end else if (((icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        Ri_M_imag_address1 = Ri_M_imag_addr_2_reg_1578;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Ri_M_imag_address1 = zext_ln503_3_fu_1171_p1;
    end else begin
        Ri_M_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5))) begin
        Ri_M_imag_ce0 = 1'b1;
    end else begin
        Ri_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        Ri_M_imag_ce1 = 1'b1;
    end else begin
        Ri_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_imag_d0 = reg_822;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Ri_M_imag_d0 = A_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_imag_d0 = 32'd0;
    end else begin
        Ri_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_imag_d1 = reg_834;
    end else if ((((icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        Ri_M_imag_d1 = 32'd0;
    end else begin
        Ri_M_imag_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln513_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_state30)))) begin
        Ri_M_imag_we0 = 1'b1;
    end else begin
        Ri_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln513_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_state30)) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        Ri_M_imag_we1 = 1'b1;
    end else begin
        Ri_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        Ri_M_real_address0 = zext_ln545_2_fu_1427_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_real_address0 = Ri_M_real_addr_5_reg_1660;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Ri_M_real_address0 = zext_ln516_1_fu_1240_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Ri_M_real_address0 = zext_ln503_1_fu_1148_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Ri_M_real_address0 = zext_ln482_2_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_real_address0 = zext_ln1027_1_fu_942_p1;
    end else begin
        Ri_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_real_address1 = Ri_M_real_addr_6_reg_1665;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Ri_M_real_address1 = zext_ln516_2_fu_1251_p1;
    end else if (((icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        Ri_M_real_address1 = Ri_M_real_addr_3_reg_1590;
    end else if (((icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        Ri_M_real_address1 = Ri_M_real_addr_2_reg_1572;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Ri_M_real_address1 = zext_ln503_3_fu_1171_p1;
    end else begin
        Ri_M_real_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5))) begin
        Ri_M_real_ce0 = 1'b1;
    end else begin
        Ri_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        Ri_M_real_ce1 = 1'b1;
    end else begin
        Ri_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_real_d0 = reg_816;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Ri_M_real_d0 = A_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Ri_M_real_d0 = 32'd0;
    end else begin
        Ri_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        Ri_M_real_d1 = reg_828;
    end else if ((((icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        Ri_M_real_d1 = grp_qrf_givens_float_s_fu_556_ap_return_8;
    end else begin
        Ri_M_real_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln513_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_state30)))) begin
        Ri_M_real_we0 = 1'b1;
    end else begin
        Ri_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln513_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_state30)) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (icmp_ln490_reg_1533 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        Ri_M_real_we1 = 1'b1;
    end else begin
        Ri_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln532_fu_1308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln532_fu_1308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_565_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_565_opcode = 2'd0;
    end else begin
        grp_fu_565_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_565_p0 = reg_860;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_565_p0 = reg_816;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_565_p0 = reg_736;
    end else begin
        grp_fu_565_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_565_p1 = reg_872;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_565_p1 = reg_828;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_565_p1 = reg_741;
    end else begin
        grp_fu_565_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_569_p0 = reg_866;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_569_p0 = reg_822;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_569_p0 = reg_746;
    end else begin
        grp_fu_569_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_569_p1 = reg_878;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_569_p1 = reg_834;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_569_p1 = reg_751;
    end else begin
        grp_fu_569_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_573_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_573_opcode = 2'd0;
    end else begin
        grp_fu_573_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_573_p0 = reg_840;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_573_p0 = reg_756;
    end else begin
        grp_fu_573_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_573_p1 = reg_850;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_573_p1 = reg_761;
    end else begin
        grp_fu_573_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_577_p0 = reg_845;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_577_p0 = reg_766;
    end else begin
        grp_fu_577_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_577_p1 = reg_855;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_577_p1 = reg_771;
    end else begin
        grp_fu_577_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_597_p1 = Qi_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_597_p1 = Ri_M_real_q0;
    end else begin
        grp_fu_597_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_602_p1 = Qi_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_602_p1 = Ri_M_imag_q0;
    end else begin
        grp_fu_602_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_607_p1 = Qi_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_607_p1 = Ri_M_real_q0;
    end else begin
        grp_fu_607_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_612_p1 = Qi_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_612_p1 = Ri_M_imag_q0;
    end else begin
        grp_fu_612_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_617_p1 = Qi_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_617_p1 = Ri_M_real_q1;
    end else begin
        grp_fu_617_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_622_p1 = Qi_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_622_p1 = Ri_M_imag_q1;
    end else begin
        grp_fu_622_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_627_p1 = Qi_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_627_p1 = Ri_M_real_q1;
    end else begin
        grp_fu_627_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_632_p1 = Qi_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_632_p1 = Ri_M_imag_q1;
    end else begin
        grp_fu_632_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_637_p1 = Qi_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_637_p1 = Ri_M_real_q0;
    end else begin
        grp_fu_637_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_642_p1 = Qi_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_642_p1 = Ri_M_imag_q0;
    end else begin
        grp_fu_642_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_647_p1 = Qi_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_647_p1 = Ri_M_real_q0;
    end else begin
        grp_fu_647_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_652_p1 = Qi_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_652_p1 = Ri_M_imag_q0;
    end else begin
        grp_fu_652_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_657_p1 = Qi_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_657_p1 = Ri_M_real_q1;
    end else begin
        grp_fu_657_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_662_p1 = Qi_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_662_p1 = Ri_M_imag_q1;
    end else begin
        grp_fu_662_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_667_p1 = Qi_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_667_p1 = Ri_M_real_q1;
    end else begin
        grp_fu_667_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_672_p1 = Qi_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_672_p1 = Ri_M_imag_q1;
    end else begin
        grp_fu_672_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_693_p0 = i_0_reg_488;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_693_p0 = ap_phi_mux_i_0_phi_fu_492_p4;
    end else begin
        grp_fu_693_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln459_1_fu_916_p2 == 1'd1) & (icmp_ln459_fu_910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln459_fu_910_p2 == 1'd1) & (icmp_ln459_1_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln460_1_fu_954_p2 == 1'd1) & (icmp_ln460_fu_948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln460_fu_948_p2 == 1'd1) & (icmp_ln460_1_fu_954_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln471_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln472_fu_1000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln480_fu_1033_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln486_fu_1064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln498_fu_1120_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((icmp_ln498_fu_1120_p2 == 1'd0) & (icmp_ln499_fu_1126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_qrf_givens_float_s_fu_556_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln511_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else if (((icmp_ln513_fu_1226_p2 == 1'd1) & (icmp_ln511_fu_1214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & ((icmp_ln519_fu_1265_p2 == 1'd1) | (icmp_ln499_reg_1562 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((icmp_ln521_fu_1277_p2 == 1'd1) & (icmp_ln499_reg_1562 == 1'd1) & (icmp_ln519_fu_1265_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln532_fu_1308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln533_fu_1336_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln541_fu_1400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_M_imag_address0 = zext_ln482_2_fu_1054_p1;

assign A_M_real_address0 = zext_ln482_2_fu_1054_p1;

assign Q_M_imag_address0 = zext_ln538_2_fu_1380_p1;

assign Q_M_imag_d0 = xor_ln155_fu_1389_p2;

assign Q_M_real_address0 = zext_ln538_2_fu_1380_p1;

assign Q_M_real_d0 = Qi_M_real_q1;

assign R_M_imag_address0 = zext_ln545_2_reg_1812;

assign R_M_imag_d0 = Ri_M_imag_q0;

assign R_M_real_address0 = zext_ln545_2_reg_1812;

assign R_M_real_d0 = Ri_M_real_q0;

assign add_ln1067_1_fu_1022_p2 = (zext_ln1067_reg_1473 + zext_ln1067_2_fu_1018_p1);

assign add_ln1067_fu_988_p2 = (zext_ln482_fu_972_p1 + zext_ln1067_fu_984_p1);

assign add_ln459_1_fu_890_p2 = (phi_ln459_1_reg_409 + 2'd1);

assign add_ln459_fu_884_p2 = (phi_ln459_reg_397 + 2'd1);

assign add_ln460_1_fu_928_p2 = (phi_ln460_1_reg_432 + 2'd1);

assign add_ln460_fu_922_p2 = (phi_ln460_reg_420 + 2'd1);

assign add_ln482_fu_1049_p2 = (zext_ln1067_reg_1473 + zext_ln482_1_fu_1045_p1);

assign add_ln503_1_fu_1143_p2 = (zext_ln521_reg_1543 + zext_ln503_fu_1139_p1);

assign add_ln503_2_fu_1166_p2 = (zext_ln521_reg_1543 + zext_ln503_2_fu_1162_p1);

assign add_ln516_1_fu_1246_p2 = (zext_ln503_2_reg_1584 + zext_ln516_fu_1231_p1);

assign add_ln516_fu_1235_p2 = (zext_ln503_reg_1566 + zext_ln516_fu_1231_p1);

assign add_ln521_1_fu_1257_p2 = (add_ln521_reg_1549 + zext_ln498_reg_1554);

assign add_ln521_fu_1106_p2 = (zext_ln490_fu_1082_p1 + xor_ln521_fu_1100_p2);

assign add_ln524_1_fu_1297_p2 = (zext_ln503_2_reg_1584 + zext_ln524_fu_1282_p1);

assign add_ln524_fu_1286_p2 = (zext_ln503_reg_1566 + zext_ln524_fu_1282_p1);

assign add_ln538_1_fu_1369_p2 = (zext_ln538_fu_1348_p1 + zext_ln533_reg_1771);

assign add_ln538_fu_1364_p2 = (zext_ln545_reg_1766 + zext_ln538_1_fu_1360_p1);

assign add_ln545_fu_1422_p2 = (zext_ln533_reg_1771 + zext_ln545_1_fu_1418_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i_0_phi_fu_492_p4 = i_0_reg_488;

assign bitcast_ln155_fu_1385_p1 = Qi_M_imag_q1;

assign c_1_fu_1006_p2 = (c_0_reg_455 + 3'd1);

assign c_2_fu_1342_p2 = (c15_0_reg_534 + 3'd1);

assign c_3_fu_1406_p2 = (c16_0_reg_545 + 3'd1);

assign c_fu_1039_p2 = (c12_0_reg_466 + 3'd1);

assign grp_fu_693_p2 = ($signed(grp_fu_693_p0) + $signed(2'd3));

assign grp_qrf_givens_float_s_fu_556_ap_start = grp_qrf_givens_float_s_fu_556_ap_start_reg;

assign icmp_ln459_1_fu_916_p2 = ((phi_ln459_reg_397 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln459_fu_910_p2 = ((phi_ln459_1_reg_409 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln460_1_fu_954_p2 = ((phi_ln460_reg_420 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln460_fu_948_p2 = ((phi_ln460_1_reg_432 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln471_fu_960_p2 = ((r_0_reg_443 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln472_fu_1000_p2 = ((c_0_reg_455 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln474_fu_1012_p2 = ((r_0_reg_443 == c_0_reg_455) ? 1'b1 : 1'b0);

assign icmp_ln480_fu_1033_p2 = ((c12_0_reg_466 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln486_fu_1064_p2 = ((j_0_reg_477 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln490_fu_1076_p2 = ((j_0_reg_477 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln498_fu_1120_p2 = ((i_0_reg_488 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln499_fu_1126_p2 = (($signed(zext_ln498_2_fu_1116_p1) > $signed(sub_ln499_reg_1538)) ? 1'b1 : 1'b0);

assign icmp_ln511_fu_1214_p2 = ((k_0_reg_500 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln513_fu_1226_p2 = ((k_0_reg_500 < j_reg_1527) ? 1'b1 : 1'b0);

assign icmp_ln519_fu_1265_p2 = ((k13_0_reg_511 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln521_fu_1277_p2 = (($signed(zext_ln519_fu_1261_p1) < $signed(add_ln521_1_reg_1680)) ? 1'b1 : 1'b0);

assign icmp_ln532_fu_1308_p2 = ((r14_0_reg_522 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln533_fu_1336_p2 = ((c15_0_reg_534 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln541_fu_1400_p2 = ((c16_0_reg_545 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln543_fu_1412_p2 = ((r14_0_reg_522 > c16_0_reg_545) ? 1'b1 : 1'b0);

assign j_fu_1070_p2 = (j_0_reg_477 + 3'd1);

assign k_1_fu_1271_p2 = (k13_0_reg_511 + 3'd1);

assign k_fu_1220_p2 = (k_0_reg_500 + 3'd1);

assign r_1_fu_1314_p2 = (r14_0_reg_522 + 3'd1);

assign r_fu_966_p2 = (r_0_reg_443 + 3'd1);

assign sub_ln499_fu_1090_p2 = (j_0_reg_477 - zext_ln499_fu_1086_p1);

assign tmp_10_fu_1154_p3 = {{i_0_reg_488}, {2'd0}};

assign tmp_11_fu_1352_p3 = {{c15_0_reg_534}, {2'd0}};

assign tmp_12_fu_934_p3 = {{phi_ln460_reg_420}, {phi_ln460_1_reg_432}};

assign tmp_5_fu_896_p3 = {{phi_ln459_reg_397}, {phi_ln459_1_reg_409}};

assign tmp_7_fu_976_p3 = {{r_0_reg_443}, {2'd0}};

assign tmp_8_fu_1324_p3 = {{r14_0_reg_522}, {2'd0}};

assign tmp_9_fu_1131_p3 = {{grp_fu_693_p2}, {2'd0}};

assign xor_ln155_fu_1389_p2 = (bitcast_ln155_fu_1385_p1 ^ 32'd2147483648);

assign xor_ln521_fu_1100_p2 = (zext_ln486_fu_1060_p1 ^ 32'd4294967295);

assign zext_ln1027_1_fu_942_p1 = tmp_12_fu_934_p3;

assign zext_ln1027_fu_904_p1 = tmp_5_fu_896_p3;

assign zext_ln1067_1_fu_994_p1 = add_ln1067_fu_988_p2;

assign zext_ln1067_2_fu_1018_p1 = c_0_reg_455;

assign zext_ln1067_3_fu_1027_p1 = add_ln1067_1_fu_1022_p2;

assign zext_ln1067_fu_984_p1 = tmp_7_fu_976_p3;

assign zext_ln482_1_fu_1045_p1 = c12_0_reg_466;

assign zext_ln482_2_fu_1054_p1 = add_ln482_fu_1049_p2;

assign zext_ln482_fu_972_p1 = r_0_reg_443;

assign zext_ln486_fu_1060_p1 = j_0_reg_477;

assign zext_ln490_fu_1082_p1 = icmp_ln490_fu_1076_p2;

assign zext_ln498_2_fu_1116_p1 = i_0_reg_488;

assign zext_ln498_fu_1112_p1 = i_0_reg_488;

assign zext_ln499_fu_1086_p1 = icmp_ln490_fu_1076_p2;

assign zext_ln503_1_fu_1148_p1 = add_ln503_1_fu_1143_p2;

assign zext_ln503_2_fu_1162_p1 = tmp_10_fu_1154_p3;

assign zext_ln503_3_fu_1171_p1 = add_ln503_2_fu_1166_p2;

assign zext_ln503_fu_1139_p1 = tmp_9_fu_1131_p3;

assign zext_ln516_1_fu_1240_p1 = add_ln516_fu_1235_p2;

assign zext_ln516_2_fu_1251_p1 = add_ln516_1_fu_1246_p2;

assign zext_ln516_fu_1231_p1 = k_0_reg_500;

assign zext_ln519_fu_1261_p1 = k13_0_reg_511;

assign zext_ln521_fu_1096_p1 = j_0_reg_477;

assign zext_ln524_1_fu_1291_p1 = add_ln524_fu_1286_p2;

assign zext_ln524_2_fu_1302_p1 = add_ln524_1_fu_1297_p2;

assign zext_ln524_fu_1282_p1 = k13_0_reg_511;

assign zext_ln533_fu_1332_p1 = tmp_8_fu_1324_p3;

assign zext_ln538_1_fu_1360_p1 = tmp_11_fu_1352_p3;

assign zext_ln538_2_fu_1380_p1 = add_ln538_reg_1785;

assign zext_ln538_3_fu_1374_p1 = add_ln538_1_fu_1369_p2;

assign zext_ln538_fu_1348_p1 = c15_0_reg_534;

assign zext_ln545_1_fu_1418_p1 = c16_0_reg_545;

assign zext_ln545_2_fu_1427_p1 = add_ln545_fu_1422_p2;

assign zext_ln545_fu_1320_p1 = r14_0_reg_522;

always @ (posedge ap_clk) begin
    zext_ln1067_reg_1473[1:0] <= 2'b00;
    zext_ln1067_reg_1473[5] <= 1'b0;
    zext_ln482_2_reg_1508[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln521_reg_1543[4:3] <= 2'b00;
    zext_ln498_reg_1554[31:2] <= 30'b000000000000000000000000000000;
    zext_ln503_reg_1566[1:0] <= 2'b00;
    zext_ln503_reg_1566[4] <= 1'b0;
    zext_ln503_2_reg_1584[1:0] <= 2'b00;
    zext_ln503_2_reg_1584[4] <= 1'b0;
    zext_ln545_reg_1766[5:3] <= 3'b000;
    zext_ln533_reg_1771[1:0] <= 2'b00;
    zext_ln533_reg_1771[5] <= 1'b0;
    zext_ln545_2_reg_1812[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //qrf_basic
