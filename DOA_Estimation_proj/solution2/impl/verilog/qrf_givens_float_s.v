// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module qrf_givens_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        extra_pass,
        a_M_real,
        a_M_imag,
        b_M_real,
        b_M_imag,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] extra_pass;
input  [31:0] a_M_real;
input  [31:0] a_M_imag;
input  [31:0] b_M_real;
input  [31:0] b_M_imag;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_261_p2;
reg   [31:0] reg_322;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_265_p2;
reg   [31:0] reg_327;
wire   [31:0] grp_fu_270_p2;
reg   [31:0] reg_332;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] reg_337;
wire   [31:0] grp_fu_278_p2;
reg   [31:0] reg_342;
wire   [31:0] grp_fu_240_p2;
reg   [31:0] reg_347;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state26;
wire   [31:0] grp_fu_244_p2;
reg   [31:0] reg_352;
wire   [31:0] grp_fu_249_p2;
reg   [31:0] reg_360;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] reg_365;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] reg_371;
wire   [0:0] extra_pass_read_read_fu_68_p2;
wire   [31:0] p_Val2_41_fu_377_p1;
reg   [31:0] p_Val2_41_reg_887;
wire   [31:0] bitcast_ln348_fu_397_p1;
wire   [0:0] icmp_ln284_fu_412_p2;
reg   [0:0] icmp_ln284_reg_897;
wire   [0:0] icmp_ln284_1_fu_418_p2;
reg   [0:0] icmp_ln284_1_reg_902;
wire   [31:0] bitcast_ln348_1_fu_444_p1;
wire   [0:0] icmp_ln306_fu_459_p2;
reg   [0:0] icmp_ln306_reg_912;
wire   [0:0] icmp_ln306_1_fu_465_p2;
reg   [0:0] icmp_ln306_1_reg_917;
wire   [31:0] grp_qrf_magnitude_float_s_fu_226_ap_return;
reg   [31:0] sqrt_mag_a_mag_b_reg_922;
wire    ap_CS_fsm_state2;
wire    grp_qrf_magnitude_float_s_fu_226_ap_ready;
wire    grp_qrf_magnitude_float_s_fu_226_ap_done;
wire   [0:0] and_ln284_fu_475_p2;
reg   [0:0] and_ln284_reg_933;
wire   [31:0] bitcast_ln348_2_fu_500_p1;
wire   [0:0] icmp_ln284_2_fu_515_p2;
reg   [0:0] icmp_ln284_2_reg_942;
wire   [0:0] icmp_ln284_3_fu_521_p2;
reg   [0:0] icmp_ln284_3_reg_947;
wire   [0:0] and_ln284_1_fu_531_p2;
reg   [0:0] and_ln284_1_reg_952;
wire    ap_CS_fsm_state3;
wire   [31:0] bitcast_ln348_4_fu_556_p1;
wire   [0:0] icmp_ln284_4_fu_571_p2;
reg   [0:0] icmp_ln284_4_reg_961;
wire   [0:0] icmp_ln284_5_fu_577_p2;
reg   [0:0] icmp_ln284_5_reg_966;
wire   [0:0] and_ln284_2_fu_587_p2;
reg   [0:0] and_ln284_2_reg_971;
wire    ap_CS_fsm_state4;
wire   [31:0] bitcast_ln348_5_fu_612_p1;
wire   [0:0] icmp_ln284_6_fu_627_p2;
reg   [0:0] icmp_ln284_6_reg_980;
wire   [0:0] icmp_ln284_7_fu_633_p2;
reg   [0:0] icmp_ln284_7_reg_985;
wire   [0:0] and_ln284_3_fu_643_p2;
reg   [0:0] and_ln284_3_reg_990;
wire    ap_CS_fsm_state5;
wire   [31:0] c_tmp_M_real_1_fu_664_p1;
wire   [31:0] grp_fu_283_p2;
reg   [31:0] tmp_i_i5_reg_999;
wire   [31:0] grp_fu_287_p2;
reg   [31:0] tmp_i_i1_reg_1004;
wire   [31:0] grp_fu_292_p2;
reg   [31:0] tmp_5_i_i4_reg_1009;
wire   [31:0] grp_fu_296_p2;
reg   [31:0] tmp_6_i_i4_reg_1014;
wire   [31:0] grp_fu_253_p2;
reg   [31:0] tmp_2_i_i2_reg_1019;
wire   [31:0] grp_fu_257_p2;
reg   [31:0] tmp_7_i_i4_reg_1024;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] s_tmp_M_real_1_reg_1029;
wire   [31:0] grp_fu_313_p2;
reg   [31:0] complex_M_imag_writ_reg_1034;
reg   [31:0] sqrt_mag_a_mag_b_1_reg_1039;
wire    ap_CS_fsm_state20;
wire   [0:0] and_ln306_fu_771_p2;
reg   [0:0] and_ln306_reg_1048;
wire   [31:0] bitcast_ln348_3_fu_796_p1;
wire   [0:0] icmp_ln306_2_fu_811_p2;
reg   [0:0] icmp_ln306_2_reg_1057;
wire   [0:0] icmp_ln306_3_fu_817_p2;
reg   [0:0] icmp_ln306_3_reg_1062;
wire   [31:0] tmp_M_imag_1_fu_843_p1;
wire    ap_CS_fsm_state36;
wire    grp_qrf_magnitude_float_s_fu_226_ap_start;
wire    grp_qrf_magnitude_float_s_fu_226_ap_idle;
reg   [31:0] grp_qrf_magnitude_float_s_fu_226_a_M_real;
reg   [31:0] grp_qrf_magnitude_float_s_fu_226_a_M_imag;
reg   [31:0] ap_phi_mux_tmp_M_real_2_phi_fu_78_p4;
reg   [31:0] tmp_M_real_2_reg_74;
wire    ap_CS_fsm_state19;
reg   [31:0] ap_phi_mux_tmp_M_imag_2_phi_fu_89_p4;
reg   [31:0] tmp_M_imag_2_reg_85;
reg   [31:0] ap_phi_mux_tmp_M_real_1_phi_fu_99_p4;
reg   [31:0] tmp_M_real_1_reg_96;
reg   [31:0] ap_phi_mux_s_tmp_M_imag_phi_fu_109_p4;
reg   [31:0] s_tmp_M_imag_reg_105;
reg   [31:0] ap_phi_mux_c_M_real_write_assi_phi_fu_120_p4;
reg   [31:0] c_M_real_write_assi_reg_116;
wire   [31:0] tmp_M_imag_3_fu_678_p1;
reg   [31:0] ap_phi_mux_c_M_imag_write_assi_phi_fu_132_p4;
reg   [31:0] c_M_imag_write_assi_reg_128;
reg   [31:0] ap_phi_mux_s_M_real_write_assi_phi_fu_143_p4;
reg   [31:0] s_M_real_write_assi_reg_139;
wire   [31:0] tmp_M_imag_5_fu_693_p1;
reg   [31:0] ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4;
reg   [31:0] s_M_imag_write_assi_reg_151;
wire   [31:0] bitcast_ln444_1_fu_708_p1;
reg   [31:0] ap_phi_mux_ss_M_real_write_ass_phi_fu_166_p4;
reg   [31:0] ss_M_real_write_ass_reg_162;
reg   [31:0] ap_phi_mux_cc_M_real_write_ass_phi_fu_176_p4;
reg   [31:0] cc_M_real_write_ass_reg_173;
reg   [31:0] ap_phi_mux_cc_M_imag_write_ass_phi_fu_186_p4;
reg   [31:0] cc_M_imag_write_ass_reg_183;
reg   [31:0] ap_phi_mux_r_M_real_write_assi_phi_fu_196_p4;
reg   [31:0] r_M_real_write_assi_reg_193;
reg   [31:0] tmp_M_real_reg_202;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state21;
wire   [0:0] and_ln306_1_fu_827_p2;
reg   [31:0] s_tmp_M_imag_2_reg_215;
reg    grp_qrf_magnitude_float_s_fu_226_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state23;
reg   [31:0] grp_fu_261_p0;
reg   [31:0] grp_fu_261_p1;
reg   [31:0] grp_fu_265_p0;
reg   [31:0] grp_fu_270_p0;
reg   [31:0] grp_fu_270_p1;
reg   [31:0] grp_fu_274_p0;
reg   [31:0] grp_fu_274_p1;
reg   [31:0] grp_fu_278_p0;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state27;
reg   [31:0] grp_fu_317_p0;
wire   [30:0] trunc_ln368_4_fu_381_p1;
wire   [31:0] p_Result_s_fu_389_p3;
wire   [7:0] tmp_17_fu_402_p4;
wire   [22:0] trunc_ln284_fu_385_p1;
wire   [31:0] p_Val2_s_fu_424_p1;
wire   [30:0] trunc_ln368_fu_428_p1;
wire   [31:0] p_Result_36_fu_436_p3;
wire   [7:0] tmp_s_fu_449_p4;
wire   [22:0] trunc_ln306_fu_432_p1;
wire   [0:0] or_ln284_fu_471_p2;
wire   [0:0] grp_fu_317_p2;
wire   [31:0] p_Val2_38_fu_481_p1;
wire   [30:0] trunc_ln368_6_fu_484_p1;
wire   [31:0] p_Result_31_fu_492_p3;
wire   [7:0] tmp_21_fu_505_p4;
wire   [22:0] trunc_ln284_1_fu_488_p1;
wire   [0:0] or_ln284_1_fu_527_p2;
wire   [31:0] p_Val2_39_fu_537_p1;
wire   [30:0] trunc_ln368_7_fu_540_p1;
wire   [31:0] p_Result_32_fu_548_p3;
wire   [7:0] tmp_23_fu_561_p4;
wire   [22:0] trunc_ln284_2_fu_544_p1;
wire   [0:0] or_ln284_2_fu_583_p2;
wire   [31:0] p_Val2_40_fu_593_p1;
wire   [30:0] trunc_ln368_8_fu_596_p1;
wire   [31:0] p_Result_33_fu_604_p3;
wire   [7:0] tmp_25_fu_617_p4;
wire   [22:0] trunc_ln284_3_fu_600_p1;
wire   [0:0] or_ln284_3_fu_639_p2;
wire   [0:0] p_Result_34_fu_649_p3;
wire   [31:0] p_Result_35_fu_656_p3;
wire   [31:0] bitcast_ln155_2_fu_668_p1;
wire   [31:0] xor_ln155_1_fu_672_p2;
wire   [31:0] bitcast_ln155_4_fu_683_p1;
wire   [31:0] xor_ln155_2_fu_687_p2;
wire   [31:0] bitcast_ln444_fu_698_p1;
wire   [31:0] xor_ln444_fu_702_p2;
wire   [0:0] or_ln306_fu_767_p2;
wire   [31:0] p_Val2_37_fu_777_p1;
wire   [30:0] trunc_ln368_5_fu_780_p1;
wire   [31:0] p_Result_37_fu_788_p3;
wire   [7:0] tmp_19_fu_801_p4;
wire   [22:0] trunc_ln306_1_fu_784_p1;
wire   [0:0] or_ln306_1_fu_823_p2;
wire   [31:0] bitcast_ln155_fu_833_p1;
wire   [31:0] xor_ln155_fu_837_p2;
reg    grp_fu_317_ce;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [31:0] ap_return_8_preg;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 grp_qrf_magnitude_float_s_fu_226_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
#0 ap_return_8_preg = 32'd0;
end

qrf_magnitude_float_s grp_qrf_magnitude_float_s_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_qrf_magnitude_float_s_fu_226_ap_start),
    .ap_done(grp_qrf_magnitude_float_s_fu_226_ap_done),
    .ap_idle(grp_qrf_magnitude_float_s_fu_226_ap_idle),
    .ap_ready(grp_qrf_magnitude_float_s_fu_226_ap_ready),
    .a_M_real(grp_qrf_magnitude_float_s_fu_226_a_M_real),
    .a_M_imag(grp_qrf_magnitude_float_s_fu_226_a_M_imag),
    .b_M_real(b_M_real),
    .b_M_imag(b_M_imag),
    .ap_return(grp_qrf_magnitude_float_s_fu_226_ap_return)
);

music_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3hbi_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_322),
    .din1(reg_327),
    .ce(1'b1),
    .dout(grp_fu_240_p2)
);

music_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3hbi_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_332),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_244_p2)
);

music_fsub_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3mb6_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_337),
    .din1(reg_342),
    .ce(1'b1),
    .dout(grp_fu_249_p2)
);

music_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fadd_32ns_3hbi_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i5_reg_999),
    .din1(tmp_i_i1_reg_1004),
    .ce(1'b1),
    .dout(grp_fu_253_p2)
);

music_fsub_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3mb6_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_i_i4_reg_1009),
    .din1(tmp_6_i_i4_reg_1014),
    .ce(1'b1),
    .dout(grp_fu_257_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_261_p0),
    .din1(grp_fu_261_p1),
    .ce(1'b1),
    .dout(grp_fu_261_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_265_p0),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_265_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_270_p0),
    .din1(grp_fu_270_p1),
    .ce(1'b1),
    .dout(grp_fu_270_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_274_p0),
    .din1(grp_fu_274_p1),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_278_p0),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sqrt_mag_a_mag_b_reg_922),
    .din1(b_M_real),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_M_imag),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_287_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sqrt_mag_a_mag_b_reg_922),
    .din1(b_M_imag),
    .ce(1'b1),
    .dout(grp_fu_292_p2)
);

music_fmul_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3ibs_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_M_real),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_296_p2)
);

music_fdiv_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3jbC_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_347),
    .din1(reg_352),
    .ce(1'b1),
    .dout(grp_fu_301_p2)
);

music_fdiv_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3jbC_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_360),
    .din1(reg_352),
    .ce(1'b1),
    .dout(grp_fu_305_p2)
);

music_fdiv_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3jbC_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_i_i2_reg_1019),
    .din1(reg_352),
    .ce(1'b1),
    .dout(grp_fu_309_p2)
);

music_fdiv_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3jbC_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_i_i4_reg_1024),
    .din1(reg_352),
    .ce(1'b1),
    .dout(grp_fu_313_p2)
);

music_fcmp_32ns_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3kbM_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_317_p0),
    .din1(32'd0),
    .ce(grp_fu_317_ce),
    .opcode(5'd1),
    .dout(grp_fu_317_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_0_preg <= ap_phi_mux_c_M_real_write_assi_phi_fu_120_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_1_preg <= ap_phi_mux_c_M_imag_write_assi_phi_fu_132_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_2_preg <= ap_phi_mux_s_M_real_write_assi_phi_fu_143_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_3_preg <= ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_4_preg <= ap_phi_mux_ss_M_real_write_ass_phi_fu_166_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_5_preg <= ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_6_preg <= ap_phi_mux_cc_M_real_write_ass_phi_fu_176_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_7_preg <= ap_phi_mux_cc_M_imag_write_ass_phi_fu_186_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_return_8_preg <= ap_phi_mux_r_M_real_write_assi_phi_fu_196_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_qrf_magnitude_float_s_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd0)))) begin
            grp_qrf_magnitude_float_s_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_qrf_magnitude_float_s_fu_226_ap_ready == 1'b1)) begin
            grp_qrf_magnitude_float_s_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        c_M_imag_write_assi_reg_128 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        c_M_imag_write_assi_reg_128 <= tmp_M_imag_3_fu_678_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        c_M_real_write_assi_reg_116 <= 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        c_M_real_write_assi_reg_116 <= ap_phi_mux_tmp_M_real_1_phi_fu_99_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cc_M_imag_write_ass_reg_183 <= tmp_M_imag_1_fu_843_p1;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        cc_M_imag_write_ass_reg_183 <= ap_phi_mux_tmp_M_imag_2_phi_fu_89_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cc_M_real_write_ass_reg_173 <= tmp_M_real_reg_202;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        cc_M_real_write_ass_reg_173 <= ap_phi_mux_tmp_M_real_1_phi_fu_99_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        r_M_real_write_assi_reg_193 <= sqrt_mag_a_mag_b_1_reg_1039;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        r_M_real_write_assi_reg_193 <= sqrt_mag_a_mag_b_reg_922;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        s_M_imag_write_assi_reg_151 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        s_M_imag_write_assi_reg_151 <= tmp_M_imag_5_fu_693_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        s_M_real_write_assi_reg_139 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        s_M_real_write_assi_reg_139 <= ap_phi_mux_tmp_M_real_2_phi_fu_78_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == and_ln306_1_fu_827_p2) & (1'd1 == and_ln306_reg_1048))) begin
        s_tmp_M_imag_2_reg_215 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        s_tmp_M_imag_2_reg_215 <= reg_371;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        s_tmp_M_imag_reg_105 <= complex_M_imag_writ_reg_1034;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln284_3_fu_643_p2) & (1'd1 == and_ln284_2_reg_971) & (1'd1 == and_ln284_1_reg_952) & (1'd1 == and_ln284_reg_933))) begin
        s_tmp_M_imag_reg_105 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ss_M_real_write_ass_reg_162 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ss_M_real_write_ass_reg_162 <= bitcast_ln444_1_fu_708_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        tmp_M_imag_2_reg_85 <= reg_371;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln284_3_fu_643_p2) & (1'd1 == and_ln284_2_reg_971) & (1'd1 == and_ln284_1_reg_952) & (1'd1 == and_ln284_reg_933))) begin
        tmp_M_imag_2_reg_85 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        tmp_M_real_1_reg_96 <= reg_365;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln284_3_fu_643_p2) & (1'd1 == and_ln284_2_reg_971) & (1'd1 == and_ln284_1_reg_952) & (1'd1 == and_ln284_reg_933))) begin
        tmp_M_real_1_reg_96 <= c_tmp_M_real_1_fu_664_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        tmp_M_real_2_reg_74 <= s_tmp_M_real_1_reg_1029;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln284_3_fu_643_p2) & (1'd1 == and_ln284_2_reg_971) & (1'd1 == and_ln284_1_reg_952) & (1'd1 == and_ln284_reg_933))) begin
        tmp_M_real_2_reg_74 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == and_ln306_1_fu_827_p2) & (1'd1 == and_ln306_reg_1048))) begin
        tmp_M_real_reg_202 <= 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_M_real_reg_202 <= reg_365;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        and_ln284_1_reg_952 <= and_ln284_1_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln284_2_reg_971 <= and_ln284_2_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln284_2_reg_971) & (1'd1 == and_ln284_1_reg_952) & (1'd1 == and_ln284_reg_933))) begin
        and_ln284_3_reg_990 <= and_ln284_3_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1))) begin
        and_ln284_reg_933 <= and_ln284_fu_475_p2;
        sqrt_mag_a_mag_b_reg_922 <= grp_qrf_magnitude_float_s_fu_226_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1))) begin
        and_ln306_reg_1048 <= and_ln306_fu_771_p2;
        sqrt_mag_a_mag_b_1_reg_1039 <= grp_qrf_magnitude_float_s_fu_226_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        complex_M_imag_writ_reg_1034 <= grp_fu_313_p2;
        s_tmp_M_real_1_reg_1029 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        icmp_ln284_1_reg_902 <= icmp_ln284_1_fu_418_p2;
        icmp_ln284_reg_897 <= icmp_ln284_fu_412_p2;
        p_Val2_41_reg_887 <= p_Val2_41_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1) & (1'd1 == and_ln284_fu_475_p2))) begin
        icmp_ln284_2_reg_942 <= icmp_ln284_2_fu_515_p2;
        icmp_ln284_3_reg_947 <= icmp_ln284_3_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln284_1_fu_531_p2))) begin
        icmp_ln284_4_reg_961 <= icmp_ln284_4_fu_571_p2;
        icmp_ln284_5_reg_966 <= icmp_ln284_5_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln284_2_fu_587_p2))) begin
        icmp_ln284_6_reg_980 <= icmp_ln284_6_fu_627_p2;
        icmp_ln284_7_reg_985 <= icmp_ln284_7_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd1))) begin
        icmp_ln306_1_reg_917 <= icmp_ln306_1_fu_465_p2;
        icmp_ln306_reg_912 <= icmp_ln306_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1) & (1'd1 == and_ln306_fu_771_p2))) begin
        icmp_ln306_2_reg_1057 <= icmp_ln306_2_fu_811_p2;
        icmp_ln306_3_reg_1062 <= icmp_ln306_3_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_322 <= grp_fu_261_p2;
        reg_327 <= grp_fu_265_p2;
        reg_332 <= grp_fu_270_p2;
        reg_337 <= grp_fu_274_p2;
        reg_342 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_347 <= grp_fu_240_p2;
        reg_352 <= grp_fu_244_p2;
        reg_360 <= grp_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_365 <= grp_fu_301_p2;
        reg_371 <= grp_fu_305_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_2_i_i2_reg_1019 <= grp_fu_253_p2;
        tmp_7_i_i4_reg_1024 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_5_i_i4_reg_1009 <= grp_fu_292_p2;
        tmp_6_i_i4_reg_1014 <= grp_fu_296_p2;
        tmp_i_i1_reg_1004 <= grp_fu_287_p2;
        tmp_i_i5_reg_999 <= grp_fu_283_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_c_M_imag_write_assi_phi_fu_132_p4 = tmp_M_imag_3_fu_678_p1;
    end else begin
        ap_phi_mux_c_M_imag_write_assi_phi_fu_132_p4 = c_M_imag_write_assi_reg_128;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_c_M_real_write_assi_phi_fu_120_p4 = ap_phi_mux_tmp_M_real_1_phi_fu_99_p4;
    end else begin
        ap_phi_mux_c_M_real_write_assi_phi_fu_120_p4 = c_M_real_write_assi_reg_116;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_cc_M_imag_write_ass_phi_fu_186_p4 = ap_phi_mux_tmp_M_imag_2_phi_fu_89_p4;
    end else begin
        ap_phi_mux_cc_M_imag_write_ass_phi_fu_186_p4 = cc_M_imag_write_ass_reg_183;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_cc_M_real_write_ass_phi_fu_176_p4 = ap_phi_mux_tmp_M_real_1_phi_fu_99_p4;
    end else begin
        ap_phi_mux_cc_M_real_write_ass_phi_fu_176_p4 = cc_M_real_write_ass_reg_173;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_r_M_real_write_assi_phi_fu_196_p4 = sqrt_mag_a_mag_b_reg_922;
    end else begin
        ap_phi_mux_r_M_real_write_assi_phi_fu_196_p4 = r_M_real_write_assi_reg_193;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4 = tmp_M_imag_5_fu_693_p1;
    end else begin
        ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4 = s_M_imag_write_assi_reg_151;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_s_M_real_write_assi_phi_fu_143_p4 = ap_phi_mux_tmp_M_real_2_phi_fu_78_p4;
    end else begin
        ap_phi_mux_s_M_real_write_assi_phi_fu_143_p4 = s_M_real_write_assi_reg_139;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        ap_phi_mux_s_tmp_M_imag_phi_fu_109_p4 = complex_M_imag_writ_reg_1034;
    end else begin
        ap_phi_mux_s_tmp_M_imag_phi_fu_109_p4 = s_tmp_M_imag_reg_105;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        ap_phi_mux_ss_M_real_write_ass_phi_fu_166_p4 = bitcast_ln444_1_fu_708_p1;
    end else begin
        ap_phi_mux_ss_M_real_write_ass_phi_fu_166_p4 = ss_M_real_write_ass_reg_162;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        ap_phi_mux_tmp_M_imag_2_phi_fu_89_p4 = reg_371;
    end else begin
        ap_phi_mux_tmp_M_imag_2_phi_fu_89_p4 = tmp_M_imag_2_reg_85;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        ap_phi_mux_tmp_M_real_1_phi_fu_99_p4 = reg_365;
    end else begin
        ap_phi_mux_tmp_M_real_1_phi_fu_99_p4 = tmp_M_real_1_reg_96;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (((((1'd0 == and_ln284_2_reg_971) & (extra_pass_read_read_fu_68_p2 == 1'd0)) | ((1'd0 == and_ln284_3_reg_990) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_1_reg_952) & (extra_pass_read_read_fu_68_p2 == 1'd0))) | ((1'd0 == and_ln284_reg_933) & (extra_pass_read_read_fu_68_p2 == 1'd0))))) begin
        ap_phi_mux_tmp_M_real_2_phi_fu_78_p4 = s_tmp_M_real_1_reg_1029;
    end else begin
        ap_phi_mux_tmp_M_real_2_phi_fu_78_p4 = tmp_M_real_2_reg_74;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_0 = ap_phi_mux_c_M_real_write_assi_phi_fu_120_p4;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_1 = ap_phi_mux_c_M_imag_write_assi_phi_fu_132_p4;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_2 = ap_phi_mux_s_M_real_write_assi_phi_fu_143_p4;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_3 = ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_4 = ap_phi_mux_ss_M_real_write_ass_phi_fu_166_p4;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_5 = ap_phi_mux_s_M_imag_write_assi_phi_fu_155_p4;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_6 = ap_phi_mux_cc_M_real_write_ass_phi_fu_176_p4;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_7 = ap_phi_mux_cc_M_imag_write_ass_phi_fu_186_p4;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_return_8 = ap_phi_mux_r_M_real_write_assi_phi_fu_196_p4;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_261_p0 = sqrt_mag_a_mag_b_1_reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_261_p0 = sqrt_mag_a_mag_b_reg_922;
    end else begin
        grp_fu_261_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_261_p1 = b_M_real;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_261_p1 = a_M_real;
    end else begin
        grp_fu_261_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_265_p0 = b_M_imag;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_265_p0 = a_M_imag;
    end else begin
        grp_fu_265_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_270_p0 = sqrt_mag_a_mag_b_1_reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_270_p0 = sqrt_mag_a_mag_b_reg_922;
    end else begin
        grp_fu_270_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_270_p1 = sqrt_mag_a_mag_b_1_reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_270_p1 = sqrt_mag_a_mag_b_reg_922;
    end else begin
        grp_fu_270_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_274_p0 = sqrt_mag_a_mag_b_1_reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_274_p0 = sqrt_mag_a_mag_b_reg_922;
    end else begin
        grp_fu_274_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_274_p1 = b_M_imag;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_274_p1 = a_M_imag;
    end else begin
        grp_fu_274_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_278_p0 = b_M_real;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_278_p0 = a_M_real;
    end else begin
        grp_fu_278_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state20) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state2) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1)))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_317_p0 = bitcast_ln348_3_fu_796_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_317_p0 = bitcast_ln348_5_fu_612_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_317_p0 = bitcast_ln348_4_fu_556_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_317_p0 = bitcast_ln348_2_fu_500_p1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd1))) begin
        grp_fu_317_p0 = bitcast_ln348_1_fu_444_p1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
        grp_fu_317_p0 = bitcast_ln348_fu_397_p1;
    end else begin
        grp_fu_317_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_qrf_magnitude_float_s_fu_226_a_M_imag = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_qrf_magnitude_float_s_fu_226_a_M_imag = a_M_imag;
    end else begin
        grp_qrf_magnitude_float_s_fu_226_a_M_imag = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_qrf_magnitude_float_s_fu_226_a_M_real = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_qrf_magnitude_float_s_fu_226_a_M_real = a_M_real;
    end else begin
        grp_qrf_magnitude_float_s_fu_226_a_M_real = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (extra_pass_read_read_fu_68_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1) & (1'd0 == and_ln284_fu_475_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state2) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1) & (1'd1 == and_ln284_fu_475_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == and_ln284_1_fu_531_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln284_3_fu_643_p2) & (1'd1 == and_ln284_2_reg_971) & (1'd1 == and_ln284_1_reg_952) & (1'd1 == and_ln284_reg_933))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (grp_qrf_magnitude_float_s_fu_226_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'd1 == and_ln306_1_fu_827_p2) & (1'd1 == and_ln306_reg_1048))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln284_1_fu_531_p2 = (or_ln284_1_fu_527_p2 & grp_fu_317_p2);

assign and_ln284_2_fu_587_p2 = (or_ln284_2_fu_583_p2 & grp_fu_317_p2);

assign and_ln284_3_fu_643_p2 = (or_ln284_3_fu_639_p2 & grp_fu_317_p2);

assign and_ln284_fu_475_p2 = (or_ln284_fu_471_p2 & grp_fu_317_p2);

assign and_ln306_1_fu_827_p2 = (or_ln306_1_fu_823_p2 & grp_fu_317_p2);

assign and_ln306_fu_771_p2 = (or_ln306_fu_767_p2 & grp_fu_317_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign bitcast_ln155_2_fu_668_p1 = ap_phi_mux_tmp_M_imag_2_phi_fu_89_p4;

assign bitcast_ln155_4_fu_683_p1 = ap_phi_mux_s_tmp_M_imag_phi_fu_109_p4;

assign bitcast_ln155_fu_833_p1 = s_tmp_M_imag_2_reg_215;

assign bitcast_ln348_1_fu_444_p1 = p_Result_36_fu_436_p3;

assign bitcast_ln348_2_fu_500_p1 = p_Result_31_fu_492_p3;

assign bitcast_ln348_3_fu_796_p1 = p_Result_37_fu_788_p3;

assign bitcast_ln348_4_fu_556_p1 = p_Result_32_fu_548_p3;

assign bitcast_ln348_5_fu_612_p1 = p_Result_33_fu_604_p3;

assign bitcast_ln348_fu_397_p1 = p_Result_s_fu_389_p3;

assign bitcast_ln444_1_fu_708_p1 = xor_ln444_fu_702_p2;

assign bitcast_ln444_fu_698_p1 = ap_phi_mux_tmp_M_real_2_phi_fu_78_p4;

assign c_tmp_M_real_1_fu_664_p1 = p_Result_35_fu_656_p3;

assign extra_pass_read_read_fu_68_p2 = extra_pass;

assign grp_qrf_magnitude_float_s_fu_226_ap_start = grp_qrf_magnitude_float_s_fu_226_ap_start_reg;

assign icmp_ln284_1_fu_418_p2 = ((trunc_ln284_fu_385_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln284_2_fu_515_p2 = ((tmp_21_fu_505_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln284_3_fu_521_p2 = ((trunc_ln284_1_fu_488_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln284_4_fu_571_p2 = ((tmp_23_fu_561_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln284_5_fu_577_p2 = ((trunc_ln284_2_fu_544_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln284_6_fu_627_p2 = ((tmp_25_fu_617_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln284_7_fu_633_p2 = ((trunc_ln284_3_fu_600_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_412_p2 = ((tmp_17_fu_402_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln306_1_fu_465_p2 = ((trunc_ln306_fu_432_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln306_2_fu_811_p2 = ((tmp_19_fu_801_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln306_3_fu_817_p2 = ((trunc_ln306_1_fu_784_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln306_fu_459_p2 = ((tmp_s_fu_449_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln284_1_fu_527_p2 = (icmp_ln284_3_reg_947 | icmp_ln284_2_reg_942);

assign or_ln284_2_fu_583_p2 = (icmp_ln284_5_reg_966 | icmp_ln284_4_reg_961);

assign or_ln284_3_fu_639_p2 = (icmp_ln284_7_reg_985 | icmp_ln284_6_reg_980);

assign or_ln284_fu_471_p2 = (icmp_ln284_reg_897 | icmp_ln284_1_reg_902);

assign or_ln306_1_fu_823_p2 = (icmp_ln306_3_reg_1062 | icmp_ln306_2_reg_1057);

assign or_ln306_fu_767_p2 = (icmp_ln306_reg_912 | icmp_ln306_1_reg_917);

assign p_Result_31_fu_492_p3 = {{1'd0}, {trunc_ln368_6_fu_484_p1}};

assign p_Result_32_fu_548_p3 = {{1'd0}, {trunc_ln368_7_fu_540_p1}};

assign p_Result_33_fu_604_p3 = {{1'd0}, {trunc_ln368_8_fu_596_p1}};

assign p_Result_34_fu_649_p3 = p_Val2_41_reg_887[32'd31];

assign p_Result_35_fu_656_p3 = {{p_Result_34_fu_649_p3}, {31'd1065353216}};

assign p_Result_36_fu_436_p3 = {{1'd0}, {trunc_ln368_fu_428_p1}};

assign p_Result_37_fu_788_p3 = {{1'd0}, {trunc_ln368_5_fu_780_p1}};

assign p_Result_s_fu_389_p3 = {{1'd0}, {trunc_ln368_4_fu_381_p1}};

assign p_Val2_37_fu_777_p1 = b_M_imag;

assign p_Val2_38_fu_481_p1 = a_M_imag;

assign p_Val2_39_fu_537_p1 = b_M_real;

assign p_Val2_40_fu_593_p1 = b_M_imag;

assign p_Val2_41_fu_377_p1 = a_M_real;

assign p_Val2_s_fu_424_p1 = b_M_real;

assign tmp_17_fu_402_p4 = {{p_Val2_41_fu_377_p1[30:23]}};

assign tmp_19_fu_801_p4 = {{p_Val2_37_fu_777_p1[30:23]}};

assign tmp_21_fu_505_p4 = {{p_Val2_38_fu_481_p1[30:23]}};

assign tmp_23_fu_561_p4 = {{p_Val2_39_fu_537_p1[30:23]}};

assign tmp_25_fu_617_p4 = {{p_Val2_40_fu_593_p1[30:23]}};

assign tmp_M_imag_1_fu_843_p1 = xor_ln155_fu_837_p2;

assign tmp_M_imag_3_fu_678_p1 = xor_ln155_1_fu_672_p2;

assign tmp_M_imag_5_fu_693_p1 = xor_ln155_2_fu_687_p2;

assign tmp_s_fu_449_p4 = {{p_Val2_s_fu_424_p1[30:23]}};

assign trunc_ln284_1_fu_488_p1 = p_Val2_38_fu_481_p1[22:0];

assign trunc_ln284_2_fu_544_p1 = p_Val2_39_fu_537_p1[22:0];

assign trunc_ln284_3_fu_600_p1 = p_Val2_40_fu_593_p1[22:0];

assign trunc_ln284_fu_385_p1 = p_Val2_41_fu_377_p1[22:0];

assign trunc_ln306_1_fu_784_p1 = p_Val2_37_fu_777_p1[22:0];

assign trunc_ln306_fu_432_p1 = p_Val2_s_fu_424_p1[22:0];

assign trunc_ln368_4_fu_381_p1 = p_Val2_41_fu_377_p1[30:0];

assign trunc_ln368_5_fu_780_p1 = p_Val2_37_fu_777_p1[30:0];

assign trunc_ln368_6_fu_484_p1 = p_Val2_38_fu_481_p1[30:0];

assign trunc_ln368_7_fu_540_p1 = p_Val2_39_fu_537_p1[30:0];

assign trunc_ln368_8_fu_596_p1 = p_Val2_40_fu_593_p1[30:0];

assign trunc_ln368_fu_428_p1 = p_Val2_s_fu_424_p1[30:0];

assign xor_ln155_1_fu_672_p2 = (bitcast_ln155_2_fu_668_p1 ^ 32'd2147483648);

assign xor_ln155_2_fu_687_p2 = (bitcast_ln155_4_fu_683_p1 ^ 32'd2147483648);

assign xor_ln155_fu_837_p2 = (bitcast_ln155_fu_833_p1 ^ 32'd2147483648);

assign xor_ln444_fu_702_p2 = (bitcast_ln444_fu_698_p1 ^ 32'd2147483648);

endmodule //qrf_givens_float_s
