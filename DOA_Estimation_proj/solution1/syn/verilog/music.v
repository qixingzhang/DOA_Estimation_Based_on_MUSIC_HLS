// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="music,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.210020,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=301,HLS_SYN_DSP=337,HLS_SYN_FF=48632,HLS_SYN_LUT=78648,HLS_VERSION=2019_1}" *)

module music (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_address0,
        X_ce0,
        X_q0,
        P_sm_address0,
        P_sm_ce0,
        P_sm_we0,
        P_sm_d0
);

parameter    ap_ST_fsm_state1 = 198'd1;
parameter    ap_ST_fsm_state2 = 198'd2;
parameter    ap_ST_fsm_state3 = 198'd4;
parameter    ap_ST_fsm_state4 = 198'd8;
parameter    ap_ST_fsm_state5 = 198'd16;
parameter    ap_ST_fsm_state6 = 198'd32;
parameter    ap_ST_fsm_state7 = 198'd64;
parameter    ap_ST_fsm_state8 = 198'd128;
parameter    ap_ST_fsm_state9 = 198'd256;
parameter    ap_ST_fsm_state10 = 198'd512;
parameter    ap_ST_fsm_state11 = 198'd1024;
parameter    ap_ST_fsm_state12 = 198'd2048;
parameter    ap_ST_fsm_state13 = 198'd4096;
parameter    ap_ST_fsm_state14 = 198'd8192;
parameter    ap_ST_fsm_state15 = 198'd16384;
parameter    ap_ST_fsm_state16 = 198'd32768;
parameter    ap_ST_fsm_state17 = 198'd65536;
parameter    ap_ST_fsm_state18 = 198'd131072;
parameter    ap_ST_fsm_state19 = 198'd262144;
parameter    ap_ST_fsm_state20 = 198'd524288;
parameter    ap_ST_fsm_state21 = 198'd1048576;
parameter    ap_ST_fsm_state22 = 198'd2097152;
parameter    ap_ST_fsm_state23 = 198'd4194304;
parameter    ap_ST_fsm_state24 = 198'd8388608;
parameter    ap_ST_fsm_state25 = 198'd16777216;
parameter    ap_ST_fsm_state26 = 198'd33554432;
parameter    ap_ST_fsm_state27 = 198'd67108864;
parameter    ap_ST_fsm_state28 = 198'd134217728;
parameter    ap_ST_fsm_state29 = 198'd268435456;
parameter    ap_ST_fsm_state30 = 198'd536870912;
parameter    ap_ST_fsm_state31 = 198'd1073741824;
parameter    ap_ST_fsm_state32 = 198'd2147483648;
parameter    ap_ST_fsm_state33 = 198'd4294967296;
parameter    ap_ST_fsm_state34 = 198'd8589934592;
parameter    ap_ST_fsm_state35 = 198'd17179869184;
parameter    ap_ST_fsm_state36 = 198'd34359738368;
parameter    ap_ST_fsm_state37 = 198'd68719476736;
parameter    ap_ST_fsm_state38 = 198'd137438953472;
parameter    ap_ST_fsm_state39 = 198'd274877906944;
parameter    ap_ST_fsm_state40 = 198'd549755813888;
parameter    ap_ST_fsm_state41 = 198'd1099511627776;
parameter    ap_ST_fsm_state42 = 198'd2199023255552;
parameter    ap_ST_fsm_state43 = 198'd4398046511104;
parameter    ap_ST_fsm_state44 = 198'd8796093022208;
parameter    ap_ST_fsm_state45 = 198'd17592186044416;
parameter    ap_ST_fsm_state46 = 198'd35184372088832;
parameter    ap_ST_fsm_state47 = 198'd70368744177664;
parameter    ap_ST_fsm_state48 = 198'd140737488355328;
parameter    ap_ST_fsm_state49 = 198'd281474976710656;
parameter    ap_ST_fsm_state50 = 198'd562949953421312;
parameter    ap_ST_fsm_state51 = 198'd1125899906842624;
parameter    ap_ST_fsm_state52 = 198'd2251799813685248;
parameter    ap_ST_fsm_state53 = 198'd4503599627370496;
parameter    ap_ST_fsm_state54 = 198'd9007199254740992;
parameter    ap_ST_fsm_state55 = 198'd18014398509481984;
parameter    ap_ST_fsm_state56 = 198'd36028797018963968;
parameter    ap_ST_fsm_state57 = 198'd72057594037927936;
parameter    ap_ST_fsm_state58 = 198'd144115188075855872;
parameter    ap_ST_fsm_state59 = 198'd288230376151711744;
parameter    ap_ST_fsm_state60 = 198'd576460752303423488;
parameter    ap_ST_fsm_state61 = 198'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 198'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 198'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 198'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 198'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 198'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 198'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 198'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 198'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 198'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 198'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 198'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 198'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 198'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 198'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 198'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 198'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 198'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 198'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 198'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 198'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 198'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 198'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 198'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 198'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 198'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 198'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 198'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 198'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 198'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 198'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 198'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 198'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 198'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 198'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 198'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 198'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 198'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 198'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 198'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 198'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 198'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 198'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 198'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 198'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 198'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 198'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 198'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 198'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 198'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 198'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 198'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 198'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 198'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 198'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 198'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 198'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 198'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 198'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 198'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 198'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 198'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 198'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 198'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 198'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 198'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 198'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 198'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 198'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 198'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 198'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 198'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 198'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 198'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 198'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 198'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 198'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 198'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 198'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 198'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 198'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 198'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 198'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 198'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 198'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 198'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 198'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 198'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 198'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 198'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 198'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 198'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 198'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 198'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 198'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 198'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 198'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 198'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 198'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 198'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 198'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 198'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 198'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 198'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 198'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 198'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 198'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 198'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 198'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 198'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 198'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 198'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 198'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 198'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 198'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 198'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 198'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 198'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 198'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 198'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 198'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 198'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 198'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 198'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 198'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 198'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 198'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 198'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 198'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 198'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 198'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 198'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 198'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 198'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 198'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 198'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 198'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 198'd200867255532373784442745261542645325315275374222849104412672;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] X_address0;
output   X_ce0;
input  [31:0] X_q0;
output  [8:0] P_sm_address0;
output   P_sm_ce0;
output   P_sm_we0;
output  [31:0] P_sm_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg X_ce0;
reg P_sm_ce0;
reg P_sm_we0;

(* fsm_encoding = "none" *) reg   [197:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] fc_address0;
reg    fc_ce0;
wire   [31:0] fc_q0;
wire   [8:0] theta_address0;
reg    theta_ce0;
wire   [31:0] theta_q0;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
wire   [63:0] grp_fu_1703_p1;
reg   [63:0] reg_1714;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state52;
wire   [63:0] grp_fu_1708_p2;
reg   [63:0] reg_1719;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state58;
wire   [31:0] grp_fu_1664_p2;
reg   [31:0] reg_1724;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state158;
wire    ap_CS_fsm_state167;
wire   [31:0] grp_fu_1694_p2;
reg   [31:0] reg_1731;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state197;
wire   [31:0] Un_M_imag_q0;
reg   [31:0] reg_1738;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
wire   [31:0] grp_fu_1669_p2;
reg   [31:0] reg_1744;
wire   [31:0] grp_fu_1674_p2;
reg   [31:0] reg_1750;
wire   [31:0] grp_fu_1679_p2;
reg   [31:0] reg_1755;
wire   [31:0] grp_fu_1648_p2;
reg   [31:0] reg_1760;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state163;
wire    ap_CS_fsm_state178;
wire   [31:0] grp_fu_1652_p2;
reg   [31:0] reg_1768;
wire   [31:0] a_theta_M_real_q0;
reg   [31:0] reg_1776;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state145;
wire   [31:0] a_theta_M_imag_q0;
reg   [31:0] reg_1784;
wire   [31:0] w_M_real_q0;
reg   [31:0] reg_1790;
wire    ap_CS_fsm_state173;
wire    ap_CS_fsm_state181;
wire   [9:0] add_ln202_fu_1796_p2;
reg   [9:0] add_ln202_reg_3863;
wire    ap_CS_fsm_state2;
wire   [13:0] add_ln1027_fu_1826_p2;
reg   [13:0] add_ln1027_reg_3868;
wire   [3:0] add_ln202_1_fu_1832_p2;
reg   [3:0] add_ln202_1_reg_3873;
wire    ap_CS_fsm_state3;
wire   [13:0] add_ln1027_1_fu_1842_p2;
reg   [13:0] add_ln1027_1_reg_3878;
wire   [1:0] add_ln202_2_fu_1847_p2;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln204_fu_1884_p2;
reg   [3:0] add_ln204_reg_3897;
wire    ap_CS_fsm_state5;
wire   [1:0] add_ln204_1_fu_1890_p2;
wire    ap_CS_fsm_state6;
wire   [1:0] add_ln205_fu_1922_p2;
reg   [1:0] add_ln205_reg_3913;
wire    ap_CS_fsm_state7;
wire   [1:0] add_ln205_1_fu_1928_p2;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln206_fu_1960_p2;
reg   [1:0] add_ln206_reg_3929;
wire    ap_CS_fsm_state9;
wire   [0:0] xor_ln206_fu_1966_p2;
wire    ap_CS_fsm_state10;
wire   [1:0] add_ln207_fu_1992_p2;
reg   [1:0] add_ln207_reg_3942;
wire    ap_CS_fsm_state11;
wire   [1:0] add_ln207_1_fu_1998_p2;
wire    ap_CS_fsm_state12;
wire   [8:0] add_ln208_fu_2030_p2;
reg   [8:0] add_ln208_reg_3958;
wire    ap_CS_fsm_state13;
wire   [1:0] add_ln208_1_fu_2036_p2;
wire    ap_CS_fsm_state14;
wire   [8:0] add_ln210_fu_2068_p2;
wire    ap_CS_fsm_state15;
wire   [10:0] add_ln211_2_fu_2086_p2;
reg   [10:0] add_ln211_2_reg_3982;
wire    ap_CS_fsm_state16;
wire   [1:0] add_ln211_fu_2092_p2;
reg   [1:0] add_ln211_reg_3987;
wire   [8:0] add_ln211_1_fu_2098_p2;
wire    ap_CS_fsm_state17;
wire   [3:0] l_fu_2138_p2;
reg   [3:0] l_reg_4006;
wire    ap_CS_fsm_state18;
wire   [13:0] shl_ln_fu_2144_p3;
reg   [13:0] shl_ln_reg_4011;
wire   [0:0] icmp_ln234_fu_2132_p2;
wire   [14:0] zext_ln236_fu_2152_p1;
reg   [14:0] zext_ln236_reg_4016;
wire   [2:0] n_1_fu_2162_p2;
reg   [2:0] n_1_reg_4072;
wire    ap_CS_fsm_state19;
wire   [16:0] zext_ln237_1_fu_2168_p1;
reg   [16:0] zext_ln237_1_reg_4077;
wire   [0:0] icmp_ln236_fu_2156_p2;
wire   [10:0] j_fu_2182_p2;
reg   [10:0] j_reg_4086;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln237_fu_2176_p2;
wire   [10:0] j_3_fu_2227_p2;
reg   [10:0] j_3_reg_4099;
wire    ap_CS_fsm_state23;
wire   [16:0] add_ln243_2_fu_2282_p2;
reg   [16:0] add_ln243_2_reg_4104;
wire   [0:0] icmp_ln242_fu_2221_p2;
wire   [10:0] jj_fu_2298_p2;
reg   [10:0] jj_reg_4122;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln249_fu_2292_p2;
wire    ap_CS_fsm_state26;
wire   [14:0] add_ln255_fu_2333_p2;
reg   [14:0] add_ln255_reg_4137;
wire    ap_CS_fsm_state35;
wire   [31:0] grp_fu_1700_p1;
reg   [31:0] tpf_reg_4142;
wire   [3:0] l_1_fu_2345_p2;
reg   [3:0] l_1_reg_4150;
wire    ap_CS_fsm_state36;
wire   [16:0] tmp_25_cast_fu_2360_p3;
reg   [16:0] tmp_25_cast_reg_4155;
wire   [0:0] icmp_ln252_fu_2339_p2;
wire   [6:0] zext_ln253_fu_2376_p1;
reg   [6:0] zext_ln253_reg_4160;
wire   [2:0] n_fu_2386_p2;
reg   [2:0] n_reg_4168;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln253_fu_2380_p2;
wire   [6:0] add_ln255_3_fu_2411_p2;
reg   [6:0] add_ln255_3_reg_4183;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    grp_eig_decompose_fu_1565_ap_ready;
wire    grp_eig_decompose_fu_1565_ap_done;
reg   [31:0] eigval_0_reg_4228;
reg   [31:0] eigval_1_reg_4233;
reg   [31:0] eigval_2_reg_4238;
reg   [31:0] eigval_3_reg_4243;
reg   [31:0] sort_index_0_reg_4248;
wire    ap_CS_fsm_state42;
wire    grp_sort_eigval_fu_1630_ap_ready;
wire    grp_sort_eigval_fu_1630_ap_done;
reg   [31:0] sort_index_1_reg_4253;
reg   [31:0] sort_index_2_reg_4258;
reg   [31:0] sort_index_3_reg_4263;
wire   [2:0] x_fu_2535_p2;
reg   [2:0] x_reg_4271;
wire    ap_CS_fsm_state43;
wire   [5:0] zext_ln264_fu_2549_p1;
reg   [5:0] zext_ln264_reg_4276;
wire   [0:0] icmp_ln261_fu_2529_p2;
reg   [2:0] Un_M_real_addr_1_reg_4281;
reg   [2:0] Un_M_real_addr_2_reg_4286;
reg   [2:0] Un_M_imag_addr_1_reg_4291;
reg   [2:0] Un_M_imag_addr_2_reg_4296;
wire   [2:0] y_1_fu_2589_p2;
reg   [2:0] y_1_reg_4304;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln262_fu_2583_p2;
wire   [0:0] icmp_ln263_fu_2624_p2;
reg   [0:0] icmp_ln263_reg_4319;
wire   [0:0] icmp_ln265_fu_2630_p2;
reg   [0:0] icmp_ln265_reg_4323;
wire   [10:0] add_ln271_fu_2636_p2;
reg   [10:0] add_ln271_reg_4327;
wire    ap_CS_fsm_state46;
wire   [2:0] x_1_fu_2648_p2;
reg   [2:0] x_1_reg_4335;
wire   [31:0] tmp_8_fu_2658_p6;
wire   [0:0] icmp_ln271_fu_2642_p2;
wire   [8:0] y_fu_2679_p2;
reg   [8:0] y_reg_4348;
wire    ap_CS_fsm_state50;
wire   [10:0] add_ln276_fu_2694_p2;
reg   [10:0] add_ln276_reg_4353;
wire   [0:0] icmp_ln273_fu_2673_p2;
wire    ap_CS_fsm_state51;
reg   [0:0] results_sign_V_2_reg_4368;
wire    ap_CS_fsm_state59;
wire   [10:0] tmp_V_fu_2712_p4;
reg   [10:0] tmp_V_reg_4374;
wire   [51:0] tmp_V_4_fu_2722_p1;
reg   [51:0] tmp_V_4_reg_4381;
wire   [0:0] closepath_fu_2726_p2;
reg   [0:0] closepath_reg_4387;
wire   [6:0] trunc_ln601_fu_2761_p1;
reg   [6:0] trunc_ln601_reg_4398;
reg   [169:0] ret_V_31_reg_4403;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire   [0:0] icmp_ln833_1_fu_2804_p2;
reg   [0:0] icmp_ln833_1_reg_4418;
reg   [123:0] p_Val2_74_reg_4424;
wire    ap_CS_fsm_state65;
reg   [2:0] trunc_ln_i_i_reg_4430;
wire   [2:0] p_Val2_75_fu_2829_p3;
reg   [2:0] p_Val2_75_reg_4435;
wire    ap_CS_fsm_state66;
wire   [123:0] p_Val2_50_fu_2844_p3;
reg   [123:0] p_Val2_50_reg_4441;
reg   [60:0] p_Result_i_i_i_64_reg_4446;
wire   [5:0] Mx_zeros_V_fu_2894_p1;
reg   [5:0] Mx_zeros_V_reg_4451;
wire    ap_CS_fsm_state67;
reg   [62:0] Mx_V_reg_4457;
wire    ap_CS_fsm_state68;
wire  signed [10:0] Ex_V_fu_2931_p2;
reg  signed [10:0] Ex_V_reg_4464;
reg   [0:0] isNeg_reg_4470;
wire   [0:0] icmp_ln833_fu_2945_p2;
reg   [0:0] icmp_ln833_reg_4476;
wire   [0:0] icmp_ln833_2_fu_2950_p2;
reg   [0:0] icmp_ln833_2_reg_4482;
reg   [6:0] p_Result_i_i_reg_4489;
wire    ap_CS_fsm_state69;
wire   [55:0] B_V_fu_3006_p1;
reg   [55:0] B_V_reg_4494;
reg   [48:0] B_trunc_V_reg_4499;
wire   [0:0] cos_basis_fu_3020_p10;
reg   [0:0] cos_basis_reg_4504;
wire    ap_CS_fsm_state70;
wire   [97:0] r_V_22_fu_3041_p1;
reg   [97:0] r_V_22_reg_4511;
wire   [63:0] zext_ln498_fu_3063_p1;
reg   [63:0] zext_ln498_reg_4518;
reg   [48:0] B_squared_V_reg_4535;
wire    ap_CS_fsm_state71;
reg  signed [51:0] fourth_order_double_10_reg_4541;
reg  signed [43:0] fourth_order_double_12_reg_4546;
wire   [97:0] r_V_25_fu_3079_p1;
wire    ap_CS_fsm_state72;
reg   [41:0] B_third_power_V_reg_4593;
wire    ap_CS_fsm_state73;
reg   [34:0] B_fourth_power_V_reg_4598;
reg   [58:0] p_Val2_59_reg_4603;
reg   [55:0] trunc_ln_reg_4608;
reg   [47:0] trunc_ln662_1_reg_4613;
reg   [32:0] fourth_order_double_14_reg_4618;
reg   [24:0] fourth_order_double_16_reg_4623;
wire    ap_CS_fsm_state74;
reg   [28:0] tmp_36_reg_4638;
wire   [63:0] ret_V_34_fu_3214_p2;
reg   [63:0] ret_V_34_reg_4643;
reg   [36:0] tmp_35_reg_4648;
wire    ap_CS_fsm_state75;
wire   [63:0] ret_V_fu_3241_p2;
reg  signed [63:0] ret_V_reg_4653;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
reg   [62:0] result_V_reg_4668;
wire    ap_CS_fsm_state81;
wire   [11:0] ret_V_28_fu_3287_p2;
reg   [11:0] ret_V_28_reg_4673;
wire   [0:0] and_ln300_fu_3409_p2;
reg   [0:0] and_ln300_reg_4678;
wire    ap_CS_fsm_state82;
wire    grp_scaled_fixed2ieee_fu_1642_ap_ready;
wire    grp_scaled_fixed2ieee_fu_1642_ap_done;
wire   [0:0] select_ln311_fu_3423_p3;
reg   [0:0] select_ln311_reg_4683;
wire   [10:0] ret_V_29_fu_3454_p3;
reg   [10:0] ret_V_29_reg_4688;
wire   [51:0] ret_V_30_fu_3470_p3;
reg   [51:0] ret_V_30_reg_4693;
wire   [63:0] bitcast_ln512_fu_3491_p1;
wire    ap_CS_fsm_state83;
reg   [31:0] sinpitheta_reg_4703;
wire    ap_CS_fsm_state84;
reg   [31:0] tmp_7_reg_4708;
wire    ap_CS_fsm_state88;
wire   [2:0] i_5_fu_3522_p2;
reg   [2:0] i_5_reg_4716;
wire    ap_CS_fsm_state107;
wire   [4:0] zext_ln287_fu_3536_p1;
reg   [4:0] zext_ln287_reg_4721;
wire   [0:0] icmp_ln280_fu_3516_p2;
wire   [5:0] zext_ln281_fu_3548_p1;
reg   [5:0] zext_ln281_reg_4726;
wire   [2:0] j_4_fu_3558_p2;
reg   [2:0] j_4_reg_4734;
wire    ap_CS_fsm_state108;
wire   [4:0] zext_ln287_1_fu_3576_p1;
reg   [4:0] zext_ln287_1_reg_4739;
wire   [0:0] icmp_ln281_fu_3552_p2;
reg   [3:0] temp_mat_M_real_add_1_reg_4744;
reg   [3:0] temp_mat_M_imag_add_1_reg_4749;
wire   [1:0] k_fu_3597_p2;
reg   [1:0] k_reg_4757;
wire    ap_CS_fsm_state109;
wire   [4:0] add_ln285_fu_3607_p2;
reg   [4:0] add_ln285_reg_4762;
wire   [0:0] icmp_ln284_fu_3591_p2;
wire   [31:0] Un_M_real_q0;
reg   [31:0] p_t_real_reg_4787;
wire   [31:0] p_t_imag_fu_3638_p1;
wire    ap_CS_fsm_state124;
wire   [8:0] i_6_fu_3650_p2;
reg   [8:0] i_6_reg_4818;
wire    ap_CS_fsm_state125;
wire   [10:0] zext_ln297_fu_3656_p1;
reg   [10:0] zext_ln297_reg_4823;
wire   [0:0] icmp_ln290_fu_3644_p2;
wire   [11:0] zext_ln291_fu_3668_p1;
reg   [11:0] zext_ln291_reg_4828;
wire   [2:0] j_5_fu_3678_p2;
reg   [2:0] j_5_reg_4836;
wire    ap_CS_fsm_state126;
wire   [5:0] zext_ln297_1_fu_3684_p1;
reg   [5:0] zext_ln297_1_reg_4841;
wire   [0:0] icmp_ln291_fu_3672_p2;
reg   [10:0] AUU_M_real_addr_2_reg_4846;
reg   [10:0] AUU_M_imag_addr_2_reg_4851;
wire   [2:0] k_3_fu_3709_p2;
reg   [2:0] k_3_reg_4859;
wire    ap_CS_fsm_state127;
wire   [5:0] add_ln295_fu_3727_p2;
reg   [5:0] add_ln295_reg_4864;
wire   [0:0] icmp_ln294_fu_3703_p2;
wire   [10:0] add_ln295_2_fu_3732_p2;
reg   [10:0] add_ln295_2_reg_4869;
wire   [31:0] p_r_M_imag_10_fu_3764_p1;
wire    ap_CS_fsm_state129;
wire   [31:0] temp_mat_M_real_q0;
wire   [31:0] temp_mat_M_imag_q0;
wire    ap_CS_fsm_state142;
wire   [8:0] i_7_fu_3776_p2;
reg   [8:0] i_7_reg_4925;
wire    ap_CS_fsm_state143;
wire   [63:0] zext_ln304_fu_3782_p1;
reg   [63:0] zext_ln304_reg_4930;
wire   [0:0] icmp_ln300_fu_3770_p2;
wire   [10:0] zext_ln304_1_fu_3786_p1;
reg   [10:0] zext_ln304_1_reg_4936;
wire   [11:0] zext_ln303_fu_3798_p1;
reg   [11:0] zext_ln303_reg_4941;
wire   [2:0] k_2_fu_3808_p2;
reg   [2:0] k_2_reg_4949;
wire    ap_CS_fsm_state144;
wire   [0:0] icmp_ln303_fu_3802_p2;
wire   [10:0] add_ln304_2_fu_3829_p2;
reg   [10:0] add_ln304_2_reg_4964;
reg   [8:0] w_M_real_addr_2_reg_4979;
reg   [8:0] w_M_imag_addr_1_reg_4984;
wire   [31:0] AUU_M_real_q0;
reg   [31:0] p_r_M_real_8_reg_4989;
wire   [31:0] AUU_M_imag_q0;
reg   [31:0] p_r_M_imag_8_reg_4995;
wire    ap_CS_fsm_state172;
wire   [31:0] w_M_imag_q0;
reg   [31:0] w_M_imag_load_reg_5011;
wire   [8:0] i_fu_3852_p2;
reg   [8:0] i_reg_5019;
wire    ap_CS_fsm_state180;
wire   [63:0] zext_ln312_fu_3858_p1;
reg   [63:0] zext_ln312_reg_5024;
wire   [0:0] icmp_ln310_fu_3846_p2;
reg   [9:0] FFT_Buffer_re_address0;
reg    FFT_Buffer_re_ce0;
reg    FFT_Buffer_re_we0;
reg   [31:0] FFT_Buffer_re_d0;
wire   [31:0] FFT_Buffer_re_q0;
reg    FFT_Buffer_re_ce1;
reg    FFT_Buffer_re_we1;
wire   [31:0] FFT_Buffer_re_q1;
reg   [9:0] FFT_Buffer_im_address0;
reg    FFT_Buffer_im_ce0;
reg    FFT_Buffer_im_we0;
reg   [31:0] FFT_Buffer_im_d0;
wire   [31:0] FFT_Buffer_im_q0;
reg    FFT_Buffer_im_ce1;
reg    FFT_Buffer_im_we1;
wire   [31:0] FFT_Buffer_im_q1;
reg   [15:0] Xj_f_M_real_address0;
reg    Xj_f_M_real_ce0;
reg    Xj_f_M_real_we0;
reg   [31:0] Xj_f_M_real_d0;
wire   [31:0] Xj_f_M_real_q0;
reg   [15:0] Xj_f_M_imag_address0;
reg    Xj_f_M_imag_ce0;
reg    Xj_f_M_imag_we0;
reg   [31:0] Xj_f_M_imag_d0;
wire   [31:0] Xj_f_M_imag_q0;
reg   [5:0] Autocorr_Buffer_M_r_address0;
reg    Autocorr_Buffer_M_r_ce0;
reg    Autocorr_Buffer_M_r_we0;
reg   [31:0] Autocorr_Buffer_M_r_d0;
wire   [31:0] Autocorr_Buffer_M_r_q0;
reg    Autocorr_Buffer_M_r_ce1;
wire   [31:0] Autocorr_Buffer_M_r_q1;
reg   [5:0] Autocorr_Buffer_M_i_address0;
reg    Autocorr_Buffer_M_i_ce0;
reg    Autocorr_Buffer_M_i_we0;
reg   [31:0] Autocorr_Buffer_M_i_d0;
wire   [31:0] Autocorr_Buffer_M_i_q0;
reg    Autocorr_Buffer_M_i_ce1;
wire   [31:0] Autocorr_Buffer_M_i_q1;
reg   [3:0] U_M_real_address0;
reg    U_M_real_ce0;
reg    U_M_real_we0;
reg   [31:0] U_M_real_d0;
wire   [31:0] U_M_real_q0;
reg   [3:0] U_M_imag_address0;
reg    U_M_imag_ce0;
reg    U_M_imag_we0;
reg   [31:0] U_M_imag_d0;
wire   [31:0] U_M_imag_q0;
reg   [2:0] Un_M_real_address0;
reg    Un_M_real_ce0;
reg    Un_M_real_we0;
reg   [31:0] Un_M_real_d0;
reg   [2:0] Un_M_imag_address0;
reg    Un_M_imag_ce0;
reg    Un_M_imag_we0;
reg   [31:0] Un_M_imag_d0;
reg   [3:0] temp_mat_M_real_address0;
reg    temp_mat_M_real_ce0;
reg    temp_mat_M_real_we0;
reg   [31:0] temp_mat_M_real_d0;
reg   [3:0] temp_mat_M_imag_address0;
reg    temp_mat_M_imag_ce0;
reg    temp_mat_M_imag_we0;
reg   [31:0] temp_mat_M_imag_d0;
reg   [10:0] AUU_M_real_address0;
reg    AUU_M_real_ce0;
reg    AUU_M_real_we0;
reg   [31:0] AUU_M_real_d0;
reg   [10:0] AUU_M_imag_address0;
reg    AUU_M_imag_ce0;
reg    AUU_M_imag_we0;
reg   [31:0] AUU_M_imag_d0;
reg   [8:0] w_M_real_address0;
reg    w_M_real_ce0;
reg    w_M_real_we0;
reg   [31:0] w_M_real_d0;
reg   [8:0] w_M_imag_address0;
reg    w_M_imag_ce0;
reg    w_M_imag_we0;
reg   [31:0] w_M_imag_d0;
reg   [10:0] a_theta_M_real_address0;
reg    a_theta_M_real_ce0;
reg    a_theta_M_real_we0;
reg   [31:0] a_theta_M_real_d0;
reg   [10:0] a_theta_M_imag_address0;
reg    a_theta_M_imag_ce0;
reg    a_theta_M_imag_we0;
reg   [31:0] a_theta_M_imag_d0;
wire    grp_eig_decompose_fu_1565_ap_start;
wire    grp_eig_decompose_fu_1565_ap_idle;
wire   [3:0] grp_eig_decompose_fu_1565_Rx_M_real_address0;
wire    grp_eig_decompose_fu_1565_Rx_M_real_ce0;
wire   [3:0] grp_eig_decompose_fu_1565_Rx_M_imag_address0;
wire    grp_eig_decompose_fu_1565_Rx_M_imag_ce0;
wire   [3:0] grp_eig_decompose_fu_1565_U_M_real_address0;
wire    grp_eig_decompose_fu_1565_U_M_real_ce0;
wire    grp_eig_decompose_fu_1565_U_M_real_we0;
wire   [31:0] grp_eig_decompose_fu_1565_U_M_real_d0;
wire   [3:0] grp_eig_decompose_fu_1565_U_M_imag_address0;
wire    grp_eig_decompose_fu_1565_U_M_imag_ce0;
wire    grp_eig_decompose_fu_1565_U_M_imag_we0;
wire   [31:0] grp_eig_decompose_fu_1565_U_M_imag_d0;
wire   [31:0] grp_eig_decompose_fu_1565_ap_return_0;
wire   [31:0] grp_eig_decompose_fu_1565_ap_return_1;
wire   [31:0] grp_eig_decompose_fu_1565_ap_return_2;
wire   [31:0] grp_eig_decompose_fu_1565_ap_return_3;
wire    grp_fft_fu_1577_ap_start;
wire    grp_fft_fu_1577_ap_done;
wire    grp_fft_fu_1577_ap_idle;
wire    grp_fft_fu_1577_ap_ready;
wire   [9:0] grp_fft_fu_1577_X_R_address0;
wire    grp_fft_fu_1577_X_R_ce0;
wire    grp_fft_fu_1577_X_R_we0;
wire   [31:0] grp_fft_fu_1577_X_R_d0;
wire   [9:0] grp_fft_fu_1577_X_R_address1;
wire    grp_fft_fu_1577_X_R_ce1;
wire    grp_fft_fu_1577_X_R_we1;
wire   [31:0] grp_fft_fu_1577_X_R_d1;
wire   [9:0] grp_fft_fu_1577_X_I_address0;
wire    grp_fft_fu_1577_X_I_ce0;
wire    grp_fft_fu_1577_X_I_we0;
wire   [31:0] grp_fft_fu_1577_X_I_d0;
wire   [9:0] grp_fft_fu_1577_X_I_address1;
wire    grp_fft_fu_1577_X_I_ce1;
wire    grp_fft_fu_1577_X_I_we1;
wire   [31:0] grp_fft_fu_1577_X_I_d1;
wire    grp_Autocorrelation_fu_1591_ap_start;
wire    grp_Autocorrelation_fu_1591_ap_done;
wire    grp_Autocorrelation_fu_1591_ap_idle;
wire    grp_Autocorrelation_fu_1591_ap_ready;
wire   [5:0] grp_Autocorrelation_fu_1591_X_M_real_address0;
wire    grp_Autocorrelation_fu_1591_X_M_real_ce0;
wire   [5:0] grp_Autocorrelation_fu_1591_X_M_real_address1;
wire    grp_Autocorrelation_fu_1591_X_M_real_ce1;
wire   [5:0] grp_Autocorrelation_fu_1591_X_M_imag_address0;
wire    grp_Autocorrelation_fu_1591_X_M_imag_ce0;
wire   [5:0] grp_Autocorrelation_fu_1591_X_M_imag_address1;
wire    grp_Autocorrelation_fu_1591_X_M_imag_ce1;
wire   [3:0] grp_Autocorrelation_fu_1591_Rx_M_real_address0;
wire    grp_Autocorrelation_fu_1591_Rx_M_real_ce0;
wire    grp_Autocorrelation_fu_1591_Rx_M_real_we0;
wire   [31:0] grp_Autocorrelation_fu_1591_Rx_M_real_d0;
wire   [3:0] grp_Autocorrelation_fu_1591_Rx_M_imag_address0;
wire    grp_Autocorrelation_fu_1591_Rx_M_imag_ce0;
wire    grp_Autocorrelation_fu_1591_Rx_M_imag_we0;
wire   [31:0] grp_Autocorrelation_fu_1591_Rx_M_imag_d0;
wire    grp_sin_or_cos_float_s_fu_1599_ap_start;
wire    grp_sin_or_cos_float_s_fu_1599_ap_done;
wire    grp_sin_or_cos_float_s_fu_1599_ap_idle;
wire    grp_sin_or_cos_float_s_fu_1599_ap_ready;
wire    grp_sin_or_cos_float_s_fu_1599_do_cos;
wire   [31:0] grp_sin_or_cos_float_s_fu_1599_ap_return;
wire    grp_sin_or_cos_float_s_fu_1615_ap_start;
wire    grp_sin_or_cos_float_s_fu_1615_ap_done;
wire    grp_sin_or_cos_float_s_fu_1615_ap_idle;
wire    grp_sin_or_cos_float_s_fu_1615_ap_ready;
wire    grp_sin_or_cos_float_s_fu_1615_do_cos;
wire   [31:0] grp_sin_or_cos_float_s_fu_1615_ap_return;
wire    grp_sort_eigval_fu_1630_ap_start;
wire    grp_sort_eigval_fu_1630_ap_idle;
wire   [31:0] grp_sort_eigval_fu_1630_ap_return_0;
wire   [31:0] grp_sort_eigval_fu_1630_ap_return_1;
wire   [31:0] grp_sort_eigval_fu_1630_ap_return_2;
wire   [31:0] grp_sort_eigval_fu_1630_ap_return_3;
wire    grp_scaled_fixed2ieee_fu_1642_ap_start;
wire    grp_scaled_fixed2ieee_fu_1642_ap_idle;
wire   [63:0] grp_scaled_fixed2ieee_fu_1642_ap_return;
reg   [9:0] phi_ln202_reg_1037;
wire   [0:0] icmp_ln202_fu_1866_p2;
wire   [0:0] icmp_ln202_1_fu_1872_p2;
wire   [0:0] icmp_ln202_2_fu_1878_p2;
reg   [3:0] phi_ln202_1_reg_1049;
reg   [1:0] phi_ln202_2_reg_1061;
reg   [3:0] phi_ln204_reg_1072;
wire   [0:0] icmp_ln204_fu_1910_p2;
wire   [0:0] icmp_ln204_1_fu_1916_p2;
reg   [1:0] phi_ln204_1_reg_1084;
reg   [1:0] phi_ln205_reg_1095;
wire   [0:0] icmp_ln205_fu_1948_p2;
wire   [0:0] icmp_ln205_1_fu_1954_p2;
reg   [1:0] phi_ln205_1_reg_1107;
reg   [1:0] phi_ln206_reg_1118;
wire   [0:0] ap_phi_mux_phi_ln206_1_phi_fu_1134_p4;
wire   [0:0] icmp_ln206_fu_1986_p2;
reg   [0:0] phi_ln206_1_reg_1130;
reg   [1:0] phi_ln207_reg_1141;
wire   [0:0] icmp_ln207_fu_2018_p2;
wire   [0:0] icmp_ln207_1_fu_2024_p2;
reg   [1:0] phi_ln207_1_reg_1153;
reg   [8:0] phi_ln208_reg_1164;
wire   [0:0] icmp_ln208_fu_2056_p2;
wire   [0:0] icmp_ln208_1_fu_2062_p2;
reg   [1:0] phi_ln208_1_reg_1176;
reg   [8:0] phi_ln210_reg_1187;
wire   [0:0] icmp_ln210_fu_2080_p2;
reg   [1:0] phi_ln211_reg_1198;
wire   [0:0] icmp_ln211_fu_2120_p2;
wire   [0:0] icmp_ln211_1_fu_2126_p2;
reg   [10:0] phi_mul_reg_1210;
reg   [8:0] phi_ln211_1_reg_1222;
reg   [3:0] l_0_reg_1233;
reg   [2:0] n_0_reg_1244;
reg   [10:0] j32_0_reg_1255;
wire    ap_CS_fsm_state21;
reg   [10:0] j33_0_reg_1267;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state24;
reg   [10:0] jj_0_reg_1278;
reg   [3:0] l34_0_reg_1290;
reg   [2:0] n35_0_reg_1301;
wire    ap_CS_fsm_state38;
reg   [2:0] x_0_reg_1312;
reg   [2:0] y_0_reg_1323;
wire    ap_CS_fsm_state45;
reg   [2:0] x36_0_reg_1334;
reg   [10:0] phi_mul7_reg_1345;
reg   [8:0] y37_0_reg_1357;
wire    ap_CS_fsm_state106;
reg    ap_block_state106_on_subcall_done;
reg   [2:0] i38_0_reg_1368;
reg   [2:0] j39_0_reg_1379;
reg   [31:0] complex_M_imag_read_reg_1390;
reg   [31:0] complex_M_real_read_reg_1403;
reg   [1:0] k_0_reg_1416;
reg   [8:0] i40_0_reg_1427;
reg   [2:0] j41_0_reg_1438;
reg   [31:0] complex_M_imag_read_1_reg_1449;
reg   [31:0] complex_M_real_read_1_reg_1462;
reg   [2:0] k42_0_reg_1475;
reg   [10:0] phi_mul9_reg_1486;
reg   [8:0] i43_0_reg_1497;
wire    ap_CS_fsm_state179;
reg   [31:0] complex_M_imag_read_2_reg_1508;
reg   [31:0] complex_M_real_read_2_reg_1520;
reg   [2:0] k44_0_reg_1532;
reg   [10:0] phi_mul11_reg_1543;
reg   [8:0] i45_0_reg_1554;
wire    ap_CS_fsm_state198;
reg    grp_eig_decompose_fu_1565_ap_start_reg;
reg    grp_fft_fu_1577_ap_start_reg;
reg    grp_Autocorrelation_fu_1591_ap_start_reg;
wire    ap_CS_fsm_state39;
reg    grp_sin_or_cos_float_s_fu_1599_ap_start_reg;
wire    ap_CS_fsm_state105;
reg    grp_sin_or_cos_float_s_fu_1615_ap_start_reg;
reg    grp_sort_eigval_fu_1630_ap_start_reg;
reg    grp_scaled_fixed2ieee_fu_1642_ap_start_reg;
wire   [63:0] zext_ln1027_9_fu_1860_p1;
wire   [63:0] zext_ln1027_3_fu_1904_p1;
wire   [63:0] zext_ln1027_4_fu_1942_p1;
wire   [63:0] zext_ln1027_5_fu_1980_p1;
wire   [63:0] zext_ln1027_6_fu_2012_p1;
wire   [63:0] zext_ln1027_7_fu_2050_p1;
wire   [63:0] zext_ln210_fu_2074_p1;
wire   [63:0] zext_ln1027_11_fu_2114_p1;
wire   [63:0] zext_ln238_1_fu_2210_p1;
wire   [63:0] zext_ln238_2_fu_2215_p1;
wire   [63:0] zext_ln243_fu_2233_p1;
wire   [63:0] zext_ln243_3_fu_2287_p1;
wire   [63:0] zext_ln251_fu_2304_p1;
wire   [63:0] zext_ln255_5_fu_2405_p1;
wire   [63:0] zext_ln255_6_fu_2416_p1;
wire   [63:0] zext_ln264_1_fu_2561_p1;
wire   [63:0] tmp_30_fu_2573_p3;
wire   [63:0] zext_ln264_3_fu_2604_p1;
wire   [63:0] zext_ln275_fu_2685_p1;
wire   [63:0] zext_ln635_fu_2756_p1;
wire   [63:0] zext_ln276_1_fu_3496_p1;
wire   [63:0] zext_ln287_2_fu_3585_p1;
wire   [63:0] zext_ln285_3_fu_3617_p1;
wire   [63:0] zext_ln285_2_fu_3623_p1;
wire   [63:0] zext_ln297_3_fu_3697_p1;
wire   [63:0] zext_ln295_2_fu_3743_p1;
wire   [63:0] zext_ln295_1_fu_3749_p1;
wire   [63:0] zext_ln304_3_fu_3823_p1;
wire   [63:0] zext_ln304_4_fu_3840_p1;
reg   [31:0] eigval_0_1_fu_398;
reg   [31:0] eigval_1_1_fu_402;
reg   [31:0] eigval_2_1_fu_406;
reg   [31:0] eigval_3_1_fu_410;
reg   [31:0] sort_index_0_1_fu_414;
reg   [31:0] sort_index_1_1_fu_418;
reg   [31:0] sort_index_2_1_fu_422;
reg   [31:0] sort_index_3_1_fu_426;
wire   [31:0] bitcast_ln277_1_fu_3511_p1;
reg   [31:0] grp_fu_1648_p0;
reg   [31:0] grp_fu_1648_p1;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state150;
wire    ap_CS_fsm_state159;
wire    ap_CS_fsm_state168;
wire    ap_CS_fsm_state174;
reg   [31:0] grp_fu_1652_p0;
reg   [31:0] grp_fu_1652_p1;
reg   [31:0] grp_fu_1664_p0;
reg   [31:0] grp_fu_1664_p1;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state164;
reg   [31:0] grp_fu_1669_p0;
reg   [31:0] grp_fu_1669_p1;
reg   [31:0] grp_fu_1674_p0;
reg   [31:0] grp_fu_1674_p1;
reg   [31:0] grp_fu_1679_p0;
reg   [31:0] grp_fu_1679_p1;
reg   [31:0] grp_fu_1694_p0;
reg   [31:0] grp_fu_1694_p1;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state182;
reg   [63:0] grp_fu_1700_p0;
wire    ap_CS_fsm_state34;
reg   [31:0] grp_fu_1703_p0;
reg   [63:0] grp_fu_1708_p1;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state53;
wire   [12:0] tmp_13_fu_1802_p3;
wire   [10:0] tmp_14_fu_1814_p3;
wire   [13:0] zext_ln1027_2_fu_1822_p1;
wire   [13:0] zext_ln1027_fu_1810_p1;
wire   [13:0] zext_ln1027_8_fu_1838_p1;
wire   [15:0] tmp_15_fu_1853_p3;
wire   [5:0] tmp_17_fu_1896_p3;
wire   [3:0] tmp_16_fu_1934_p3;
wire   [2:0] tmp_18_fu_1972_p3;
wire   [3:0] tmp_19_fu_2004_p3;
wire   [10:0] tmp_20_fu_2042_p3;
wire   [10:0] zext_ln1027_10_fu_2104_p1;
wire   [10:0] add_ln1027_2_fu_2108_p2;
wire   [13:0] zext_ln237_fu_2172_p1;
wire   [13:0] add_ln238_fu_2188_p2;
wire   [15:0] tmp_27_fu_2193_p3;
wire   [16:0] zext_ln238_fu_2201_p1;
wire   [16:0] add_ln238_1_fu_2205_p2;
wire   [13:0] tmp_31_fu_2239_p3;
wire   [11:0] tmp_32_fu_2251_p3;
wire   [14:0] zext_ln243_2_fu_2259_p1;
wire   [14:0] zext_ln243_1_fu_2247_p1;
wire   [14:0] add_ln243_fu_2263_p2;
wire   [14:0] add_ln243_1_fu_2269_p2;
wire   [16:0] tmp_34_cast_fu_2274_p3;
wire   [13:0] tmp_22_fu_2309_p3;
wire   [11:0] tmp_23_fu_2321_p3;
wire   [14:0] zext_ln255_1_fu_2329_p1;
wire   [14:0] zext_ln255_fu_2317_p1;
wire   [14:0] zext_ln255_2_fu_2351_p1;
wire   [14:0] add_ln255_1_fu_2355_p2;
wire   [5:0] tmp_26_fu_2368_p3;
wire   [16:0] zext_ln255_4_fu_2396_p1;
wire   [16:0] add_ln255_2_fu_2400_p2;
wire   [6:0] zext_ln255_3_fu_2392_p1;
wire   [4:0] tmp_28_fu_2541_p3;
wire   [3:0] tmp_29_fu_2553_p3;
wire   [3:0] or_ln266_fu_2567_p2;
wire   [5:0] zext_ln264_2_fu_2595_p1;
wire   [5:0] add_ln264_fu_2599_p2;
wire   [1:0] tmp_9_fu_2614_p5;
wire   [31:0] tmp_9_fu_2614_p6;
wire   [1:0] tmp_8_fu_2658_p5;
wire   [10:0] zext_ln276_fu_2690_p1;
wire   [63:0] p_Val2_s_fu_2700_p1;
wire   [10:0] add_ln114_1_fu_2732_p2;
wire   [10:0] addr_V_fu_2738_p3;
wire   [3:0] p_Result_i_i_i_fu_2746_p4;
wire   [255:0] zext_ln744_fu_2765_p1;
wire   [255:0] r_V_34_fu_2768_p2;
wire   [52:0] p_Result_56_fu_2784_p3;
wire   [169:0] grp_fu_2798_p0;
wire   [52:0] grp_fu_2798_p1;
wire   [222:0] grp_fu_2798_p2;
wire   [0:0] trunc_ln745_fu_2835_p1;
wire   [123:0] Mx_bits_V_2_fu_2839_p2;
wire   [61:0] p_Result_57_fu_2861_p3;
reg   [61:0] p_Result_s_fu_2868_p4;
wire   [63:0] p_Result_58_fu_2878_p3;
reg   [63:0] tmp_i_i_i1_fu_2886_p3;
wire   [10:0] add_ln114_fu_2898_p2;
wire   [123:0] zext_ln1253_fu_2910_p1;
wire   [123:0] r_V_35_fu_2913_p2;
wire   [10:0] select_ln482_fu_2903_p3;
wire   [10:0] zext_ln655_fu_2928_p1;
wire  signed [11:0] sext_ln1334_fu_2955_p1;
wire   [11:0] sub_ln1311_fu_2958_p2;
wire   [11:0] ush_fu_2964_p3;
wire  signed [31:0] sext_ln1311_fu_2971_p1;
wire   [62:0] zext_ln1287_fu_2975_p1;
wire   [62:0] r_V_fu_2979_p2;
wire   [62:0] r_V_20_fu_2984_p2;
wire   [62:0] r_V_36_fu_2989_p3;
wire   [48:0] grp_fu_3044_p0;
wire   [48:0] grp_fu_3044_p1;
wire   [0:0] sin_basis_fu_3050_p2;
wire   [7:0] p_Result_59_fu_3056_p3;
wire   [97:0] grp_fu_3044_p2;
wire   [48:0] grp_fu_3082_p0;
wire   [48:0] grp_fu_3082_p1;
wire   [48:0] grp_fu_3087_p0;
wire   [48:0] grp_fu_3087_p1;
wire   [55:0] grp_fu_3099_p0;
wire   [48:0] grp_fu_3111_p0;
wire   [97:0] grp_fu_3082_p2;
wire   [97:0] grp_fu_3087_p2;
wire   [107:0] grp_fu_3099_p2;
wire   [92:0] grp_fu_3111_p2;
wire   [41:0] grp_fu_3170_p0;
wire   [32:0] grp_fu_3170_p1;
wire   [34:0] r_V_43_fu_3182_p0;
wire   [24:0] r_V_43_fu_3182_p1;
wire   [59:0] r_V_43_fu_3182_p2;
wire   [62:0] t1_V_fu_3157_p3;
wire  signed [63:0] lhs_V_2_fu_3198_p1;
wire  signed [63:0] rhs_V_3_fu_3202_p1;
wire   [63:0] ret_V_33_fu_3205_p2;
wire  signed [63:0] sext_ln657_fu_3211_p1;
wire   [74:0] grp_fu_3170_p2;
wire   [63:0] zext_ln657_fu_3230_p1;
wire   [63:0] ret_V_35_fu_3233_p2;
wire   [63:0] zext_ln657_1_fu_3238_p1;
wire   [62:0] select_ln272_2_fu_3247_p3;
wire   [62:0] grp_fu_3260_p1;
wire   [125:0] grp_fu_3260_p2;
wire   [10:0] select_ln272_fu_3266_p3;
wire  signed [11:0] rhs_V_4_fu_3283_p1;
wire   [63:0] p_Val2_70_fu_3294_p1;
wire   [3:0] p_Result_61_fu_3320_p3;
wire   [0:0] tmp_11_fu_3326_p18;
wire   [0:0] tmp_12_fu_3364_p18;
wire   [0:0] select_ln271_fu_3402_p3;
wire   [0:0] or_ln311_fu_3418_p2;
wire   [0:0] xor_ln311_fu_3413_p2;
wire   [0:0] p_Result_60_fu_3298_p3;
wire   [0:0] and_ln300_2_fu_3431_p2;
wire   [0:0] xor_ln300_fu_3435_p2;
wire   [0:0] or_ln300_fu_3449_p2;
wire   [10:0] select_ln300_4_fu_3441_p3;
wire   [10:0] tmp_V_5_fu_3306_p4;
wire   [51:0] select_ln300_6_fu_3462_p3;
wire   [51:0] tmp_V_6_fu_3316_p1;
wire   [0:0] p_Repl2_6_fu_3478_p3;
wire   [63:0] p_Result_62_fu_3483_p4;
wire   [31:0] bitcast_ln277_fu_3501_p1;
wire   [31:0] xor_ln277_fu_3505_p2;
wire   [3:0] tmp_33_fu_3528_p3;
wire   [4:0] tmp_34_fu_3540_p3;
wire   [3:0] tmp_38_fu_3568_p3;
wire   [5:0] zext_ln285_fu_3564_p1;
wire   [5:0] add_ln287_fu_3580_p2;
wire   [4:0] zext_ln285_1_fu_3603_p1;
wire   [4:0] add_ln285_1_fu_3612_p2;
wire   [31:0] bitcast_ln667_fu_3628_p1;
wire   [31:0] xor_ln667_fu_3632_p2;
wire   [10:0] tmp_37_fu_3660_p3;
wire   [11:0] zext_ln297_2_fu_3688_p1;
wire   [11:0] add_ln297_fu_3692_p2;
wire   [4:0] tmp_40_fu_3715_p3;
wire   [5:0] zext_ln295_fu_3723_p1;
wire   [10:0] add_ln295_1_fu_3738_p2;
wire   [31:0] bitcast_ln667_2_fu_3754_p1;
wire   [31:0] xor_ln667_1_fu_3758_p2;
wire   [10:0] tmp_39_fu_3790_p3;
wire   [11:0] zext_ln304_2_fu_3814_p1;
wire   [11:0] add_ln304_fu_3818_p2;
wire   [10:0] add_ln304_1_fu_3835_p2;
reg   [1:0] grp_fu_1648_opcode;
reg   [1:0] grp_fu_1652_opcode;
reg   [197:0] ap_NS_fsm;
wire   [222:0] grp_fu_2798_p00;
wire   [222:0] grp_fu_2798_p10;
wire   [107:0] grp_fu_3099_p00;
wire   [92:0] grp_fu_3111_p00;
wire   [74:0] grp_fu_3170_p00;
wire   [74:0] grp_fu_3170_p10;
wire   [125:0] grp_fu_3260_p10;
wire   [59:0] r_V_43_fu_3182_p00;
wire   [59:0] r_V_43_fu_3182_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 198'd1;
#0 grp_eig_decompose_fu_1565_ap_start_reg = 1'b0;
#0 grp_fft_fu_1577_ap_start_reg = 1'b0;
#0 grp_Autocorrelation_fu_1591_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_1599_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_1615_ap_start_reg = 1'b0;
#0 grp_sort_eigval_fu_1630_ap_start_reg = 1'b0;
#0 grp_scaled_fixed2ieee_fu_1642_ap_start_reg = 1'b0;
end

music_fc #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
fc_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_address0),
    .ce0(fc_ce0),
    .q0(fc_q0)
);

music_theta #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
theta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(theta_address0),
    .ce0(theta_ce0),
    .q0(theta_q0)
);

music_ref_4oPi_taAem #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

music_fourth_ordeBew #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

music_fourth_ordeCeG #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

music_fourth_ordeDeQ #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

music_fourth_ordeEe0 #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

music_fourth_ordeFfa #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

music_FFT_Buffer_re #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
FFT_Buffer_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FFT_Buffer_re_address0),
    .ce0(FFT_Buffer_re_ce0),
    .we0(FFT_Buffer_re_we0),
    .d0(FFT_Buffer_re_d0),
    .q0(FFT_Buffer_re_q0),
    .address1(grp_fft_fu_1577_X_R_address1),
    .ce1(FFT_Buffer_re_ce1),
    .we1(FFT_Buffer_re_we1),
    .d1(grp_fft_fu_1577_X_R_d1),
    .q1(FFT_Buffer_re_q1)
);

music_FFT_Buffer_re #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
FFT_Buffer_im_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FFT_Buffer_im_address0),
    .ce0(FFT_Buffer_im_ce0),
    .we0(FFT_Buffer_im_we0),
    .d0(FFT_Buffer_im_d0),
    .q0(FFT_Buffer_im_q0),
    .address1(grp_fft_fu_1577_X_I_address1),
    .ce1(FFT_Buffer_im_ce1),
    .we1(FFT_Buffer_im_we1),
    .d1(grp_fft_fu_1577_X_I_d1),
    .q1(FFT_Buffer_im_q1)
);

music_Xj_f_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 40960 ),
    .AddressWidth( 16 ))
Xj_f_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Xj_f_M_real_address0),
    .ce0(Xj_f_M_real_ce0),
    .we0(Xj_f_M_real_we0),
    .d0(Xj_f_M_real_d0),
    .q0(Xj_f_M_real_q0)
);

music_Xj_f_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 40960 ),
    .AddressWidth( 16 ))
Xj_f_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Xj_f_M_imag_address0),
    .ce0(Xj_f_M_imag_ce0),
    .we0(Xj_f_M_imag_we0),
    .d0(Xj_f_M_imag_d0),
    .q0(Xj_f_M_imag_q0)
);

music_Autocorr_BuGfk #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
Autocorr_Buffer_M_r_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Autocorr_Buffer_M_r_address0),
    .ce0(Autocorr_Buffer_M_r_ce0),
    .we0(Autocorr_Buffer_M_r_we0),
    .d0(Autocorr_Buffer_M_r_d0),
    .q0(Autocorr_Buffer_M_r_q0),
    .address1(grp_Autocorrelation_fu_1591_X_M_real_address1),
    .ce1(Autocorr_Buffer_M_r_ce1),
    .q1(Autocorr_Buffer_M_r_q1)
);

music_Autocorr_BuGfk #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
Autocorr_Buffer_M_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Autocorr_Buffer_M_i_address0),
    .ce0(Autocorr_Buffer_M_i_ce0),
    .we0(Autocorr_Buffer_M_i_we0),
    .d0(Autocorr_Buffer_M_i_d0),
    .q0(Autocorr_Buffer_M_i_q0),
    .address1(grp_Autocorrelation_fu_1591_X_M_imag_address1),
    .ce1(Autocorr_Buffer_M_i_ce1),
    .q1(Autocorr_Buffer_M_i_q1)
);

eig_decompose_Q_tsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
U_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(U_M_real_address0),
    .ce0(U_M_real_ce0),
    .we0(U_M_real_we0),
    .d0(U_M_real_d0),
    .q0(U_M_real_q0)
);

eig_decompose_Q_tsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
U_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(U_M_imag_address0),
    .ce0(U_M_imag_ce0),
    .we0(U_M_imag_we0),
    .d0(U_M_imag_d0),
    .q0(U_M_imag_q0)
);

music_Un_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Un_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Un_M_real_address0),
    .ce0(Un_M_real_ce0),
    .we0(Un_M_real_we0),
    .d0(Un_M_real_d0),
    .q0(Un_M_real_q0)
);

music_Un_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Un_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Un_M_imag_address0),
    .ce0(Un_M_imag_ce0),
    .we0(Un_M_imag_we0),
    .d0(Un_M_imag_d0),
    .q0(Un_M_imag_q0)
);

eig_decompose_Q_tsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_mat_M_real_address0),
    .ce0(temp_mat_M_real_ce0),
    .we0(temp_mat_M_real_we0),
    .d0(temp_mat_M_real_d0),
    .q0(temp_mat_M_real_q0)
);

eig_decompose_Q_tsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_mat_M_imag_address0),
    .ce0(temp_mat_M_imag_ce0),
    .we0(temp_mat_M_imag_we0),
    .d0(temp_mat_M_imag_d0),
    .q0(temp_mat_M_imag_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
AUU_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUU_M_real_address0),
    .ce0(AUU_M_real_ce0),
    .we0(AUU_M_real_we0),
    .d0(AUU_M_real_d0),
    .q0(AUU_M_real_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
AUU_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUU_M_imag_address0),
    .ce0(AUU_M_imag_ce0),
    .we0(AUU_M_imag_we0),
    .d0(AUU_M_imag_d0),
    .q0(AUU_M_imag_q0)
);

music_w_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
w_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_M_real_address0),
    .ce0(w_M_real_ce0),
    .we0(w_M_real_we0),
    .d0(w_M_real_d0),
    .q0(w_M_real_q0)
);

music_w_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
w_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_M_imag_address0),
    .ce0(w_M_imag_ce0),
    .we0(w_M_imag_we0),
    .d0(w_M_imag_d0),
    .q0(w_M_imag_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
a_theta_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_theta_M_real_address0),
    .ce0(a_theta_M_real_ce0),
    .we0(a_theta_M_real_we0),
    .d0(a_theta_M_real_d0),
    .q0(a_theta_M_real_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
a_theta_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_theta_M_imag_address0),
    .ce0(a_theta_M_imag_ce0),
    .we0(a_theta_M_imag_we0),
    .d0(a_theta_M_imag_d0),
    .q0(a_theta_M_imag_q0)
);

eig_decompose grp_eig_decompose_fu_1565(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_eig_decompose_fu_1565_ap_start),
    .ap_done(grp_eig_decompose_fu_1565_ap_done),
    .ap_idle(grp_eig_decompose_fu_1565_ap_idle),
    .ap_ready(grp_eig_decompose_fu_1565_ap_ready),
    .Rx_M_real_address0(grp_eig_decompose_fu_1565_Rx_M_real_address0),
    .Rx_M_real_ce0(grp_eig_decompose_fu_1565_Rx_M_real_ce0),
    .Rx_M_real_q0(temp_mat_M_real_q0),
    .Rx_M_imag_address0(grp_eig_decompose_fu_1565_Rx_M_imag_address0),
    .Rx_M_imag_ce0(grp_eig_decompose_fu_1565_Rx_M_imag_ce0),
    .Rx_M_imag_q0(temp_mat_M_imag_q0),
    .U_M_real_address0(grp_eig_decompose_fu_1565_U_M_real_address0),
    .U_M_real_ce0(grp_eig_decompose_fu_1565_U_M_real_ce0),
    .U_M_real_we0(grp_eig_decompose_fu_1565_U_M_real_we0),
    .U_M_real_d0(grp_eig_decompose_fu_1565_U_M_real_d0),
    .U_M_real_q0(U_M_real_q0),
    .U_M_imag_address0(grp_eig_decompose_fu_1565_U_M_imag_address0),
    .U_M_imag_ce0(grp_eig_decompose_fu_1565_U_M_imag_ce0),
    .U_M_imag_we0(grp_eig_decompose_fu_1565_U_M_imag_we0),
    .U_M_imag_d0(grp_eig_decompose_fu_1565_U_M_imag_d0),
    .U_M_imag_q0(U_M_imag_q0),
    .eigval_0_read(eigval_0_1_fu_398),
    .eigval_1_read(eigval_1_1_fu_402),
    .eigval_2_read(eigval_2_1_fu_406),
    .eigval_3_read(eigval_3_1_fu_410),
    .ap_return_0(grp_eig_decompose_fu_1565_ap_return_0),
    .ap_return_1(grp_eig_decompose_fu_1565_ap_return_1),
    .ap_return_2(grp_eig_decompose_fu_1565_ap_return_2),
    .ap_return_3(grp_eig_decompose_fu_1565_ap_return_3)
);

fft grp_fft_fu_1577(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_fu_1577_ap_start),
    .ap_done(grp_fft_fu_1577_ap_done),
    .ap_idle(grp_fft_fu_1577_ap_idle),
    .ap_ready(grp_fft_fu_1577_ap_ready),
    .X_R_address0(grp_fft_fu_1577_X_R_address0),
    .X_R_ce0(grp_fft_fu_1577_X_R_ce0),
    .X_R_we0(grp_fft_fu_1577_X_R_we0),
    .X_R_d0(grp_fft_fu_1577_X_R_d0),
    .X_R_q0(FFT_Buffer_re_q0),
    .X_R_address1(grp_fft_fu_1577_X_R_address1),
    .X_R_ce1(grp_fft_fu_1577_X_R_ce1),
    .X_R_we1(grp_fft_fu_1577_X_R_we1),
    .X_R_d1(grp_fft_fu_1577_X_R_d1),
    .X_R_q1(FFT_Buffer_re_q1),
    .X_I_address0(grp_fft_fu_1577_X_I_address0),
    .X_I_ce0(grp_fft_fu_1577_X_I_ce0),
    .X_I_we0(grp_fft_fu_1577_X_I_we0),
    .X_I_d0(grp_fft_fu_1577_X_I_d0),
    .X_I_q0(FFT_Buffer_im_q0),
    .X_I_address1(grp_fft_fu_1577_X_I_address1),
    .X_I_ce1(grp_fft_fu_1577_X_I_ce1),
    .X_I_we1(grp_fft_fu_1577_X_I_we1),
    .X_I_d1(grp_fft_fu_1577_X_I_d1),
    .X_I_q1(FFT_Buffer_im_q1)
);

Autocorrelation grp_Autocorrelation_fu_1591(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Autocorrelation_fu_1591_ap_start),
    .ap_done(grp_Autocorrelation_fu_1591_ap_done),
    .ap_idle(grp_Autocorrelation_fu_1591_ap_idle),
    .ap_ready(grp_Autocorrelation_fu_1591_ap_ready),
    .X_M_real_address0(grp_Autocorrelation_fu_1591_X_M_real_address0),
    .X_M_real_ce0(grp_Autocorrelation_fu_1591_X_M_real_ce0),
    .X_M_real_q0(Autocorr_Buffer_M_r_q0),
    .X_M_real_address1(grp_Autocorrelation_fu_1591_X_M_real_address1),
    .X_M_real_ce1(grp_Autocorrelation_fu_1591_X_M_real_ce1),
    .X_M_real_q1(Autocorr_Buffer_M_r_q1),
    .X_M_imag_address0(grp_Autocorrelation_fu_1591_X_M_imag_address0),
    .X_M_imag_ce0(grp_Autocorrelation_fu_1591_X_M_imag_ce0),
    .X_M_imag_q0(Autocorr_Buffer_M_i_q0),
    .X_M_imag_address1(grp_Autocorrelation_fu_1591_X_M_imag_address1),
    .X_M_imag_ce1(grp_Autocorrelation_fu_1591_X_M_imag_ce1),
    .X_M_imag_q1(Autocorr_Buffer_M_i_q1),
    .Rx_M_real_address0(grp_Autocorrelation_fu_1591_Rx_M_real_address0),
    .Rx_M_real_ce0(grp_Autocorrelation_fu_1591_Rx_M_real_ce0),
    .Rx_M_real_we0(grp_Autocorrelation_fu_1591_Rx_M_real_we0),
    .Rx_M_real_d0(grp_Autocorrelation_fu_1591_Rx_M_real_d0),
    .Rx_M_imag_address0(grp_Autocorrelation_fu_1591_Rx_M_imag_address0),
    .Rx_M_imag_ce0(grp_Autocorrelation_fu_1591_Rx_M_imag_ce0),
    .Rx_M_imag_we0(grp_Autocorrelation_fu_1591_Rx_M_imag_we0),
    .Rx_M_imag_d0(grp_Autocorrelation_fu_1591_Rx_M_imag_d0)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_1599(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_float_s_fu_1599_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_1599_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_1599_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_1599_ap_ready),
    .t_in(reg_1731),
    .do_cos(grp_sin_or_cos_float_s_fu_1599_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_1599_ap_return)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_1615(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_float_s_fu_1615_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_1615_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_1615_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_1615_ap_ready),
    .t_in(reg_1731),
    .do_cos(grp_sin_or_cos_float_s_fu_1615_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_1615_ap_return)
);

sort_eigval grp_sort_eigval_fu_1630(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sort_eigval_fu_1630_ap_start),
    .ap_done(grp_sort_eigval_fu_1630_ap_done),
    .ap_idle(grp_sort_eigval_fu_1630_ap_idle),
    .ap_ready(grp_sort_eigval_fu_1630_ap_ready),
    .eigval_0_read(eigval_0_reg_4228),
    .eigval_1_read(eigval_1_reg_4233),
    .eigval_2_read(eigval_2_reg_4238),
    .eigval_3_read(eigval_3_reg_4243),
    .sort_index_0_read(sort_index_0_1_fu_414),
    .sort_index_1_read(sort_index_1_1_fu_418),
    .sort_index_2_read(sort_index_2_1_fu_422),
    .sort_index_3_read(sort_index_3_1_fu_426),
    .ap_return_0(grp_sort_eigval_fu_1630_ap_return_0),
    .ap_return_1(grp_sort_eigval_fu_1630_ap_return_1),
    .ap_return_2(grp_sort_eigval_fu_1630_ap_return_2),
    .ap_return_3(grp_sort_eigval_fu_1630_ap_return_3)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_1642(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scaled_fixed2ieee_fu_1642_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_1642_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_1642_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_1642_ap_ready),
    .in_V(result_V_reg_4668),
    .prescale(ret_V_28_reg_4673),
    .ap_return(grp_scaled_fixed2ieee_fu_1642_ap_return)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U185(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1648_p0),
    .din1(grp_fu_1648_p1),
    .opcode(grp_fu_1648_opcode),
    .ce(1'b1),
    .dout(grp_fu_1648_p2)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1652_p0),
    .din1(grp_fu_1652_p1),
    .opcode(grp_fu_1652_opcode),
    .ce(1'b1),
    .dout(grp_fu_1652_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1664_p0),
    .din1(grp_fu_1664_p1),
    .ce(1'b1),
    .dout(grp_fu_1664_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1669_p0),
    .din1(grp_fu_1669_p1),
    .ce(1'b1),
    .dout(grp_fu_1669_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1674_p0),
    .din1(grp_fu_1674_p1),
    .ce(1'b1),
    .dout(grp_fu_1674_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1679_p0),
    .din1(grp_fu_1679_p1),
    .ce(1'b1),
    .dout(grp_fu_1679_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1694_p0),
    .din1(grp_fu_1694_p1),
    .ce(1'b1),
    .dout(grp_fu_1694_p2)
);

music_fptrunc_64nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
music_fptrunc_64nkbM_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1700_p0),
    .ce(1'b1),
    .dout(grp_fu_1700_p1)
);

music_fpext_32ns_Mgi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
music_fpext_32ns_Mgi_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1703_p0),
    .ce(1'b1),
    .dout(grp_fu_1703_p1)
);

music_dmul_64ns_6Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
music_dmul_64ns_6Ngs_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1714),
    .din1(grp_fu_1708_p1),
    .ce(1'b1),
    .dout(grp_fu_1708_p2)
);

music_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
music_mux_42_32_1_1_U195(
    .din0(sort_index_0_reg_4248),
    .din1(sort_index_1_reg_4253),
    .din2(sort_index_2_reg_4258),
    .din3(sort_index_3_reg_4263),
    .din4(tmp_9_fu_2614_p5),
    .dout(tmp_9_fu_2614_p6)
);

music_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
music_mux_42_32_1_1_U196(
    .din0(32'd3200253952),
    .din1(32'd3187671040),
    .din2(32'd1040187392),
    .din3(32'd1052770304),
    .din4(tmp_8_fu_2658_p5),
    .dout(tmp_8_fu_2658_p6)
);

music_mul_170ns_5OgC #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 223 ))
music_mul_170ns_5OgC_U197(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2798_p0),
    .din1(grp_fu_2798_p1),
    .ce(1'b1),
    .dout(grp_fu_2798_p2)
);

music_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
music_mux_83_1_1_1_U198(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_75_reg_4435),
    .dout(cos_basis_fu_3020_p10)
);

music_mul_49ns_49PgM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
music_mul_49ns_49PgM_U199(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3044_p0),
    .din1(grp_fu_3044_p1),
    .ce(1'b1),
    .dout(grp_fu_3044_p2)
);

music_mul_49ns_49PgM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
music_mul_49ns_49PgM_U200(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3082_p0),
    .din1(grp_fu_3082_p1),
    .ce(1'b1),
    .dout(grp_fu_3082_p2)
);

music_mul_49ns_49PgM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
music_mul_49ns_49PgM_U201(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3087_p0),
    .din1(grp_fu_3087_p1),
    .ce(1'b1),
    .dout(grp_fu_3087_p2)
);

music_mul_56ns_52QgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 108 ))
music_mul_56ns_52QgW_U202(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3099_p0),
    .din1(fourth_order_double_10_reg_4541),
    .ce(1'b1),
    .dout(grp_fu_3099_p2)
);

music_mul_49ns_44Rg6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
music_mul_49ns_44Rg6_U203(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3111_p0),
    .din1(fourth_order_double_12_reg_4546),
    .ce(1'b1),
    .dout(grp_fu_3111_p2)
);

music_mul_42ns_33Shg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 75 ))
music_mul_42ns_33Shg_U204(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3170_p0),
    .din1(grp_fu_3170_p1),
    .ce(1'b1),
    .dout(grp_fu_3170_p2)
);

music_mul_64s_63nThq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 126 ))
music_mul_64s_63nThq_U205(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_reg_4653),
    .din1(grp_fu_3260_p1),
    .ce(1'b1),
    .dout(grp_fu_3260_p2)
);

music_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
music_mux_164_1_1_1_U206(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_61_fu_3320_p3),
    .dout(tmp_11_fu_3326_p18)
);

music_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
music_mux_164_1_1_1_U207(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_61_fu_3320_p3),
    .dout(tmp_12_fu_3364_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Autocorrelation_fu_1591_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln252_fu_2339_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
            grp_Autocorrelation_fu_1591_ap_start_reg <= 1'b1;
        end else if ((grp_Autocorrelation_fu_1591_ap_ready == 1'b1)) begin
            grp_Autocorrelation_fu_1591_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_eig_decompose_fu_1565_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_eig_decompose_fu_1565_ap_start_reg <= 1'b1;
        end else if ((grp_eig_decompose_fu_1565_ap_ready == 1'b1)) begin
            grp_eig_decompose_fu_1565_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_fu_1577_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln237_fu_2176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            grp_fft_fu_1577_ap_start_reg <= 1'b1;
        end else if ((grp_fft_fu_1577_ap_ready == 1'b1)) begin
            grp_fft_fu_1577_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scaled_fixed2ieee_fu_1642_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state81)) begin
            grp_scaled_fixed2ieee_fu_1642_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_fu_1642_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_fu_1642_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_float_s_fu_1599_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state105)) begin
            grp_sin_or_cos_float_s_fu_1599_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_1599_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_1599_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_float_s_fu_1615_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state105)) begin
            grp_sin_or_cos_float_s_fu_1615_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_1615_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_1615_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sort_eigval_fu_1630_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_eig_decompose_fu_1565_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
            grp_sort_eigval_fu_1630_ap_start_reg <= 1'b1;
        end else if ((grp_sort_eigval_fu_1630_ap_ready == 1'b1)) begin
            grp_sort_eigval_fu_1630_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        complex_M_imag_read_1_reg_1449 <= grp_fu_1652_p2;
    end else if (((icmp_ln291_fu_3672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        complex_M_imag_read_1_reg_1449 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        complex_M_imag_read_2_reg_1508 <= grp_fu_1652_p2;
    end else if (((icmp_ln300_fu_3770_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        complex_M_imag_read_2_reg_1508 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        complex_M_imag_read_reg_1390 <= grp_fu_1652_p2;
    end else if (((icmp_ln281_fu_3552_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        complex_M_imag_read_reg_1390 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        complex_M_real_read_1_reg_1462 <= grp_fu_1648_p2;
    end else if (((icmp_ln291_fu_3672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        complex_M_real_read_1_reg_1462 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        complex_M_real_read_2_reg_1520 <= grp_fu_1648_p2;
    end else if (((icmp_ln300_fu_3770_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        complex_M_real_read_2_reg_1520 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        complex_M_real_read_reg_1403 <= grp_fu_1648_p2;
    end else if (((icmp_ln281_fu_3552_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        complex_M_real_read_reg_1403 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln271_fu_2642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        i38_0_reg_1368 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln281_fu_3552_p2 == 1'd1))) begin
        i38_0_reg_1368 <= i_5_reg_4716;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state107) & (icmp_ln280_fu_3516_p2 == 1'd1))) begin
        i40_0_reg_1427 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state126) & (icmp_ln291_fu_3672_p2 == 1'd1))) begin
        i40_0_reg_1427 <= i_6_reg_4818;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln290_fu_3644_p2 == 1'd1))) begin
        i43_0_reg_1497 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        i43_0_reg_1497 <= i_7_reg_4925;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln249_fu_2292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        i45_0_reg_1554 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state198)) begin
        i45_0_reg_1554 <= i_reg_5019;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln236_fu_2156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        j32_0_reg_1255 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        j32_0_reg_1255 <= j_reg_4086;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j33_0_reg_1267 <= j_3_reg_4099;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_fft_fu_1577_ap_done == 1'b1))) begin
        j33_0_reg_1267 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state109) & (icmp_ln284_fu_3591_p2 == 1'd1))) begin
        j39_0_reg_1379 <= j_4_reg_4734;
    end else if (((icmp_ln280_fu_3516_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        j39_0_reg_1379 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln294_fu_3703_p2 == 1'd1))) begin
        j41_0_reg_1438 <= j_5_reg_4836;
    end else if (((icmp_ln290_fu_3644_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state125))) begin
        j41_0_reg_1438 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln234_fu_2132_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        jj_0_reg_1278 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state143) & (icmp_ln300_fu_3770_p2 == 1'd1))) begin
        jj_0_reg_1278 <= jj_reg_4122;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        k42_0_reg_1475 <= k_3_reg_4859;
    end else if (((icmp_ln291_fu_3672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        k42_0_reg_1475 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        k44_0_reg_1532 <= k_2_reg_4949;
    end else if (((icmp_ln300_fu_3770_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        k44_0_reg_1532 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        k_0_reg_1416 <= k_reg_4757;
    end else if (((icmp_ln281_fu_3552_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        k_0_reg_1416 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_fu_2380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        l34_0_reg_1290 <= l_1_reg_4150;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        l34_0_reg_1290 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln211_1_fu_2126_p2 == 1'd1) & (icmp_ln211_fu_2120_p2 == 1'd1))) begin
        l_0_reg_1233 <= 4'd0;
    end else if (((icmp_ln236_fu_2156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        l_0_reg_1233 <= l_reg_4006;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_2339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        n35_0_reg_1301 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        n35_0_reg_1301 <= n_reg_4168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln242_fu_2221_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        n_0_reg_1244 <= n_1_reg_4072;
    end else if (((icmp_ln234_fu_2132_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        n_0_reg_1244 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_1_fu_1872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln202_fu_1866_p2 == 1'd1))) begin
        phi_ln202_1_reg_1049 <= add_ln202_1_reg_3873;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln202_1_reg_1049 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_1866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln202_2_reg_1061 <= add_ln202_2_fu_1847_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        phi_ln202_2_reg_1061 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_2_fu_1878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln202_1_fu_1872_p2 == 1'd1) & (icmp_ln202_fu_1866_p2 == 1'd1))) begin
        phi_ln202_reg_1037 <= add_ln202_reg_3863;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln202_reg_1037 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln204_fu_1910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_ln204_1_reg_1084 <= add_ln204_1_fu_1890_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        phi_ln204_1_reg_1084 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln204_1_fu_1916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln204_fu_1910_p2 == 1'd1))) begin
        phi_ln204_reg_1072 <= add_ln204_reg_3897;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln202_2_fu_1878_p2 == 1'd1) & (icmp_ln202_1_fu_1872_p2 == 1'd1) & (icmp_ln202_fu_1866_p2 == 1'd1))) begin
        phi_ln204_reg_1072 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln205_fu_1948_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_ln205_1_reg_1107 <= add_ln205_1_fu_1928_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        phi_ln205_1_reg_1107 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln204_1_fu_1916_p2 == 1'd1) & (icmp_ln204_fu_1910_p2 == 1'd1))) begin
        phi_ln205_reg_1095 <= 2'd0;
    end else if (((icmp_ln205_1_fu_1954_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln205_fu_1948_p2 == 1'd1))) begin
        phi_ln205_reg_1095 <= add_ln205_reg_3913;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_phi_ln206_1_phi_fu_1134_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        phi_ln206_1_reg_1130 <= xor_ln206_fu_1966_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        phi_ln206_1_reg_1130 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln205_1_fu_1954_p2 == 1'd1) & (icmp_ln205_fu_1948_p2 == 1'd1))) begin
        phi_ln206_reg_1118 <= 2'd0;
    end else if (((icmp_ln206_fu_1986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (ap_phi_mux_phi_ln206_1_phi_fu_1134_p4 == 1'd1))) begin
        phi_ln206_reg_1118 <= add_ln206_reg_3929;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln207_fu_2018_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        phi_ln207_1_reg_1153 <= add_ln207_1_fu_1998_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        phi_ln207_1_reg_1153 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln206_fu_1986_p2 == 1'd1) & (ap_phi_mux_phi_ln206_1_phi_fu_1134_p4 == 1'd1))) begin
        phi_ln207_reg_1141 <= 2'd0;
    end else if (((icmp_ln207_1_fu_2024_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln207_fu_2018_p2 == 1'd1))) begin
        phi_ln207_reg_1141 <= add_ln207_reg_3942;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_2056_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        phi_ln208_1_reg_1176 <= add_ln208_1_fu_2036_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        phi_ln208_1_reg_1176 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln207_1_fu_2024_p2 == 1'd1) & (icmp_ln207_fu_2018_p2 == 1'd1))) begin
        phi_ln208_reg_1164 <= 9'd0;
    end else if (((icmp_ln208_1_fu_2062_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln208_fu_2056_p2 == 1'd1))) begin
        phi_ln208_reg_1164 <= add_ln208_reg_3958;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_2080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        phi_ln210_reg_1187 <= add_ln210_fu_2068_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln208_1_fu_2062_p2 == 1'd1) & (icmp_ln208_fu_2056_p2 == 1'd1))) begin
        phi_ln210_reg_1187 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_fu_2120_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        phi_ln211_1_reg_1222 <= add_ln211_1_fu_2098_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        phi_ln211_1_reg_1222 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln210_fu_2080_p2 == 1'd1))) begin
        phi_ln211_reg_1198 <= 2'd0;
    end else if (((icmp_ln211_1_fu_2126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (icmp_ln211_fu_2120_p2 == 1'd1))) begin
        phi_ln211_reg_1198 <= add_ln211_reg_3987;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        phi_mul11_reg_1543 <= add_ln304_2_reg_4964;
    end else if (((icmp_ln300_fu_3770_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        phi_mul11_reg_1543 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_fu_2529_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        phi_mul7_reg_1345 <= 11'd0;
    end else if (((icmp_ln273_fu_2673_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        phi_mul7_reg_1345 <= add_ln271_reg_4327;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        phi_mul9_reg_1486 <= add_ln295_2_reg_4869;
    end else if (((icmp_ln291_fu_3672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        phi_mul9_reg_1486 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln210_fu_2080_p2 == 1'd1))) begin
        phi_mul_reg_1210 <= 11'd0;
    end else if (((icmp_ln211_1_fu_2126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (icmp_ln211_fu_2120_p2 == 1'd1))) begin
        phi_mul_reg_1210 <= add_ln211_2_reg_3982;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_fu_2529_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        x36_0_reg_1334 <= 3'd0;
    end else if (((icmp_ln273_fu_2673_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        x36_0_reg_1334 <= x_1_reg_4335;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln262_fu_2583_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        x_0_reg_1312 <= x_reg_4271;
    end else if (((grp_sort_eigval_fu_1630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        x_0_reg_1312 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state106) & (1'b0 == ap_block_state106_on_subcall_done))) begin
        y37_0_reg_1357 <= y_reg_4348;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        y37_0_reg_1357 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_fu_2529_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        y_0_reg_1323 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        y_0_reg_1323 <= y_1_reg_4304;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_fu_3672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        AUU_M_imag_addr_2_reg_4851 <= zext_ln297_3_fu_3697_p1;
        AUU_M_real_addr_2_reg_4846 <= zext_ln297_3_fu_3697_p1;
        zext_ln297_1_reg_4841[2 : 0] <= zext_ln297_1_fu_3684_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        B_V_reg_4494 <= B_V_fu_3006_p1;
        B_trunc_V_reg_4499 <= {{r_V_36_fu_2989_p3[55:7]}};
        p_Result_i_i_reg_4489 <= {{r_V_36_fu_2989_p3[62:56]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        B_fourth_power_V_reg_4598 <= {{grp_fu_3087_p2[97:63]}};
        B_third_power_V_reg_4593 <= {{grp_fu_3082_p2[97:56]}};
        fourth_order_double_14_reg_4618 <= fourth_order_double_7_q0;
        fourth_order_double_16_reg_4623 <= fourth_order_double_s_q0;
        p_Val2_59_reg_4603 <= fourth_order_double_4_q0;
        trunc_ln662_1_reg_4613 <= {{grp_fu_3111_p2[92:45]}};
        trunc_ln_reg_4608 <= {{grp_fu_3099_p2[107:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        B_squared_V_reg_4535 <= {{grp_fu_3044_p2[97:49]}};
        fourth_order_double_10_reg_4541 <= fourth_order_double_5_q0;
        fourth_order_double_12_reg_4546 <= fourth_order_double_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        Ex_V_reg_4464 <= Ex_V_fu_2931_p2;
        Mx_V_reg_4457 <= {{r_V_35_fu_2913_p2[123:61]}};
        icmp_ln833_2_reg_4482 <= icmp_ln833_2_fu_2950_p2;
        icmp_ln833_reg_4476 <= icmp_ln833_fu_2945_p2;
        isNeg_reg_4470 <= Ex_V_fu_2931_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        Mx_zeros_V_reg_4451 <= Mx_zeros_V_fu_2894_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln261_fu_2529_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        Un_M_imag_addr_1_reg_4291[2 : 1] <= zext_ln264_1_fu_2561_p1[2 : 1];
        Un_M_imag_addr_2_reg_4296[2 : 1] <= tmp_30_fu_2573_p3[2 : 1];
        Un_M_real_addr_1_reg_4281[2 : 1] <= zext_ln264_1_fu_2561_p1[2 : 1];
        Un_M_real_addr_2_reg_4286[2 : 1] <= tmp_30_fu_2573_p3[2 : 1];
        zext_ln264_reg_4276[4 : 2] <= zext_ln264_fu_2549_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln1027_1_reg_3878 <= add_ln1027_1_fu_1842_p2;
        add_ln202_1_reg_3873 <= add_ln202_1_fu_1832_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln1027_reg_3868[13 : 1] <= add_ln1027_fu_1826_p2[13 : 1];
        add_ln202_reg_3863 <= add_ln202_fu_1796_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln204_reg_3897 <= add_ln204_fu_1884_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln205_reg_3913 <= add_ln205_fu_1922_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln206_reg_3929 <= add_ln206_fu_1960_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln207_reg_3942 <= add_ln207_fu_1992_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln208_reg_3958 <= add_ln208_fu_2030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln211_2_reg_3982 <= add_ln211_2_fu_2086_p2;
        add_ln211_reg_3987 <= add_ln211_fu_2092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln242_fu_2221_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        add_ln243_2_reg_4104 <= add_ln243_2_fu_2282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_fu_2380_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        add_ln255_3_reg_4183 <= add_ln255_3_fu_2411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln255_reg_4137[14 : 1] <= add_ln255_fu_2333_p2[14 : 1];
        tpf_reg_4142 <= grp_fu_1700_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add_ln271_reg_4327 <= add_ln271_fu_2636_p2;
        x_1_reg_4335 <= x_1_fu_2648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln273_fu_2673_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        add_ln276_reg_4353 <= add_ln276_fu_2694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln284_fu_3591_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state109))) begin
        add_ln285_reg_4762 <= add_ln285_fu_3607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln294_fu_3703_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
        add_ln295_2_reg_4869 <= add_ln295_2_fu_3732_p2;
        add_ln295_reg_4864 <= add_ln295_fu_3727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln303_fu_3802_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state144))) begin
        add_ln304_2_reg_4964 <= add_ln304_2_fu_3829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (grp_scaled_fixed2ieee_fu_1642_ap_done == 1'b1))) begin
        and_ln300_reg_4678 <= and_ln300_fu_3409_p2;
        ret_V_29_reg_4688 <= ret_V_29_fu_3454_p3;
        ret_V_30_reg_4693 <= ret_V_30_fu_3470_p3;
        select_ln311_reg_4683 <= select_ln311_fu_3423_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        closepath_reg_4387 <= closepath_fu_2726_p2;
        results_sign_V_2_reg_4368 <= p_Val2_s_fu_2700_p1[32'd63];
        tmp_V_4_reg_4381 <= tmp_V_4_fu_2722_p1;
        tmp_V_reg_4374 <= {{p_Val2_s_fu_2700_p1[62:52]}};
        trunc_ln601_reg_4398 <= trunc_ln601_fu_2761_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        cos_basis_reg_4504 <= cos_basis_fu_3020_p10;
        r_V_22_reg_4511[48 : 0] <= r_V_22_fu_3041_p1[48 : 0];
        zext_ln498_reg_4518[7 : 0] <= zext_ln498_fu_3063_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_eig_decompose_fu_1565_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        eigval_0_1_fu_398 <= grp_eig_decompose_fu_1565_ap_return_0;
        eigval_0_reg_4228 <= grp_eig_decompose_fu_1565_ap_return_0;
        eigval_1_1_fu_402 <= grp_eig_decompose_fu_1565_ap_return_1;
        eigval_1_reg_4233 <= grp_eig_decompose_fu_1565_ap_return_1;
        eigval_2_1_fu_406 <= grp_eig_decompose_fu_1565_ap_return_2;
        eigval_2_reg_4238 <= grp_eig_decompose_fu_1565_ap_return_2;
        eigval_3_1_fu_410 <= grp_eig_decompose_fu_1565_ap_return_3;
        eigval_3_reg_4243 <= grp_eig_decompose_fu_1565_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        i_5_reg_4716 <= i_5_fu_3522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        i_6_reg_4818 <= i_6_fu_3650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        i_7_reg_4925 <= i_7_fu_3776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state180)) begin
        i_reg_5019 <= i_fu_3852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        icmp_ln263_reg_4319 <= icmp_ln263_fu_2624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln263_fu_2624_p2 == 1'd0) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        icmp_ln265_reg_4323 <= icmp_ln265_fu_2630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        icmp_ln833_1_reg_4418 <= icmp_ln833_1_fu_2804_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j_3_reg_4099 <= j_3_fu_2227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        j_4_reg_4734 <= j_4_fu_3558_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        j_5_reg_4836 <= j_5_fu_3678_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_reg_4086 <= j_fu_2182_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        jj_reg_4122 <= jj_fu_2298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        k_2_reg_4949 <= k_2_fu_3808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        k_3_reg_4859 <= k_3_fu_3709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        k_reg_4757 <= k_fu_3597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        l_1_reg_4150 <= l_1_fu_2345_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        l_reg_4006 <= l_fu_2138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        n_1_reg_4072 <= n_1_fu_2162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        n_reg_4168 <= n_fu_2386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        p_Result_i_i_i_64_reg_4446 <= {{p_Val2_50_fu_2844_p3[123:63]}};
        p_Val2_50_reg_4441 <= p_Val2_50_fu_2844_p3;
        p_Val2_75_reg_4435 <= p_Val2_75_fu_2829_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        p_Val2_74_reg_4424 <= {{grp_fu_2798_p2[166:43]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        p_r_M_imag_8_reg_4995 <= AUU_M_imag_q0;
        p_r_M_real_8_reg_4989 <= AUU_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        p_t_real_reg_4787 <= Un_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_1714 <= grp_fu_1703_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_1719 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_1724 <= grp_fu_1664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state104))) begin
        reg_1731 <= grp_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110))) begin
        reg_1738 <= Un_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state114))) begin
        reg_1744 <= grp_fu_1669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state114))) begin
        reg_1750 <= grp_fu_1674_p2;
        reg_1755 <= grp_fu_1679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state119))) begin
        reg_1760 <= grp_fu_1648_p2;
        reg_1768 <= grp_fu_1652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state128))) begin
        reg_1776 <= a_theta_M_real_q0;
        reg_1784 <= a_theta_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state173))) begin
        reg_1790 <= w_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        result_V_reg_4668 <= {{grp_fu_3260_p2[125:63]}};
        ret_V_28_reg_4673 <= ret_V_28_fu_3287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ret_V_31_reg_4403 <= {{r_V_34_fu_2768_p2[255:86]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        ret_V_34_reg_4643 <= ret_V_34_fu_3214_p2;
        tmp_36_reg_4638 <= {{r_V_43_fu_3182_p2[59:31]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ret_V_reg_4653 <= ret_V_fu_3241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln234_fu_2132_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        shl_ln_reg_4011[13 : 10] <= shl_ln_fu_2144_p3[13 : 10];
        zext_ln236_reg_4016[3 : 0] <= zext_ln236_fu_2152_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        sinpitheta_reg_4703 <= grp_fu_1700_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_sort_eigval_fu_1630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        sort_index_0_1_fu_414 <= grp_sort_eigval_fu_1630_ap_return_0;
        sort_index_0_reg_4248 <= grp_sort_eigval_fu_1630_ap_return_0;
        sort_index_1_1_fu_418 <= grp_sort_eigval_fu_1630_ap_return_1;
        sort_index_1_reg_4253 <= grp_sort_eigval_fu_1630_ap_return_1;
        sort_index_2_1_fu_422 <= grp_sort_eigval_fu_1630_ap_return_2;
        sort_index_2_reg_4258 <= grp_sort_eigval_fu_1630_ap_return_2;
        sort_index_3_1_fu_426 <= grp_sort_eigval_fu_1630_ap_return_3;
        sort_index_3_reg_4263 <= grp_sort_eigval_fu_1630_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln281_fu_3552_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        temp_mat_M_imag_add_1_reg_4749 <= zext_ln287_2_fu_3585_p1;
        temp_mat_M_real_add_1_reg_4744 <= zext_ln287_2_fu_3585_p1;
        zext_ln287_1_reg_4739[3 : 1] <= zext_ln287_1_fu_3576_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_2339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        tmp_25_cast_reg_4155[16 : 2] <= tmp_25_cast_fu_2360_p3[16 : 2];
        zext_ln253_reg_4160[5 : 2] <= zext_ln253_fu_2376_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_35_reg_4648 <= {{grp_fu_3170_p2[74:38]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        tmp_7_reg_4708 <= grp_fu_1664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((closepath_reg_4387 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
        trunc_ln_i_i_reg_4430 <= {{grp_fu_2798_p2[169:167]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) & (icmp_ln303_fu_3802_p2 == 1'd1))) begin
        w_M_imag_addr_1_reg_4984 <= zext_ln304_reg_4930;
        w_M_real_addr_2_reg_4979 <= zext_ln304_reg_4930;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        w_M_imag_load_reg_5011 <= w_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        x_reg_4271 <= x_fu_2535_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        y_1_reg_4304 <= y_1_fu_2589_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        y_reg_4348 <= y_fu_2679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln236_fu_2156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        zext_ln237_1_reg_4077[2 : 0] <= zext_ln237_1_fu_2168_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln280_fu_3516_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        zext_ln281_reg_4726[4 : 2] <= zext_ln281_fu_3548_p1[4 : 2];
        zext_ln287_reg_4721[3 : 1] <= zext_ln287_fu_3536_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln290_fu_3644_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state125))) begin
        zext_ln291_reg_4828[10 : 2] <= zext_ln291_fu_3668_p1[10 : 2];
        zext_ln297_reg_4823[8 : 0] <= zext_ln297_fu_3656_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln300_fu_3770_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        zext_ln303_reg_4941[10 : 2] <= zext_ln303_fu_3798_p1[10 : 2];
        zext_ln304_1_reg_4936[8 : 0] <= zext_ln304_1_fu_3786_p1[8 : 0];
        zext_ln304_reg_4930[8 : 0] <= zext_ln304_fu_3782_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln310_fu_3846_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state180))) begin
        zext_ln312_reg_5024[8 : 0] <= zext_ln312_fu_3858_p1[8 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        AUU_M_imag_address0 = zext_ln304_3_fu_3823_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        AUU_M_imag_address0 = AUU_M_imag_addr_2_reg_4851;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        AUU_M_imag_address0 = zext_ln1027_7_fu_2050_p1;
    end else begin
        AUU_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state127))) begin
        AUU_M_imag_ce0 = 1'b1;
    end else begin
        AUU_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        AUU_M_imag_d0 = complex_M_imag_read_1_reg_1449;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        AUU_M_imag_d0 = 32'd0;
    end else begin
        AUU_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state127) & (icmp_ln294_fu_3703_p2 == 1'd1)))) begin
        AUU_M_imag_we0 = 1'b1;
    end else begin
        AUU_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        AUU_M_real_address0 = zext_ln304_3_fu_3823_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        AUU_M_real_address0 = AUU_M_real_addr_2_reg_4846;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        AUU_M_real_address0 = zext_ln1027_7_fu_2050_p1;
    end else begin
        AUU_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state127))) begin
        AUU_M_real_ce0 = 1'b1;
    end else begin
        AUU_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        AUU_M_real_d0 = complex_M_real_read_1_reg_1462;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        AUU_M_real_d0 = 32'd0;
    end else begin
        AUU_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state127) & (icmp_ln294_fu_3703_p2 == 1'd1)))) begin
        AUU_M_real_we0 = 1'b1;
    end else begin
        AUU_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln255_6_fu_2416_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln1027_3_fu_1904_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        Autocorr_Buffer_M_i_address0 = grp_Autocorrelation_fu_1591_X_M_imag_address0;
    end else begin
        Autocorr_Buffer_M_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state38))) begin
        Autocorr_Buffer_M_i_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        Autocorr_Buffer_M_i_ce0 = grp_Autocorrelation_fu_1591_X_M_imag_ce0;
    end else begin
        Autocorr_Buffer_M_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        Autocorr_Buffer_M_i_ce1 = grp_Autocorrelation_fu_1591_X_M_imag_ce1;
    end else begin
        Autocorr_Buffer_M_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        Autocorr_Buffer_M_i_d0 = Xj_f_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Autocorr_Buffer_M_i_d0 = 32'd0;
    end else begin
        Autocorr_Buffer_M_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state38))) begin
        Autocorr_Buffer_M_i_we0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln255_6_fu_2416_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln1027_3_fu_1904_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        Autocorr_Buffer_M_r_address0 = grp_Autocorrelation_fu_1591_X_M_real_address0;
    end else begin
        Autocorr_Buffer_M_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state38))) begin
        Autocorr_Buffer_M_r_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        Autocorr_Buffer_M_r_ce0 = grp_Autocorrelation_fu_1591_X_M_real_ce0;
    end else begin
        Autocorr_Buffer_M_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        Autocorr_Buffer_M_r_ce1 = grp_Autocorrelation_fu_1591_X_M_real_ce1;
    end else begin
        Autocorr_Buffer_M_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        Autocorr_Buffer_M_r_d0 = Xj_f_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Autocorr_Buffer_M_r_d0 = 32'd0;
    end else begin
        Autocorr_Buffer_M_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state38))) begin
        Autocorr_Buffer_M_r_we0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        FFT_Buffer_im_address0 = zext_ln243_fu_2233_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_im_address0 = zext_ln238_2_fu_2215_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_address0 = grp_fft_fu_1577_X_I_address0;
    end else begin
        FFT_Buffer_im_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        FFT_Buffer_im_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_ce0 = grp_fft_fu_1577_X_I_ce0;
    end else begin
        FFT_Buffer_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_ce1 = grp_fft_fu_1577_X_I_ce1;
    end else begin
        FFT_Buffer_im_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_im_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_d0 = grp_fft_fu_1577_X_I_d0;
    end else begin
        FFT_Buffer_im_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_im_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_we0 = grp_fft_fu_1577_X_I_we0;
    end else begin
        FFT_Buffer_im_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_we1 = grp_fft_fu_1577_X_I_we1;
    end else begin
        FFT_Buffer_im_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        FFT_Buffer_re_address0 = zext_ln243_fu_2233_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_re_address0 = zext_ln238_2_fu_2215_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_address0 = grp_fft_fu_1577_X_R_address0;
    end else begin
        FFT_Buffer_re_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        FFT_Buffer_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_ce0 = grp_fft_fu_1577_X_R_ce0;
    end else begin
        FFT_Buffer_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_ce1 = grp_fft_fu_1577_X_R_ce1;
    end else begin
        FFT_Buffer_re_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_re_d0 = X_q0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_d0 = grp_fft_fu_1577_X_R_d0;
    end else begin
        FFT_Buffer_re_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_we0 = grp_fft_fu_1577_X_R_we0;
    end else begin
        FFT_Buffer_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_we1 = grp_fft_fu_1577_X_R_we1;
    end else begin
        FFT_Buffer_re_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        P_sm_ce0 = 1'b1;
    end else begin
        P_sm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        P_sm_we0 = 1'b1;
    end else begin
        P_sm_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln265_fu_2630_p2 == 1'd1) & (icmp_ln263_fu_2624_p2 == 1'd0) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)) | ((icmp_ln263_fu_2624_p2 == 1'd1) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)))) begin
        U_M_imag_address0 = zext_ln264_3_fu_2604_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        U_M_imag_address0 = zext_ln1027_4_fu_1942_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_imag_address0 = grp_eig_decompose_fu_1565_U_M_imag_address0;
    end else begin
        U_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((icmp_ln265_fu_2630_p2 == 1'd1) & (icmp_ln263_fu_2624_p2 == 1'd0) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)) | ((icmp_ln263_fu_2624_p2 == 1'd1) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)))) begin
        U_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_imag_ce0 = grp_eig_decompose_fu_1565_U_M_imag_ce0;
    end else begin
        U_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        U_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_imag_d0 = grp_eig_decompose_fu_1565_U_M_imag_d0;
    end else begin
        U_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        U_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_imag_we0 = grp_eig_decompose_fu_1565_U_M_imag_we0;
    end else begin
        U_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln265_fu_2630_p2 == 1'd1) & (icmp_ln263_fu_2624_p2 == 1'd0) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)) | ((icmp_ln263_fu_2624_p2 == 1'd1) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)))) begin
        U_M_real_address0 = zext_ln264_3_fu_2604_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        U_M_real_address0 = zext_ln1027_4_fu_1942_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_real_address0 = grp_eig_decompose_fu_1565_U_M_real_address0;
    end else begin
        U_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((icmp_ln265_fu_2630_p2 == 1'd1) & (icmp_ln263_fu_2624_p2 == 1'd0) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)) | ((icmp_ln263_fu_2624_p2 == 1'd1) & (icmp_ln262_fu_2583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44)))) begin
        U_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_real_ce0 = grp_eig_decompose_fu_1565_U_M_real_ce0;
    end else begin
        U_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        U_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_real_d0 = grp_eig_decompose_fu_1565_U_M_real_d0;
    end else begin
        U_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        U_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        U_M_real_we0 = grp_eig_decompose_fu_1565_U_M_real_we0;
    end else begin
        U_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        Un_M_imag_address0 = zext_ln285_2_fu_3623_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        Un_M_imag_address0 = zext_ln285_3_fu_3617_p1;
    end else if (((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        Un_M_imag_address0 = Un_M_imag_addr_1_reg_4291;
    end else if (((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        Un_M_imag_address0 = Un_M_imag_addr_2_reg_4296;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Un_M_imag_address0 = zext_ln1027_5_fu_1980_p1;
    end else begin
        Un_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | ((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45)) | ((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        Un_M_imag_ce0 = 1'b1;
    end else begin
        Un_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45)) | ((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        Un_M_imag_d0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Un_M_imag_d0 = 32'd0;
    end else begin
        Un_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45)) | ((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        Un_M_imag_we0 = 1'b1;
    end else begin
        Un_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        Un_M_real_address0 = zext_ln285_2_fu_3623_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        Un_M_real_address0 = zext_ln285_3_fu_3617_p1;
    end else if (((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        Un_M_real_address0 = Un_M_real_addr_1_reg_4281;
    end else if (((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        Un_M_real_address0 = Un_M_real_addr_2_reg_4286;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Un_M_real_address0 = zext_ln1027_5_fu_1980_p1;
    end else begin
        Un_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | ((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45)) | ((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        Un_M_real_ce0 = 1'b1;
    end else begin
        Un_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45)) | ((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        Un_M_real_d0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Un_M_real_d0 = 32'd0;
    end else begin
        Un_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln263_reg_4319 == 1'd1) & (1'b1 == ap_CS_fsm_state45)) | ((icmp_ln265_reg_4323 == 1'd1) & (icmp_ln263_reg_4319 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        Un_M_real_we0 = 1'b1;
    end else begin
        Un_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        X_ce0 = 1'b1;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        Xj_f_M_imag_address0 = zext_ln255_5_fu_2405_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        Xj_f_M_imag_address0 = zext_ln243_3_fu_2287_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Xj_f_M_imag_address0 = zext_ln1027_9_fu_1860_p1;
    end else begin
        Xj_f_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24))) begin
        Xj_f_M_imag_ce0 = 1'b1;
    end else begin
        Xj_f_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        Xj_f_M_imag_d0 = FFT_Buffer_im_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Xj_f_M_imag_d0 = 32'd0;
    end else begin
        Xj_f_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24))) begin
        Xj_f_M_imag_we0 = 1'b1;
    end else begin
        Xj_f_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        Xj_f_M_real_address0 = zext_ln255_5_fu_2405_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        Xj_f_M_real_address0 = zext_ln243_3_fu_2287_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Xj_f_M_real_address0 = zext_ln1027_9_fu_1860_p1;
    end else begin
        Xj_f_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24))) begin
        Xj_f_M_real_ce0 = 1'b1;
    end else begin
        Xj_f_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        Xj_f_M_real_d0 = FFT_Buffer_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Xj_f_M_real_d0 = 32'd0;
    end else begin
        Xj_f_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24))) begin
        Xj_f_M_real_we0 = 1'b1;
    end else begin
        Xj_f_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        a_theta_M_imag_address0 = zext_ln304_4_fu_3840_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        a_theta_M_imag_address0 = zext_ln295_2_fu_3743_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        a_theta_M_imag_address0 = zext_ln276_1_fu_3496_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_theta_M_imag_address0 = zext_ln1027_11_fu_2114_p1;
    end else begin
        a_theta_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state127) | ((1'b1 == ap_CS_fsm_state106) & (1'b0 == ap_block_state106_on_subcall_done)))) begin
        a_theta_M_imag_ce0 = 1'b1;
    end else begin
        a_theta_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        a_theta_M_imag_d0 = bitcast_ln277_1_fu_3511_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_theta_M_imag_d0 = 32'd0;
    end else begin
        a_theta_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state106) & (1'b0 == ap_block_state106_on_subcall_done)))) begin
        a_theta_M_imag_we0 = 1'b1;
    end else begin
        a_theta_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state144)) begin
        a_theta_M_real_address0 = zext_ln304_4_fu_3840_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        a_theta_M_real_address0 = zext_ln295_2_fu_3743_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        a_theta_M_real_address0 = zext_ln276_1_fu_3496_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_theta_M_real_address0 = zext_ln1027_11_fu_2114_p1;
    end else begin
        a_theta_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state127) | ((1'b1 == ap_CS_fsm_state106) & (1'b0 == ap_block_state106_on_subcall_done)))) begin
        a_theta_M_real_ce0 = 1'b1;
    end else begin
        a_theta_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        a_theta_M_real_d0 = grp_sin_or_cos_float_s_fu_1599_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        a_theta_M_real_d0 = 32'd0;
    end else begin
        a_theta_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state106) & (1'b0 == ap_block_state106_on_subcall_done)))) begin
        a_theta_M_real_we0 = 1'b1;
    end else begin
        a_theta_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state180) & (icmp_ln310_fu_3846_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state180) & (icmp_ln310_fu_3846_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fc_ce0 = 1'b1;
    end else begin
        fc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_1648_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state120))) begin
        grp_fu_1648_opcode = 2'd0;
    end else begin
        grp_fu_1648_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1648_p0 = reg_1790;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        grp_fu_1648_p0 = complex_M_real_read_2_reg_1520;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_1648_p0 = complex_M_real_read_1_reg_1462;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        grp_fu_1648_p0 = complex_M_real_read_reg_1403;
    end else if (((1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_1648_p0 = reg_1724;
    end else begin
        grp_fu_1648_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1648_p1 = complex_M_real_read_2_reg_1520;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        grp_fu_1648_p1 = reg_1724;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state120))) begin
        grp_fu_1648_p1 = reg_1760;
    end else if (((1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_1648_p1 = reg_1744;
    end else begin
        grp_fu_1648_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        grp_fu_1652_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_1652_opcode = 2'd0;
    end else begin
        grp_fu_1652_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1652_p0 = w_M_imag_load_reg_5011;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        grp_fu_1652_p0 = complex_M_imag_read_2_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_1652_p0 = complex_M_imag_read_1_reg_1449;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        grp_fu_1652_p0 = complex_M_imag_read_reg_1390;
    end else if (((1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_1652_p0 = reg_1750;
    end else begin
        grp_fu_1652_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1652_p1 = complex_M_imag_read_2_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        grp_fu_1652_p1 = reg_1744;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state120))) begin
        grp_fu_1652_p1 = reg_1768;
    end else if (((1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_1652_p1 = reg_1755;
    end else begin
        grp_fu_1652_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state155))) begin
        grp_fu_1664_p0 = reg_1760;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1664_p0 = p_r_M_real_8_reg_4989;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1664_p0 = reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1664_p0 = Un_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1664_p0 = reg_1724;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_1664_p0 = tpf_reg_4142;
    end else begin
        grp_fu_1664_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_1664_p1 = 32'd897581056;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1664_p1 = 32'd1149239296;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1664_p1 = reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1664_p1 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1664_p1 = p_t_real_reg_4787;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1664_p1 = sinpitheta_reg_4703;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_1664_p1 = tmp_8_fu_2658_p6;
    end else begin
        grp_fu_1664_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state155))) begin
        grp_fu_1669_p0 = reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1669_p0 = p_r_M_imag_8_reg_4995;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1669_p0 = p_r_M_imag_10_fu_3764_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1669_p0 = Un_M_imag_q0;
    end else begin
        grp_fu_1669_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_1669_p1 = 32'd897581056;
    end else if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1669_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1669_p1 = reg_1784;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1669_p1 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1669_p1 = p_t_imag_fu_3638_p1;
    end else begin
        grp_fu_1669_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1674_p0 = reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1674_p0 = p_r_M_imag_8_reg_4995;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1674_p0 = p_r_M_imag_10_fu_3764_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1674_p0 = Un_M_imag_q0;
    end else begin
        grp_fu_1674_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1674_p1 = 32'd1149239296;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1674_p1 = reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1674_p1 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1674_p1 = p_t_real_reg_4787;
    end else begin
        grp_fu_1674_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1679_p0 = reg_1760;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1679_p0 = p_r_M_real_8_reg_4989;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1679_p0 = reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1679_p0 = Un_M_real_q0;
    end else begin
        grp_fu_1679_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        grp_fu_1679_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_1679_p1 = reg_1784;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        grp_fu_1679_p1 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_1679_p1 = p_t_imag_fu_3638_p1;
    end else begin
        grp_fu_1679_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        grp_fu_1694_p0 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_1694_p0 = tmp_7_reg_4708;
    end else begin
        grp_fu_1694_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        grp_fu_1694_p1 = reg_1790;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_1694_p1 = 32'd1135214592;
    end else begin
        grp_fu_1694_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1700_p0 = bitcast_ln512_fu_3491_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_1700_p0 = reg_1719;
    end else begin
        grp_fu_1700_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_1703_p0 = theta_q0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1703_p0 = fc_q0;
    end else begin
        grp_fu_1703_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_1708_p1 = 64'd4580687790476549393;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1708_p1 = 64'd4618760256180340048;
    end else begin
        grp_fu_1708_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        temp_mat_M_imag_address0 = zext_ln295_1_fu_3749_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        temp_mat_M_imag_address0 = temp_mat_M_imag_add_1_reg_4749;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_mat_M_imag_address0 = zext_ln1027_6_fu_2012_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_imag_address0 = grp_Autocorrelation_fu_1591_Rx_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        temp_mat_M_imag_address0 = grp_eig_decompose_fu_1565_Rx_M_imag_address0;
    end else begin
        temp_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state109))) begin
        temp_mat_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_imag_ce0 = grp_Autocorrelation_fu_1591_Rx_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        temp_mat_M_imag_ce0 = grp_eig_decompose_fu_1565_Rx_M_imag_ce0;
    end else begin
        temp_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        temp_mat_M_imag_d0 = complex_M_imag_read_reg_1390;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_mat_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_imag_d0 = grp_Autocorrelation_fu_1591_Rx_M_imag_d0;
    end else begin
        temp_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state109) & (icmp_ln284_fu_3591_p2 == 1'd1)))) begin
        temp_mat_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_imag_we0 = grp_Autocorrelation_fu_1591_Rx_M_imag_we0;
    end else begin
        temp_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        temp_mat_M_real_address0 = zext_ln295_1_fu_3749_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        temp_mat_M_real_address0 = temp_mat_M_real_add_1_reg_4744;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_mat_M_real_address0 = zext_ln1027_6_fu_2012_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_real_address0 = grp_Autocorrelation_fu_1591_Rx_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        temp_mat_M_real_address0 = grp_eig_decompose_fu_1565_Rx_M_real_address0;
    end else begin
        temp_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state109))) begin
        temp_mat_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_real_ce0 = grp_Autocorrelation_fu_1591_Rx_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        temp_mat_M_real_ce0 = grp_eig_decompose_fu_1565_Rx_M_real_ce0;
    end else begin
        temp_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        temp_mat_M_real_d0 = complex_M_real_read_reg_1403;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_mat_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_real_d0 = grp_Autocorrelation_fu_1591_Rx_M_real_d0;
    end else begin
        temp_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state109) & (icmp_ln284_fu_3591_p2 == 1'd1)))) begin
        temp_mat_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        temp_mat_M_real_we0 = grp_Autocorrelation_fu_1591_Rx_M_real_we0;
    end else begin
        temp_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        theta_ce0 = 1'b1;
    end else begin
        theta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state179)) begin
        w_M_imag_address0 = w_M_imag_addr_1_reg_4984;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        w_M_imag_address0 = zext_ln304_reg_4930;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_M_imag_address0 = zext_ln210_fu_2074_p1;
    end else begin
        w_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state144))) begin
        w_M_imag_ce0 = 1'b1;
    end else begin
        w_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state179)) begin
        w_M_imag_d0 = reg_1768;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_M_imag_d0 = 32'd0;
    end else begin
        w_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state179))) begin
        w_M_imag_we0 = 1'b1;
    end else begin
        w_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state180)) begin
        w_M_real_address0 = zext_ln312_fu_3858_p1;
    end else if ((1'b1 == ap_CS_fsm_state179)) begin
        w_M_real_address0 = w_M_real_addr_2_reg_4979;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        w_M_real_address0 = zext_ln304_reg_4930;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_M_real_address0 = zext_ln210_fu_2074_p1;
    end else begin
        w_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state144))) begin
        w_M_real_ce0 = 1'b1;
    end else begin
        w_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state179)) begin
        w_M_real_d0 = reg_1760;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_M_real_d0 = 32'd0;
    end else begin
        w_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state179))) begin
        w_M_real_we0 = 1'b1;
    end else begin
        w_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln202_2_fu_1878_p2 == 1'd1) & (icmp_ln202_1_fu_1872_p2 == 1'd1) & (icmp_ln202_fu_1866_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((icmp_ln202_2_fu_1878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln202_1_fu_1872_p2 == 1'd1) & (icmp_ln202_fu_1866_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln202_1_fu_1872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln202_fu_1866_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln204_1_fu_1916_p2 == 1'd1) & (icmp_ln204_fu_1910_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((icmp_ln204_1_fu_1916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln204_fu_1910_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln205_1_fu_1954_p2 == 1'd1) & (icmp_ln205_fu_1948_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((icmp_ln205_1_fu_1954_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln205_fu_1948_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln206_fu_1986_p2 == 1'd1) & (ap_phi_mux_phi_ln206_1_phi_fu_1134_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((icmp_ln206_fu_1986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10) & (ap_phi_mux_phi_ln206_1_phi_fu_1134_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln207_1_fu_2024_p2 == 1'd1) & (icmp_ln207_fu_2018_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((icmp_ln207_1_fu_2024_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln207_fu_2018_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln208_1_fu_2062_p2 == 1'd1) & (icmp_ln208_fu_2056_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln208_1_fu_2062_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (icmp_ln208_fu_2056_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln210_fu_2080_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln211_1_fu_2126_p2 == 1'd1) & (icmp_ln211_fu_2120_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((icmp_ln211_1_fu_2126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17) & (icmp_ln211_fu_2120_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln234_fu_2132_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln236_fu_2156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln237_fu_2176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_fft_fu_1577_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln242_fu_2221_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln249_fu_2292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state180;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln252_fu_2339_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln253_fu_2380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (grp_Autocorrelation_fu_1591_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_eig_decompose_fu_1565_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((grp_sort_eigval_fu_1630_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln261_fu_2529_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((icmp_ln262_fu_2583_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state46 : begin
            if (((icmp_ln271_fu_2642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln273_fu_2673_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (grp_scaled_fixed2ieee_fu_1642_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            if (((1'b1 == ap_CS_fsm_state106) & (1'b0 == ap_block_state106_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end
        end
        ap_ST_fsm_state107 : begin
            if (((1'b1 == ap_CS_fsm_state107) & (icmp_ln280_fu_3516_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state108 : begin
            if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln281_fu_3552_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            if (((1'b1 == ap_CS_fsm_state109) & (icmp_ln284_fu_3591_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state125 : begin
            if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln290_fu_3644_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state126 : begin
            if (((1'b1 == ap_CS_fsm_state126) & (icmp_ln291_fu_3672_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state127 : begin
            if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln294_fu_3703_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state143 : begin
            if (((1'b1 == ap_CS_fsm_state143) & (icmp_ln300_fu_3770_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state144;
            end
        end
        ap_ST_fsm_state144 : begin
            if (((1'b1 == ap_CS_fsm_state144) & (icmp_ln303_fu_3802_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state173;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state145;
            end
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state180 : begin
            if (((1'b1 == ap_CS_fsm_state180) & (icmp_ln310_fu_3846_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state181;
            end
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_3006_p1 = r_V_36_fu_2989_p3[55:0];

assign Ex_V_fu_2931_p2 = (select_ln482_fu_2903_p3 - zext_ln655_fu_2928_p1);

assign Mx_bits_V_2_fu_2839_p2 = (124'd0 - p_Val2_74_reg_4424);

assign Mx_zeros_V_fu_2894_p1 = tmp_i_i_i1_fu_2886_p3[5:0];

assign P_sm_address0 = zext_ln312_reg_5024;

assign P_sm_d0 = reg_1731;

assign X_address0 = zext_ln238_1_fu_2210_p1;

assign add_ln1027_1_fu_1842_p2 = (zext_ln1027_8_fu_1838_p1 + add_ln1027_reg_3868);

assign add_ln1027_2_fu_2108_p2 = (phi_mul_reg_1210 + zext_ln1027_10_fu_2104_p1);

assign add_ln1027_fu_1826_p2 = (zext_ln1027_2_fu_1822_p1 + zext_ln1027_fu_1810_p1);

assign add_ln114_1_fu_2732_p2 = ($signed(11'd1101) + $signed(tmp_V_fu_2712_p4));

assign add_ln114_fu_2898_p2 = ($signed(11'd1027) + $signed(tmp_V_reg_4374));

assign add_ln202_1_fu_1832_p2 = (phi_ln202_1_reg_1049 + 4'd1);

assign add_ln202_2_fu_1847_p2 = (phi_ln202_2_reg_1061 + 2'd1);

assign add_ln202_fu_1796_p2 = (phi_ln202_reg_1037 + 10'd1);

assign add_ln204_1_fu_1890_p2 = (phi_ln204_1_reg_1084 + 2'd1);

assign add_ln204_fu_1884_p2 = (phi_ln204_reg_1072 + 4'd1);

assign add_ln205_1_fu_1928_p2 = (phi_ln205_1_reg_1107 + 2'd1);

assign add_ln205_fu_1922_p2 = (phi_ln205_reg_1095 + 2'd1);

assign add_ln206_fu_1960_p2 = (phi_ln206_reg_1118 + 2'd1);

assign add_ln207_1_fu_1998_p2 = (phi_ln207_1_reg_1153 + 2'd1);

assign add_ln207_fu_1992_p2 = (phi_ln207_reg_1141 + 2'd1);

assign add_ln208_1_fu_2036_p2 = (phi_ln208_1_reg_1176 + 2'd1);

assign add_ln208_fu_2030_p2 = (phi_ln208_reg_1164 + 9'd1);

assign add_ln210_fu_2068_p2 = (phi_ln210_reg_1187 + 9'd1);

assign add_ln211_1_fu_2098_p2 = (phi_ln211_1_reg_1222 + 9'd1);

assign add_ln211_2_fu_2086_p2 = (phi_mul_reg_1210 + 11'd361);

assign add_ln211_fu_2092_p2 = (phi_ln211_reg_1198 + 2'd1);

assign add_ln238_1_fu_2205_p2 = (zext_ln237_1_reg_4077 + zext_ln238_fu_2201_p1);

assign add_ln238_fu_2188_p2 = (shl_ln_reg_4011 + zext_ln237_fu_2172_p1);

assign add_ln243_1_fu_2269_p2 = (add_ln243_fu_2263_p2 + zext_ln236_reg_4016);

assign add_ln243_2_fu_2282_p2 = (tmp_34_cast_fu_2274_p3 + zext_ln237_1_reg_4077);

assign add_ln243_fu_2263_p2 = (zext_ln243_2_fu_2259_p1 + zext_ln243_1_fu_2247_p1);

assign add_ln255_1_fu_2355_p2 = (zext_ln255_2_fu_2351_p1 + add_ln255_reg_4137);

assign add_ln255_2_fu_2400_p2 = (tmp_25_cast_reg_4155 + zext_ln255_4_fu_2396_p1);

assign add_ln255_3_fu_2411_p2 = (zext_ln253_reg_4160 + zext_ln255_3_fu_2392_p1);

assign add_ln255_fu_2333_p2 = (zext_ln255_1_fu_2329_p1 + zext_ln255_fu_2317_p1);

assign add_ln264_fu_2599_p2 = (zext_ln264_reg_4276 + zext_ln264_2_fu_2595_p1);

assign add_ln271_fu_2636_p2 = (phi_mul7_reg_1345 + 11'd361);

assign add_ln276_fu_2694_p2 = (phi_mul7_reg_1345 + zext_ln276_fu_2690_p1);

assign add_ln285_1_fu_3612_p2 = (zext_ln287_1_reg_4739 + zext_ln285_1_fu_3603_p1);

assign add_ln285_fu_3607_p2 = (zext_ln287_reg_4721 + zext_ln285_1_fu_3603_p1);

assign add_ln287_fu_3580_p2 = (zext_ln285_fu_3564_p1 + zext_ln281_reg_4726);

assign add_ln295_1_fu_3738_p2 = (zext_ln297_reg_4823 + phi_mul9_reg_1486);

assign add_ln295_2_fu_3732_p2 = (phi_mul9_reg_1486 + 11'd361);

assign add_ln295_fu_3727_p2 = (zext_ln297_1_reg_4841 + zext_ln295_fu_3723_p1);

assign add_ln297_fu_3692_p2 = (zext_ln291_reg_4828 + zext_ln297_2_fu_3688_p1);

assign add_ln304_1_fu_3835_p2 = (phi_mul11_reg_1543 + zext_ln304_1_reg_4936);

assign add_ln304_2_fu_3829_p2 = (phi_mul11_reg_1543 + 11'd361);

assign add_ln304_fu_3818_p2 = (zext_ln303_reg_4941 + zext_ln304_2_fu_3814_p1);

assign addr_V_fu_2738_p3 = ((closepath_fu_2726_p2[0:0] === 1'b1) ? 11'd74 : add_ln114_1_fu_2732_p2);

assign and_ln300_2_fu_3431_p2 = (icmp_ln833_reg_4476 & icmp_ln833_1_reg_4418);

assign and_ln300_fu_3409_p2 = (icmp_ln833_reg_4476 & icmp_ln833_1_reg_4418);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd177];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd178];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd180];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd181];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd196];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state106_on_subcall_done = ((grp_sin_or_cos_float_s_fu_1615_ap_done == 1'b0) | (grp_sin_or_cos_float_s_fu_1599_ap_done == 1'b0));
end

assign ap_phi_mux_phi_ln206_1_phi_fu_1134_p4 = phi_ln206_1_reg_1130;

assign bitcast_ln277_1_fu_3511_p1 = xor_ln277_fu_3505_p2;

assign bitcast_ln277_fu_3501_p1 = grp_sin_or_cos_float_s_fu_1615_ap_return;

assign bitcast_ln512_fu_3491_p1 = p_Result_62_fu_3483_p4;

assign bitcast_ln667_2_fu_3754_p1 = reg_1784;

assign bitcast_ln667_fu_3628_p1 = reg_1738;

assign closepath_fu_2726_p2 = ((tmp_V_fu_2712_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign fc_address0 = zext_ln251_fu_2304_p1;

assign fourth_order_double_4_address0 = zext_ln498_reg_4518;

assign fourth_order_double_5_address0 = zext_ln498_fu_3063_p1;

assign fourth_order_double_6_address0 = zext_ln498_fu_3063_p1;

assign fourth_order_double_7_address0 = zext_ln498_reg_4518;

assign fourth_order_double_s_address0 = zext_ln498_reg_4518;

assign grp_Autocorrelation_fu_1591_ap_start = grp_Autocorrelation_fu_1591_ap_start_reg;

assign grp_eig_decompose_fu_1565_ap_start = grp_eig_decompose_fu_1565_ap_start_reg;

assign grp_fft_fu_1577_ap_start = grp_fft_fu_1577_ap_start_reg;

assign grp_fu_2798_p0 = grp_fu_2798_p00;

assign grp_fu_2798_p00 = ret_V_31_reg_4403;

assign grp_fu_2798_p1 = grp_fu_2798_p10;

assign grp_fu_2798_p10 = p_Result_56_fu_2784_p3;

assign grp_fu_3044_p0 = r_V_22_fu_3041_p1;

assign grp_fu_3044_p1 = r_V_22_fu_3041_p1;

assign grp_fu_3082_p0 = r_V_25_fu_3079_p1;

assign grp_fu_3082_p1 = r_V_22_reg_4511;

assign grp_fu_3087_p0 = r_V_25_fu_3079_p1;

assign grp_fu_3087_p1 = r_V_25_fu_3079_p1;

assign grp_fu_3099_p0 = grp_fu_3099_p00;

assign grp_fu_3099_p00 = B_V_reg_4494;

assign grp_fu_3111_p0 = grp_fu_3111_p00;

assign grp_fu_3111_p00 = B_squared_V_reg_4535;

assign grp_fu_3170_p0 = grp_fu_3170_p00;

assign grp_fu_3170_p00 = B_third_power_V_reg_4593;

assign grp_fu_3170_p1 = grp_fu_3170_p10;

assign grp_fu_3170_p10 = fourth_order_double_14_reg_4618;

assign grp_fu_3260_p1 = grp_fu_3260_p10;

assign grp_fu_3260_p10 = select_ln272_2_fu_3247_p3;

assign grp_scaled_fixed2ieee_fu_1642_ap_start = grp_scaled_fixed2ieee_fu_1642_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_1599_ap_start = grp_sin_or_cos_float_s_fu_1599_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_1599_do_cos = 1'd1;

assign grp_sin_or_cos_float_s_fu_1615_ap_start = grp_sin_or_cos_float_s_fu_1615_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_1615_do_cos = 1'd0;

assign grp_sort_eigval_fu_1630_ap_start = grp_sort_eigval_fu_1630_ap_start_reg;

assign i_5_fu_3522_p2 = (i38_0_reg_1368 + 3'd1);

assign i_6_fu_3650_p2 = (i40_0_reg_1427 + 9'd1);

assign i_7_fu_3776_p2 = (i43_0_reg_1497 + 9'd1);

assign i_fu_3852_p2 = (i45_0_reg_1554 + 9'd1);

assign icmp_ln202_1_fu_1872_p2 = ((phi_ln202_1_reg_1049 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln202_2_fu_1878_p2 = ((phi_ln202_reg_1037 == 10'd1023) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_1866_p2 = ((phi_ln202_2_reg_1061 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln204_1_fu_1916_p2 = ((phi_ln204_reg_1072 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_1910_p2 = ((phi_ln204_1_reg_1084 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln205_1_fu_1954_p2 = ((phi_ln205_reg_1095 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln205_fu_1948_p2 = ((phi_ln205_1_reg_1107 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln206_fu_1986_p2 = ((phi_ln206_reg_1118 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln207_1_fu_2024_p2 = ((phi_ln207_reg_1141 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_2018_p2 = ((phi_ln207_1_reg_1153 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln208_1_fu_2062_p2 = ((phi_ln208_reg_1164 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_2056_p2 = ((phi_ln208_1_reg_1176 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln210_fu_2080_p2 = ((phi_ln210_reg_1187 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln211_1_fu_2126_p2 = ((phi_ln211_reg_1198 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_2120_p2 = ((phi_ln211_1_reg_1222 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_2132_p2 = ((l_0_reg_1233 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_2156_p2 = ((n_0_reg_1244 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_2176_p2 = ((j32_0_reg_1255 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln242_fu_2221_p2 = ((j33_0_reg_1267 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_2292_p2 = ((jj_0_reg_1278 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_2339_p2 = ((l34_0_reg_1290 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_2380_p2 = ((n35_0_reg_1301 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln261_fu_2529_p2 = ((x_0_reg_1312 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln262_fu_2583_p2 = ((y_0_reg_1323 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln263_fu_2624_p2 = ((tmp_9_fu_2614_p6 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_2630_p2 = ((tmp_9_fu_2614_p6 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_2642_p2 = ((x36_0_reg_1334 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln273_fu_2673_p2 = ((y37_0_reg_1357 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln280_fu_3516_p2 = ((i38_0_reg_1368 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln281_fu_3552_p2 = ((j39_0_reg_1379 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_3591_p2 = ((k_0_reg_1416 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_3644_p2 = ((i40_0_reg_1427 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_3672_p2 = ((j41_0_reg_1438 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln294_fu_3703_p2 = ((k42_0_reg_1475 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln300_fu_3770_p2 = ((i43_0_reg_1497 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_3802_p2 = ((k44_0_reg_1532 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln310_fu_3846_p2 = ((i45_0_reg_1554 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln833_1_fu_2804_p2 = ((tmp_V_4_reg_4381 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_2_fu_2950_p2 = ((tmp_V_reg_4374 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_2945_p2 = ((tmp_V_reg_4374 == 11'd0) ? 1'b1 : 1'b0);

assign j_3_fu_2227_p2 = (j33_0_reg_1267 + 11'd1);

assign j_4_fu_3558_p2 = (j39_0_reg_1379 + 3'd1);

assign j_5_fu_3678_p2 = (j41_0_reg_1438 + 3'd1);

assign j_fu_2182_p2 = (j32_0_reg_1255 + 11'd1);

assign jj_fu_2298_p2 = (jj_0_reg_1278 + 11'd1);

assign k_2_fu_3808_p2 = (k44_0_reg_1532 + 3'd1);

assign k_3_fu_3709_p2 = (k42_0_reg_1475 + 3'd1);

assign k_fu_3597_p2 = (k_0_reg_1416 + 2'd1);

assign l_1_fu_2345_p2 = (l34_0_reg_1290 + 4'd1);

assign l_fu_2138_p2 = (l_0_reg_1233 + 4'd1);

assign lhs_V_2_fu_3198_p1 = $signed(t1_V_fu_3157_p3);

assign n_1_fu_2162_p2 = (n_0_reg_1244 + 3'd1);

assign n_fu_2386_p2 = (n35_0_reg_1301 + 3'd1);

assign or_ln266_fu_2567_p2 = (tmp_29_fu_2553_p3 | 4'd1);

assign or_ln300_fu_3449_p2 = (icmp_ln833_2_reg_4482 | and_ln300_fu_3409_p2);

assign or_ln311_fu_3418_p2 = (select_ln271_fu_3402_p3 | icmp_ln833_2_reg_4482);

assign p_Repl2_6_fu_3478_p3 = ((and_ln300_reg_4678[0:0] === 1'b1) ? results_sign_V_2_reg_4368 : select_ln311_reg_4683);

assign p_Result_56_fu_2784_p3 = {{1'd1}, {tmp_V_4_reg_4381}};

assign p_Result_57_fu_2861_p3 = {{p_Result_i_i_i_64_reg_4446}, {1'd1}};

assign p_Result_58_fu_2878_p3 = {{2'd3}, {p_Result_s_fu_2868_p4}};

assign p_Result_59_fu_3056_p3 = {{sin_basis_fu_3050_p2}, {p_Result_i_i_reg_4489}};

assign p_Result_60_fu_3298_p3 = p_Val2_70_fu_3294_p1[32'd63];

assign p_Result_61_fu_3320_p3 = {{results_sign_V_2_reg_4368}, {p_Val2_75_reg_4435}};

assign p_Result_62_fu_3483_p4 = {{{p_Repl2_6_fu_3478_p3}, {ret_V_29_reg_4688}}, {ret_V_30_reg_4693}};

assign p_Result_i_i_i_fu_2746_p4 = {{addr_V_fu_2738_p3[10:7]}};

integer ap_tvar_int_0;

always @ (p_Result_57_fu_2861_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_s_fu_2868_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_2868_p4[ap_tvar_int_0] = p_Result_57_fu_2861_p3[61 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_50_fu_2844_p3 = ((trunc_ln745_fu_2835_p1[0:0] === 1'b1) ? Mx_bits_V_2_fu_2839_p2 : p_Val2_74_reg_4424);

assign p_Val2_70_fu_3294_p1 = grp_scaled_fixed2ieee_fu_1642_ap_return;

assign p_Val2_75_fu_2829_p3 = ((closepath_reg_4387[0:0] === 1'b1) ? 3'd0 : trunc_ln_i_i_reg_4430);

assign p_Val2_s_fu_2700_p1 = reg_1719;

assign p_r_M_imag_10_fu_3764_p1 = xor_ln667_1_fu_3758_p2;

assign p_t_imag_fu_3638_p1 = xor_ln667_fu_3632_p2;

assign r_V_20_fu_2984_p2 = Mx_V_reg_4457 << zext_ln1287_fu_2975_p1;

assign r_V_22_fu_3041_p1 = B_trunc_V_reg_4499;

assign r_V_25_fu_3079_p1 = B_squared_V_reg_4535;

assign r_V_34_fu_2768_p2 = ref_4oPi_table_256_V_q0 << zext_ln744_fu_2765_p1;

assign r_V_35_fu_2913_p2 = p_Val2_50_reg_4441 << zext_ln1253_fu_2910_p1;

assign r_V_36_fu_2989_p3 = ((isNeg_reg_4470[0:0] === 1'b1) ? r_V_fu_2979_p2 : r_V_20_fu_2984_p2);

assign r_V_43_fu_3182_p0 = r_V_43_fu_3182_p00;

assign r_V_43_fu_3182_p00 = B_fourth_power_V_reg_4598;

assign r_V_43_fu_3182_p1 = r_V_43_fu_3182_p10;

assign r_V_43_fu_3182_p10 = fourth_order_double_16_reg_4623;

assign r_V_43_fu_3182_p2 = (r_V_43_fu_3182_p0 * r_V_43_fu_3182_p1);

assign r_V_fu_2979_p2 = Mx_V_reg_4457 >> zext_ln1287_fu_2975_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln635_fu_2756_p1;

assign ret_V_28_fu_3287_p2 = ($signed(12'd0) - $signed(rhs_V_4_fu_3283_p1));

assign ret_V_29_fu_3454_p3 = ((or_ln300_fu_3449_p2[0:0] === 1'b1) ? select_ln300_4_fu_3441_p3 : tmp_V_5_fu_3306_p4);

assign ret_V_30_fu_3470_p3 = ((or_ln300_fu_3449_p2[0:0] === 1'b1) ? select_ln300_6_fu_3462_p3 : tmp_V_6_fu_3316_p1);

assign ret_V_33_fu_3205_p2 = ($signed(lhs_V_2_fu_3198_p1) + $signed(rhs_V_3_fu_3202_p1));

assign ret_V_34_fu_3214_p2 = ($signed(ret_V_33_fu_3205_p2) + $signed(sext_ln657_fu_3211_p1));

assign ret_V_35_fu_3233_p2 = (ret_V_34_reg_4643 + zext_ln657_fu_3230_p1);

assign ret_V_fu_3241_p2 = (ret_V_35_fu_3233_p2 + zext_ln657_1_fu_3238_p1);

assign rhs_V_3_fu_3202_p1 = $signed(trunc_ln_reg_4608);

assign rhs_V_4_fu_3283_p1 = $signed(select_ln272_fu_3266_p3);

assign select_ln271_fu_3402_p3 = ((cos_basis_reg_4504[0:0] === 1'b1) ? tmp_11_fu_3326_p18 : tmp_12_fu_3364_p18);

assign select_ln272_2_fu_3247_p3 = ((cos_basis_reg_4504[0:0] === 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_4457);

assign select_ln272_fu_3266_p3 = ((cos_basis_reg_4504[0:0] === 1'b1) ? 11'd0 : Ex_V_reg_4464);

assign select_ln300_4_fu_3441_p3 = ((xor_ln300_fu_3435_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign select_ln300_6_fu_3462_p3 = ((xor_ln300_fu_3435_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln311_fu_3423_p3 = ((or_ln311_fu_3418_p2[0:0] === 1'b1) ? xor_ln311_fu_3413_p2 : p_Result_60_fu_3298_p3);

assign select_ln482_fu_2903_p3 = ((closepath_reg_4387[0:0] === 1'b1) ? add_ln114_fu_2898_p2 : 11'd0);

assign sext_ln1311_fu_2971_p1 = $signed(ush_fu_2964_p3);

assign sext_ln1334_fu_2955_p1 = Ex_V_reg_4464;

assign sext_ln657_fu_3211_p1 = $signed(trunc_ln662_1_reg_4613);

assign shl_ln_fu_2144_p3 = {{l_0_reg_1233}, {10'd0}};

assign sin_basis_fu_3050_p2 = (cos_basis_fu_3020_p10 ^ 1'd1);

assign sub_ln1311_fu_2958_p2 = ($signed(12'd0) - $signed(sext_ln1334_fu_2955_p1));

assign t1_V_fu_3157_p3 = {{p_Val2_59_reg_4603}, {4'd0}};

assign theta_address0 = zext_ln275_fu_2685_p1;

assign tmp_13_fu_1802_p3 = {{phi_ln202_reg_1037}, {3'd0}};

assign tmp_14_fu_1814_p3 = {{phi_ln202_reg_1037}, {1'd0}};

assign tmp_15_fu_1853_p3 = {{add_ln1027_1_reg_3878}, {phi_ln202_2_reg_1061}};

assign tmp_16_fu_1934_p3 = {{phi_ln205_reg_1095}, {phi_ln205_1_reg_1107}};

assign tmp_17_fu_1896_p3 = {{phi_ln204_reg_1072}, {phi_ln204_1_reg_1084}};

assign tmp_18_fu_1972_p3 = {{phi_ln206_reg_1118}, {phi_ln206_1_reg_1130}};

assign tmp_19_fu_2004_p3 = {{phi_ln207_reg_1141}, {phi_ln207_1_reg_1153}};

assign tmp_20_fu_2042_p3 = {{phi_ln208_reg_1164}, {phi_ln208_1_reg_1176}};

assign tmp_22_fu_2309_p3 = {{jj_0_reg_1278}, {3'd0}};

assign tmp_23_fu_2321_p3 = {{jj_0_reg_1278}, {1'd0}};

assign tmp_25_cast_fu_2360_p3 = {{add_ln255_1_fu_2355_p2}, {2'd0}};

assign tmp_26_fu_2368_p3 = {{l34_0_reg_1290}, {2'd0}};

assign tmp_27_fu_2193_p3 = {{add_ln238_fu_2188_p2}, {2'd0}};

assign tmp_28_fu_2541_p3 = {{x_0_reg_1312}, {2'd0}};

assign tmp_29_fu_2553_p3 = {{x_0_reg_1312}, {1'd0}};

assign tmp_30_fu_2573_p3 = {{60'd0}, {or_ln266_fu_2567_p2}};

assign tmp_31_fu_2239_p3 = {{j33_0_reg_1267}, {3'd0}};

assign tmp_32_fu_2251_p3 = {{j33_0_reg_1267}, {1'd0}};

assign tmp_33_fu_3528_p3 = {{i38_0_reg_1368}, {1'd0}};

assign tmp_34_cast_fu_2274_p3 = {{add_ln243_1_fu_2269_p2}, {2'd0}};

assign tmp_34_fu_3540_p3 = {{i38_0_reg_1368}, {2'd0}};

assign tmp_37_fu_3660_p3 = {{i40_0_reg_1427}, {2'd0}};

assign tmp_38_fu_3568_p3 = {{j39_0_reg_1379}, {1'd0}};

assign tmp_39_fu_3790_p3 = {{i43_0_reg_1497}, {2'd0}};

assign tmp_40_fu_3715_p3 = {{k42_0_reg_1475}, {2'd0}};

assign tmp_8_fu_2658_p5 = x36_0_reg_1334[1:0];

assign tmp_9_fu_2614_p5 = y_0_reg_1323[1:0];

assign tmp_V_4_fu_2722_p1 = p_Val2_s_fu_2700_p1[51:0];

assign tmp_V_5_fu_3306_p4 = {{p_Val2_70_fu_3294_p1[62:52]}};

assign tmp_V_6_fu_3316_p1 = p_Val2_70_fu_3294_p1[51:0];

assign tmp_V_fu_2712_p4 = {{p_Val2_s_fu_2700_p1[62:52]}};


always @ (p_Result_58_fu_2878_p3) begin
    if (p_Result_58_fu_2878_p3[0] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd0;
    end else if (p_Result_58_fu_2878_p3[1] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd1;
    end else if (p_Result_58_fu_2878_p3[2] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd2;
    end else if (p_Result_58_fu_2878_p3[3] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd3;
    end else if (p_Result_58_fu_2878_p3[4] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd4;
    end else if (p_Result_58_fu_2878_p3[5] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd5;
    end else if (p_Result_58_fu_2878_p3[6] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd6;
    end else if (p_Result_58_fu_2878_p3[7] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd7;
    end else if (p_Result_58_fu_2878_p3[8] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd8;
    end else if (p_Result_58_fu_2878_p3[9] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd9;
    end else if (p_Result_58_fu_2878_p3[10] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd10;
    end else if (p_Result_58_fu_2878_p3[11] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd11;
    end else if (p_Result_58_fu_2878_p3[12] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd12;
    end else if (p_Result_58_fu_2878_p3[13] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd13;
    end else if (p_Result_58_fu_2878_p3[14] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd14;
    end else if (p_Result_58_fu_2878_p3[15] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd15;
    end else if (p_Result_58_fu_2878_p3[16] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd16;
    end else if (p_Result_58_fu_2878_p3[17] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd17;
    end else if (p_Result_58_fu_2878_p3[18] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd18;
    end else if (p_Result_58_fu_2878_p3[19] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd19;
    end else if (p_Result_58_fu_2878_p3[20] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd20;
    end else if (p_Result_58_fu_2878_p3[21] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd21;
    end else if (p_Result_58_fu_2878_p3[22] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd22;
    end else if (p_Result_58_fu_2878_p3[23] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd23;
    end else if (p_Result_58_fu_2878_p3[24] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd24;
    end else if (p_Result_58_fu_2878_p3[25] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd25;
    end else if (p_Result_58_fu_2878_p3[26] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd26;
    end else if (p_Result_58_fu_2878_p3[27] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd27;
    end else if (p_Result_58_fu_2878_p3[28] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd28;
    end else if (p_Result_58_fu_2878_p3[29] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd29;
    end else if (p_Result_58_fu_2878_p3[30] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd30;
    end else if (p_Result_58_fu_2878_p3[31] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd31;
    end else if (p_Result_58_fu_2878_p3[32] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd32;
    end else if (p_Result_58_fu_2878_p3[33] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd33;
    end else if (p_Result_58_fu_2878_p3[34] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd34;
    end else if (p_Result_58_fu_2878_p3[35] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd35;
    end else if (p_Result_58_fu_2878_p3[36] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd36;
    end else if (p_Result_58_fu_2878_p3[37] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd37;
    end else if (p_Result_58_fu_2878_p3[38] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd38;
    end else if (p_Result_58_fu_2878_p3[39] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd39;
    end else if (p_Result_58_fu_2878_p3[40] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd40;
    end else if (p_Result_58_fu_2878_p3[41] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd41;
    end else if (p_Result_58_fu_2878_p3[42] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd42;
    end else if (p_Result_58_fu_2878_p3[43] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd43;
    end else if (p_Result_58_fu_2878_p3[44] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd44;
    end else if (p_Result_58_fu_2878_p3[45] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd45;
    end else if (p_Result_58_fu_2878_p3[46] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd46;
    end else if (p_Result_58_fu_2878_p3[47] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd47;
    end else if (p_Result_58_fu_2878_p3[48] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd48;
    end else if (p_Result_58_fu_2878_p3[49] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd49;
    end else if (p_Result_58_fu_2878_p3[50] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd50;
    end else if (p_Result_58_fu_2878_p3[51] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd51;
    end else if (p_Result_58_fu_2878_p3[52] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd52;
    end else if (p_Result_58_fu_2878_p3[53] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd53;
    end else if (p_Result_58_fu_2878_p3[54] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd54;
    end else if (p_Result_58_fu_2878_p3[55] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd55;
    end else if (p_Result_58_fu_2878_p3[56] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd56;
    end else if (p_Result_58_fu_2878_p3[57] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd57;
    end else if (p_Result_58_fu_2878_p3[58] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd58;
    end else if (p_Result_58_fu_2878_p3[59] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd59;
    end else if (p_Result_58_fu_2878_p3[60] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd60;
    end else if (p_Result_58_fu_2878_p3[61] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd61;
    end else if (p_Result_58_fu_2878_p3[62] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd62;
    end else if (p_Result_58_fu_2878_p3[63] == 1'b1) begin
        tmp_i_i_i1_fu_2886_p3 = 64'd63;
    end else begin
        tmp_i_i_i1_fu_2886_p3 = 64'd64;
    end
end

assign trunc_ln601_fu_2761_p1 = addr_V_fu_2738_p3[6:0];

assign trunc_ln745_fu_2835_p1 = p_Val2_75_fu_2829_p3[0:0];

assign ush_fu_2964_p3 = ((isNeg_reg_4470[0:0] === 1'b1) ? sub_ln1311_fu_2958_p2 : sext_ln1334_fu_2955_p1);

assign x_1_fu_2648_p2 = (x36_0_reg_1334 + 3'd1);

assign x_fu_2535_p2 = (x_0_reg_1312 + 3'd1);

assign xor_ln206_fu_1966_p2 = (phi_ln206_1_reg_1130 ^ 1'd1);

assign xor_ln277_fu_3505_p2 = (bitcast_ln277_fu_3501_p1 ^ 32'd2147483648);

assign xor_ln300_fu_3435_p2 = (1'd1 ^ and_ln300_2_fu_3431_p2);

assign xor_ln311_fu_3413_p2 = (icmp_ln833_2_reg_4482 ^ 1'd1);

assign xor_ln667_1_fu_3758_p2 = (bitcast_ln667_2_fu_3754_p1 ^ 32'd2147483648);

assign xor_ln667_fu_3632_p2 = (bitcast_ln667_fu_3628_p1 ^ 32'd2147483648);

assign y_1_fu_2589_p2 = (y_0_reg_1323 + 3'd1);

assign y_fu_2679_p2 = (y37_0_reg_1357 + 9'd1);

assign zext_ln1027_10_fu_2104_p1 = phi_ln211_1_reg_1222;

assign zext_ln1027_11_fu_2114_p1 = add_ln1027_2_fu_2108_p2;

assign zext_ln1027_2_fu_1822_p1 = tmp_14_fu_1814_p3;

assign zext_ln1027_3_fu_1904_p1 = tmp_17_fu_1896_p3;

assign zext_ln1027_4_fu_1942_p1 = tmp_16_fu_1934_p3;

assign zext_ln1027_5_fu_1980_p1 = tmp_18_fu_1972_p3;

assign zext_ln1027_6_fu_2012_p1 = tmp_19_fu_2004_p3;

assign zext_ln1027_7_fu_2050_p1 = tmp_20_fu_2042_p3;

assign zext_ln1027_8_fu_1838_p1 = phi_ln202_1_reg_1049;

assign zext_ln1027_9_fu_1860_p1 = tmp_15_fu_1853_p3;

assign zext_ln1027_fu_1810_p1 = tmp_13_fu_1802_p3;

assign zext_ln1253_fu_2910_p1 = Mx_zeros_V_reg_4451;

assign zext_ln1287_fu_2975_p1 = $unsigned(sext_ln1311_fu_2971_p1);

assign zext_ln210_fu_2074_p1 = phi_ln210_reg_1187;

assign zext_ln236_fu_2152_p1 = l_0_reg_1233;

assign zext_ln237_1_fu_2168_p1 = n_0_reg_1244;

assign zext_ln237_fu_2172_p1 = j32_0_reg_1255;

assign zext_ln238_1_fu_2210_p1 = add_ln238_1_fu_2205_p2;

assign zext_ln238_2_fu_2215_p1 = j32_0_reg_1255;

assign zext_ln238_fu_2201_p1 = tmp_27_fu_2193_p3;

assign zext_ln243_1_fu_2247_p1 = tmp_31_fu_2239_p3;

assign zext_ln243_2_fu_2259_p1 = tmp_32_fu_2251_p3;

assign zext_ln243_3_fu_2287_p1 = add_ln243_2_reg_4104;

assign zext_ln243_fu_2233_p1 = j33_0_reg_1267;

assign zext_ln251_fu_2304_p1 = jj_0_reg_1278;

assign zext_ln253_fu_2376_p1 = tmp_26_fu_2368_p3;

assign zext_ln255_1_fu_2329_p1 = tmp_23_fu_2321_p3;

assign zext_ln255_2_fu_2351_p1 = l34_0_reg_1290;

assign zext_ln255_3_fu_2392_p1 = n35_0_reg_1301;

assign zext_ln255_4_fu_2396_p1 = n35_0_reg_1301;

assign zext_ln255_5_fu_2405_p1 = add_ln255_2_fu_2400_p2;

assign zext_ln255_6_fu_2416_p1 = add_ln255_3_reg_4183;

assign zext_ln255_fu_2317_p1 = tmp_22_fu_2309_p3;

assign zext_ln264_1_fu_2561_p1 = tmp_29_fu_2553_p3;

assign zext_ln264_2_fu_2595_p1 = y_0_reg_1323;

assign zext_ln264_3_fu_2604_p1 = add_ln264_fu_2599_p2;

assign zext_ln264_fu_2549_p1 = tmp_28_fu_2541_p3;

assign zext_ln275_fu_2685_p1 = y37_0_reg_1357;

assign zext_ln276_1_fu_3496_p1 = add_ln276_reg_4353;

assign zext_ln276_fu_2690_p1 = y37_0_reg_1357;

assign zext_ln281_fu_3548_p1 = tmp_34_fu_3540_p3;

assign zext_ln285_1_fu_3603_p1 = k_0_reg_1416;

assign zext_ln285_2_fu_3623_p1 = add_ln285_reg_4762;

assign zext_ln285_3_fu_3617_p1 = add_ln285_1_fu_3612_p2;

assign zext_ln285_fu_3564_p1 = j39_0_reg_1379;

assign zext_ln287_1_fu_3576_p1 = tmp_38_fu_3568_p3;

assign zext_ln287_2_fu_3585_p1 = add_ln287_fu_3580_p2;

assign zext_ln287_fu_3536_p1 = tmp_33_fu_3528_p3;

assign zext_ln291_fu_3668_p1 = tmp_37_fu_3660_p3;

assign zext_ln295_1_fu_3749_p1 = add_ln295_reg_4864;

assign zext_ln295_2_fu_3743_p1 = add_ln295_1_fu_3738_p2;

assign zext_ln295_fu_3723_p1 = tmp_40_fu_3715_p3;

assign zext_ln297_1_fu_3684_p1 = j41_0_reg_1438;

assign zext_ln297_2_fu_3688_p1 = j41_0_reg_1438;

assign zext_ln297_3_fu_3697_p1 = add_ln297_fu_3692_p2;

assign zext_ln297_fu_3656_p1 = i40_0_reg_1427;

assign zext_ln303_fu_3798_p1 = tmp_39_fu_3790_p3;

assign zext_ln304_1_fu_3786_p1 = i43_0_reg_1497;

assign zext_ln304_2_fu_3814_p1 = k44_0_reg_1532;

assign zext_ln304_3_fu_3823_p1 = add_ln304_fu_3818_p2;

assign zext_ln304_4_fu_3840_p1 = add_ln304_1_fu_3835_p2;

assign zext_ln304_fu_3782_p1 = i43_0_reg_1497;

assign zext_ln312_fu_3858_p1 = i45_0_reg_1554;

assign zext_ln498_fu_3063_p1 = p_Result_59_fu_3056_p3;

assign zext_ln635_fu_2756_p1 = p_Result_i_i_i_fu_2746_p4;

assign zext_ln655_fu_2928_p1 = Mx_zeros_V_reg_4451;

assign zext_ln657_1_fu_3238_p1 = tmp_36_reg_4638;

assign zext_ln657_fu_3230_p1 = tmp_35_reg_4648;

assign zext_ln744_fu_2765_p1 = trunc_ln601_reg_4398;

always @ (posedge ap_clk) begin
    add_ln1027_reg_3868[0] <= 1'b0;
    shl_ln_reg_4011[9:0] <= 10'b0000000000;
    zext_ln236_reg_4016[14:4] <= 11'b00000000000;
    zext_ln237_1_reg_4077[16:3] <= 14'b00000000000000;
    add_ln255_reg_4137[0] <= 1'b0;
    tmp_25_cast_reg_4155[1:0] <= 2'b00;
    zext_ln253_reg_4160[1:0] <= 2'b00;
    zext_ln253_reg_4160[6] <= 1'b0;
    zext_ln264_reg_4276[1:0] <= 2'b00;
    zext_ln264_reg_4276[5] <= 1'b0;
    Un_M_real_addr_1_reg_4281[0] <= 1'b0;
    Un_M_real_addr_2_reg_4286[0] <= 1'b1;
    Un_M_imag_addr_1_reg_4291[0] <= 1'b0;
    Un_M_imag_addr_2_reg_4296[0] <= 1'b1;
    r_V_22_reg_4511[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln498_reg_4518[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln287_reg_4721[0] <= 1'b0;
    zext_ln287_reg_4721[4] <= 1'b0;
    zext_ln281_reg_4726[1:0] <= 2'b00;
    zext_ln281_reg_4726[5] <= 1'b0;
    zext_ln287_1_reg_4739[0] <= 1'b0;
    zext_ln287_1_reg_4739[4] <= 1'b0;
    zext_ln297_reg_4823[10:9] <= 2'b00;
    zext_ln291_reg_4828[1:0] <= 2'b00;
    zext_ln291_reg_4828[11] <= 1'b0;
    zext_ln297_1_reg_4841[5:3] <= 3'b000;
    zext_ln304_reg_4930[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln304_1_reg_4936[10:9] <= 2'b00;
    zext_ln303_reg_4941[1:0] <= 2'b00;
    zext_ln303_reg_4941[11] <= 1'b0;
    zext_ln312_reg_5024[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //music
