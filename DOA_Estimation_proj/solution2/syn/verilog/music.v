// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="music,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.801000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=50,HLS_SYN_DSP=195,HLS_SYN_FF=20905,HLS_SYN_LUT=45202,HLS_VERSION=2019_1}" *)

module music (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_address0,
        X_ce0,
        X_q0,
        Xj_f_M_real_address0,
        Xj_f_M_real_ce0,
        Xj_f_M_real_we0,
        Xj_f_M_real_d0,
        Xj_f_M_real_q0,
        Xj_f_M_imag_address0,
        Xj_f_M_imag_ce0,
        Xj_f_M_imag_we0,
        Xj_f_M_imag_d0,
        Xj_f_M_imag_q0,
        P_sm_address0,
        P_sm_ce0,
        P_sm_we0,
        P_sm_d0
);

parameter    ap_ST_fsm_state1 = 350'd1;
parameter    ap_ST_fsm_state2 = 350'd2;
parameter    ap_ST_fsm_state3 = 350'd4;
parameter    ap_ST_fsm_state4 = 350'd8;
parameter    ap_ST_fsm_state5 = 350'd16;
parameter    ap_ST_fsm_state6 = 350'd32;
parameter    ap_ST_fsm_state7 = 350'd64;
parameter    ap_ST_fsm_state8 = 350'd128;
parameter    ap_ST_fsm_state9 = 350'd256;
parameter    ap_ST_fsm_state10 = 350'd512;
parameter    ap_ST_fsm_state11 = 350'd1024;
parameter    ap_ST_fsm_state12 = 350'd2048;
parameter    ap_ST_fsm_state13 = 350'd4096;
parameter    ap_ST_fsm_state14 = 350'd8192;
parameter    ap_ST_fsm_state15 = 350'd16384;
parameter    ap_ST_fsm_state16 = 350'd32768;
parameter    ap_ST_fsm_state17 = 350'd65536;
parameter    ap_ST_fsm_state18 = 350'd131072;
parameter    ap_ST_fsm_state19 = 350'd262144;
parameter    ap_ST_fsm_state20 = 350'd524288;
parameter    ap_ST_fsm_state21 = 350'd1048576;
parameter    ap_ST_fsm_state22 = 350'd2097152;
parameter    ap_ST_fsm_state23 = 350'd4194304;
parameter    ap_ST_fsm_state24 = 350'd8388608;
parameter    ap_ST_fsm_state25 = 350'd16777216;
parameter    ap_ST_fsm_state26 = 350'd33554432;
parameter    ap_ST_fsm_state27 = 350'd67108864;
parameter    ap_ST_fsm_state28 = 350'd134217728;
parameter    ap_ST_fsm_state29 = 350'd268435456;
parameter    ap_ST_fsm_state30 = 350'd536870912;
parameter    ap_ST_fsm_state31 = 350'd1073741824;
parameter    ap_ST_fsm_state32 = 350'd2147483648;
parameter    ap_ST_fsm_state33 = 350'd4294967296;
parameter    ap_ST_fsm_state34 = 350'd8589934592;
parameter    ap_ST_fsm_state35 = 350'd17179869184;
parameter    ap_ST_fsm_state36 = 350'd34359738368;
parameter    ap_ST_fsm_state37 = 350'd68719476736;
parameter    ap_ST_fsm_state38 = 350'd137438953472;
parameter    ap_ST_fsm_state39 = 350'd274877906944;
parameter    ap_ST_fsm_state40 = 350'd549755813888;
parameter    ap_ST_fsm_state41 = 350'd1099511627776;
parameter    ap_ST_fsm_state42 = 350'd2199023255552;
parameter    ap_ST_fsm_state43 = 350'd4398046511104;
parameter    ap_ST_fsm_state44 = 350'd8796093022208;
parameter    ap_ST_fsm_state45 = 350'd17592186044416;
parameter    ap_ST_fsm_state46 = 350'd35184372088832;
parameter    ap_ST_fsm_state47 = 350'd70368744177664;
parameter    ap_ST_fsm_state48 = 350'd140737488355328;
parameter    ap_ST_fsm_state49 = 350'd281474976710656;
parameter    ap_ST_fsm_state50 = 350'd562949953421312;
parameter    ap_ST_fsm_state51 = 350'd1125899906842624;
parameter    ap_ST_fsm_state52 = 350'd2251799813685248;
parameter    ap_ST_fsm_state53 = 350'd4503599627370496;
parameter    ap_ST_fsm_state54 = 350'd9007199254740992;
parameter    ap_ST_fsm_state55 = 350'd18014398509481984;
parameter    ap_ST_fsm_state56 = 350'd36028797018963968;
parameter    ap_ST_fsm_state57 = 350'd72057594037927936;
parameter    ap_ST_fsm_state58 = 350'd144115188075855872;
parameter    ap_ST_fsm_state59 = 350'd288230376151711744;
parameter    ap_ST_fsm_state60 = 350'd576460752303423488;
parameter    ap_ST_fsm_state61 = 350'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 350'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 350'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 350'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 350'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 350'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 350'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 350'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 350'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 350'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 350'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 350'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 350'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 350'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 350'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 350'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 350'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 350'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 350'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 350'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 350'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 350'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 350'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 350'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 350'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 350'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 350'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 350'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 350'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 350'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 350'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 350'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 350'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 350'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 350'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 350'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 350'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 350'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 350'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 350'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 350'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 350'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 350'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 350'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 350'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 350'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 350'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 350'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 350'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 350'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 350'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 350'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 350'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 350'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 350'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 350'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 350'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 350'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 350'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 350'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 350'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 350'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 350'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 350'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 350'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 350'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 350'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 350'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 350'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 350'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 350'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 350'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 350'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 350'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 350'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 350'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 350'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 350'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 350'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 350'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 350'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 350'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 350'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 350'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 350'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 350'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 350'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 350'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 350'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 350'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 350'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 350'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 350'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 350'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 350'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 350'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 350'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 350'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 350'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 350'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 350'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 350'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 350'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 350'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 350'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 350'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 350'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 350'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 350'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 350'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 350'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 350'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 350'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 350'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 350'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 350'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 350'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 350'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 350'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 350'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 350'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 350'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 350'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 350'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 350'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 350'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 350'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 350'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 350'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 350'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 350'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 350'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 350'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 350'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 350'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 350'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 350'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 350'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 350'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 350'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 350'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 350'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 350'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 350'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 350'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 350'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 350'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 350'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 350'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 350'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 350'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 350'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 350'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 350'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 350'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 350'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 350'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 350'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 350'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 350'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 350'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 350'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 350'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 350'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 350'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 350'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 350'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 350'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 350'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 350'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 350'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 350'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 350'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 350'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 350'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 350'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 350'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 350'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 350'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 350'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 350'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 350'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 350'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 350'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 350'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 350'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 350'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 350'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 350'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 350'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 350'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 350'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 350'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 350'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 350'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 350'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 350'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 350'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 350'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 350'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 350'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 350'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 350'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 350'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 350'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 350'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 350'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 350'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;
parameter    ap_ST_fsm_state269 = 350'd474284397516047136454946754595585670566993857190463750305618264096412179005177856;
parameter    ap_ST_fsm_state270 = 350'd948568795032094272909893509191171341133987714380927500611236528192824358010355712;
parameter    ap_ST_fsm_state271 = 350'd1897137590064188545819787018382342682267975428761855001222473056385648716020711424;
parameter    ap_ST_fsm_state272 = 350'd3794275180128377091639574036764685364535950857523710002444946112771297432041422848;
parameter    ap_ST_fsm_state273 = 350'd7588550360256754183279148073529370729071901715047420004889892225542594864082845696;
parameter    ap_ST_fsm_state274 = 350'd15177100720513508366558296147058741458143803430094840009779784451085189728165691392;
parameter    ap_ST_fsm_state275 = 350'd30354201441027016733116592294117482916287606860189680019559568902170379456331382784;
parameter    ap_ST_fsm_state276 = 350'd60708402882054033466233184588234965832575213720379360039119137804340758912662765568;
parameter    ap_ST_fsm_state277 = 350'd121416805764108066932466369176469931665150427440758720078238275608681517825325531136;
parameter    ap_ST_fsm_state278 = 350'd242833611528216133864932738352939863330300854881517440156476551217363035650651062272;
parameter    ap_ST_fsm_state279 = 350'd485667223056432267729865476705879726660601709763034880312953102434726071301302124544;
parameter    ap_ST_fsm_state280 = 350'd971334446112864535459730953411759453321203419526069760625906204869452142602604249088;
parameter    ap_ST_fsm_state281 = 350'd1942668892225729070919461906823518906642406839052139521251812409738904285205208498176;
parameter    ap_ST_fsm_state282 = 350'd3885337784451458141838923813647037813284813678104279042503624819477808570410416996352;
parameter    ap_ST_fsm_state283 = 350'd7770675568902916283677847627294075626569627356208558085007249638955617140820833992704;
parameter    ap_ST_fsm_state284 = 350'd15541351137805832567355695254588151253139254712417116170014499277911234281641667985408;
parameter    ap_ST_fsm_state285 = 350'd31082702275611665134711390509176302506278509424834232340028998555822468563283335970816;
parameter    ap_ST_fsm_state286 = 350'd62165404551223330269422781018352605012557018849668464680057997111644937126566671941632;
parameter    ap_ST_fsm_state287 = 350'd124330809102446660538845562036705210025114037699336929360115994223289874253133343883264;
parameter    ap_ST_fsm_state288 = 350'd248661618204893321077691124073410420050228075398673858720231988446579748506266687766528;
parameter    ap_ST_fsm_state289 = 350'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533056;
parameter    ap_ST_fsm_state290 = 350'd994646472819573284310764496293641680200912301594695434880927953786318994025066751066112;
parameter    ap_ST_fsm_state291 = 350'd1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224;
parameter    ap_ST_fsm_state292 = 350'd3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448;
parameter    ap_ST_fsm_state293 = 350'd7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896;
parameter    ap_ST_fsm_state294 = 350'd15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792;
parameter    ap_ST_fsm_state295 = 350'd31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584;
parameter    ap_ST_fsm_state296 = 350'd63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168;
parameter    ap_ST_fsm_state297 = 350'd127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336;
parameter    ap_ST_fsm_state298 = 350'd254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672;
parameter    ap_ST_fsm_state299 = 350'd509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344;
parameter    ap_ST_fsm_state300 = 350'd1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688;
parameter    ap_ST_fsm_state301 = 350'd2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376;
parameter    ap_ST_fsm_state302 = 350'd4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752;
parameter    ap_ST_fsm_state303 = 350'd8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504;
parameter    ap_ST_fsm_state304 = 350'd16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008;
parameter    ap_ST_fsm_state305 = 350'd32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016;
parameter    ap_ST_fsm_state306 = 350'd65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032;
parameter    ap_ST_fsm_state307 = 350'd130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064;
parameter    ap_ST_fsm_state308 = 350'd260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128;
parameter    ap_ST_fsm_state309 = 350'd521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256;
parameter    ap_ST_fsm_state310 = 350'd1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512;
parameter    ap_ST_fsm_state311 = 350'd2085924839766513752338888384931203236916703635113918720651407820138886450957656787131798913024;
parameter    ap_ST_fsm_state312 = 350'd4171849679533027504677776769862406473833407270227837441302815640277772901915313574263597826048;
parameter    ap_ST_fsm_state313 = 350'd8343699359066055009355553539724812947666814540455674882605631280555545803830627148527195652096;
parameter    ap_ST_fsm_state314 = 350'd16687398718132110018711107079449625895333629080911349765211262561111091607661254297054391304192;
parameter    ap_ST_fsm_state315 = 350'd33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608384;
parameter    ap_ST_fsm_state316 = 350'd66749594872528440074844428317798503581334516323645399060845050244444366430645017188217565216768;
parameter    ap_ST_fsm_state317 = 350'd133499189745056880149688856635597007162669032647290798121690100488888732861290034376435130433536;
parameter    ap_ST_fsm_state318 = 350'd266998379490113760299377713271194014325338065294581596243380200977777465722580068752870260867072;
parameter    ap_ST_fsm_state319 = 350'd533996758980227520598755426542388028650676130589163192486760401955554931445160137505740521734144;
parameter    ap_ST_fsm_state320 = 350'd1067993517960455041197510853084776057301352261178326384973520803911109862890320275011481043468288;
parameter    ap_ST_fsm_state321 = 350'd2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576;
parameter    ap_ST_fsm_state322 = 350'd4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152;
parameter    ap_ST_fsm_state323 = 350'd8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304;
parameter    ap_ST_fsm_state324 = 350'd17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608;
parameter    ap_ST_fsm_state325 = 350'd34175792574734561318320347298712833833643272357706444319152665725155515612490248800367393390985216;
parameter    ap_ST_fsm_state326 = 350'd68351585149469122636640694597425667667286544715412888638305331450311031224980497600734786781970432;
parameter    ap_ST_fsm_state327 = 350'd136703170298938245273281389194851335334573089430825777276610662900622062449960995201469573563940864;
parameter    ap_ST_fsm_state328 = 350'd273406340597876490546562778389702670669146178861651554553221325801244124899921990402939147127881728;
parameter    ap_ST_fsm_state329 = 350'd546812681195752981093125556779405341338292357723303109106442651602488249799843980805878294255763456;
parameter    ap_ST_fsm_state330 = 350'd1093625362391505962186251113558810682676584715446606218212885303204976499599687961611756588511526912;
parameter    ap_ST_fsm_state331 = 350'd2187250724783011924372502227117621365353169430893212436425770606409952999199375923223513177023053824;
parameter    ap_ST_fsm_state332 = 350'd4374501449566023848745004454235242730706338861786424872851541212819905998398751846447026354046107648;
parameter    ap_ST_fsm_state333 = 350'd8749002899132047697490008908470485461412677723572849745703082425639811996797503692894052708092215296;
parameter    ap_ST_fsm_state334 = 350'd17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592;
parameter    ap_ST_fsm_state335 = 350'd34996011596528190789960035633881941845650710894291398982812329702559247987190014771576210832368861184;
parameter    ap_ST_fsm_state336 = 350'd69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368;
parameter    ap_ST_fsm_state337 = 350'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444736;
parameter    ap_ST_fsm_state338 = 350'd279968092772225526319680285071055534765205687154331191862498637620473983897520118172609686658950889472;
parameter    ap_ST_fsm_state339 = 350'd559936185544451052639360570142111069530411374308662383724997275240947967795040236345219373317901778944;
parameter    ap_ST_fsm_state340 = 350'd1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888;
parameter    ap_ST_fsm_state341 = 350'd2239744742177804210557442280568444278121645497234649534899989100963791871180160945380877493271607115776;
parameter    ap_ST_fsm_state342 = 350'd4479489484355608421114884561136888556243290994469299069799978201927583742360321890761754986543214231552;
parameter    ap_ST_fsm_state343 = 350'd8958978968711216842229769122273777112486581988938598139599956403855167484720643781523509973086428463104;
parameter    ap_ST_fsm_state344 = 350'd17917957937422433684459538244547554224973163977877196279199912807710334969441287563047019946172856926208;
parameter    ap_ST_fsm_state345 = 350'd35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852416;
parameter    ap_ST_fsm_state346 = 350'd71671831749689734737838152978190216899892655911508785116799651230841339877765150252188079784691427704832;
parameter    ap_ST_fsm_state347 = 350'd143343663499379469475676305956380433799785311823017570233599302461682679755530300504376159569382855409664;
parameter    ap_ST_fsm_state348 = 350'd286687326998758938951352611912760867599570623646035140467198604923365359511060601008752319138765710819328;
parameter    ap_ST_fsm_state349 = 350'd573374653997517877902705223825521735199141247292070280934397209846730719022121202017504638277531421638656;
parameter    ap_ST_fsm_state350 = 350'd1146749307995035755805410447651043470398282494584140561868794419693461438044242404035009276555062843277312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] X_address0;
output   X_ce0;
input  [31:0] X_q0;
output  [15:0] Xj_f_M_real_address0;
output   Xj_f_M_real_ce0;
output   Xj_f_M_real_we0;
output  [31:0] Xj_f_M_real_d0;
input  [31:0] Xj_f_M_real_q0;
output  [15:0] Xj_f_M_imag_address0;
output   Xj_f_M_imag_ce0;
output   Xj_f_M_imag_we0;
output  [31:0] Xj_f_M_imag_d0;
input  [31:0] Xj_f_M_imag_q0;
output  [8:0] P_sm_address0;
output   P_sm_ce0;
output   P_sm_we0;
output  [31:0] P_sm_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg X_ce0;
reg[15:0] Xj_f_M_real_address0;
reg Xj_f_M_real_ce0;
reg Xj_f_M_real_we0;
reg[15:0] Xj_f_M_imag_address0;
reg Xj_f_M_imag_ce0;
reg Xj_f_M_imag_we0;
reg P_sm_ce0;
reg P_sm_we0;

(* fsm_encoding = "none" *) reg   [349:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] fc_address0;
reg    fc_ce0;
wire   [31:0] fc_q0;
wire   [1:0] p_address0;
reg    p_ce0;
wire   [31:0] p_q0;
wire   [8:0] theta_address0;
reg    theta_ce0;
wire   [31:0] theta_q0;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
wire   [63:0] grp_fu_2930_p2;
reg   [63:0] reg_2939;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state91;
wire   [31:0] grp_fu_2904_p1;
reg   [31:0] reg_2944;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state93;
wire   [31:0] grp_fu_2760_p2;
reg   [31:0] reg_2950;
wire    ap_CS_fsm_state49;
wire    grp_sin_or_cos_float_s_fu_2721_ap_ready;
wire    grp_sin_or_cos_float_s_fu_2721_ap_done;
wire    grp_sin_or_cos_float_s_fu_2737_ap_ready;
wire    grp_sin_or_cos_float_s_fu_2737_ap_done;
reg    ap_block_state49_on_subcall_done;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state156;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state190;
wire    ap_CS_fsm_state202;
wire    ap_CS_fsm_state212;
wire    ap_CS_fsm_state226;
wire    ap_CS_fsm_state242;
wire    ap_CS_fsm_state306;
wire    ap_CS_fsm_state319;
wire    ap_CS_fsm_state331;
wire   [31:0] FFT_Buffer_re_q1;
wire    ap_CS_fsm_state51;
wire   [31:0] FFT_Buffer_re_q0;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state62;
wire   [31:0] FFT_Buffer_im_q1;
wire   [31:0] FFT_Buffer_im_q0;
wire   [31:0] grp_fu_2802_p2;
reg   [31:0] reg_2976;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state141;
wire    ap_CS_fsm_state161;
wire    ap_CS_fsm_state168;
wire    ap_CS_fsm_state186;
wire    ap_CS_fsm_state198;
wire    ap_CS_fsm_state208;
wire    ap_CS_fsm_state222;
wire    ap_CS_fsm_state238;
wire    ap_CS_fsm_state245;
wire    ap_CS_fsm_state273;
wire    ap_CS_fsm_state302;
wire    ap_CS_fsm_state315;
wire    ap_CS_fsm_state327;
wire   [31:0] grp_fu_2807_p2;
reg   [31:0] reg_2982;
wire   [31:0] grp_fu_2812_p2;
reg   [31:0] reg_2987;
wire   [31:0] grp_fu_2817_p2;
reg   [31:0] reg_2992;
reg   [31:0] reg_2997;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state109;
wire   [31:0] grp_fu_2765_p2;
reg   [31:0] reg_3003;
wire    ap_CS_fsm_state172;
wire    ap_CS_fsm_state249;
wire   [63:0] grp_fu_2907_p1;
reg   [63:0] reg_3011;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state276;
wire   [63:0] grp_fu_2924_p2;
reg   [63:0] reg_3016;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state280;
wire   [31:0] grp_fu_2893_p2;
reg   [31:0] reg_3021;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state180;
wire    ap_CS_fsm_state220;
wire    ap_CS_fsm_state257;
wire    ap_CS_fsm_state349;
wire   [31:0] grp_fu_2898_p2;
reg   [31:0] reg_3031;
wire   [31:0] temp_mat_M_real_q0;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state314;
wire   [31:0] temp_mat_M_imag_q0;
reg   [31:0] reg_3047;
wire   [31:0] Rx_temp_M_real_q0;
reg   [31:0] reg_3054;
wire    ap_CS_fsm_state160;
wire    ap_CS_fsm_state183;
wire    ap_CS_fsm_state197;
wire    ap_CS_fsm_state207;
wire   [31:0] Rx_temp_M_imag_q0;
reg   [31:0] reg_3064;
wire    ap_CS_fsm_state167;
wire    ap_CS_fsm_state185;
wire    ap_CS_fsm_state191;
reg   [31:0] reg_3092;
wire   [31:0] U_M_real_q0;
wire    ap_CS_fsm_state244;
wire   [31:0] U_M_imag_q0;
wire   [31:0] a_theta_M_real_q0;
wire    ap_CS_fsm_state326;
wire   [31:0] w_M_real_q0;
reg   [31:0] reg_3121;
wire    ap_CS_fsm_state336;
wire    ap_CS_fsm_state341;
wire   [3:0] add_ln200_fu_3127_p2;
reg   [3:0] add_ln200_reg_6223;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln200_1_fu_3133_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] add_ln201_fu_3165_p2;
reg   [1:0] add_ln201_reg_6239;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln201_1_fu_3171_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] add_ln202_fu_3203_p2;
reg   [1:0] add_ln202_reg_6255;
wire    ap_CS_fsm_state6;
wire   [0:0] xor_ln202_fu_3209_p2;
wire    ap_CS_fsm_state7;
wire   [1:0] add_ln203_fu_3235_p2;
reg   [1:0] add_ln203_reg_6268;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln203_1_fu_3241_p2;
wire    ap_CS_fsm_state9;
wire   [8:0] add_ln204_fu_3273_p2;
reg   [8:0] add_ln204_reg_6284;
wire    ap_CS_fsm_state10;
wire   [1:0] add_ln204_1_fu_3279_p2;
wire    ap_CS_fsm_state11;
wire   [8:0] add_ln205_fu_3311_p2;
wire    ap_CS_fsm_state12;
wire   [10:0] add_ln206_2_fu_3329_p2;
reg   [10:0] add_ln206_2_reg_6308;
wire    ap_CS_fsm_state13;
wire   [1:0] add_ln206_fu_3335_p2;
reg   [1:0] add_ln206_reg_6313;
wire   [8:0] add_ln206_1_fu_3341_p2;
wire    ap_CS_fsm_state14;
wire   [3:0] l_fu_3381_p2;
reg   [3:0] l_reg_6332;
wire    ap_CS_fsm_state15;
wire   [13:0] shl_ln_fu_3387_p3;
reg   [13:0] shl_ln_reg_6337;
wire   [0:0] icmp_ln211_fu_3375_p2;
wire   [14:0] zext_ln212_fu_3395_p1;
reg   [14:0] zext_ln212_reg_6342;
wire   [2:0] n_1_fu_3405_p2;
reg   [2:0] n_1_reg_6350;
wire    ap_CS_fsm_state16;
wire   [16:0] zext_ln213_1_fu_3411_p1;
reg   [16:0] zext_ln213_1_reg_6355;
wire   [0:0] icmp_ln212_fu_3399_p2;
wire   [10:0] j_fu_3425_p2;
reg   [10:0] j_reg_6364;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln213_fu_3419_p2;
wire   [9:0] trunc_ln108_fu_3464_p1;
wire    ap_CS_fsm_state19;
wire   [31:0] zext_ln108_fu_3468_p1;
reg   [31:0] zext_ln108_reg_6379;
wire   [10:0] i_6_fu_3478_p2;
reg   [10:0] i_6_reg_6387;
wire   [3:0] i_4_fu_3490_p2;
wire    ap_CS_fsm_state20;
wire   [31:0] rev_fu_3504_p3;
wire   [0:0] icmp_ln110_fu_3484_p2;
wire   [9:0] zext_ln112_fu_3522_p1;
wire   [0:0] icmp_ln124_fu_3526_p2;
reg   [0:0] icmp_ln124_reg_6410;
reg   [9:0] FFT_Buffer_re_addr_1_reg_6414;
reg   [9:0] FFT_Buffer_re_addr_2_reg_6420;
reg   [9:0] FFT_Buffer_im_addr_1_reg_6426;
reg   [9:0] FFT_Buffer_im_addr_2_reg_6432;
reg   [31:0] temp_reg_6438;
wire    ap_CS_fsm_state21;
reg   [31:0] temp_1_reg_6443;
wire   [10:0] DFTpts_fu_3553_p2;
reg   [10:0] DFTpts_reg_6451;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln159_fu_3547_p2;
reg   [9:0] trunc_ln6_reg_6456;
wire   [31:0] zext_ln161_fu_3569_p1;
reg   [31:0] zext_ln161_reg_6462;
wire    ap_CS_fsm_state24;
wire   [63:0] grp_fu_2936_p1;
reg   [63:0] tmp_7_reg_6468;
wire    ap_CS_fsm_state26;
wire   [31:0] numBF_fu_3573_p1;
reg   [31:0] numBF_reg_6473;
wire   [31:0] i_5_cast_fu_3576_p1;
reg   [31:0] i_5_cast_reg_6478;
wire    ap_CS_fsm_state46;
wire   [9:0] j_2_fu_3585_p2;
reg   [9:0] j_2_reg_6486;
wire   [3:0] stage_fu_3591_p2;
wire   [0:0] icmp_ln169_fu_3580_p2;
wire   [31:0] grp_sin_or_cos_float_s_fu_2721_ap_return;
reg   [31:0] c_reg_6496;
wire   [31:0] grp_sin_or_cos_float_s_fu_2737_ap_return;
reg   [31:0] s_reg_6502;
reg   [9:0] FFT_Buffer_re_addr_4_reg_6511;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln177_fu_3607_p2;
reg   [9:0] FFT_Buffer_im_addr_4_reg_6516;
reg   [9:0] FFT_Buffer_re_addr_5_reg_6521;
reg   [9:0] FFT_Buffer_im_addr_5_reg_6527;
wire   [31:0] i_7_fu_3630_p2;
reg   [31:0] i_7_reg_6533;
wire   [10:0] j_1_fu_3641_p2;
reg   [10:0] j_1_reg_6541;
wire    ap_CS_fsm_state66;
wire   [16:0] add_ln219_2_fu_3696_p2;
reg   [16:0] add_ln219_2_reg_6546;
wire   [0:0] icmp_ln218_fu_3635_p2;
wire   [10:0] jj_fu_3712_p2;
reg   [10:0] jj_reg_6564;
wire    ap_CS_fsm_state68;
wire   [0:0] icmp_ln225_fu_3706_p2;
wire    ap_CS_fsm_state69;
wire   [14:0] add_ln230_fu_3747_p2;
reg   [14:0] add_ln230_reg_6579;
wire   [3:0] l_1_fu_3759_p2;
reg   [3:0] l_1_reg_6587;
wire    ap_CS_fsm_state94;
wire   [16:0] tmp_36_cast_fu_3774_p3;
reg   [16:0] tmp_36_cast_reg_6592;
wire   [0:0] icmp_ln227_fu_3753_p2;
wire   [6:0] zext_ln228_fu_3790_p1;
reg   [6:0] zext_ln228_reg_6597;
wire   [2:0] n_fu_3800_p2;
reg   [2:0] n_reg_6605;
wire    ap_CS_fsm_state95;
wire   [0:0] icmp_ln228_fu_3794_p2;
wire   [6:0] add_ln230_3_fu_3825_p2;
reg   [6:0] add_ln230_3_reg_6620;
wire   [2:0] x_fu_3841_p2;
reg   [2:0] x_reg_6628;
wire    ap_CS_fsm_state97;
wire   [6:0] zext_ln104_fu_3847_p1;
reg   [6:0] zext_ln104_reg_6633;
wire   [0:0] icmp_ln98_fu_3835_p2;
wire   [5:0] zext_ln99_fu_3859_p1;
reg   [5:0] zext_ln99_reg_6638;
wire   [2:0] y_fu_3869_p2;
reg   [2:0] y_reg_6646;
wire    ap_CS_fsm_state98;
wire   [6:0] zext_ln104_1_fu_3875_p1;
reg   [6:0] zext_ln104_1_reg_6651;
wire   [0:0] icmp_ln99_fu_3863_p2;
reg   [3:0] temp_mat_M_real_add_1_reg_6656;
reg   [3:0] temp_mat_M_imag_add_1_reg_6661;
wire   [3:0] l_2_fu_3900_p2;
reg   [3:0] l_2_reg_6669;
wire    ap_CS_fsm_state99;
wire   [0:0] icmp_ln101_fu_3894_p2;
wire   [31:0] Autocorr_Buffer_M_r_q0;
wire    ap_CS_fsm_state100;
wire   [31:0] p_t_imag_fu_3950_p1;
wire   [31:0] Autocorr_Buffer_M_r_q1;
wire   [31:0] Autocorr_Buffer_M_i_q1;
wire   [1:0] add_ln11_fu_3956_p2;
reg   [1:0] add_ln11_reg_6723;
wire    ap_CS_fsm_state124;
wire   [1:0] add_ln11_1_fu_3962_p2;
wire    ap_CS_fsm_state125;
wire   [1:0] add_ln12_fu_3994_p2;
reg   [1:0] add_ln12_reg_6739;
wire    ap_CS_fsm_state126;
wire   [1:0] add_ln12_1_fu_4000_p2;
wire    ap_CS_fsm_state127;
wire   [1:0] add_ln13_fu_4032_p2;
reg   [1:0] add_ln13_reg_6755;
wire    ap_CS_fsm_state128;
wire   [1:0] add_ln13_1_fu_4038_p2;
wire    ap_CS_fsm_state129;
wire   [1:0] add_ln14_fu_4070_p2;
reg   [1:0] add_ln14_reg_6771;
wire    ap_CS_fsm_state130;
wire   [1:0] add_ln14_1_fu_4076_p2;
wire    ap_CS_fsm_state131;
wire   [2:0] i_8_fu_4114_p2;
reg   [2:0] i_8_reg_6790;
wire    ap_CS_fsm_state132;
wire   [5:0] zext_ln21_fu_4128_p1;
reg   [5:0] zext_ln21_reg_6795;
wire   [0:0] icmp_ln20_fu_4108_p2;
wire   [2:0] j_3_fu_4138_p2;
reg   [2:0] j_3_reg_6803;
wire    ap_CS_fsm_state133;
wire   [63:0] zext_ln22_1_fu_4153_p1;
reg   [63:0] zext_ln22_1_reg_6808;
wire   [0:0] icmp_ln21_fu_4132_p2;
wire   [3:0] i_9_fu_4165_p2;
reg   [3:0] i_9_reg_6829;
wire    ap_CS_fsm_state135;
wire   [2:0] i_10_fu_4177_p2;
reg   [2:0] i_10_reg_6837;
wire    ap_CS_fsm_state137;
wire   [5:0] zext_ln30_fu_4191_p1;
reg   [5:0] zext_ln30_reg_6842;
wire   [0:0] icmp_ln29_fu_4171_p2;
wire   [2:0] j_5_fu_4201_p2;
reg   [2:0] j_5_reg_6851;
wire    ap_CS_fsm_state138;
wire   [5:0] zext_ln36_fu_4207_p1;
reg   [5:0] zext_ln36_reg_6856;
wire   [0:0] icmp_ln30_fu_4195_p2;
reg   [3:0] eig_mat_M_real_addr_3_reg_6861;
reg   [3:0] eig_mat_M_imag_addr_2_reg_6866;
wire   [2:0] k_fu_4228_p2;
reg   [2:0] k_reg_6874;
wire    ap_CS_fsm_state139;
wire   [0:0] icmp_ln33_fu_4222_p2;
wire   [31:0] R_temp_M_real_q0;
wire    ap_CS_fsm_state140;
wire   [31:0] R_temp_M_imag_q0;
wire   [31:0] Q_temp_M_real_q0;
wire   [31:0] Q_temp_M_imag_q0;
wire    ap_CS_fsm_state149;
wire   [2:0] count_fu_4278_p2;
reg   [2:0] count_reg_6936;
wire    ap_CS_fsm_state150;
wire   [5:0] zext_ln1044_fu_4284_p1;
reg   [5:0] zext_ln1044_reg_6941;
wire   [0:0] icmp_ln40_fu_4272_p2;
reg   [3:0] U_M_real_addr_2_reg_6953;
wire    ap_CS_fsm_state151;
reg   [3:0] U_M_imag_addr_2_reg_6958;
wire   [31:0] eig_mat_M_real_q0;
reg   [31:0] eigval_temp_reg_6963;
wire   [2:0] i_11_fu_4338_p2;
reg   [2:0] i_11_reg_6971;
wire    ap_CS_fsm_state152;
wire   [5:0] zext_ln45_1_fu_4356_p1;
reg   [5:0] zext_ln45_1_reg_6976;
wire   [0:0] icmp_ln42_fu_4332_p2;
reg   [3:0] Rx_temp_M_real_addr_2_reg_6981;
reg   [3:0] Rx_temp_M_imag_addr_2_reg_6986;
wire   [2:0] j_9_fu_4380_p2;
reg   [2:0] j_9_reg_7004;
wire    ap_CS_fsm_state157;
wire   [0:0] icmp_ln44_fu_4386_p2;
reg   [0:0] icmp_ln44_reg_7009;
wire   [0:0] icmp_ln43_fu_4374_p2;
wire   [63:0] zext_ln47_1_fu_4401_p1;
reg   [63:0] zext_ln47_1_reg_7013;
wire   [31:0] zext_ln51_fu_4407_p1;
reg   [31:0] zext_ln51_reg_7029;
wire    ap_CS_fsm_state159;
wire   [1:0] i_13_fu_4417_p2;
reg   [1:0] i_13_reg_7039;
wire   [0:0] icmp_ln51_fu_4411_p2;
wire   [5:0] zext_ln52_fu_4445_p1;
reg   [5:0] zext_ln52_reg_7054;
reg   [3:0] Rx_temp_M_real_addr_4_reg_7063;
wire    ap_CS_fsm_state166;
wire   [0:0] icmp_ln53_fu_4449_p2;
reg   [3:0] Rx_temp_M_imag_addr_4_reg_7068;
wire   [31:0] j_8_fu_4470_p2;
reg   [31:0] j_8_reg_7073;
wire   [31:0] j_11_fu_4476_p2;
reg   [31:0] j_11_reg_7078;
wire    ap_CS_fsm_state182;
wire   [3:0] trunc_ln57_fu_4488_p1;
reg   [3:0] trunc_ln57_reg_7086;
wire   [0:0] icmp_ln56_fu_4482_p2;
wire   [5:0] sext_ln57_cast_fu_4506_p3;
reg   [5:0] sext_ln57_cast_reg_7101;
wire   [5:0] add_ln59_fu_4523_p2;
reg   [5:0] add_ln59_reg_7109;
wire    ap_CS_fsm_state184;
wire   [0:0] icmp_ln58_fu_4513_p2;
wire   [31:0] q_1_fu_4539_p2;
reg   [31:0] q_1_reg_7124;
reg   [3:0] Rx_temp_M_real_addr_8_reg_7129;
reg   [3:0] Rx_temp_M_imag_addr_8_reg_7134;
wire  signed [31:0] sext_ln65_fu_4550_p1;
wire    ap_CS_fsm_state195;
wire  signed [5:0] sext_ln70_fu_4574_p1;
reg  signed [5:0] sext_ln70_reg_7147;
wire   [0:0] tmp_73_fu_4554_p3;
reg   [3:0] Rx_temp_M_real_addr_5_reg_7152;
reg   [3:0] Rx_temp_M_imag_addr_5_reg_7157;
reg   [3:0] U_M_real_addr_3_reg_7162;
reg   [3:0] U_M_imag_addr_3_reg_7167;
wire   [31:0] j_10_fu_4601_p2;
reg   [31:0] j_10_reg_7172;
wire    ap_CS_fsm_state196;
wire   [0:0] icmp_ln67_fu_4607_p2;
wire   [2:0] m_fu_4651_p2;
reg   [2:0] m_reg_7200;
wire    ap_CS_fsm_state206;
wire   [31:0] p_r_M_real_17_fu_4667_p1;
wire   [31:0] p_r_M_imag_15_fu_4683_p1;
wire   [31:0] grp_fu_2858_p2;
reg   [31:0] tmp_7_i_i1_reg_7227;
wire   [31:0] grp_fu_2863_p2;
reg   [31:0] tmp_8_i_i_reg_7232;
wire   [31:0] grp_fu_2784_p2;
reg   [31:0] tmp_9_i_i_reg_7237;
wire    ap_CS_fsm_state230;
wire   [31:0] grp_fu_2918_p2;
reg   [31:0] midsum_reg_7247;
wire    ap_CS_fsm_state236;
wire   [2:0] i_15_fu_4695_p2;
reg   [2:0] i_15_reg_7257;
wire    ap_CS_fsm_state243;
reg   [3:0] U_M_real_addr_5_reg_7262;
wire   [0:0] icmp_ln75_fu_4689_p2;
reg   [3:0] U_M_imag_addr_5_reg_7267;
wire   [2:0] i_12_fu_4730_p2;
wire    ap_CS_fsm_state259;
wire   [31:0] zext_ln85_fu_4741_p1;
wire    ap_CS_fsm_state260;
wire   [1:0] i_14_fu_4751_p2;
reg   [1:0] i_14_reg_7289;
wire  signed [31:0] j_15_fu_4757_p2;
reg  signed [31:0] j_15_reg_7294;
wire    ap_CS_fsm_state261;
wire   [0:0] icmp_ln86_fu_4763_p2;
reg   [1:0] sort_index_addr_1_reg_7313;
reg   [1:0] sort_index_addr_2_reg_7319;
wire    ap_CS_fsm_state262;
wire   [31:0] eigval_q0;
wire    ap_CS_fsm_state263;
wire   [31:0] eigval_q1;
wire   [0:0] icmp_ln87_fu_4835_p2;
reg   [0:0] icmp_ln87_reg_7345;
wire   [0:0] icmp_ln87_1_fu_4841_p2;
reg   [0:0] icmp_ln87_1_reg_7350;
wire   [0:0] icmp_ln87_2_fu_4847_p2;
reg   [0:0] icmp_ln87_2_reg_7355;
wire   [0:0] icmp_ln87_3_fu_4853_p2;
reg   [0:0] icmp_ln87_3_reg_7360;
wire   [31:0] j_7_fu_4879_p3;
wire    ap_CS_fsm_state264;
wire   [2:0] sort_index_q0;
reg   [2:0] sort_index_load_reg_7370;
wire    ap_CS_fsm_state265;
wire   [2:0] x_1_fu_4892_p2;
reg   [2:0] x_1_reg_7378;
wire    ap_CS_fsm_state267;
wire   [5:0] zext_ln239_fu_4906_p1;
reg   [5:0] zext_ln239_reg_7383;
wire   [0:0] icmp_ln236_fu_4886_p2;
reg   [2:0] Un_M_real_addr_1_reg_7388;
reg   [2:0] Un_M_real_addr_2_reg_7393;
reg   [2:0] Un_M_imag_addr_1_reg_7398;
reg   [2:0] Un_M_imag_addr_2_reg_7403;
wire   [2:0] y_2_fu_4946_p2;
reg   [2:0] y_2_reg_7411;
wire    ap_CS_fsm_state268;
wire   [5:0] add_ln239_fu_4961_p2;
reg   [5:0] add_ln239_reg_7416;
wire   [0:0] icmp_ln237_fu_4940_p2;
wire    ap_CS_fsm_state269;
wire   [0:0] icmp_ln238_fu_4971_p2;
reg   [0:0] icmp_ln238_reg_7436;
wire   [0:0] icmp_ln240_fu_4977_p2;
reg   [0:0] icmp_ln240_reg_7440;
wire   [10:0] add_ln246_fu_4983_p2;
reg   [10:0] add_ln246_reg_7444;
wire    ap_CS_fsm_state271;
wire   [2:0] x_2_fu_4995_p2;
reg   [2:0] x_2_reg_7452;
wire   [0:0] icmp_ln246_fu_4989_p2;
wire    ap_CS_fsm_state272;
wire   [8:0] y_1_fu_5012_p2;
reg   [8:0] y_1_reg_7470;
wire    ap_CS_fsm_state274;
wire   [10:0] add_ln250_fu_5027_p2;
reg   [10:0] add_ln250_reg_7475;
wire   [0:0] icmp_ln248_fu_5006_p2;
wire    ap_CS_fsm_state275;
reg   [0:0] results_sign_V_2_reg_7490;
wire    ap_CS_fsm_state281;
wire   [10:0] tmp_V_fu_5045_p4;
reg   [10:0] tmp_V_reg_7496;
wire   [51:0] tmp_V_4_fu_5055_p1;
reg   [51:0] tmp_V_4_reg_7503;
wire   [0:0] closepath_fu_5059_p2;
reg   [0:0] closepath_reg_7509;
wire   [6:0] trunc_ln601_fu_5094_p1;
reg   [6:0] trunc_ln601_reg_7520;
reg   [169:0] ret_V_22_reg_7525;
wire    ap_CS_fsm_state282;
wire    ap_CS_fsm_state283;
wire   [0:0] icmp_ln833_1_fu_5137_p2;
reg   [0:0] icmp_ln833_1_reg_7540;
reg   [123:0] p_Val2_69_reg_7546;
wire    ap_CS_fsm_state284;
reg   [2:0] trunc_ln_i_i_reg_7552;
wire   [2:0] p_Val2_70_fu_5174_p3;
reg   [2:0] p_Val2_70_reg_7557;
wire    ap_CS_fsm_state285;
reg   [62:0] Mx_V_reg_7563;
wire  signed [10:0] Ex_V_fu_5268_p2;
reg  signed [10:0] Ex_V_reg_7570;
reg   [0:0] isNeg_reg_7576;
wire   [0:0] icmp_ln833_fu_5282_p2;
reg   [0:0] icmp_ln833_reg_7582;
wire   [0:0] icmp_ln833_2_fu_5287_p2;
reg   [0:0] icmp_ln833_2_reg_7588;
reg   [6:0] p_Result_i_i_reg_7595;
wire    ap_CS_fsm_state286;
wire   [55:0] B_V_fu_5343_p1;
reg   [55:0] B_V_reg_7600;
wire   [97:0] r_V_22_fu_5357_p1;
reg   [97:0] r_V_22_reg_7605;
reg   [48:0] B_squared_V_reg_7610;
wire   [0:0] cos_basis_fu_5377_p10;
reg   [0:0] cos_basis_reg_7616;
wire    ap_CS_fsm_state287;
reg   [41:0] B_third_power_V_reg_7623;
reg   [34:0] B_fourth_power_V_reg_7628;
reg   [58:0] p_Val2_58_reg_7658;
wire    ap_CS_fsm_state288;
reg   [55:0] trunc_ln9_reg_7663;
reg   [47:0] trunc_ln662_1_reg_7668;
wire   [37:0] add_ln1146_1_fu_5554_p2;
reg   [37:0] add_ln1146_1_reg_7673;
wire   [63:0] ret_V_fu_5596_p2;
reg   [63:0] ret_V_reg_7678;
wire    ap_CS_fsm_state289;
reg   [62:0] result_V_reg_7683;
wire    ap_CS_fsm_state290;
wire   [11:0] ret_V_19_fu_5642_p2;
reg   [11:0] ret_V_19_reg_7688;
wire   [63:0] grp_scaled_fixed2ieee_fu_2754_ap_return;
reg   [63:0] resultf_reg_7693;
wire    ap_CS_fsm_state291;
wire    grp_scaled_fixed2ieee_fu_2754_ap_ready;
wire    grp_scaled_fixed2ieee_fu_2754_ap_done;
wire   [63:0] bitcast_ln512_fu_5849_p1;
wire    ap_CS_fsm_state292;
reg   [31:0] sinpitheta_reg_7703;
wire    ap_CS_fsm_state293;
reg   [31:0] p_x_assign_6_reg_7708;
wire    ap_CS_fsm_state295;
wire   [2:0] i_16_fu_5880_p2;
reg   [2:0] i_16_reg_7717;
wire    ap_CS_fsm_state298;
wire   [4:0] zext_ln261_fu_5894_p1;
reg   [4:0] zext_ln261_reg_7722;
wire   [0:0] icmp_ln254_fu_5874_p2;
wire   [5:0] zext_ln255_fu_5906_p1;
reg   [5:0] zext_ln255_reg_7727;
wire   [2:0] j_12_fu_5916_p2;
reg   [2:0] j_12_reg_7735;
wire    ap_CS_fsm_state299;
wire   [4:0] zext_ln261_1_fu_5934_p1;
reg   [4:0] zext_ln261_1_reg_7740;
wire   [0:0] icmp_ln255_fu_5910_p2;
reg   [3:0] temp_mat_M_real_add_5_reg_7745;
reg   [3:0] temp_mat_M_imag_add_5_reg_7750;
wire   [1:0] k_2_fu_5955_p2;
reg   [1:0] k_2_reg_7758;
wire    ap_CS_fsm_state300;
wire   [0:0] icmp_ln258_fu_5949_p2;
wire   [31:0] Un_M_real_q0;
wire    ap_CS_fsm_state301;
wire   [31:0] p_t_imag_9_fu_5997_p1;
wire   [31:0] Un_M_real_q1;
wire   [31:0] Un_M_imag_q1;
wire    ap_CS_fsm_state310;
wire   [8:0] i_17_fu_6009_p2;
reg   [8:0] i_17_reg_7820;
wire    ap_CS_fsm_state311;
wire   [10:0] zext_ln271_fu_6015_p1;
reg   [10:0] zext_ln271_reg_7825;
wire   [0:0] icmp_ln264_fu_6003_p2;
wire   [11:0] zext_ln265_fu_6027_p1;
reg   [11:0] zext_ln265_reg_7830;
wire   [2:0] j_13_fu_6037_p2;
reg   [2:0] j_13_reg_7838;
wire    ap_CS_fsm_state312;
wire   [5:0] zext_ln271_1_fu_6043_p1;
reg   [5:0] zext_ln271_1_reg_7843;
wire   [0:0] icmp_ln265_fu_6031_p2;
reg   [10:0] AUU_M_real_addr_2_reg_7848;
reg   [10:0] AUU_M_imag_addr_2_reg_7853;
wire   [2:0] k_4_fu_6068_p2;
reg   [2:0] k_4_reg_7861;
wire    ap_CS_fsm_state313;
wire   [0:0] icmp_ln268_fu_6062_p2;
wire   [10:0] add_ln269_2_fu_6097_p2;
reg   [10:0] add_ln269_2_reg_7876;
wire   [31:0] p_r_M_imag_23_fu_6124_p1;
wire    ap_CS_fsm_state323;
wire   [8:0] i_18_fu_6136_p2;
reg   [8:0] i_18_reg_7910;
wire    ap_CS_fsm_state324;
wire   [63:0] zext_ln278_fu_6142_p1;
reg   [63:0] zext_ln278_reg_7915;
wire   [0:0] icmp_ln274_fu_6130_p2;
wire   [10:0] zext_ln278_1_fu_6146_p1;
reg   [10:0] zext_ln278_1_reg_7921;
wire   [11:0] zext_ln277_fu_6158_p1;
reg   [11:0] zext_ln277_reg_7926;
wire   [2:0] k_3_fu_6168_p2;
reg   [2:0] k_3_reg_7934;
wire    ap_CS_fsm_state325;
wire   [0:0] icmp_ln277_fu_6162_p2;
wire   [10:0] add_ln278_2_fu_6189_p2;
reg   [10:0] add_ln278_2_reg_7949;
reg   [8:0] w_M_real_addr_2_reg_7964;
reg   [8:0] w_M_imag_addr_1_reg_7969;
wire   [31:0] AUU_M_real_q0;
wire   [31:0] AUU_M_imag_q0;
wire   [31:0] a_theta_M_imag_q0;
wire    ap_CS_fsm_state335;
wire   [31:0] w_M_imag_q0;
wire   [8:0] i_fu_6212_p2;
reg   [8:0] i_reg_8010;
wire    ap_CS_fsm_state340;
wire   [63:0] zext_ln285_fu_6218_p1;
reg   [63:0] zext_ln285_reg_8015;
wire   [0:0] icmp_ln284_fu_6206_p2;
reg   [3:0] Q_temp_M_real_address0;
reg    Q_temp_M_real_ce0;
reg    Q_temp_M_real_we0;
reg   [31:0] Q_temp_M_real_d0;
reg   [3:0] Q_temp_M_imag_address0;
reg    Q_temp_M_imag_ce0;
reg    Q_temp_M_imag_we0;
reg   [31:0] Q_temp_M_imag_d0;
reg   [3:0] R_temp_M_real_address0;
reg    R_temp_M_real_ce0;
reg    R_temp_M_real_we0;
reg   [31:0] R_temp_M_real_d0;
reg   [3:0] R_temp_M_imag_address0;
reg    R_temp_M_imag_ce0;
reg    R_temp_M_imag_we0;
reg   [31:0] R_temp_M_imag_d0;
reg   [3:0] Rx_temp_M_real_address0;
reg    Rx_temp_M_real_ce0;
reg    Rx_temp_M_real_we0;
reg   [31:0] Rx_temp_M_real_d0;
reg   [3:0] Rx_temp_M_imag_address0;
reg    Rx_temp_M_imag_ce0;
reg    Rx_temp_M_imag_we0;
reg   [31:0] Rx_temp_M_imag_d0;
reg   [3:0] eig_mat_M_real_address0;
reg    eig_mat_M_real_ce0;
reg    eig_mat_M_real_we0;
reg   [31:0] eig_mat_M_real_d0;
reg   [3:0] eig_mat_M_imag_address0;
reg    eig_mat_M_imag_ce0;
reg    eig_mat_M_imag_we0;
reg   [31:0] eig_mat_M_imag_d0;
wire   [31:0] eig_mat_M_imag_q0;
reg   [9:0] FFT_Buffer_re_address0;
reg    FFT_Buffer_re_ce0;
reg    FFT_Buffer_re_we0;
reg   [31:0] FFT_Buffer_re_d0;
reg   [9:0] FFT_Buffer_re_address1;
reg    FFT_Buffer_re_ce1;
reg    FFT_Buffer_re_we1;
reg   [31:0] FFT_Buffer_re_d1;
reg   [9:0] FFT_Buffer_im_address0;
reg    FFT_Buffer_im_ce0;
reg    FFT_Buffer_im_we0;
reg   [31:0] FFT_Buffer_im_d0;
reg   [9:0] FFT_Buffer_im_address1;
reg    FFT_Buffer_im_ce1;
reg    FFT_Buffer_im_we1;
reg   [31:0] FFT_Buffer_im_d1;
reg   [5:0] Autocorr_Buffer_M_r_address0;
reg    Autocorr_Buffer_M_r_ce0;
reg    Autocorr_Buffer_M_r_we0;
reg   [31:0] Autocorr_Buffer_M_r_d0;
wire   [5:0] Autocorr_Buffer_M_r_address1;
reg    Autocorr_Buffer_M_r_ce1;
reg   [5:0] Autocorr_Buffer_M_i_address0;
reg    Autocorr_Buffer_M_i_ce0;
reg    Autocorr_Buffer_M_i_we0;
reg   [31:0] Autocorr_Buffer_M_i_d0;
wire   [31:0] Autocorr_Buffer_M_i_q0;
wire   [5:0] Autocorr_Buffer_M_i_address1;
reg    Autocorr_Buffer_M_i_ce1;
reg   [3:0] U_M_real_address0;
reg    U_M_real_ce0;
reg    U_M_real_we0;
reg   [31:0] U_M_real_d0;
reg   [3:0] U_M_imag_address0;
reg    U_M_imag_ce0;
reg    U_M_imag_we0;
reg   [31:0] U_M_imag_d0;
reg   [2:0] Un_M_real_address0;
reg    Un_M_real_ce0;
reg    Un_M_real_we0;
reg   [31:0] Un_M_real_d0;
wire   [2:0] Un_M_real_address1;
reg    Un_M_real_ce1;
reg   [2:0] Un_M_imag_address0;
reg    Un_M_imag_ce0;
reg    Un_M_imag_we0;
reg   [31:0] Un_M_imag_d0;
wire   [31:0] Un_M_imag_q0;
wire   [2:0] Un_M_imag_address1;
reg    Un_M_imag_ce1;
reg   [3:0] temp_mat_M_real_address0;
reg    temp_mat_M_real_ce0;
reg    temp_mat_M_real_we0;
reg   [31:0] temp_mat_M_real_d0;
reg   [3:0] temp_mat_M_imag_address0;
reg    temp_mat_M_imag_ce0;
reg    temp_mat_M_imag_we0;
reg   [31:0] temp_mat_M_imag_d0;
reg   [10:0] AUU_M_real_address0;
reg    AUU_M_real_ce0;
reg    AUU_M_real_we0;
reg   [31:0] AUU_M_real_d0;
reg   [10:0] AUU_M_imag_address0;
reg    AUU_M_imag_ce0;
reg    AUU_M_imag_we0;
reg   [31:0] AUU_M_imag_d0;
reg   [8:0] w_M_real_address0;
reg    w_M_real_ce0;
reg    w_M_real_we0;
reg   [31:0] w_M_real_d0;
reg   [8:0] w_M_imag_address0;
reg    w_M_imag_ce0;
reg    w_M_imag_we0;
reg   [31:0] w_M_imag_d0;
reg   [10:0] a_theta_M_real_address0;
reg    a_theta_M_real_ce0;
reg    a_theta_M_real_we0;
reg   [31:0] a_theta_M_real_d0;
reg   [10:0] a_theta_M_imag_address0;
reg    a_theta_M_imag_ce0;
reg    a_theta_M_imag_we0;
reg   [31:0] a_theta_M_imag_d0;
reg   [1:0] eigval_address0;
reg    eigval_ce0;
reg    eigval_we0;
wire   [1:0] eigval_address1;
reg    eigval_ce1;
reg   [1:0] sort_index_address0;
reg    sort_index_ce0;
reg    sort_index_we0;
reg   [2:0] sort_index_d0;
reg   [1:0] sort_index_address1;
reg    sort_index_ce1;
reg    sort_index_we1;
wire   [2:0] sort_index_q1;
wire   [3:0] grp_qrf_top_fu_2711_A_M_real_address0;
wire    grp_qrf_top_fu_2711_A_M_real_ce0;
wire   [31:0] grp_qrf_top_fu_2711_A_M_real_d0;
wire    grp_qrf_top_fu_2711_A_M_real_we0;
wire   [3:0] grp_qrf_top_fu_2711_A_M_real_address1;
wire    grp_qrf_top_fu_2711_A_M_real_ce1;
wire   [31:0] grp_qrf_top_fu_2711_A_M_real_d1;
wire    grp_qrf_top_fu_2711_A_M_real_we1;
wire   [3:0] grp_qrf_top_fu_2711_A_M_imag_address0;
wire    grp_qrf_top_fu_2711_A_M_imag_ce0;
wire   [31:0] grp_qrf_top_fu_2711_A_M_imag_d0;
wire    grp_qrf_top_fu_2711_A_M_imag_we0;
wire   [3:0] grp_qrf_top_fu_2711_A_M_imag_address1;
wire    grp_qrf_top_fu_2711_A_M_imag_ce1;
wire   [31:0] grp_qrf_top_fu_2711_A_M_imag_d1;
wire    grp_qrf_top_fu_2711_A_M_imag_we1;
wire   [3:0] grp_qrf_top_fu_2711_Q_M_real_address0;
wire    grp_qrf_top_fu_2711_Q_M_real_ce0;
wire   [31:0] grp_qrf_top_fu_2711_Q_M_real_d0;
wire    grp_qrf_top_fu_2711_Q_M_real_we0;
wire   [3:0] grp_qrf_top_fu_2711_Q_M_real_address1;
wire    grp_qrf_top_fu_2711_Q_M_real_ce1;
wire   [31:0] grp_qrf_top_fu_2711_Q_M_real_d1;
wire    grp_qrf_top_fu_2711_Q_M_real_we1;
wire   [3:0] grp_qrf_top_fu_2711_Q_M_imag_address0;
wire    grp_qrf_top_fu_2711_Q_M_imag_ce0;
wire   [31:0] grp_qrf_top_fu_2711_Q_M_imag_d0;
wire    grp_qrf_top_fu_2711_Q_M_imag_we0;
wire   [3:0] grp_qrf_top_fu_2711_Q_M_imag_address1;
wire    grp_qrf_top_fu_2711_Q_M_imag_ce1;
wire   [31:0] grp_qrf_top_fu_2711_Q_M_imag_d1;
wire    grp_qrf_top_fu_2711_Q_M_imag_we1;
wire   [3:0] grp_qrf_top_fu_2711_R_M_real_address0;
wire    grp_qrf_top_fu_2711_R_M_real_ce0;
wire   [31:0] grp_qrf_top_fu_2711_R_M_real_d0;
wire    grp_qrf_top_fu_2711_R_M_real_we0;
wire   [3:0] grp_qrf_top_fu_2711_R_M_real_address1;
wire    grp_qrf_top_fu_2711_R_M_real_ce1;
wire   [31:0] grp_qrf_top_fu_2711_R_M_real_d1;
wire    grp_qrf_top_fu_2711_R_M_real_we1;
wire   [3:0] grp_qrf_top_fu_2711_R_M_imag_address0;
wire    grp_qrf_top_fu_2711_R_M_imag_ce0;
wire   [31:0] grp_qrf_top_fu_2711_R_M_imag_d0;
wire    grp_qrf_top_fu_2711_R_M_imag_we0;
wire   [3:0] grp_qrf_top_fu_2711_R_M_imag_address1;
wire    grp_qrf_top_fu_2711_R_M_imag_ce1;
wire   [31:0] grp_qrf_top_fu_2711_R_M_imag_d1;
wire    grp_qrf_top_fu_2711_R_M_imag_we1;
wire    grp_qrf_top_fu_2711_ap_start;
wire    grp_qrf_top_fu_2711_ap_done;
wire    grp_qrf_top_fu_2711_ap_ready;
wire    grp_qrf_top_fu_2711_ap_idle;
reg    grp_qrf_top_fu_2711_ap_continue;
wire    grp_sin_or_cos_float_s_fu_2721_ap_start;
wire    grp_sin_or_cos_float_s_fu_2721_ap_idle;
reg   [31:0] grp_sin_or_cos_float_s_fu_2721_t_in;
wire    grp_sin_or_cos_float_s_fu_2721_do_cos;
wire    grp_sin_or_cos_float_s_fu_2737_ap_start;
wire    grp_sin_or_cos_float_s_fu_2737_ap_idle;
reg   [31:0] grp_sin_or_cos_float_s_fu_2737_t_in;
wire    grp_sin_or_cos_float_s_fu_2737_do_cos;
wire    grp_scaled_fixed2ieee_fu_2754_ap_start;
wire    grp_scaled_fixed2ieee_fu_2754_ap_idle;
reg   [3:0] phi_ln200_reg_1705;
wire   [0:0] icmp_ln200_fu_3153_p2;
wire   [0:0] icmp_ln200_1_fu_3159_p2;
reg   [1:0] phi_ln200_1_reg_1717;
reg   [1:0] phi_ln201_reg_1728;
wire   [0:0] icmp_ln201_fu_3191_p2;
wire   [0:0] icmp_ln201_1_fu_3197_p2;
reg   [1:0] phi_ln201_1_reg_1740;
reg   [1:0] phi_ln202_reg_1751;
wire   [0:0] ap_phi_mux_phi_ln202_1_phi_fu_1767_p4;
wire   [0:0] icmp_ln202_fu_3229_p2;
reg   [0:0] phi_ln202_1_reg_1763;
reg   [1:0] phi_ln203_reg_1774;
wire   [0:0] icmp_ln203_fu_3261_p2;
wire   [0:0] icmp_ln203_1_fu_3267_p2;
reg   [1:0] phi_ln203_1_reg_1786;
reg   [8:0] phi_ln204_reg_1797;
wire   [0:0] icmp_ln204_fu_3299_p2;
wire   [0:0] icmp_ln204_1_fu_3305_p2;
reg   [1:0] phi_ln204_1_reg_1809;
reg   [8:0] phi_ln205_reg_1820;
wire   [0:0] icmp_ln205_fu_3323_p2;
reg   [1:0] phi_ln206_reg_1831;
wire   [0:0] icmp_ln206_fu_3363_p2;
wire   [0:0] icmp_ln206_1_fu_3369_p2;
reg   [10:0] phi_mul_reg_1843;
reg   [8:0] phi_ln206_1_reg_1855;
reg   [3:0] l_0_reg_1866;
reg   [2:0] n_0_reg_1877;
reg   [10:0] j_0_reg_1888;
wire    ap_CS_fsm_state18;
reg   [10:0] input_assign_reg_1900;
wire    ap_CS_fsm_state22;
reg   [31:0] reversed_reg_1912;
wire   [0:0] icmp_ln122_fu_3472_p2;
reg   [3:0] i_0_i_i_i_reg_1923;
reg   [9:0] p_0_i_i_i_reg_1934;
reg   [3:0] stage_0_i_reg_1943;
reg   [9:0] i_5_reg_1955;
reg   [31:0] p_x_assign_5_reg_1966;
reg  signed [31:0] i_0_i_reg_1978;
wire    ap_CS_fsm_state65;
reg   [10:0] j25_0_reg_1987;
wire    ap_CS_fsm_state67;
reg   [10:0] jj_0_reg_1998;
reg   [3:0] l26_0_reg_2010;
reg   [2:0] n27_0_reg_2021;
wire    ap_CS_fsm_state96;
reg   [2:0] x_0_i_reg_2032;
reg   [2:0] y_0_i_reg_2043;
wire    ap_CS_fsm_state123;
reg   [31:0] p_r_M_imag_reg_2054;
reg   [31:0] p_r_M_real_reg_2066;
reg   [3:0] l_0_i_reg_2078;
reg   [1:0] phi_ln11_reg_2089;
wire   [0:0] icmp_ln11_fu_3982_p2;
wire   [0:0] icmp_ln11_1_fu_3988_p2;
reg   [1:0] phi_ln11_1_reg_2101;
reg   [1:0] phi_ln12_reg_2112;
wire   [0:0] icmp_ln12_fu_4020_p2;
wire   [0:0] icmp_ln12_1_fu_4026_p2;
reg   [1:0] phi_ln12_1_reg_2124;
reg   [1:0] phi_ln13_reg_2135;
wire   [0:0] icmp_ln13_fu_4058_p2;
wire   [0:0] icmp_ln13_1_fu_4064_p2;
reg   [1:0] phi_ln13_1_reg_2147;
reg   [1:0] phi_ln14_reg_2158;
wire   [0:0] icmp_ln14_fu_4096_p2;
wire   [0:0] icmp_ln14_1_fu_4102_p2;
reg   [1:0] phi_ln14_1_reg_2170;
reg   [2:0] i_0_i25_reg_2181;
reg   [2:0] j_0_i26_reg_2192;
wire    ap_CS_fsm_state134;
reg   [3:0] i16_0_i_reg_2203;
reg   [2:0] i17_0_i_reg_2214;
wire    ap_CS_fsm_state136;
wire    ap_sync_grp_qrf_top_fu_2711_ap_ready;
wire    ap_sync_grp_qrf_top_fu_2711_ap_done;
reg    ap_block_state136_on_subcall_done;
reg   [2:0] j18_0_i_reg_2225;
reg   [31:0] complex_M_imag_read_reg_2236;
reg   [31:0] complex_M_real_read_reg_2249;
reg   [2:0] k_0_i_reg_2262;
reg   [2:0] count_0_i_reg_2273;
wire   [0:0] icmp_ln27_fu_4159_p2;
reg   [2:0] i19_0_i_reg_2285;
reg   [2:0] j20_0_i_reg_2297;
wire    ap_CS_fsm_state158;
reg   [1:0] j_14_reg_2308;
reg   [31:0] j22_0_i_reg_2320;
wire    ap_CS_fsm_state181;
reg   [31:0] j23_0_in_i_reg_2329;
reg   [31:0] q_0_i_reg_2338;
wire    ap_CS_fsm_state194;
reg   [31:0] p_x_assign_reg_2347;
reg  signed [2:0] m_0_i_reg_2359;
reg   [31:0] complex_M_imag_read_1_reg_2371;
reg   [31:0] complex_M_real_read_1_reg_2383;
reg   [31:0] j24_0_in_i_reg_2395;
reg   [2:0] i25_0_i_reg_2404;
wire    ap_CS_fsm_state258;
reg   [2:0] i_0_i31_reg_2415;
wire   [0:0] icmp_ln81_fu_4724_p2;
reg   [1:0] flag_reg_2427;
wire    ap_CS_fsm_state266;
reg  signed [31:0] flag_0_i_reg_2439;
wire   [0:0] icmp_ln84_fu_4745_p2;
reg   [31:0] j_0_in_i_reg_2449;
reg   [2:0] x_0_reg_2458;
reg   [2:0] y_0_reg_2469;
wire    ap_CS_fsm_state270;
reg   [2:0] x28_0_reg_2480;
reg   [10:0] phi_mul5_reg_2491;
reg   [8:0] y29_0_reg_2503;
wire    ap_CS_fsm_state297;
reg    ap_block_state297_on_subcall_done;
reg   [2:0] i_0_reg_2514;
reg   [2:0] j30_0_reg_2525;
reg   [31:0] complex_M_imag_read_2_reg_2536;
reg   [31:0] complex_M_real_read_2_reg_2549;
reg   [1:0] k_0_reg_2562;
reg   [8:0] i31_0_reg_2573;
reg   [2:0] j32_0_reg_2584;
reg   [31:0] complex_M_imag_read_3_reg_2595;
reg   [31:0] complex_M_real_read_3_reg_2608;
reg   [2:0] k33_0_reg_2621;
reg   [10:0] phi_mul7_reg_2632;
reg   [8:0] i34_0_reg_2643;
wire    ap_CS_fsm_state339;
reg   [31:0] complex_M_imag_read_4_reg_2654;
reg   [31:0] complex_M_real_read_4_reg_2666;
reg   [2:0] k35_0_reg_2678;
reg   [10:0] phi_mul9_reg_2689;
reg   [8:0] i36_0_reg_2700;
wire    ap_CS_fsm_state350;
reg    grp_qrf_top_fu_2711_ap_start_reg;
reg    ap_sync_reg_grp_qrf_top_fu_2711_ap_ready;
reg    ap_sync_reg_grp_qrf_top_fu_2711_ap_done;
reg    grp_sin_or_cos_float_s_fu_2721_ap_start_reg;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state296;
reg    grp_sin_or_cos_float_s_fu_2737_ap_start_reg;
reg    grp_scaled_fixed2ieee_fu_2754_ap_start_reg;
wire   [63:0] zext_ln1027_fu_3147_p1;
wire   [63:0] zext_ln1027_2_fu_3185_p1;
wire   [63:0] zext_ln1027_3_fu_3223_p1;
wire   [63:0] zext_ln1027_4_fu_3255_p1;
wire   [63:0] zext_ln1027_5_fu_3293_p1;
wire   [63:0] zext_ln205_fu_3317_p1;
wire   [63:0] zext_ln1027_11_fu_3357_p1;
wire   [63:0] zext_ln214_1_fu_3453_p1;
wire   [63:0] zext_ln214_2_fu_3458_p1;
wire   [63:0] zext_ln126_fu_3531_p1;
wire   [63:0] zext_ln127_fu_3537_p1;
wire  signed [63:0] sext_ln182_fu_3618_p1;
wire  signed [63:0] sext_ln185_fu_3624_p1;
wire   [63:0] zext_ln219_fu_3647_p1;
wire   [63:0] zext_ln219_3_fu_3701_p1;
wire   [63:0] zext_ln226_fu_3718_p1;
wire   [63:0] zext_ln230_5_fu_3819_p1;
wire   [63:0] zext_ln230_6_fu_3830_p1;
wire   [63:0] zext_ln104_3_fu_3888_p1;
wire   [63:0] zext_ln102_1_fu_3923_p1;
wire   [63:0] zext_ln102_2_fu_3934_p1;
wire   [63:0] zext_ln1027_6_fu_3976_p1;
wire   [63:0] zext_ln1027_7_fu_4014_p1;
wire   [63:0] zext_ln1027_8_fu_4052_p1;
wire   [63:0] zext_ln1027_9_fu_4090_p1;
wire   [63:0] zext_ln36_1_fu_4216_p1;
wire   [63:0] zext_ln34_2_fu_4255_p1;
wire   [63:0] zext_ln34_3_fu_4266_p1;
wire   [63:0] zext_ln1044_2_fu_4306_p1;
wire   [63:0] zext_ln1067_fu_4326_p1;
wire   [63:0] zext_ln41_fu_4311_p1;
wire   [63:0] zext_ln45_2_fu_4366_p1;
wire   [63:0] zext_ln52_1_fu_4431_p1;
wire  signed [63:0] sext_ln54_fu_4464_p1;
wire  signed [63:0] sext_ln57_fu_4500_p1;
wire  signed [63:0] sext_ln59_1_fu_4533_p1;
wire  signed [63:0] sext_ln59_fu_4545_p1;
wire   [63:0] zext_ln70_fu_4584_p1;
wire   [63:0] zext_ln72_fu_4595_p1;
wire  signed [63:0] sext_ln68_fu_4622_p1;
wire  signed [63:0] sext_ln68_1_fu_4645_p1;
wire   [63:0] zext_ln76_1_fu_4718_p1;
wire   [63:0] zext_ln82_fu_4736_p1;
wire  signed [63:0] sext_ln87_fu_4769_p1;
wire  signed [63:0] sext_ln87_1_fu_4774_p1;
wire  signed [63:0] sext_ln92_fu_4779_p1;
wire   [63:0] zext_ln93_fu_4784_p1;
wire   [63:0] zext_ln87_fu_4789_p1;
wire   [63:0] zext_ln87_1_fu_4794_p1;
wire   [63:0] zext_ln239_1_fu_4918_p1;
wire   [63:0] tmp_58_fu_4930_p3;
wire   [63:0] zext_ln238_fu_4952_p1;
wire   [63:0] zext_ln239_3_fu_4966_p1;
wire   [63:0] zext_ln247_fu_5001_p1;
wire   [63:0] zext_ln249_fu_5018_p1;
wire   [63:0] zext_ln635_fu_5089_p1;
wire   [63:0] zext_ln498_fu_5445_p1;
wire   [63:0] zext_ln250_1_fu_5854_p1;
wire   [63:0] zext_ln261_2_fu_5943_p1;
wire   [63:0] zext_ln259_2_fu_5970_p1;
wire   [63:0] zext_ln259_3_fu_5981_p1;
wire   [63:0] zext_ln271_3_fu_6056_p1;
wire   [63:0] zext_ln269_1_fu_6091_p1;
wire   [63:0] zext_ln269_2_fu_6108_p1;
wire   [63:0] zext_ln278_3_fu_6183_p1;
wire   [63:0] zext_ln278_4_fu_6200_p1;
wire    ap_CS_fsm_state221;
wire   [31:0] bitcast_ln251_1_fu_5869_p1;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
reg   [31:0] grp_fu_2760_p0;
reg   [31:0] grp_fu_2760_p1;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state162;
wire    ap_CS_fsm_state169;
wire    ap_CS_fsm_state187;
wire    ap_CS_fsm_state199;
wire    ap_CS_fsm_state203;
wire    ap_CS_fsm_state209;
wire    ap_CS_fsm_state223;
wire    ap_CS_fsm_state227;
wire    ap_CS_fsm_state239;
wire    ap_CS_fsm_state246;
wire    ap_CS_fsm_state303;
wire    ap_CS_fsm_state307;
wire    ap_CS_fsm_state316;
wire    ap_CS_fsm_state320;
wire    ap_CS_fsm_state328;
wire    ap_CS_fsm_state332;
reg   [31:0] grp_fu_2765_p0;
reg   [31:0] grp_fu_2765_p1;
reg   [31:0] grp_fu_2802_p0;
reg   [31:0] grp_fu_2802_p1;
wire    ap_CS_fsm_state237;
wire    ap_CS_fsm_state294;
reg   [31:0] grp_fu_2807_p0;
reg   [31:0] grp_fu_2807_p1;
reg   [31:0] grp_fu_2812_p0;
reg   [31:0] grp_fu_2812_p1;
reg   [31:0] grp_fu_2817_p0;
reg   [31:0] grp_fu_2817_p1;
wire   [31:0] grp_fu_2858_p0;
wire   [31:0] grp_fu_2863_p0;
reg   [31:0] grp_fu_2893_p0;
reg   [31:0] grp_fu_2893_p1;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state173;
wire    ap_CS_fsm_state213;
wire    ap_CS_fsm_state250;
wire    ap_CS_fsm_state342;
reg   [31:0] grp_fu_2898_p0;
reg   [31:0] grp_fu_2898_p1;
reg   [63:0] grp_fu_2904_p0;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state92;
reg   [31:0] grp_fu_2907_p0;
reg   [63:0] grp_fu_2924_p1;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state277;
reg   [63:0] grp_fu_2930_p0;
reg   [63:0] grp_fu_2930_p1;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state75;
wire   [31:0] grp_fu_2936_p0;
wire   [5:0] tmp_26_fu_3139_p3;
wire   [3:0] tmp_40_fu_3177_p3;
wire   [2:0] tmp_44_fu_3215_p3;
wire   [3:0] tmp_45_fu_3247_p3;
wire   [10:0] tmp_46_fu_3285_p3;
wire   [10:0] zext_ln1027_10_fu_3347_p1;
wire   [10:0] add_ln1027_fu_3351_p2;
wire   [13:0] zext_ln213_fu_3415_p1;
wire   [13:0] add_ln214_fu_3431_p2;
wire   [15:0] tmp_38_fu_3436_p3;
wire   [16:0] zext_ln214_fu_3444_p1;
wire   [16:0] add_ln214_1_fu_3448_p2;
wire   [30:0] trunc_ln111_fu_3496_p1;
wire   [0:0] trunc_ln110_fu_3500_p1;
wire   [8:0] input_assign_1_fu_3512_p4;
wire   [10:0] zext_ln159_fu_3543_p1;
wire   [21:0] tmp_48_fu_3597_p4;
wire   [31:0] i_lower_fu_3613_p2;
wire   [13:0] tmp_42_fu_3653_p3;
wire   [11:0] tmp_43_fu_3665_p3;
wire   [14:0] zext_ln219_2_fu_3673_p1;
wire   [14:0] zext_ln219_1_fu_3661_p1;
wire   [14:0] add_ln219_fu_3677_p2;
wire   [14:0] add_ln219_1_fu_3683_p2;
wire   [16:0] tmp_45_cast_fu_3688_p3;
wire   [13:0] tmp_33_fu_3723_p3;
wire   [11:0] tmp_34_fu_3735_p3;
wire   [14:0] zext_ln230_1_fu_3743_p1;
wire   [14:0] zext_ln230_fu_3731_p1;
wire   [14:0] zext_ln230_2_fu_3765_p1;
wire   [14:0] add_ln230_1_fu_3769_p2;
wire   [5:0] tmp_37_fu_3782_p3;
wire   [16:0] zext_ln230_4_fu_3810_p1;
wire   [16:0] add_ln230_2_fu_3814_p2;
wire   [6:0] zext_ln230_3_fu_3806_p1;
wire   [4:0] tmp_39_fu_3851_p3;
wire   [5:0] zext_ln104_2_fu_3879_p1;
wire   [5:0] add_ln104_fu_3883_p2;
wire   [5:0] tmp_41_fu_3906_p3;
wire   [6:0] zext_ln102_fu_3914_p1;
wire   [6:0] add_ln102_fu_3918_p2;
wire   [6:0] add_ln102_1_fu_3929_p2;
wire   [31:0] bitcast_ln667_fu_3940_p1;
wire   [31:0] xor_ln667_fu_3944_p2;
wire   [3:0] tmp_47_fu_3968_p3;
wire   [3:0] tmp_60_fu_4006_p3;
wire   [3:0] tmp_62_fu_4044_p3;
wire   [3:0] tmp_72_fu_4082_p3;
wire   [4:0] tmp_49_fu_4120_p3;
wire   [5:0] zext_ln22_fu_4144_p1;
wire   [5:0] add_ln22_fu_4148_p2;
wire   [4:0] tmp_51_fu_4183_p3;
wire   [5:0] add_ln36_fu_4211_p2;
wire   [4:0] tmp_55_fu_4238_p3;
wire   [5:0] zext_ln34_1_fu_4246_p1;
wire   [5:0] add_ln34_fu_4250_p2;
wire   [5:0] zext_ln34_fu_4234_p1;
wire   [5:0] add_ln34_1_fu_4261_p2;
wire   [4:0] tmp_50_fu_4288_p3;
wire   [5:0] zext_ln1044_1_fu_4296_p1;
wire   [5:0] add_ln1044_fu_4300_p2;
wire   [2:0] xor_ln1067_fu_4316_p2;
wire  signed [3:0] sext_ln1067_fu_4322_p1;
wire   [4:0] tmp_52_fu_4348_p3;
wire   [5:0] zext_ln45_fu_4344_p1;
wire   [5:0] add_ln45_fu_4360_p2;
wire   [5:0] zext_ln47_fu_4392_p1;
wire   [5:0] add_ln47_fu_4396_p2;
wire   [3:0] tmp_54_fu_4423_p3;
wire   [3:0] tmp_53_fu_4437_p3;
wire   [5:0] trunc_ln54_fu_4455_p1;
wire   [5:0] add_ln54_fu_4459_p2;
wire   [33:0] tmp_63_fu_4492_p3;
wire   [5:0] trunc_ln59_fu_4519_p1;
wire   [5:0] add_ln59_1_fu_4528_p2;
wire   [4:0] tmp_59_fu_4566_p3;
wire   [5:0] zext_ln68_fu_4562_p1;
wire   [5:0] add_ln70_fu_4578_p2;
wire   [5:0] add_ln72_fu_4590_p2;
wire   [5:0] trunc_ln68_fu_4613_p1;
wire   [5:0] add_ln68_fu_4617_p2;
wire   [3:0] trunc_ln68_1_fu_4628_p1;
wire   [5:0] sext_ln68_2_cast_fu_4632_p3;
wire   [5:0] add_ln68_1_fu_4640_p2;
wire   [31:0] bitcast_ln444_fu_4657_p1;
wire   [31:0] xor_ln444_fu_4661_p2;
wire   [31:0] bitcast_ln444_2_fu_4673_p1;
wire   [31:0] xor_ln444_1_fu_4677_p2;
wire   [4:0] tmp_61_fu_4701_p3;
wire   [5:0] zext_ln76_fu_4709_p1;
wire   [5:0] add_ln76_fu_4713_p2;
wire   [31:0] bitcast_ln87_fu_4799_p1;
wire   [31:0] bitcast_ln87_1_fu_4817_p1;
wire   [7:0] tmp_22_fu_4803_p4;
wire   [22:0] trunc_ln87_fu_4813_p1;
wire   [7:0] tmp_24_fu_4821_p4;
wire   [22:0] trunc_ln87_1_fu_4831_p1;
wire   [0:0] or_ln87_fu_4859_p2;
wire   [0:0] or_ln87_1_fu_4863_p2;
wire   [0:0] and_ln87_fu_4867_p2;
wire   [0:0] grp_fu_2912_p2;
wire   [0:0] and_ln87_1_fu_4873_p2;
wire   [4:0] tmp_56_fu_4898_p3;
wire   [3:0] tmp_57_fu_4910_p3;
wire   [3:0] or_ln241_fu_4924_p2;
wire   [5:0] zext_ln239_2_fu_4957_p1;
wire   [10:0] zext_ln250_fu_5023_p1;
wire   [63:0] p_Val2_s_fu_5033_p1;
wire   [10:0] add_ln114_1_fu_5065_p2;
wire   [10:0] addr_V_fu_5071_p3;
wire   [3:0] p_Result_i_i_i_fu_5079_p4;
wire   [255:0] zext_ln744_fu_5098_p1;
wire   [255:0] r_V_34_fu_5101_p2;
wire   [52:0] p_Result_50_fu_5117_p3;
wire   [169:0] grp_fu_5131_p0;
wire   [52:0] grp_fu_5131_p1;
wire   [222:0] grp_fu_5131_p2;
wire   [10:0] add_ln114_fu_5162_p2;
wire   [0:0] trunc_ln745_fu_5180_p1;
wire   [123:0] Mx_bits_V_2_fu_5184_p2;
wire   [123:0] p_Val2_49_fu_5189_p3;
wire   [60:0] p_Result_i_i_i_87_fu_5196_p4;
wire   [61:0] p_Result_51_fu_5206_p3;
reg   [61:0] p_Result_s_fu_5214_p4;
wire   [63:0] p_Result_52_fu_5224_p3;
reg   [63:0] tmp_i_i_i1_fu_5232_p3;
wire   [5:0] Mx_zeros_V_fu_5240_p1;
wire   [123:0] zext_ln1253_fu_5244_p1;
wire   [123:0] r_V_35_fu_5248_p2;
wire   [10:0] select_ln482_fu_5167_p3;
wire   [10:0] zext_ln655_fu_5264_p1;
wire  signed [11:0] sext_ln1334_fu_5292_p1;
wire   [11:0] sub_ln1311_fu_5295_p2;
wire   [11:0] ush_fu_5301_p3;
wire  signed [31:0] sext_ln1311_fu_5308_p1;
wire   [62:0] zext_ln1287_fu_5312_p1;
wire   [62:0] r_V_fu_5316_p2;
wire   [62:0] r_V_20_fu_5321_p2;
wire   [62:0] r_V_36_fu_5326_p3;
wire   [48:0] B_trunc_V_fu_5347_p4;
wire   [48:0] r_V_37_fu_5361_p0;
wire   [48:0] r_V_37_fu_5361_p1;
wire   [97:0] r_V_37_fu_5361_p2;
wire   [48:0] r_V_38_fu_5401_p0;
wire   [97:0] r_V_25_fu_5398_p1;
wire   [48:0] r_V_38_fu_5401_p1;
wire   [97:0] r_V_38_fu_5401_p2;
wire   [48:0] r_V_39_fu_5416_p0;
wire   [48:0] r_V_39_fu_5416_p1;
wire   [97:0] r_V_39_fu_5416_p2;
wire   [0:0] sin_basis_fu_5432_p2;
wire   [7:0] p_Result_53_fu_5438_p3;
wire   [55:0] r_V_40_fu_5461_p0;
wire  signed [51:0] r_V_40_fu_5461_p1;
wire   [107:0] r_V_40_fu_5461_p2;
wire   [48:0] r_V_41_fu_5484_p0;
wire  signed [43:0] r_V_41_fu_5484_p1;
wire   [92:0] r_V_41_fu_5484_p2;
wire   [41:0] r_V_42_fu_5507_p0;
wire   [32:0] r_V_42_fu_5507_p1;
wire   [74:0] r_V_42_fu_5507_p2;
wire   [36:0] tmp_66_fu_5513_p4;
wire   [34:0] r_V_43_fu_5534_p0;
wire   [24:0] r_V_43_fu_5534_p1;
wire   [59:0] r_V_43_fu_5534_p2;
wire   [28:0] tmp_67_fu_5540_p4;
wire   [37:0] zext_ln662_fu_5523_p1;
wire   [37:0] zext_ln1146_fu_5550_p1;
wire   [62:0] t1_V_fu_5560_p3;
wire  signed [63:0] lhs_V_2_fu_5567_p1;
wire  signed [63:0] rhs_V_2_fu_5571_p1;
wire   [48:0] zext_ln1146_1_fu_5583_p1;
wire  signed [48:0] sext_ln657_fu_5574_p1;
wire   [48:0] add_ln1146_2_fu_5586_p2;
wire  signed [63:0] sext_ln1146_fu_5592_p1;
wire   [63:0] add_ln1146_fu_5577_p2;
wire   [62:0] select_ln272_2_fu_5608_p3;
wire  signed [63:0] r_V_44_fu_5621_p0;
wire   [62:0] r_V_44_fu_5621_p1;
wire   [125:0] r_V_44_fu_5621_p2;
wire   [10:0] select_ln272_fu_5602_p3;
wire  signed [11:0] rhs_V_3_fu_5638_p1;
wire   [63:0] p_Val2_65_fu_5649_p1;
wire   [3:0] p_Result_55_fu_5674_p3;
wire   [0:0] tmp_27_fu_5680_p18;
wire   [0:0] tmp_28_fu_5718_p18;
wire   [0:0] select_ln271_fu_5756_p3;
wire   [0:0] or_ln311_fu_5772_p2;
wire   [0:0] xor_ln311_fu_5767_p2;
wire   [0:0] p_Result_54_fu_5652_p3;
wire   [0:0] and_ln300_fu_5763_p2;
wire   [0:0] select_ln311_fu_5777_p3;
wire   [0:0] and_ln300_2_fu_5792_p2;
wire   [0:0] xor_ln300_fu_5796_p2;
wire   [0:0] or_ln300_fu_5810_p2;
wire   [10:0] select_ln300_4_fu_5802_p3;
wire   [10:0] tmp_V_5_fu_5660_p4;
wire   [51:0] select_ln300_6_fu_5823_p3;
wire   [51:0] tmp_V_6_fu_5670_p1;
wire   [0:0] p_Repl2_6_fu_5785_p3;
wire   [10:0] ret_V_20_fu_5815_p3;
wire   [51:0] ret_V_21_fu_5831_p3;
wire   [63:0] p_Result_56_fu_5839_p4;
wire   [31:0] bitcast_ln251_fu_5859_p1;
wire   [31:0] xor_ln251_fu_5863_p2;
wire   [3:0] tmp_64_fu_5886_p3;
wire   [4:0] tmp_65_fu_5898_p3;
wire   [3:0] tmp_69_fu_5926_p3;
wire   [5:0] zext_ln259_fu_5922_p1;
wire   [5:0] add_ln261_fu_5938_p2;
wire   [4:0] zext_ln259_1_fu_5961_p1;
wire   [4:0] add_ln259_fu_5965_p2;
wire   [4:0] add_ln259_1_fu_5976_p2;
wire   [31:0] bitcast_ln667_2_fu_5987_p1;
wire   [31:0] xor_ln667_1_fu_5991_p2;
wire   [10:0] tmp_68_fu_6019_p3;
wire   [11:0] zext_ln271_2_fu_6047_p1;
wire   [11:0] add_ln271_fu_6051_p2;
wire   [4:0] tmp_71_fu_6074_p3;
wire   [5:0] zext_ln269_fu_6082_p1;
wire   [5:0] add_ln269_fu_6086_p2;
wire   [10:0] add_ln269_1_fu_6103_p2;
wire   [31:0] bitcast_ln667_4_fu_6114_p1;
wire   [31:0] xor_ln667_2_fu_6118_p2;
wire   [10:0] tmp_70_fu_6150_p3;
wire   [11:0] zext_ln278_2_fu_6174_p1;
wire   [11:0] add_ln278_fu_6178_p2;
wire   [10:0] add_ln278_1_fu_6195_p2;
reg   [1:0] grp_fu_2760_opcode;
reg    grp_fu_2760_ce;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state143;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state147;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state155;
wire    ap_CS_fsm_state163;
wire    ap_CS_fsm_state164;
wire    ap_CS_fsm_state170;
wire    ap_CS_fsm_state171;
wire    ap_CS_fsm_state188;
wire    ap_CS_fsm_state189;
wire    ap_CS_fsm_state192;
wire    ap_CS_fsm_state193;
wire    ap_CS_fsm_state200;
wire    ap_CS_fsm_state201;
wire    ap_CS_fsm_state204;
wire    ap_CS_fsm_state205;
wire    ap_CS_fsm_state210;
wire    ap_CS_fsm_state211;
wire    ap_CS_fsm_state224;
wire    ap_CS_fsm_state225;
wire    ap_CS_fsm_state228;
wire    ap_CS_fsm_state229;
wire    ap_CS_fsm_state240;
wire    ap_CS_fsm_state241;
wire    ap_CS_fsm_state247;
wire    ap_CS_fsm_state248;
wire    ap_CS_fsm_state304;
wire    ap_CS_fsm_state305;
wire    ap_CS_fsm_state308;
wire    ap_CS_fsm_state309;
wire    ap_CS_fsm_state317;
wire    ap_CS_fsm_state318;
wire    ap_CS_fsm_state321;
wire    ap_CS_fsm_state322;
wire    ap_CS_fsm_state329;
wire    ap_CS_fsm_state330;
wire    ap_CS_fsm_state333;
wire    ap_CS_fsm_state334;
wire    ap_CS_fsm_state337;
wire    ap_CS_fsm_state338;
reg   [1:0] grp_fu_2765_opcode;
reg   [349:0] ap_NS_fsm;
wire   [222:0] grp_fu_5131_p00;
wire   [222:0] grp_fu_5131_p10;
wire   [107:0] r_V_40_fu_5461_p00;
wire   [92:0] r_V_41_fu_5484_p00;
wire   [74:0] r_V_42_fu_5507_p00;
wire   [74:0] r_V_42_fu_5507_p10;
wire   [59:0] r_V_43_fu_5534_p00;
wire   [59:0] r_V_43_fu_5534_p10;
wire   [125:0] r_V_44_fu_5621_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 350'd1;
#0 grp_qrf_top_fu_2711_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_qrf_top_fu_2711_ap_ready = 1'b0;
#0 ap_sync_reg_grp_qrf_top_fu_2711_ap_done = 1'b0;
#0 grp_sin_or_cos_float_s_fu_2721_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_2737_ap_start_reg = 1'b0;
#0 grp_scaled_fixed2ieee_fu_2754_ap_start_reg = 1'b0;
end

music_fc #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
fc_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_address0),
    .ce0(fc_ce0),
    .q0(fc_q0)
);

music_p #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
p_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_address0),
    .ce0(p_ce0),
    .q0(p_q0)
);

music_theta #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
theta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(theta_address0),
    .ce0(theta_ce0),
    .q0(theta_q0)
);

music_ref_4oPi_tarcU #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

music_fourth_ordesc4 #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

music_fourth_ordetde #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

music_fourth_ordeudo #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

music_fourth_ordevdy #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

music_fourth_ordewdI #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_temp_M_real_address0),
    .ce0(Q_temp_M_real_ce0),
    .we0(Q_temp_M_real_we0),
    .d0(Q_temp_M_real_d0),
    .q0(Q_temp_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_temp_M_imag_address0),
    .ce0(Q_temp_M_imag_ce0),
    .we0(Q_temp_M_imag_we0),
    .d0(Q_temp_M_imag_d0),
    .q0(Q_temp_M_imag_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_temp_M_real_address0),
    .ce0(R_temp_M_real_ce0),
    .we0(R_temp_M_real_we0),
    .d0(R_temp_M_real_d0),
    .q0(R_temp_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_temp_M_imag_address0),
    .ce0(R_temp_M_imag_ce0),
    .we0(R_temp_M_imag_we0),
    .d0(R_temp_M_imag_d0),
    .q0(R_temp_M_imag_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rx_temp_M_real_address0),
    .ce0(Rx_temp_M_real_ce0),
    .we0(Rx_temp_M_real_we0),
    .d0(Rx_temp_M_real_d0),
    .q0(Rx_temp_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rx_temp_M_imag_address0),
    .ce0(Rx_temp_M_imag_ce0),
    .we0(Rx_temp_M_imag_we0),
    .d0(Rx_temp_M_imag_d0),
    .q0(Rx_temp_M_imag_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eig_mat_M_real_address0),
    .ce0(eig_mat_M_real_ce0),
    .we0(eig_mat_M_real_we0),
    .d0(eig_mat_M_real_d0),
    .q0(eig_mat_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eig_mat_M_imag_address0),
    .ce0(eig_mat_M_imag_ce0),
    .we0(eig_mat_M_imag_we0),
    .d0(eig_mat_M_imag_d0),
    .q0(eig_mat_M_imag_q0)
);

music_FFT_Buffer_re #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
FFT_Buffer_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FFT_Buffer_re_address0),
    .ce0(FFT_Buffer_re_ce0),
    .we0(FFT_Buffer_re_we0),
    .d0(FFT_Buffer_re_d0),
    .q0(FFT_Buffer_re_q0),
    .address1(FFT_Buffer_re_address1),
    .ce1(FFT_Buffer_re_ce1),
    .we1(FFT_Buffer_re_we1),
    .d1(FFT_Buffer_re_d1),
    .q1(FFT_Buffer_re_q1)
);

music_FFT_Buffer_re #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
FFT_Buffer_im_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FFT_Buffer_im_address0),
    .ce0(FFT_Buffer_im_ce0),
    .we0(FFT_Buffer_im_we0),
    .d0(FFT_Buffer_im_d0),
    .q0(FFT_Buffer_im_q0),
    .address1(FFT_Buffer_im_address1),
    .ce1(FFT_Buffer_im_ce1),
    .we1(FFT_Buffer_im_we1),
    .d1(FFT_Buffer_im_d1),
    .q1(FFT_Buffer_im_q1)
);

music_Autocorr_BuBew #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
Autocorr_Buffer_M_r_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Autocorr_Buffer_M_r_address0),
    .ce0(Autocorr_Buffer_M_r_ce0),
    .we0(Autocorr_Buffer_M_r_we0),
    .d0(Autocorr_Buffer_M_r_d0),
    .q0(Autocorr_Buffer_M_r_q0),
    .address1(Autocorr_Buffer_M_r_address1),
    .ce1(Autocorr_Buffer_M_r_ce1),
    .q1(Autocorr_Buffer_M_r_q1)
);

music_Autocorr_BuBew #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
Autocorr_Buffer_M_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Autocorr_Buffer_M_i_address0),
    .ce0(Autocorr_Buffer_M_i_ce0),
    .we0(Autocorr_Buffer_M_i_we0),
    .d0(Autocorr_Buffer_M_i_d0),
    .q0(Autocorr_Buffer_M_i_q0),
    .address1(Autocorr_Buffer_M_i_address1),
    .ce1(Autocorr_Buffer_M_i_ce1),
    .q1(Autocorr_Buffer_M_i_q1)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
U_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(U_M_real_address0),
    .ce0(U_M_real_ce0),
    .we0(U_M_real_we0),
    .d0(U_M_real_d0),
    .q0(U_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
U_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(U_M_imag_address0),
    .ce0(U_M_imag_ce0),
    .we0(U_M_imag_we0),
    .d0(U_M_imag_d0),
    .q0(U_M_imag_q0)
);

music_Un_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Un_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Un_M_real_address0),
    .ce0(Un_M_real_ce0),
    .we0(Un_M_real_we0),
    .d0(Un_M_real_d0),
    .q0(Un_M_real_q0),
    .address1(Un_M_real_address1),
    .ce1(Un_M_real_ce1),
    .q1(Un_M_real_q1)
);

music_Un_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Un_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Un_M_imag_address0),
    .ce0(Un_M_imag_ce0),
    .we0(Un_M_imag_we0),
    .d0(Un_M_imag_d0),
    .q0(Un_M_imag_q0),
    .address1(Un_M_imag_address1),
    .ce1(Un_M_imag_ce1),
    .q1(Un_M_imag_q1)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_mat_M_real_address0),
    .ce0(temp_mat_M_real_ce0),
    .we0(temp_mat_M_real_we0),
    .d0(temp_mat_M_real_d0),
    .q0(temp_mat_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_mat_M_imag_address0),
    .ce0(temp_mat_M_imag_ce0),
    .we0(temp_mat_M_imag_we0),
    .d0(temp_mat_M_imag_d0),
    .q0(temp_mat_M_imag_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
AUU_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUU_M_real_address0),
    .ce0(AUU_M_real_ce0),
    .we0(AUU_M_real_we0),
    .d0(AUU_M_real_d0),
    .q0(AUU_M_real_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
AUU_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUU_M_imag_address0),
    .ce0(AUU_M_imag_ce0),
    .we0(AUU_M_imag_we0),
    .d0(AUU_M_imag_d0),
    .q0(AUU_M_imag_q0)
);

music_w_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
w_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_M_real_address0),
    .ce0(w_M_real_ce0),
    .we0(w_M_real_we0),
    .d0(w_M_real_d0),
    .q0(w_M_real_q0)
);

music_w_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
w_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_M_imag_address0),
    .ce0(w_M_imag_ce0),
    .we0(w_M_imag_we0),
    .d0(w_M_imag_d0),
    .q0(w_M_imag_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
a_theta_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_theta_M_real_address0),
    .ce0(a_theta_M_real_ce0),
    .we0(a_theta_M_real_we0),
    .d0(a_theta_M_real_d0),
    .q0(a_theta_M_real_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
a_theta_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_theta_M_imag_address0),
    .ce0(a_theta_M_imag_ce0),
    .we0(a_theta_M_imag_we0),
    .d0(a_theta_M_imag_d0),
    .q0(a_theta_M_imag_q0)
);

music_eigval #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
eigval_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eigval_address0),
    .ce0(eigval_ce0),
    .we0(eigval_we0),
    .d0(eig_mat_M_real_q0),
    .q0(eigval_q0),
    .address1(eigval_address1),
    .ce1(eigval_ce1),
    .q1(eigval_q1)
);

music_sort_index #(
    .DataWidth( 3 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
sort_index_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sort_index_address0),
    .ce0(sort_index_ce0),
    .we0(sort_index_we0),
    .d0(sort_index_d0),
    .q0(sort_index_q0),
    .address1(sort_index_address1),
    .ce1(sort_index_ce1),
    .we1(sort_index_we1),
    .d1(sort_index_q1),
    .q1(sort_index_q1)
);

qrf_top grp_qrf_top_fu_2711(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .A_M_real_address0(grp_qrf_top_fu_2711_A_M_real_address0),
    .A_M_real_ce0(grp_qrf_top_fu_2711_A_M_real_ce0),
    .A_M_real_d0(grp_qrf_top_fu_2711_A_M_real_d0),
    .A_M_real_q0(eig_mat_M_real_q0),
    .A_M_real_we0(grp_qrf_top_fu_2711_A_M_real_we0),
    .A_M_real_address1(grp_qrf_top_fu_2711_A_M_real_address1),
    .A_M_real_ce1(grp_qrf_top_fu_2711_A_M_real_ce1),
    .A_M_real_d1(grp_qrf_top_fu_2711_A_M_real_d1),
    .A_M_real_q1(32'd0),
    .A_M_real_we1(grp_qrf_top_fu_2711_A_M_real_we1),
    .A_M_imag_address0(grp_qrf_top_fu_2711_A_M_imag_address0),
    .A_M_imag_ce0(grp_qrf_top_fu_2711_A_M_imag_ce0),
    .A_M_imag_d0(grp_qrf_top_fu_2711_A_M_imag_d0),
    .A_M_imag_q0(eig_mat_M_imag_q0),
    .A_M_imag_we0(grp_qrf_top_fu_2711_A_M_imag_we0),
    .A_M_imag_address1(grp_qrf_top_fu_2711_A_M_imag_address1),
    .A_M_imag_ce1(grp_qrf_top_fu_2711_A_M_imag_ce1),
    .A_M_imag_d1(grp_qrf_top_fu_2711_A_M_imag_d1),
    .A_M_imag_q1(32'd0),
    .A_M_imag_we1(grp_qrf_top_fu_2711_A_M_imag_we1),
    .Q_M_real_address0(grp_qrf_top_fu_2711_Q_M_real_address0),
    .Q_M_real_ce0(grp_qrf_top_fu_2711_Q_M_real_ce0),
    .Q_M_real_d0(grp_qrf_top_fu_2711_Q_M_real_d0),
    .Q_M_real_q0(32'd0),
    .Q_M_real_we0(grp_qrf_top_fu_2711_Q_M_real_we0),
    .Q_M_real_address1(grp_qrf_top_fu_2711_Q_M_real_address1),
    .Q_M_real_ce1(grp_qrf_top_fu_2711_Q_M_real_ce1),
    .Q_M_real_d1(grp_qrf_top_fu_2711_Q_M_real_d1),
    .Q_M_real_q1(32'd0),
    .Q_M_real_we1(grp_qrf_top_fu_2711_Q_M_real_we1),
    .Q_M_imag_address0(grp_qrf_top_fu_2711_Q_M_imag_address0),
    .Q_M_imag_ce0(grp_qrf_top_fu_2711_Q_M_imag_ce0),
    .Q_M_imag_d0(grp_qrf_top_fu_2711_Q_M_imag_d0),
    .Q_M_imag_q0(32'd0),
    .Q_M_imag_we0(grp_qrf_top_fu_2711_Q_M_imag_we0),
    .Q_M_imag_address1(grp_qrf_top_fu_2711_Q_M_imag_address1),
    .Q_M_imag_ce1(grp_qrf_top_fu_2711_Q_M_imag_ce1),
    .Q_M_imag_d1(grp_qrf_top_fu_2711_Q_M_imag_d1),
    .Q_M_imag_q1(32'd0),
    .Q_M_imag_we1(grp_qrf_top_fu_2711_Q_M_imag_we1),
    .R_M_real_address0(grp_qrf_top_fu_2711_R_M_real_address0),
    .R_M_real_ce0(grp_qrf_top_fu_2711_R_M_real_ce0),
    .R_M_real_d0(grp_qrf_top_fu_2711_R_M_real_d0),
    .R_M_real_q0(32'd0),
    .R_M_real_we0(grp_qrf_top_fu_2711_R_M_real_we0),
    .R_M_real_address1(grp_qrf_top_fu_2711_R_M_real_address1),
    .R_M_real_ce1(grp_qrf_top_fu_2711_R_M_real_ce1),
    .R_M_real_d1(grp_qrf_top_fu_2711_R_M_real_d1),
    .R_M_real_q1(32'd0),
    .R_M_real_we1(grp_qrf_top_fu_2711_R_M_real_we1),
    .R_M_imag_address0(grp_qrf_top_fu_2711_R_M_imag_address0),
    .R_M_imag_ce0(grp_qrf_top_fu_2711_R_M_imag_ce0),
    .R_M_imag_d0(grp_qrf_top_fu_2711_R_M_imag_d0),
    .R_M_imag_q0(32'd0),
    .R_M_imag_we0(grp_qrf_top_fu_2711_R_M_imag_we0),
    .R_M_imag_address1(grp_qrf_top_fu_2711_R_M_imag_address1),
    .R_M_imag_ce1(grp_qrf_top_fu_2711_R_M_imag_ce1),
    .R_M_imag_d1(grp_qrf_top_fu_2711_R_M_imag_d1),
    .R_M_imag_q1(32'd0),
    .R_M_imag_we1(grp_qrf_top_fu_2711_R_M_imag_we1),
    .ap_start(grp_qrf_top_fu_2711_ap_start),
    .ap_done(grp_qrf_top_fu_2711_ap_done),
    .ap_ready(grp_qrf_top_fu_2711_ap_ready),
    .ap_idle(grp_qrf_top_fu_2711_ap_idle),
    .ap_continue(grp_qrf_top_fu_2711_ap_continue)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_2721(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_float_s_fu_2721_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_2721_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_2721_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_2721_ap_ready),
    .t_in(grp_sin_or_cos_float_s_fu_2721_t_in),
    .do_cos(grp_sin_or_cos_float_s_fu_2721_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_2721_ap_return)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_2737(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_float_s_fu_2737_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_2737_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_2737_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_2737_ap_ready),
    .t_in(grp_sin_or_cos_float_s_fu_2737_t_in),
    .do_cos(grp_sin_or_cos_float_s_fu_2737_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_2737_ap_return)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_2754(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scaled_fixed2ieee_fu_2754_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_2754_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_2754_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_2754_ap_ready),
    .in_V(result_V_reg_7683),
    .prescale(ret_V_19_reg_7688),
    .ap_return(grp_scaled_fixed2ieee_fu_2754_ap_return)
);

music_faddfsub_32jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32jbC_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2760_p0),
    .din1(grp_fu_2760_p1),
    .opcode(grp_fu_2760_opcode),
    .ce(grp_fu_2760_ce),
    .dout(grp_fu_2760_p2)
);

music_faddfsub_32jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32jbC_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2765_p0),
    .din1(grp_fu_2765_p1),
    .opcode(grp_fu_2765_opcode),
    .ce(1'b1),
    .dout(grp_fu_2765_p2)
);

music_fsub_32ns_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3kbM_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_i_i1_reg_7227),
    .din1(tmp_8_i_i_reg_7232),
    .ce(1'b1),
    .dout(grp_fu_2784_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2802_p0),
    .din1(grp_fu_2802_p1),
    .ce(1'b1),
    .dout(grp_fu_2802_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2807_p0),
    .din1(grp_fu_2807_p1),
    .ce(1'b1),
    .dout(grp_fu_2807_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2812_p0),
    .din1(grp_fu_2812_p1),
    .ce(1'b1),
    .dout(grp_fu_2812_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2817_p0),
    .din1(grp_fu_2817_p1),
    .ce(1'b1),
    .dout(grp_fu_2817_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2858_p0),
    .din1(Rx_temp_M_real_q0),
    .ce(1'b1),
    .dout(grp_fu_2858_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2863_p0),
    .din1(Rx_temp_M_imag_q0),
    .ce(1'b1),
    .dout(grp_fu_2863_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2893_p0),
    .din1(grp_fu_2893_p1),
    .ce(1'b1),
    .dout(grp_fu_2893_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2898_p0),
    .din1(grp_fu_2898_p1),
    .ce(1'b1),
    .dout(grp_fu_2898_p2)
);

music_fptrunc_64nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
music_fptrunc_64nHfu_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2904_p0),
    .ce(1'b1),
    .dout(grp_fu_2904_p1)
);

music_fpext_32ns_IfE #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
music_fpext_32ns_IfE_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2907_p0),
    .ce(1'b1),
    .dout(grp_fu_2907_p1)
);

music_fcmp_32ns_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3ocq_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(eigval_q0),
    .din1(eigval_q1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_2912_p2)
);

music_fsqrt_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsqrt_32ns_pcA_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(p_x_assign_reg_2347),
    .ce(1'b1),
    .dout(grp_fu_2918_p2)
);

music_dmul_64ns_6JfO #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
music_dmul_64ns_6JfO_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_3011),
    .din1(grp_fu_2924_p1),
    .ce(1'b1),
    .dout(grp_fu_2924_p2)
);

music_ddiv_64ns_6KfY #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
music_ddiv_64ns_6KfY_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2930_p0),
    .din1(grp_fu_2930_p1),
    .ce(1'b1),
    .dout(grp_fu_2930_p2)
);

music_sitodp_32nsLf8 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
music_sitodp_32nsLf8_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2936_p0),
    .ce(1'b1),
    .dout(grp_fu_2936_p1)
);

music_mul_170ns_5Mgi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 223 ))
music_mul_170ns_5Mgi_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_5131_p0),
    .din1(grp_fu_5131_p1),
    .ce(1'b1),
    .dout(grp_fu_5131_p2)
);

music_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
music_mux_83_1_1_1_U100(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_70_reg_7557),
    .dout(cos_basis_fu_5377_p10)
);

music_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
music_mux_164_1_1_1_U101(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_55_fu_5674_p3),
    .dout(tmp_27_fu_5680_p18)
);

music_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
music_mux_164_1_1_1_U102(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_55_fu_5674_p3),
    .dout(tmp_28_fu_5718_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_qrf_top_fu_2711_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state136_on_subcall_done) & (1'b1 == ap_CS_fsm_state136))) begin
            ap_sync_reg_grp_qrf_top_fu_2711_ap_done <= 1'b0;
        end else if ((grp_qrf_top_fu_2711_ap_done == 1'b1)) begin
            ap_sync_reg_grp_qrf_top_fu_2711_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_qrf_top_fu_2711_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state136_on_subcall_done) & (1'b1 == ap_CS_fsm_state136))) begin
            ap_sync_reg_grp_qrf_top_fu_2711_ap_ready <= 1'b0;
        end else if ((grp_qrf_top_fu_2711_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_qrf_top_fu_2711_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_qrf_top_fu_2711_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_qrf_top_fu_2711_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state136)) | ((1'b1 == ap_CS_fsm_state135) & (icmp_ln27_fu_4159_p2 == 1'd0)))) begin
            grp_qrf_top_fu_2711_ap_start_reg <= 1'b1;
        end else if ((grp_qrf_top_fu_2711_ap_ready == 1'b1)) begin
            grp_qrf_top_fu_2711_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scaled_fixed2ieee_fu_2754_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state290)) begin
            grp_scaled_fixed2ieee_fu_2754_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_fu_2754_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_fu_2754_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_float_s_fu_2721_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state296) | (1'b1 == ap_CS_fsm_state48))) begin
            grp_sin_or_cos_float_s_fu_2721_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_2721_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_2721_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_float_s_fu_2737_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state296) | (1'b1 == ap_CS_fsm_state48))) begin
            grp_sin_or_cos_float_s_fu_2737_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_2737_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_2737_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        complex_M_imag_read_1_reg_2371 <= grp_fu_2765_p2;
    end else if (((1'b1 == ap_CS_fsm_state195) & (tmp_73_fu_4554_p3 == 1'd0))) begin
        complex_M_imag_read_1_reg_2371 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state310)) begin
        complex_M_imag_read_2_reg_2536 <= grp_fu_2765_p2;
    end else if (((1'b1 == ap_CS_fsm_state299) & (icmp_ln255_fu_5910_p2 == 1'd0))) begin
        complex_M_imag_read_2_reg_2536 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state323)) begin
        complex_M_imag_read_3_reg_2595 <= grp_fu_2765_p2;
    end else if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd0))) begin
        complex_M_imag_read_3_reg_2595 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state335)) begin
        complex_M_imag_read_4_reg_2654 <= grp_fu_2765_p2;
    end else if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd0))) begin
        complex_M_imag_read_4_reg_2654 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        complex_M_imag_read_reg_2236 <= grp_fu_2765_p2;
    end else if (((1'b1 == ap_CS_fsm_state138) & (icmp_ln30_fu_4195_p2 == 1'd0))) begin
        complex_M_imag_read_reg_2236 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        complex_M_real_read_1_reg_2383 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state195) & (tmp_73_fu_4554_p3 == 1'd0))) begin
        complex_M_real_read_1_reg_2383 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state310)) begin
        complex_M_real_read_2_reg_2549 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state299) & (icmp_ln255_fu_5910_p2 == 1'd0))) begin
        complex_M_real_read_2_reg_2549 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state323)) begin
        complex_M_real_read_3_reg_2608 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd0))) begin
        complex_M_real_read_3_reg_2608 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state335)) begin
        complex_M_real_read_4_reg_2666 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd0))) begin
        complex_M_real_read_4_reg_2666 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        complex_M_real_read_reg_2249 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state138) & (icmp_ln30_fu_4195_p2 == 1'd0))) begin
        complex_M_real_read_reg_2249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln27_fu_4159_p2 == 1'd1))) begin
        count_0_i_reg_2273 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state243) & (icmp_ln75_fu_4689_p2 == 1'd1))) begin
        count_0_i_reg_2273 <= count_reg_6936;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state260) & (icmp_ln84_fu_4745_p2 == 1'd0))) begin
        flag_0_i_reg_2439 <= zext_ln85_fu_4741_p1;
    end else if ((1'b1 == ap_CS_fsm_state264)) begin
        flag_0_i_reg_2439 <= j_7_fu_4879_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state259) & (icmp_ln81_fu_4724_p2 == 1'd1))) begin
        flag_reg_2427 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state266)) begin
        flag_reg_2427 <= i_14_reg_7289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln20_fu_4108_p2 == 1'd1))) begin
        i16_0_i_reg_2203 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln29_fu_4171_p2 == 1'd1))) begin
        i16_0_i_reg_2203 <= i_9_reg_6829;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (icmp_ln30_fu_4195_p2 == 1'd1))) begin
        i17_0_i_reg_2214 <= i_10_reg_6837;
    end else if (((1'b0 == ap_block_state136_on_subcall_done) & (1'b1 == ap_CS_fsm_state136))) begin
        i17_0_i_reg_2214 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln43_fu_4374_p2 == 1'd1))) begin
        i19_0_i_reg_2285 <= i_11_reg_6971;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        i19_0_i_reg_2285 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state258)) begin
        i25_0_i_reg_2404 <= i_15_reg_7257;
    end else if ((1'b1 == ap_CS_fsm_state242)) begin
        i25_0_i_reg_2404 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state298) & (icmp_ln254_fu_5874_p2 == 1'd1))) begin
        i31_0_reg_2573 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd1))) begin
        i31_0_reg_2573 <= i_17_reg_7820;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state311) & (icmp_ln264_fu_6003_p2 == 1'd1))) begin
        i34_0_reg_2643 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state339)) begin
        i34_0_reg_2643 <= i_18_reg_7910;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & (icmp_ln225_fu_3706_p2 == 1'd1))) begin
        i36_0_reg_2700 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state350)) begin
        i36_0_reg_2700 <= i_reg_8010;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln14_1_fu_4102_p2 == 1'd1) & (icmp_ln14_fu_4096_p2 == 1'd1))) begin
        i_0_i25_reg_2181 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state133) & (icmp_ln21_fu_4132_p2 == 1'd1))) begin
        i_0_i25_reg_2181 <= i_8_reg_6790;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln40_fu_4272_p2 == 1'd1))) begin
        i_0_i31_reg_2415 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state259) & (icmp_ln81_fu_4724_p2 == 1'd0))) begin
        i_0_i31_reg_2415 <= i_12_fu_4730_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln122_fu_3472_p2 == 1'd0))) begin
        i_0_i_i_i_reg_1923 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln110_fu_3484_p2 == 1'd0))) begin
        i_0_i_i_i_reg_1923 <= i_4_fu_3490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        i_0_i_reg_1978 <= i_7_reg_6533;
    end else if (((1'b0 == ap_block_state49_on_subcall_done) & (1'b1 == ap_CS_fsm_state49))) begin
        i_0_i_reg_1978 <= i_5_cast_reg_6478;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state271) & (icmp_ln246_fu_4989_p2 == 1'd1))) begin
        i_0_reg_2514 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state299) & (icmp_ln255_fu_5910_p2 == 1'd1))) begin
        i_0_reg_2514 <= i_16_reg_7717;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln177_fu_3607_p2 == 1'd0))) begin
        i_5_reg_1955 <= j_2_reg_6486;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        i_5_reg_1955 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln213_fu_3419_p2 == 1'd1))) begin
        input_assign_reg_1900 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        input_assign_reg_1900 <= i_6_reg_6387;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) & (icmp_ln33_fu_4222_p2 == 1'd1))) begin
        j18_0_i_reg_2225 <= j_5_reg_6851;
    end else if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln29_fu_4171_p2 == 1'd0))) begin
        j18_0_i_reg_2225 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        j20_0_i_reg_2297 <= j_9_reg_7004;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        j20_0_i_reg_2297 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state181)) begin
        j22_0_i_reg_2320 <= j_8_reg_7073;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        j22_0_i_reg_2320 <= zext_ln51_reg_7029;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state166) & (icmp_ln53_fu_4449_p2 == 1'd1))) begin
        j23_0_in_i_reg_2329 <= zext_ln51_reg_7029;
    end else if (((1'b1 == ap_CS_fsm_state184) & (icmp_ln58_fu_4513_p2 == 1'd1))) begin
        j23_0_in_i_reg_2329 <= j_11_reg_7078;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        j24_0_in_i_reg_2395 <= j_10_reg_7172;
    end else if (((1'b1 == ap_CS_fsm_state195) & (tmp_73_fu_4554_p3 == 1'd0))) begin
        j24_0_in_i_reg_2395 <= sext_ln65_fu_4550_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln159_fu_3547_p2 == 1'd1))) begin
        j25_0_reg_1987 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        j25_0_reg_1987 <= j_1_reg_6541;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state300) & (icmp_ln258_fu_5949_p2 == 1'd1))) begin
        j30_0_reg_2525 <= j_12_reg_7735;
    end else if (((1'b1 == ap_CS_fsm_state298) & (icmp_ln254_fu_5874_p2 == 1'd0))) begin
        j30_0_reg_2525 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state313) & (icmp_ln268_fu_6062_p2 == 1'd1))) begin
        j32_0_reg_2584 <= j_13_reg_7838;
    end else if (((1'b1 == ap_CS_fsm_state311) & (icmp_ln264_fu_6003_p2 == 1'd0))) begin
        j32_0_reg_2584 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln20_fu_4108_p2 == 1'd0))) begin
        j_0_i26_reg_2192 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        j_0_i26_reg_2192 <= j_3_reg_6803;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state260) & (icmp_ln84_fu_4745_p2 == 1'd0))) begin
        j_0_in_i_reg_2449 <= zext_ln85_fu_4741_p1;
    end else if ((1'b1 == ap_CS_fsm_state264)) begin
        j_0_in_i_reg_2449 <= j_15_reg_7294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln212_fu_3399_p2 == 1'd0))) begin
        j_0_reg_1888 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j_0_reg_1888 <= j_reg_6364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln42_fu_4332_p2 == 1'd1))) begin
        j_14_reg_2308 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state182) & (icmp_ln56_fu_4482_p2 == 1'd1))) begin
        j_14_reg_2308 <= i_13_reg_7039;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln211_fu_3375_p2 == 1'd1))) begin
        jj_0_reg_1998 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd1))) begin
        jj_0_reg_1998 <= jj_reg_6564;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state323)) begin
        k33_0_reg_2621 <= k_4_reg_7861;
    end else if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd0))) begin
        k33_0_reg_2621 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state335)) begin
        k35_0_reg_2678 <= k_3_reg_7934;
    end else if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd0))) begin
        k35_0_reg_2678 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        k_0_i_reg_2262 <= k_reg_6874;
    end else if (((1'b1 == ap_CS_fsm_state138) & (icmp_ln30_fu_4195_p2 == 1'd0))) begin
        k_0_i_reg_2262 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state310)) begin
        k_0_reg_2562 <= k_2_reg_7758;
    end else if (((1'b1 == ap_CS_fsm_state299) & (icmp_ln255_fu_5910_p2 == 1'd0))) begin
        k_0_reg_2562 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state95) & (icmp_ln228_fu_3794_p2 == 1'd1))) begin
        l26_0_reg_2010 <= l_1_reg_6587;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        l26_0_reg_2010 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        l_0_i_reg_2078 <= l_2_reg_6669;
    end else if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln99_fu_3863_p2 == 1'd0))) begin
        l_0_i_reg_2078 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln206_1_fu_3369_p2 == 1'd1) & (icmp_ln206_fu_3363_p2 == 1'd1))) begin
        l_0_reg_1866 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln212_fu_3399_p2 == 1'd1))) begin
        l_0_reg_1866 <= l_reg_6332;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        m_0_i_reg_2359 <= m_reg_7200;
    end else if (((1'b1 == ap_CS_fsm_state159) & (icmp_ln51_fu_4411_p2 == 1'd1))) begin
        m_0_i_reg_2359 <= 3'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & (icmp_ln227_fu_3753_p2 == 1'd0))) begin
        n27_0_reg_2021 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        n27_0_reg_2021 <= n_reg_6605;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln218_fu_3635_p2 == 1'd1))) begin
        n_0_reg_1877 <= n_1_reg_6350;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln211_fu_3375_p2 == 1'd0))) begin
        n_0_reg_1877 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln122_fu_3472_p2 == 1'd0))) begin
        p_0_i_i_i_reg_1934 <= trunc_ln108_fu_3464_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln110_fu_3484_p2 == 1'd0))) begin
        p_0_i_i_i_reg_1934 <= zext_ln112_fu_3522_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        p_r_M_imag_reg_2054 <= grp_fu_2765_p2;
    end else if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln99_fu_3863_p2 == 1'd0))) begin
        p_r_M_imag_reg_2054 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        p_r_M_real_reg_2066 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln99_fu_3863_p2 == 1'd0))) begin
        p_r_M_real_reg_2066 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln177_fu_3607_p2 == 1'd0))) begin
        p_x_assign_5_reg_1966 <= reg_2950;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        p_x_assign_5_reg_1966 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        p_x_assign_reg_2347 <= grp_fu_2760_p2;
    end else if (((1'b1 == ap_CS_fsm_state159) & (icmp_ln51_fu_4411_p2 == 1'd1))) begin
        p_x_assign_reg_2347 <= 32'd1065353216;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln11_fu_3982_p2 == 1'd0))) begin
        phi_ln11_1_reg_2101 <= add_ln11_1_fu_3962_p2;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        phi_ln11_1_reg_2101 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & (icmp_ln98_fu_3835_p2 == 1'd1))) begin
        phi_ln11_reg_2089 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln11_fu_3982_p2 == 1'd1) & (icmp_ln11_1_fu_3988_p2 == 1'd0))) begin
        phi_ln11_reg_2089 <= add_ln11_reg_6723;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln12_fu_4020_p2 == 1'd0))) begin
        phi_ln12_1_reg_2124 <= add_ln12_1_fu_4000_p2;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        phi_ln12_1_reg_2124 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln11_1_fu_3988_p2 == 1'd1) & (icmp_ln11_fu_3982_p2 == 1'd1))) begin
        phi_ln12_reg_2112 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln12_fu_4020_p2 == 1'd1) & (icmp_ln12_1_fu_4026_p2 == 1'd0))) begin
        phi_ln12_reg_2112 <= add_ln12_reg_6739;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln13_fu_4058_p2 == 1'd0))) begin
        phi_ln13_1_reg_2147 <= add_ln13_1_fu_4038_p2;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        phi_ln13_1_reg_2147 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln12_1_fu_4026_p2 == 1'd1) & (icmp_ln12_fu_4020_p2 == 1'd1))) begin
        phi_ln13_reg_2135 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln13_fu_4058_p2 == 1'd1) & (icmp_ln13_1_fu_4064_p2 == 1'd0))) begin
        phi_ln13_reg_2135 <= add_ln13_reg_6755;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln14_fu_4096_p2 == 1'd0))) begin
        phi_ln14_1_reg_2170 <= add_ln14_1_fu_4076_p2;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        phi_ln14_1_reg_2170 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln13_1_fu_4064_p2 == 1'd1) & (icmp_ln13_fu_4058_p2 == 1'd1))) begin
        phi_ln14_reg_2158 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln14_fu_4096_p2 == 1'd1) & (icmp_ln14_1_fu_4102_p2 == 1'd0))) begin
        phi_ln14_reg_2158 <= add_ln14_reg_6771;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln200_fu_3153_p2 == 1'd0))) begin
        phi_ln200_1_reg_1717 <= add_ln200_1_fu_3133_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln200_1_reg_1717 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln200_fu_3153_p2 == 1'd1) & (icmp_ln200_1_fu_3159_p2 == 1'd0))) begin
        phi_ln200_reg_1705 <= add_ln200_reg_6223;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln200_reg_1705 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_fu_3191_p2 == 1'd0))) begin
        phi_ln201_1_reg_1740 <= add_ln201_1_fu_3171_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln201_1_reg_1740 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln200_1_fu_3159_p2 == 1'd1) & (icmp_ln200_fu_3153_p2 == 1'd1))) begin
        phi_ln201_reg_1728 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_fu_3191_p2 == 1'd1) & (icmp_ln201_1_fu_3197_p2 == 1'd0))) begin
        phi_ln201_reg_1728 <= add_ln201_reg_6239;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (ap_phi_mux_phi_ln202_1_phi_fu_1767_p4 == 1'd0))) begin
        phi_ln202_1_reg_1763 <= xor_ln202_fu_3209_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_ln202_1_reg_1763 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_1_fu_3197_p2 == 1'd1) & (icmp_ln201_fu_3191_p2 == 1'd1))) begin
        phi_ln202_reg_1751 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (ap_phi_mux_phi_ln202_1_phi_fu_1767_p4 == 1'd1) & (icmp_ln202_fu_3229_p2 == 1'd0))) begin
        phi_ln202_reg_1751 <= add_ln202_reg_6255;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln203_fu_3261_p2 == 1'd0))) begin
        phi_ln203_1_reg_1786 <= add_ln203_1_fu_3241_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_ln203_1_reg_1786 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln202_fu_3229_p2 == 1'd1) & (ap_phi_mux_phi_ln202_1_phi_fu_1767_p4 == 1'd1))) begin
        phi_ln203_reg_1774 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln203_fu_3261_p2 == 1'd1) & (icmp_ln203_1_fu_3267_p2 == 1'd0))) begin
        phi_ln203_reg_1774 <= add_ln203_reg_6268;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln204_fu_3299_p2 == 1'd0))) begin
        phi_ln204_1_reg_1809 <= add_ln204_1_fu_3279_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        phi_ln204_1_reg_1809 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln203_1_fu_3267_p2 == 1'd1) & (icmp_ln203_fu_3261_p2 == 1'd1))) begin
        phi_ln204_reg_1797 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln204_fu_3299_p2 == 1'd1) & (icmp_ln204_1_fu_3305_p2 == 1'd0))) begin
        phi_ln204_reg_1797 <= add_ln204_reg_6284;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln204_1_fu_3305_p2 == 1'd1) & (icmp_ln204_fu_3299_p2 == 1'd1))) begin
        phi_ln205_reg_1820 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln205_fu_3323_p2 == 1'd0))) begin
        phi_ln205_reg_1820 <= add_ln205_fu_3311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln206_fu_3363_p2 == 1'd0))) begin
        phi_ln206_1_reg_1855 <= add_ln206_1_fu_3341_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        phi_ln206_1_reg_1855 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln205_fu_3323_p2 == 1'd1))) begin
        phi_ln206_reg_1831 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln206_fu_3363_p2 == 1'd1) & (icmp_ln206_1_fu_3369_p2 == 1'd0))) begin
        phi_ln206_reg_1831 <= add_ln206_reg_6313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state267) & (icmp_ln236_fu_4886_p2 == 1'd1))) begin
        phi_mul5_reg_2491 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state274) & (icmp_ln248_fu_5006_p2 == 1'd1))) begin
        phi_mul5_reg_2491 <= add_ln246_reg_7444;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state323)) begin
        phi_mul7_reg_2632 <= add_ln269_2_reg_7876;
    end else if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd0))) begin
        phi_mul7_reg_2632 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state335)) begin
        phi_mul9_reg_2689 <= add_ln278_2_reg_7949;
    end else if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd0))) begin
        phi_mul9_reg_2689 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln205_fu_3323_p2 == 1'd1))) begin
        phi_mul_reg_1843 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln206_fu_3363_p2 == 1'd1) & (icmp_ln206_1_fu_3369_p2 == 1'd0))) begin
        phi_mul_reg_1843 <= add_ln206_2_reg_6308;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state194)) begin
        q_0_i_reg_2338 <= q_1_reg_7124;
    end else if ((1'b1 == ap_CS_fsm_state183)) begin
        q_0_i_reg_2338 <= zext_ln51_reg_7029;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln122_fu_3472_p2 == 1'd0))) begin
        reversed_reg_1912 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln110_fu_3484_p2 == 1'd0))) begin
        reversed_reg_1912 <= rev_fu_3504_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln122_fu_3472_p2 == 1'd1))) begin
        stage_0_i_reg_1943 <= 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state46) & (icmp_ln169_fu_3580_p2 == 1'd1))) begin
        stage_0_i_reg_1943 <= stage_fu_3591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state267) & (icmp_ln236_fu_4886_p2 == 1'd1))) begin
        x28_0_reg_2480 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state274) & (icmp_ln248_fu_5006_p2 == 1'd1))) begin
        x28_0_reg_2480 <= x_2_reg_7452;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & (icmp_ln227_fu_3753_p2 == 1'd1))) begin
        x_0_i_reg_2032 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln99_fu_3863_p2 == 1'd1))) begin
        x_0_i_reg_2032 <= x_reg_6628;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state260) & (icmp_ln84_fu_4745_p2 == 1'd1))) begin
        x_0_reg_2458 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state268) & (icmp_ln237_fu_4940_p2 == 1'd1))) begin
        x_0_reg_2458 <= x_1_reg_7378;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state297_on_subcall_done) & (1'b1 == ap_CS_fsm_state297))) begin
        y29_0_reg_2503 <= y_1_reg_7470;
    end else if ((1'b1 == ap_CS_fsm_state273)) begin
        y29_0_reg_2503 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        y_0_i_reg_2043 <= y_reg_6646;
    end else if (((1'b1 == ap_CS_fsm_state97) & (icmp_ln98_fu_3835_p2 == 1'd0))) begin
        y_0_i_reg_2043 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state267) & (icmp_ln236_fu_4886_p2 == 1'd0))) begin
        y_0_reg_2469 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state270)) begin
        y_0_reg_2469 <= y_2_reg_7411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd0))) begin
        AUU_M_imag_addr_2_reg_7853 <= zext_ln271_3_fu_6056_p1;
        AUU_M_real_addr_2_reg_7848 <= zext_ln271_3_fu_6056_p1;
        zext_ln271_1_reg_7843[2 : 0] <= zext_ln271_1_fu_6043_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state286)) begin
        B_V_reg_7600 <= B_V_fu_5343_p1;
        B_squared_V_reg_7610 <= {{r_V_37_fu_5361_p2[97:49]}};
        p_Result_i_i_reg_7595 <= {{r_V_36_fu_5326_p3[62:56]}};
        r_V_22_reg_7605[48 : 0] <= r_V_22_fu_5357_p1[48 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state287)) begin
        B_fourth_power_V_reg_7628 <= {{r_V_39_fu_5416_p2[97:63]}};
        B_third_power_V_reg_7623 <= {{r_V_38_fu_5401_p2[97:56]}};
        cos_basis_reg_7616 <= cos_basis_fu_5377_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln159_fu_3547_p2 == 1'd0))) begin
        DFTpts_reg_6451 <= DFTpts_fu_3553_p2;
        trunc_ln6_reg_6456 <= {{DFTpts_fu_3553_p2[10:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state285)) begin
        Ex_V_reg_7570 <= Ex_V_fu_5268_p2;
        Mx_V_reg_7563 <= {{r_V_35_fu_5248_p2[123:61]}};
        icmp_ln833_2_reg_7588 <= icmp_ln833_2_fu_5287_p2;
        icmp_ln833_reg_7582 <= icmp_ln833_fu_5282_p2;
        isNeg_reg_7576 <= Ex_V_fu_5268_p2[32'd10];
        p_Val2_70_reg_7557 <= p_Val2_70_fu_5174_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln110_fu_3484_p2 == 1'd1) & (icmp_ln124_fu_3526_p2 == 1'd0))) begin
        FFT_Buffer_im_addr_1_reg_6426 <= zext_ln126_fu_3531_p1;
        FFT_Buffer_im_addr_2_reg_6432 <= zext_ln127_fu_3537_p1;
        FFT_Buffer_re_addr_1_reg_6414 <= zext_ln126_fu_3531_p1;
        FFT_Buffer_re_addr_2_reg_6420 <= zext_ln127_fu_3537_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln177_fu_3607_p2 == 1'd1))) begin
        FFT_Buffer_im_addr_4_reg_6516 <= sext_ln182_fu_3618_p1;
        FFT_Buffer_im_addr_5_reg_6527 <= sext_ln185_fu_3624_p1;
        FFT_Buffer_re_addr_4_reg_6511 <= sext_ln182_fu_3618_p1;
        FFT_Buffer_re_addr_5_reg_6521 <= sext_ln185_fu_3624_p1;
        i_7_reg_6533 <= i_7_fu_3630_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln42_fu_4332_p2 == 1'd0))) begin
        Rx_temp_M_imag_addr_2_reg_6986 <= zext_ln45_2_fu_4366_p1;
        Rx_temp_M_real_addr_2_reg_6981 <= zext_ln45_2_fu_4366_p1;
        zext_ln45_1_reg_6976[4 : 2] <= zext_ln45_1_fu_4356_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state166) & (icmp_ln53_fu_4449_p2 == 1'd0))) begin
        Rx_temp_M_imag_addr_4_reg_7068 <= sext_ln54_fu_4464_p1;
        Rx_temp_M_real_addr_4_reg_7063 <= sext_ln54_fu_4464_p1;
        j_8_reg_7073 <= j_8_fu_4470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state195) & (tmp_73_fu_4554_p3 == 1'd0))) begin
        Rx_temp_M_imag_addr_5_reg_7157 <= zext_ln70_fu_4584_p1;
        Rx_temp_M_real_addr_5_reg_7152 <= zext_ln70_fu_4584_p1;
        U_M_imag_addr_3_reg_7167 <= zext_ln72_fu_4595_p1;
        U_M_real_addr_3_reg_7162 <= zext_ln72_fu_4595_p1;
        sext_ln70_reg_7147[5 : 2] <= sext_ln70_fu_4574_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state190)) begin
        Rx_temp_M_imag_addr_8_reg_7134 <= sext_ln59_fu_4545_p1;
        Rx_temp_M_real_addr_8_reg_7129 <= sext_ln59_fu_4545_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        U_M_imag_addr_2_reg_6958 <= zext_ln1067_fu_4326_p1;
        U_M_real_addr_2_reg_6953 <= zext_ln1067_fu_4326_p1;
        eigval_temp_reg_6963 <= eig_mat_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state243) & (icmp_ln75_fu_4689_p2 == 1'd0))) begin
        U_M_imag_addr_5_reg_7267 <= zext_ln76_1_fu_4718_p1;
        U_M_real_addr_5_reg_7262 <= zext_ln76_1_fu_4718_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state267) & (icmp_ln236_fu_4886_p2 == 1'd0))) begin
        Un_M_imag_addr_1_reg_7398[2 : 1] <= zext_ln239_1_fu_4918_p1[2 : 1];
        Un_M_imag_addr_2_reg_7403[2 : 1] <= tmp_58_fu_4930_p3[2 : 1];
        Un_M_real_addr_1_reg_7388[2 : 1] <= zext_ln239_1_fu_4918_p1[2 : 1];
        Un_M_real_addr_2_reg_7393[2 : 1] <= tmp_58_fu_4930_p3[2 : 1];
        zext_ln239_reg_7383[4 : 2] <= zext_ln239_fu_4906_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state288)) begin
        add_ln1146_1_reg_7673 <= add_ln1146_1_fu_5554_p2;
        p_Val2_58_reg_7658 <= fourth_order_double_4_q0;
        trunc_ln662_1_reg_7668 <= {{r_V_41_fu_5484_p2[92:45]}};
        trunc_ln9_reg_7663 <= {{r_V_40_fu_5461_p2[107:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        add_ln11_reg_6723 <= add_ln11_fu_3956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        add_ln12_reg_6739 <= add_ln12_fu_3994_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        add_ln13_reg_6755 <= add_ln13_fu_4032_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        add_ln14_reg_6771 <= add_ln14_fu_4070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln200_reg_6223 <= add_ln200_fu_3127_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln201_reg_6239 <= add_ln201_fu_3165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln202_reg_6255 <= add_ln202_fu_3203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln203_reg_6268 <= add_ln203_fu_3235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln204_reg_6284 <= add_ln204_fu_3273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln206_2_reg_6308 <= add_ln206_2_fu_3329_p2;
        add_ln206_reg_6313 <= add_ln206_fu_3335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln218_fu_3635_p2 == 1'd0))) begin
        add_ln219_2_reg_6546 <= add_ln219_2_fu_3696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state95) & (icmp_ln228_fu_3794_p2 == 1'd0))) begin
        add_ln230_3_reg_6620 <= add_ln230_3_fu_3825_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        add_ln230_reg_6579[14 : 1] <= add_ln230_fu_3747_p2[14 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state268) & (icmp_ln237_fu_4940_p2 == 1'd0))) begin
        add_ln239_reg_7416 <= add_ln239_fu_4961_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state271)) begin
        add_ln246_reg_7444 <= add_ln246_fu_4983_p2;
        x_2_reg_7452 <= x_2_fu_4995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state274) & (icmp_ln248_fu_5006_p2 == 1'd0))) begin
        add_ln250_reg_7475 <= add_ln250_fu_5027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state313) & (icmp_ln268_fu_6062_p2 == 1'd0))) begin
        add_ln269_2_reg_7876 <= add_ln269_2_fu_6097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state325) & (icmp_ln277_fu_6162_p2 == 1'd0))) begin
        add_ln278_2_reg_7949 <= add_ln278_2_fu_6189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state184) & (icmp_ln58_fu_4513_p2 == 1'd0))) begin
        add_ln59_reg_7109 <= add_ln59_fu_4523_p2;
        q_1_reg_7124 <= q_1_fu_4539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state49_on_subcall_done) & (1'b1 == ap_CS_fsm_state49))) begin
        c_reg_6496 <= grp_sin_or_cos_float_s_fu_2721_ap_return;
        s_reg_6502 <= grp_sin_or_cos_float_s_fu_2737_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state281)) begin
        closepath_reg_7509 <= closepath_fu_5059_p2;
        results_sign_V_2_reg_7490 <= p_Val2_s_fu_5033_p1[32'd63];
        tmp_V_4_reg_7503 <= tmp_V_4_fu_5055_p1;
        tmp_V_reg_7496 <= {{p_Val2_s_fu_5033_p1[62:52]}};
        trunc_ln601_reg_7520 <= trunc_ln601_fu_5094_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        count_reg_6936 <= count_fu_4278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) & (icmp_ln30_fu_4195_p2 == 1'd0))) begin
        eig_mat_M_imag_addr_2_reg_6866 <= zext_ln36_1_fu_4216_p1;
        eig_mat_M_real_addr_3_reg_6861 <= zext_ln36_1_fu_4216_p1;
        zext_ln36_reg_6856[2 : 0] <= zext_ln36_fu_4207_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        i_10_reg_6837 <= i_10_fu_4177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        i_11_reg_6971 <= i_11_fu_4338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        i_13_reg_7039 <= i_13_fu_4417_p2;
        zext_ln51_reg_7029[1 : 0] <= zext_ln51_fu_4407_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state260)) begin
        i_14_reg_7289 <= i_14_fu_4751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state243)) begin
        i_15_reg_7257 <= i_15_fu_4695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state298)) begin
        i_16_reg_7717 <= i_16_fu_5880_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state311)) begin
        i_17_reg_7820 <= i_17_fu_6009_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state324)) begin
        i_18_reg_7910 <= i_18_fu_6136_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        i_5_cast_reg_6478[9 : 0] <= i_5_cast_fu_3576_p1[9 : 0];
        j_2_reg_6486 <= j_2_fu_3585_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_6_reg_6387 <= i_6_fu_3478_p2;
        zext_ln108_reg_6379[10 : 0] <= zext_ln108_fu_3468_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        i_8_reg_6790 <= i_8_fu_4114_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        i_9_reg_6829 <= i_9_fu_4165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state340)) begin
        i_reg_8010 <= i_fu_6212_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln110_fu_3484_p2 == 1'd1))) begin
        icmp_ln124_reg_6410 <= icmp_ln124_fu_3526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state269)) begin
        icmp_ln238_reg_7436 <= icmp_ln238_fu_4971_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state269) & (icmp_ln238_fu_4971_p2 == 1'd0))) begin
        icmp_ln240_reg_7440 <= icmp_ln240_fu_4977_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln43_fu_4374_p2 == 1'd0))) begin
        icmp_ln44_reg_7009 <= icmp_ln44_fu_4386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state283)) begin
        icmp_ln833_1_reg_7540 <= icmp_ln833_1_fu_5137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state263)) begin
        icmp_ln87_1_reg_7350 <= icmp_ln87_1_fu_4841_p2;
        icmp_ln87_2_reg_7355 <= icmp_ln87_2_fu_4847_p2;
        icmp_ln87_3_reg_7360 <= icmp_ln87_3_fu_4853_p2;
        icmp_ln87_reg_7345 <= icmp_ln87_fu_4835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state196)) begin
        j_10_reg_7172 <= j_10_fu_4601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        j_11_reg_7078 <= j_11_fu_4476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state299)) begin
        j_12_reg_7735 <= j_12_fu_5916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state312)) begin
        j_13_reg_7838 <= j_13_fu_6037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state261)) begin
        j_15_reg_7294 <= j_15_fu_4757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        j_1_reg_6541 <= j_1_fu_3641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        j_3_reg_6803 <= j_3_fu_4138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        j_5_reg_6851 <= j_5_fu_4201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        j_9_reg_7004 <= j_9_fu_4380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_reg_6364 <= j_fu_3425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        jj_reg_6564 <= jj_fu_3712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        k_2_reg_7758 <= k_2_fu_5955_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state325)) begin
        k_3_reg_7934 <= k_3_fu_6168_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state313)) begin
        k_4_reg_7861 <= k_4_fu_6068_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        k_reg_6874 <= k_fu_4228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        l_1_reg_6587 <= l_1_fu_3759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        l_2_reg_6669 <= l_2_fu_3900_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        l_reg_6332 <= l_fu_3381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd1))) begin
        m_reg_7200 <= m_fu_4651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state236)) begin
        midsum_reg_7247 <= grp_fu_2918_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        n_1_reg_6350 <= n_1_fu_3405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        n_reg_6605 <= n_fu_3800_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        numBF_reg_6473[9 : 0] <= numBF_fu_3573_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state284)) begin
        p_Val2_69_reg_7546 <= {{grp_fu_5131_p2[166:43]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state295)) begin
        p_x_assign_6_reg_7708 <= grp_fu_2802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state43))) begin
        reg_2939 <= grp_fu_2930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_2944 <= grp_fu_2904_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state331) | (1'b1 == ap_CS_fsm_state319) | (1'b1 == ap_CS_fsm_state306) | (1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state105) | ((1'b0 == ap_block_state49_on_subcall_done) & (1'b1 == ap_CS_fsm_state49)))) begin
        reg_2950 <= grp_fu_2760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state327) | (1'b1 == ap_CS_fsm_state315) | (1'b1 == ap_CS_fsm_state302) | (1'b1 == ap_CS_fsm_state273) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state238) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state52))) begin
        reg_2976 <= grp_fu_2802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state327) | (1'b1 == ap_CS_fsm_state315) | (1'b1 == ap_CS_fsm_state302) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state52))) begin
        reg_2982 <= grp_fu_2807_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state327) | (1'b1 == ap_CS_fsm_state315) | (1'b1 == ap_CS_fsm_state302) | (1'b1 == ap_CS_fsm_state245) | (1'b1 == ap_CS_fsm_state208) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state52))) begin
        reg_2987 <= grp_fu_2812_p2;
        reg_2992 <= grp_fu_2817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state56))) begin
        reg_2997 <= grp_fu_2760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state331) | (1'b1 == ap_CS_fsm_state319) | (1'b1 == ap_CS_fsm_state306) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state105))) begin
        reg_3003 <= grp_fu_2765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state276) | (1'b1 == ap_CS_fsm_state70))) begin
        reg_3011 <= grp_fu_2907_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state280) | (1'b1 == ap_CS_fsm_state74))) begin
        reg_3016 <= grp_fu_2924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state349) | (1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state122))) begin
        reg_3021 <= grp_fu_2893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state257) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state180) | (1'b1 == ap_CS_fsm_state122))) begin
        reg_3031 <= grp_fu_2898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state314) | (1'b1 == ap_CS_fsm_state153))) begin
        reg_3047 <= temp_mat_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state160))) begin
        reg_3054 <= Rx_temp_M_real_q0;
        reg_3064 <= Rx_temp_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state172))) begin
        reg_3092 <= grp_fu_2760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state341) | (1'b1 == ap_CS_fsm_state336))) begin
        reg_3121 <= w_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state290)) begin
        result_V_reg_7683 <= {{r_V_44_fu_5621_p2[125:63]}};
        ret_V_19_reg_7688 <= ret_V_19_fu_5642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state291) & (grp_scaled_fixed2ieee_fu_2754_ap_done == 1'b1))) begin
        resultf_reg_7693 <= grp_scaled_fixed2ieee_fu_2754_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state282)) begin
        ret_V_22_reg_7525 <= {{r_V_34_fu_5101_p2[255:86]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state289)) begin
        ret_V_reg_7678 <= ret_V_fu_5596_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        sext_ln57_cast_reg_7101[5 : 2] <= sext_ln57_cast_fu_4506_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln211_fu_3375_p2 == 1'd0))) begin
        shl_ln_reg_6337[13 : 10] <= shl_ln_fu_3387_p3[13 : 10];
        zext_ln212_reg_6342[3 : 0] <= zext_ln212_fu_3395_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state293)) begin
        sinpitheta_reg_7703 <= grp_fu_2904_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd1))) begin
        sort_index_addr_1_reg_7313 <= sext_ln92_fu_4779_p1;
        sort_index_addr_2_reg_7319 <= zext_ln93_fu_4784_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state265)) begin
        sort_index_load_reg_7370 <= sort_index_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_1_reg_6443 <= FFT_Buffer_im_q0;
        temp_reg_6438 <= FFT_Buffer_re_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln99_fu_3863_p2 == 1'd0))) begin
        temp_mat_M_imag_add_1_reg_6661 <= zext_ln104_3_fu_3888_p1;
        temp_mat_M_real_add_1_reg_6656 <= zext_ln104_3_fu_3888_p1;
        zext_ln104_1_reg_6651[2 : 0] <= zext_ln104_1_fu_3875_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state299) & (icmp_ln255_fu_5910_p2 == 1'd0))) begin
        temp_mat_M_imag_add_5_reg_7750 <= zext_ln261_2_fu_5943_p1;
        temp_mat_M_real_add_5_reg_7745 <= zext_ln261_2_fu_5943_p1;
        zext_ln261_1_reg_7740[3 : 1] <= zext_ln261_1_fu_5934_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & (icmp_ln227_fu_3753_p2 == 1'd0))) begin
        tmp_36_cast_reg_6592[16 : 2] <= tmp_36_cast_fu_3774_p3[16 : 2];
        zext_ln228_reg_6597[5 : 2] <= zext_ln228_fu_3790_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state208)) begin
        tmp_7_i_i1_reg_7227 <= grp_fu_2858_p2;
        tmp_8_i_i_reg_7232 <= grp_fu_2863_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_7_reg_6468 <= grp_fu_2936_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state212)) begin
        tmp_9_i_i_reg_7237 <= grp_fu_2784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state182) & (icmp_ln56_fu_4482_p2 == 1'd0))) begin
        trunc_ln57_reg_7086 <= trunc_ln57_fu_4488_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state284) & (closepath_reg_7509 == 1'd0))) begin
        trunc_ln_i_i_reg_7552 <= {{grp_fu_5131_p2[169:167]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state325) & (icmp_ln277_fu_6162_p2 == 1'd1))) begin
        w_M_imag_addr_1_reg_7969 <= zext_ln278_reg_7915;
        w_M_real_addr_2_reg_7964 <= zext_ln278_reg_7915;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state267)) begin
        x_1_reg_7378 <= x_1_fu_4892_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        x_reg_6628 <= x_fu_3841_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state274)) begin
        y_1_reg_7470 <= y_1_fu_5012_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state268)) begin
        y_2_reg_7411 <= y_2_fu_4946_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        y_reg_6646 <= y_fu_3869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln40_fu_4272_p2 == 1'd0))) begin
        zext_ln1044_reg_6941[2 : 0] <= zext_ln1044_fu_4284_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & (icmp_ln98_fu_3835_p2 == 1'd0))) begin
        zext_ln104_reg_6633[2 : 0] <= zext_ln104_fu_3847_p1[2 : 0];
        zext_ln99_reg_6638[4 : 2] <= zext_ln99_fu_3859_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        zext_ln161_reg_6462[10 : 0] <= zext_ln161_fu_3569_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln212_fu_3399_p2 == 1'd0))) begin
        zext_ln213_1_reg_6355[2 : 0] <= zext_ln213_1_fu_3411_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln20_fu_4108_p2 == 1'd0))) begin
        zext_ln21_reg_6795[4 : 2] <= zext_ln21_fu_4128_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state133) & (icmp_ln21_fu_4132_p2 == 1'd0))) begin
        zext_ln22_1_reg_6808[5 : 0] <= zext_ln22_1_fu_4153_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state298) & (icmp_ln254_fu_5874_p2 == 1'd0))) begin
        zext_ln255_reg_7727[4 : 2] <= zext_ln255_fu_5906_p1[4 : 2];
        zext_ln261_reg_7722[3 : 1] <= zext_ln261_fu_5894_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state311) & (icmp_ln264_fu_6003_p2 == 1'd0))) begin
        zext_ln265_reg_7830[10 : 2] <= zext_ln265_fu_6027_p1[10 : 2];
        zext_ln271_reg_7825[8 : 0] <= zext_ln271_fu_6015_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd0))) begin
        zext_ln277_reg_7926[10 : 2] <= zext_ln277_fu_6158_p1[10 : 2];
        zext_ln278_1_reg_7921[8 : 0] <= zext_ln278_1_fu_6146_p1[8 : 0];
        zext_ln278_reg_7915[8 : 0] <= zext_ln278_fu_6142_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state340) & (icmp_ln284_fu_6206_p2 == 1'd0))) begin
        zext_ln285_reg_8015[8 : 0] <= zext_ln285_fu_6218_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln29_fu_4171_p2 == 1'd0))) begin
        zext_ln30_reg_6842[4 : 2] <= zext_ln30_fu_4191_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln43_fu_4374_p2 == 1'd0) & (icmp_ln44_fu_4386_p2 == 1'd0))) begin
        zext_ln47_1_reg_7013[5 : 0] <= zext_ln47_1_fu_4401_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state165)) begin
        zext_ln52_reg_7054[3 : 2] <= zext_ln52_fu_4445_p1[3 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state325)) begin
        AUU_M_imag_address0 = zext_ln278_3_fu_6183_p1;
    end else if ((1'b1 == ap_CS_fsm_state313)) begin
        AUU_M_imag_address0 = AUU_M_imag_addr_2_reg_7853;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_imag_address0 = zext_ln1027_5_fu_3293_p1;
    end else begin
        AUU_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state325) | (1'b1 == ap_CS_fsm_state313))) begin
        AUU_M_imag_ce0 = 1'b1;
    end else begin
        AUU_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state313)) begin
        AUU_M_imag_d0 = complex_M_imag_read_3_reg_2595;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_imag_d0 = 32'd0;
    end else begin
        AUU_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state313) & (icmp_ln268_fu_6062_p2 == 1'd1)))) begin
        AUU_M_imag_we0 = 1'b1;
    end else begin
        AUU_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state325)) begin
        AUU_M_real_address0 = zext_ln278_3_fu_6183_p1;
    end else if ((1'b1 == ap_CS_fsm_state313)) begin
        AUU_M_real_address0 = AUU_M_real_addr_2_reg_7848;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_real_address0 = zext_ln1027_5_fu_3293_p1;
    end else begin
        AUU_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state325) | (1'b1 == ap_CS_fsm_state313))) begin
        AUU_M_real_ce0 = 1'b1;
    end else begin
        AUU_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state313)) begin
        AUU_M_real_d0 = complex_M_real_read_3_reg_2608;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_real_d0 = 32'd0;
    end else begin
        AUU_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state313) & (icmp_ln268_fu_6062_p2 == 1'd1)))) begin
        AUU_M_real_we0 = 1'b1;
    end else begin
        AUU_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln102_2_fu_3934_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln230_6_fu_3830_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln1027_fu_3147_p1;
    end else begin
        Autocorr_Buffer_M_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state99))) begin
        Autocorr_Buffer_M_i_ce0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Autocorr_Buffer_M_i_ce1 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        Autocorr_Buffer_M_i_d0 = Xj_f_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_i_d0 = 32'd0;
    end else begin
        Autocorr_Buffer_M_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state96))) begin
        Autocorr_Buffer_M_i_we0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln102_2_fu_3934_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln230_6_fu_3830_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln1027_fu_3147_p1;
    end else begin
        Autocorr_Buffer_M_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state99))) begin
        Autocorr_Buffer_M_r_ce0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        Autocorr_Buffer_M_r_ce1 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        Autocorr_Buffer_M_r_d0 = Xj_f_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_r_d0 = 32'd0;
    end else begin
        Autocorr_Buffer_M_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state96))) begin
        Autocorr_Buffer_M_r_we0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        FFT_Buffer_im_address0 = zext_ln219_fu_3647_p1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61))) begin
        FFT_Buffer_im_address0 = FFT_Buffer_im_addr_5_reg_6527;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_address0 = FFT_Buffer_im_addr_2_reg_6432;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        FFT_Buffer_im_address0 = zext_ln126_fu_3531_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        FFT_Buffer_im_address0 = zext_ln214_2_fu_3458_p1;
    end else begin
        FFT_Buffer_im_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        FFT_Buffer_im_address1 = FFT_Buffer_im_addr_5_reg_6527;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        FFT_Buffer_im_address1 = FFT_Buffer_im_addr_4_reg_6516;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        FFT_Buffer_im_address1 = sext_ln182_fu_3618_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_im_address1 = FFT_Buffer_im_addr_1_reg_6426;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        FFT_Buffer_im_address1 = zext_ln127_fu_3537_p1;
    end else begin
        FFT_Buffer_im_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state20))) begin
        FFT_Buffer_im_ce0 = 1'b1;
    end else begin
        FFT_Buffer_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        FFT_Buffer_im_ce1 = 1'b1;
    end else begin
        FFT_Buffer_im_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_im_d0 = temp_1_reg_6443;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        FFT_Buffer_im_d0 = 32'd0;
    end else begin
        FFT_Buffer_im_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state65))) begin
        FFT_Buffer_im_d1 = grp_fu_2765_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_im_d1 = FFT_Buffer_im_q1;
    end else begin
        FFT_Buffer_im_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln124_reg_6410 == 1'd0)))) begin
        FFT_Buffer_im_we0 = 1'b1;
    end else begin
        FFT_Buffer_im_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state21))) begin
        FFT_Buffer_im_we1 = 1'b1;
    end else begin
        FFT_Buffer_im_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        FFT_Buffer_re_address0 = zext_ln219_fu_3647_p1;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61))) begin
        FFT_Buffer_re_address0 = FFT_Buffer_re_addr_5_reg_6521;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_address0 = FFT_Buffer_re_addr_2_reg_6420;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        FFT_Buffer_re_address0 = zext_ln126_fu_3531_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        FFT_Buffer_re_address0 = zext_ln214_2_fu_3458_p1;
    end else begin
        FFT_Buffer_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        FFT_Buffer_re_address1 = FFT_Buffer_re_addr_5_reg_6521;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        FFT_Buffer_re_address1 = FFT_Buffer_re_addr_4_reg_6511;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        FFT_Buffer_re_address1 = sext_ln182_fu_3618_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_re_address1 = FFT_Buffer_re_addr_1_reg_6414;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        FFT_Buffer_re_address1 = zext_ln127_fu_3537_p1;
    end else begin
        FFT_Buffer_re_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state20))) begin
        FFT_Buffer_re_ce0 = 1'b1;
    end else begin
        FFT_Buffer_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        FFT_Buffer_re_ce1 = 1'b1;
    end else begin
        FFT_Buffer_re_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        FFT_Buffer_re_d0 = temp_reg_6438;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        FFT_Buffer_re_d0 = X_q0;
    end else begin
        FFT_Buffer_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state65))) begin
        FFT_Buffer_re_d1 = grp_fu_2760_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        FFT_Buffer_re_d1 = FFT_Buffer_re_q1;
    end else begin
        FFT_Buffer_re_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state22) & (icmp_ln124_reg_6410 == 1'd0)))) begin
        FFT_Buffer_re_we0 = 1'b1;
    end else begin
        FFT_Buffer_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state21))) begin
        FFT_Buffer_re_we1 = 1'b1;
    end else begin
        FFT_Buffer_re_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state350)) begin
        P_sm_ce0 = 1'b1;
    end else begin
        P_sm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state350)) begin
        P_sm_we0 = 1'b1;
    end else begin
        P_sm_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        Q_temp_M_imag_address0 = zext_ln34_2_fu_4255_p1;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        Q_temp_M_imag_address0 = zext_ln1027_6_fu_3976_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_imag_address0 = grp_qrf_top_fu_2711_Q_M_imag_address0;
    end else begin
        Q_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state125))) begin
        Q_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_imag_ce0 = grp_qrf_top_fu_2711_Q_M_imag_ce0;
    end else begin
        Q_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        Q_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_imag_d0 = grp_qrf_top_fu_2711_Q_M_imag_d0;
    end else begin
        Q_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        Q_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_imag_we0 = grp_qrf_top_fu_2711_Q_M_imag_we0;
    end else begin
        Q_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        Q_temp_M_real_address0 = zext_ln34_2_fu_4255_p1;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        Q_temp_M_real_address0 = zext_ln1027_6_fu_3976_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_real_address0 = grp_qrf_top_fu_2711_Q_M_real_address0;
    end else begin
        Q_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state125))) begin
        Q_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_real_ce0 = grp_qrf_top_fu_2711_Q_M_real_ce0;
    end else begin
        Q_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        Q_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_real_d0 = grp_qrf_top_fu_2711_Q_M_real_d0;
    end else begin
        Q_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        Q_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        Q_temp_M_real_we0 = grp_qrf_top_fu_2711_Q_M_real_we0;
    end else begin
        Q_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        R_temp_M_imag_address0 = zext_ln34_3_fu_4266_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        R_temp_M_imag_address0 = zext_ln1027_7_fu_4014_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_imag_address0 = grp_qrf_top_fu_2711_R_M_imag_address0;
    end else begin
        R_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state127))) begin
        R_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_imag_ce0 = grp_qrf_top_fu_2711_R_M_imag_ce0;
    end else begin
        R_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        R_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_imag_d0 = grp_qrf_top_fu_2711_R_M_imag_d0;
    end else begin
        R_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        R_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_imag_we0 = grp_qrf_top_fu_2711_R_M_imag_we0;
    end else begin
        R_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        R_temp_M_real_address0 = zext_ln34_3_fu_4266_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        R_temp_M_real_address0 = zext_ln1027_7_fu_4014_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_real_address0 = grp_qrf_top_fu_2711_R_M_real_address0;
    end else begin
        R_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state127))) begin
        R_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_real_ce0 = grp_qrf_top_fu_2711_R_M_real_ce0;
    end else begin
        R_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        R_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_real_d0 = grp_qrf_top_fu_2711_R_M_real_d0;
    end else begin
        R_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        R_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        R_temp_M_real_we0 = grp_qrf_top_fu_2711_R_M_real_we0;
    end else begin
        R_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd1))) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_5_reg_7157;
    end else if (((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd0))) begin
        Rx_temp_M_imag_address0 = sext_ln68_fu_4622_p1;
    end else if ((1'b1 == ap_CS_fsm_state194)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_8_reg_7134;
    end else if ((1'b1 == ap_CS_fsm_state190)) begin
        Rx_temp_M_imag_address0 = sext_ln59_fu_4545_p1;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        Rx_temp_M_imag_address0 = sext_ln59_1_fu_4533_p1;
    end else if ((1'b1 == ap_CS_fsm_state182)) begin
        Rx_temp_M_imag_address0 = sext_ln57_fu_4500_p1;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_4_reg_7068;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        Rx_temp_M_imag_address0 = sext_ln54_fu_4464_p1;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        Rx_temp_M_imag_address0 = zext_ln52_1_fu_4431_p1;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        Rx_temp_M_imag_address0 = zext_ln47_1_reg_7013;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_2_reg_6986;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        Rx_temp_M_imag_address0 = zext_ln1027_8_fu_4052_p1;
    end else begin
        Rx_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state184) | (1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state129) | ((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd0)))) begin
        Rx_temp_M_imag_ce0 = 1'b1;
    end else begin
        Rx_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state194)) begin
        Rx_temp_M_imag_d0 = grp_fu_2765_p2;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        Rx_temp_M_imag_d0 = reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        Rx_temp_M_imag_d0 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        Rx_temp_M_imag_d0 = reg_3047;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        Rx_temp_M_imag_d0 = 32'd0;
    end else begin
        Rx_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state129) | ((1'b1 == ap_CS_fsm_state158) & (icmp_ln44_reg_7009 == 1'd0)) | ((1'b1 == ap_CS_fsm_state157) & (icmp_ln44_fu_4386_p2 == 1'd1) & (icmp_ln43_fu_4374_p2 == 1'd0)))) begin
        Rx_temp_M_imag_we0 = 1'b1;
    end else begin
        Rx_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd1))) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_5_reg_7152;
    end else if (((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd0))) begin
        Rx_temp_M_real_address0 = sext_ln68_fu_4622_p1;
    end else if ((1'b1 == ap_CS_fsm_state194)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_8_reg_7129;
    end else if ((1'b1 == ap_CS_fsm_state190)) begin
        Rx_temp_M_real_address0 = sext_ln59_fu_4545_p1;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        Rx_temp_M_real_address0 = sext_ln59_1_fu_4533_p1;
    end else if ((1'b1 == ap_CS_fsm_state182)) begin
        Rx_temp_M_real_address0 = sext_ln57_fu_4500_p1;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_4_reg_7063;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        Rx_temp_M_real_address0 = sext_ln54_fu_4464_p1;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        Rx_temp_M_real_address0 = zext_ln52_1_fu_4431_p1;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        Rx_temp_M_real_address0 = zext_ln47_1_reg_7013;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_2_reg_6981;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        Rx_temp_M_real_address0 = zext_ln1027_8_fu_4052_p1;
    end else begin
        Rx_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state184) | (1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state129) | ((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd0)))) begin
        Rx_temp_M_real_ce0 = 1'b1;
    end else begin
        Rx_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state194)) begin
        Rx_temp_M_real_d0 = grp_fu_2760_p2;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        Rx_temp_M_real_d0 = reg_3021;
    end else if ((1'b1 == ap_CS_fsm_state158)) begin
        Rx_temp_M_real_d0 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        Rx_temp_M_real_d0 = reg_2950;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        Rx_temp_M_real_d0 = 32'd0;
    end else begin
        Rx_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state181) | (1'b1 == ap_CS_fsm_state129) | ((1'b1 == ap_CS_fsm_state158) & (icmp_ln44_reg_7009 == 1'd0)) | ((1'b1 == ap_CS_fsm_state157) & (icmp_ln44_fu_4386_p2 == 1'd1) & (icmp_ln43_fu_4374_p2 == 1'd0)))) begin
        Rx_temp_M_real_we0 = 1'b1;
    end else begin
        Rx_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state269) & (icmp_ln238_fu_4971_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state269) & (icmp_ln240_fu_4977_p2 == 1'd1) & (icmp_ln238_fu_4971_p2 == 1'd0)))) begin
        U_M_imag_address0 = zext_ln239_3_fu_4966_p1;
    end else if ((1'b1 == ap_CS_fsm_state258)) begin
        U_M_imag_address0 = U_M_imag_addr_5_reg_7267;
    end else if ((1'b1 == ap_CS_fsm_state243)) begin
        U_M_imag_address0 = zext_ln76_1_fu_4718_p1;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        U_M_imag_address0 = U_M_imag_addr_3_reg_7167;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        U_M_imag_address0 = sext_ln68_1_fu_4645_p1;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        U_M_imag_address0 = U_M_imag_addr_2_reg_6958;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        U_M_imag_address0 = zext_ln22_1_reg_6808;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        U_M_imag_address0 = zext_ln1027_2_fu_3185_p1;
    end else begin
        U_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state258) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state159) | ((1'b1 == ap_CS_fsm_state269) & (icmp_ln238_fu_4971_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state269) & (icmp_ln240_fu_4977_p2 == 1'd1) & (icmp_ln238_fu_4971_p2 == 1'd0)))) begin
        U_M_imag_ce0 = 1'b1;
    end else begin
        U_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state258))) begin
        U_M_imag_d0 = reg_3031;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state159))) begin
        U_M_imag_d0 = 32'd0;
    end else begin
        U_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state258) | (1'b1 == ap_CS_fsm_state134) | ((1'b1 == ap_CS_fsm_state159) & (icmp_ln51_fu_4411_p2 == 1'd1)))) begin
        U_M_imag_we0 = 1'b1;
    end else begin
        U_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state269) & (icmp_ln238_fu_4971_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state269) & (icmp_ln240_fu_4977_p2 == 1'd1) & (icmp_ln238_fu_4971_p2 == 1'd0)))) begin
        U_M_real_address0 = zext_ln239_3_fu_4966_p1;
    end else if ((1'b1 == ap_CS_fsm_state258)) begin
        U_M_real_address0 = U_M_real_addr_5_reg_7262;
    end else if ((1'b1 == ap_CS_fsm_state243)) begin
        U_M_real_address0 = zext_ln76_1_fu_4718_p1;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        U_M_real_address0 = U_M_real_addr_3_reg_7162;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        U_M_real_address0 = sext_ln68_1_fu_4645_p1;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        U_M_real_address0 = U_M_real_addr_2_reg_6953;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        U_M_real_address0 = zext_ln22_1_reg_6808;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        U_M_real_address0 = zext_ln1027_2_fu_3185_p1;
    end else begin
        U_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state258) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state243) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state159) | ((1'b1 == ap_CS_fsm_state269) & (icmp_ln238_fu_4971_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state269) & (icmp_ln240_fu_4977_p2 == 1'd1) & (icmp_ln238_fu_4971_p2 == 1'd0)))) begin
        U_M_real_ce0 = 1'b1;
    end else begin
        U_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state258))) begin
        U_M_real_d0 = reg_3021;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        U_M_real_d0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state134))) begin
        U_M_real_d0 = 32'd0;
    end else begin
        U_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state258) | (1'b1 == ap_CS_fsm_state134) | ((1'b1 == ap_CS_fsm_state159) & (icmp_ln51_fu_4411_p2 == 1'd1)))) begin
        U_M_real_we0 = 1'b1;
    end else begin
        U_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        Un_M_imag_address0 = zext_ln259_3_fu_5981_p1;
    end else if (((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1))) begin
        Un_M_imag_address0 = Un_M_imag_addr_1_reg_7398;
    end else if (((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0))) begin
        Un_M_imag_address0 = Un_M_imag_addr_2_reg_7403;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_imag_address0 = zext_ln1027_3_fu_3223_p1;
    end else begin
        Un_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state300) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1)) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0)))) begin
        Un_M_imag_ce0 = 1'b1;
    end else begin
        Un_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        Un_M_imag_ce1 = 1'b1;
    end else begin
        Un_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1)) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0)))) begin
        Un_M_imag_d0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_imag_d0 = 32'd0;
    end else begin
        Un_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1)) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0)))) begin
        Un_M_imag_we0 = 1'b1;
    end else begin
        Un_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        Un_M_real_address0 = zext_ln259_3_fu_5981_p1;
    end else if (((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1))) begin
        Un_M_real_address0 = Un_M_real_addr_1_reg_7388;
    end else if (((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0))) begin
        Un_M_real_address0 = Un_M_real_addr_2_reg_7393;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_real_address0 = zext_ln1027_3_fu_3223_p1;
    end else begin
        Un_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state300) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1)) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0)))) begin
        Un_M_real_ce0 = 1'b1;
    end else begin
        Un_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        Un_M_real_ce1 = 1'b1;
    end else begin
        Un_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1)) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0)))) begin
        Un_M_real_d0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_real_d0 = 32'd0;
    end else begin
        Un_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln238_reg_7436 == 1'd1)) | ((1'b1 == ap_CS_fsm_state270) & (icmp_ln240_reg_7440 == 1'd1) & (icmp_ln238_reg_7436 == 1'd0)))) begin
        Un_M_real_we0 = 1'b1;
    end else begin
        Un_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        X_ce0 = 1'b1;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        Xj_f_M_imag_address0 = zext_ln230_5_fu_3819_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        Xj_f_M_imag_address0 = zext_ln219_3_fu_3701_p1;
    end else begin
        Xj_f_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state95))) begin
        Xj_f_M_imag_ce0 = 1'b1;
    end else begin
        Xj_f_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        Xj_f_M_imag_we0 = 1'b1;
    end else begin
        Xj_f_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        Xj_f_M_real_address0 = zext_ln230_5_fu_3819_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        Xj_f_M_real_address0 = zext_ln219_3_fu_3701_p1;
    end else begin
        Xj_f_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state95))) begin
        Xj_f_M_real_ce0 = 1'b1;
    end else begin
        Xj_f_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        Xj_f_M_real_we0 = 1'b1;
    end else begin
        Xj_f_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state325)) begin
        a_theta_M_imag_address0 = zext_ln278_4_fu_6200_p1;
    end else if ((1'b1 == ap_CS_fsm_state313)) begin
        a_theta_M_imag_address0 = zext_ln269_2_fu_6108_p1;
    end else if ((1'b1 == ap_CS_fsm_state297)) begin
        a_theta_M_imag_address0 = zext_ln250_1_fu_5854_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_theta_M_imag_address0 = zext_ln1027_11_fu_3357_p1;
    end else begin
        a_theta_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state325) | (1'b1 == ap_CS_fsm_state313) | (1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state297_on_subcall_done) & (1'b1 == ap_CS_fsm_state297)))) begin
        a_theta_M_imag_ce0 = 1'b1;
    end else begin
        a_theta_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state297)) begin
        a_theta_M_imag_d0 = bitcast_ln251_1_fu_5869_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_theta_M_imag_d0 = 32'd0;
    end else begin
        a_theta_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state297_on_subcall_done) & (1'b1 == ap_CS_fsm_state297)))) begin
        a_theta_M_imag_we0 = 1'b1;
    end else begin
        a_theta_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state325)) begin
        a_theta_M_real_address0 = zext_ln278_4_fu_6200_p1;
    end else if ((1'b1 == ap_CS_fsm_state313)) begin
        a_theta_M_real_address0 = zext_ln269_2_fu_6108_p1;
    end else if ((1'b1 == ap_CS_fsm_state297)) begin
        a_theta_M_real_address0 = zext_ln250_1_fu_5854_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_theta_M_real_address0 = zext_ln1027_11_fu_3357_p1;
    end else begin
        a_theta_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state325) | (1'b1 == ap_CS_fsm_state313) | (1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state297_on_subcall_done) & (1'b1 == ap_CS_fsm_state297)))) begin
        a_theta_M_real_ce0 = 1'b1;
    end else begin
        a_theta_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state297)) begin
        a_theta_M_real_d0 = grp_sin_or_cos_float_s_fu_2721_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        a_theta_M_real_d0 = 32'd0;
    end else begin
        a_theta_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state297_on_subcall_done) & (1'b1 == ap_CS_fsm_state297)))) begin
        a_theta_M_real_we0 = 1'b1;
    end else begin
        a_theta_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state340) & (icmp_ln284_fu_6206_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state340) & (icmp_ln284_fu_6206_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        eig_mat_M_imag_address0 = eig_mat_M_imag_addr_2_reg_6866;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        eig_mat_M_imag_address0 = zext_ln22_1_reg_6808;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        eig_mat_M_imag_address0 = zext_ln1027_9_fu_4090_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        eig_mat_M_imag_address0 = grp_qrf_top_fu_2711_A_M_imag_address0;
    end else begin
        eig_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state131))) begin
        eig_mat_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        eig_mat_M_imag_ce0 = grp_qrf_top_fu_2711_A_M_imag_ce0;
    end else begin
        eig_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        eig_mat_M_imag_d0 = complex_M_imag_read_reg_2236;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        eig_mat_M_imag_d0 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        eig_mat_M_imag_d0 = 32'd0;
    end else begin
        eig_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state131) | ((1'b1 == ap_CS_fsm_state139) & (icmp_ln33_fu_4222_p2 == 1'd1)))) begin
        eig_mat_M_imag_we0 = 1'b1;
    end else begin
        eig_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        eig_mat_M_real_address0 = zext_ln1044_2_fu_4306_p1;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        eig_mat_M_real_address0 = eig_mat_M_real_addr_3_reg_6861;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        eig_mat_M_real_address0 = zext_ln22_1_reg_6808;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        eig_mat_M_real_address0 = zext_ln1027_9_fu_4090_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        eig_mat_M_real_address0 = grp_qrf_top_fu_2711_A_M_real_address0;
    end else begin
        eig_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state131))) begin
        eig_mat_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        eig_mat_M_real_ce0 = grp_qrf_top_fu_2711_A_M_real_ce0;
    end else begin
        eig_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        eig_mat_M_real_d0 = complex_M_real_read_reg_2249;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        eig_mat_M_real_d0 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        eig_mat_M_real_d0 = 32'd0;
    end else begin
        eig_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state131) | ((1'b1 == ap_CS_fsm_state139) & (icmp_ln33_fu_4222_p2 == 1'd1)))) begin
        eig_mat_M_real_we0 = 1'b1;
    end else begin
        eig_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state262)) begin
        eigval_address0 = zext_ln87_fu_4789_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        eigval_address0 = zext_ln41_fu_4311_p1;
    end else begin
        eigval_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state262) | (1'b1 == ap_CS_fsm_state151))) begin
        eigval_ce0 = 1'b1;
    end else begin
        eigval_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state262)) begin
        eigval_ce1 = 1'b1;
    end else begin
        eigval_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        eigval_we0 = 1'b1;
    end else begin
        eigval_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        fc_ce0 = 1'b1;
    end else begin
        fc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state287)) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state287)) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state287)) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state287)) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state287)) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state336) | (1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state249) | (1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state331) | (1'b1 == ap_CS_fsm_state319) | (1'b1 == ap_CS_fsm_state306) | (1'b1 == ap_CS_fsm_state242) | (1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state202) | (1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state338) | (1'b1 == ap_CS_fsm_state337) | (1'b1 == ap_CS_fsm_state334) | (1'b1 == ap_CS_fsm_state333) | (1'b1 == ap_CS_fsm_state330) | (1'b1 == ap_CS_fsm_state329) | (1'b1 == ap_CS_fsm_state322) | (1'b1 == ap_CS_fsm_state321) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state318) | (1'b1 == ap_CS_fsm_state317) | (1'b1 == ap_CS_fsm_state309) | (1'b1 == ap_CS_fsm_state308) | (1'b1 == ap_CS_fsm_state305) | (1'b1 == ap_CS_fsm_state304) | (1'b1 == ap_CS_fsm_state248) | (1'b1 == ap_CS_fsm_state247) | (1'b1 == ap_CS_fsm_state241) | (1'b1 == ap_CS_fsm_state240) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state204) | (1'b1 == ap_CS_fsm_state201) | (1'b1 == ap_CS_fsm_state200) | (1'b1 == ap_CS_fsm_state193) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state171) | (1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state332) | (1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state307) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state339) | (1'b1 == ap_CS_fsm_state194) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state335) | (1'b1 == ap_CS_fsm_state323) | (1'b1 == ap_CS_fsm_state310) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state206) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state46) | ((1'b0 == ap_block_state49_on_subcall_done) & (1'b1 == ap_CS_fsm_state49)))) begin
        grp_fu_2760_ce = 1'b1;
    end else begin
        grp_fu_2760_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_2760_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state336) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state332) | (1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state307) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state106) | ((1'b1 == ap_CS_fsm_state46) & (icmp_ln169_fu_3580_p2 == 1'd0)))) begin
        grp_fu_2760_opcode = 2'd0;
    end else begin
        grp_fu_2760_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state336)) begin
        grp_fu_2760_p0 = w_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state332)) begin
        grp_fu_2760_p0 = complex_M_real_read_4_reg_2666;
    end else if ((1'b1 == ap_CS_fsm_state320)) begin
        grp_fu_2760_p0 = complex_M_real_read_3_reg_2608;
    end else if ((1'b1 == ap_CS_fsm_state307)) begin
        grp_fu_2760_p0 = complex_M_real_read_2_reg_2549;
    end else if ((1'b1 == ap_CS_fsm_state227)) begin
        grp_fu_2760_p0 = p_x_assign_reg_2347;
    end else if ((1'b1 == ap_CS_fsm_state203)) begin
        grp_fu_2760_p0 = complex_M_real_read_1_reg_2383;
    end else if ((1'b1 == ap_CS_fsm_state191)) begin
        grp_fu_2760_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        grp_fu_2760_p0 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_2760_p0 = complex_M_real_read_reg_2249;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        grp_fu_2760_p0 = p_r_M_real_reg_2066;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_2760_p0 = FFT_Buffer_re_q0;
    end else if (((1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state239) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_2760_p0 = reg_2976;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_2760_p0 = p_x_assign_5_reg_1966;
    end else begin
        grp_fu_2760_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state336)) begin
        grp_fu_2760_p1 = complex_M_real_read_4_reg_2666;
    end else if ((1'b1 == ap_CS_fsm_state239)) begin
        grp_fu_2760_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        grp_fu_2760_p1 = eigval_temp_reg_6963;
    end else if (((1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state332) | (1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state307) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state106))) begin
        grp_fu_2760_p1 = reg_2950;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_2760_p1 = reg_2997;
    end else if (((1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state223) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state162) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_2760_p1 = reg_2982;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_2760_p1 = reg_2944;
    end else begin
        grp_fu_2760_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state111))) begin
        grp_fu_2765_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state336) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state332) | (1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state307) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_2765_opcode = 2'd0;
    end else begin
        grp_fu_2765_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state336)) begin
        grp_fu_2765_p0 = w_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state332)) begin
        grp_fu_2765_p0 = complex_M_imag_read_4_reg_2654;
    end else if ((1'b1 == ap_CS_fsm_state320)) begin
        grp_fu_2765_p0 = complex_M_imag_read_3_reg_2595;
    end else if ((1'b1 == ap_CS_fsm_state307)) begin
        grp_fu_2765_p0 = complex_M_imag_read_2_reg_2536;
    end else if ((1'b1 == ap_CS_fsm_state203)) begin
        grp_fu_2765_p0 = complex_M_imag_read_1_reg_2371;
    end else if ((1'b1 == ap_CS_fsm_state191)) begin
        grp_fu_2765_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        grp_fu_2765_p0 = complex_M_imag_read_reg_2236;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        grp_fu_2765_p0 = p_r_M_imag_reg_2054;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_2765_p0 = FFT_Buffer_im_q0;
    end else if (((1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_2765_p0 = reg_2987;
    end else begin
        grp_fu_2765_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state336)) begin
        grp_fu_2765_p1 = complex_M_imag_read_4_reg_2654;
    end else if (((1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state332) | (1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state307) | (1'b1 == ap_CS_fsm_state203) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state106))) begin
        grp_fu_2765_p1 = reg_3003;
    end else if (((1'b1 == ap_CS_fsm_state328) | (1'b1 == ap_CS_fsm_state316) | (1'b1 == ap_CS_fsm_state303) | (1'b1 == ap_CS_fsm_state246) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state199) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_2765_p1 = reg_2992;
    end else begin
        grp_fu_2765_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2802_p0 = AUU_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2802_p0 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2802_p0 = Un_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state294)) begin
        grp_fu_2802_p0 = reg_2976;
    end else if ((1'b1 == ap_CS_fsm_state272)) begin
        grp_fu_2802_p0 = reg_2944;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_2802_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state237)) begin
        grp_fu_2802_p0 = midsum_reg_7247;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        grp_fu_2802_p0 = reg_3021;
    end else if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_2802_p0 = p_r_M_real_17_fu_4667_p1;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        grp_fu_2802_p0 = reg_3054;
    end else if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state160))) begin
        grp_fu_2802_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2802_p0 = R_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2802_p0 = Autocorr_Buffer_M_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_2802_p0 = p_r_M_real_reg_2066;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2802_p0 = FFT_Buffer_re_q1;
    end else begin
        grp_fu_2802_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2802_p1 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2802_p1 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2802_p1 = Un_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state294)) begin
        grp_fu_2802_p1 = sinpitheta_reg_7703;
    end else if ((1'b1 == ap_CS_fsm_state272)) begin
        grp_fu_2802_p1 = p_q0;
    end else if (((1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state237))) begin
        grp_fu_2802_p1 = midsum_reg_7247;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        grp_fu_2802_p1 = reg_3021;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_2802_p1 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_2802_p1 = reg_3054;
    end else if (((1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state160))) begin
        grp_fu_2802_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2802_p1 = Q_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2802_p1 = Autocorr_Buffer_M_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_2802_p1 = 32'd1092616192;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2802_p1 = c_reg_6496;
    end else begin
        grp_fu_2802_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2807_p0 = AUU_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2807_p0 = p_r_M_imag_23_fu_6124_p1;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2807_p0 = Un_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_2807_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        grp_fu_2807_p0 = reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_2807_p0 = p_r_M_imag_15_fu_4683_p1;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        grp_fu_2807_p0 = reg_3064;
    end else if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state160))) begin
        grp_fu_2807_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2807_p0 = R_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2807_p0 = Autocorr_Buffer_M_i_q1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_2807_p0 = p_r_M_imag_reg_2054;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2807_p0 = FFT_Buffer_im_q1;
    end else begin
        grp_fu_2807_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2807_p1 = a_theta_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2807_p1 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2807_p1 = p_t_imag_9_fu_5997_p1;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        grp_fu_2807_p1 = reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_2807_p1 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_2807_p1 = reg_3064;
    end else if (((1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state207) | (1'b1 == ap_CS_fsm_state160))) begin
        grp_fu_2807_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2807_p1 = Q_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2807_p1 = p_t_imag_fu_3950_p1;
    end else if (((1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state99))) begin
        grp_fu_2807_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2807_p1 = s_reg_6502;
    end else begin
        grp_fu_2807_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2812_p0 = AUU_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2812_p0 = p_r_M_imag_23_fu_6124_p1;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2812_p0 = Un_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_2812_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_2812_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        grp_fu_2812_p0 = reg_3064;
    end else if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state197))) begin
        grp_fu_2812_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2812_p0 = R_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2812_p0 = Autocorr_Buffer_M_i_q1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_2812_p0 = p_r_M_imag_reg_2054;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2812_p0 = FFT_Buffer_im_q1;
    end else begin
        grp_fu_2812_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2812_p1 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2812_p1 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2812_p1 = Un_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_2812_p1 = midsum_reg_7247;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_2812_p1 = U_M_real_q0;
    end else if (((1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state207))) begin
        grp_fu_2812_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_2812_p1 = reg_3054;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2812_p1 = Q_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2812_p1 = Autocorr_Buffer_M_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_2812_p1 = 32'd1092616192;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2812_p1 = c_reg_6496;
    end else begin
        grp_fu_2812_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2817_p0 = AUU_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2817_p0 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2817_p0 = Un_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state244)) begin
        grp_fu_2817_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state207)) begin
        grp_fu_2817_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        grp_fu_2817_p0 = reg_3054;
    end else if (((1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state197))) begin
        grp_fu_2817_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2817_p0 = R_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2817_p0 = Autocorr_Buffer_M_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_fu_2817_p0 = p_r_M_real_reg_2066;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2817_p0 = FFT_Buffer_re_q1;
    end else begin
        grp_fu_2817_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state326)) begin
        grp_fu_2817_p1 = a_theta_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_2817_p1 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state301)) begin
        grp_fu_2817_p1 = p_t_imag_9_fu_5997_p1;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        grp_fu_2817_p1 = U_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_state185) | (1'b1 == ap_CS_fsm_state207))) begin
        grp_fu_2817_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_2817_p1 = reg_3064;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        grp_fu_2817_p1 = Q_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_2817_p1 = p_t_imag_fu_3950_p1;
    end else if (((1'b1 == ap_CS_fsm_state244) | (1'b1 == ap_CS_fsm_state99))) begin
        grp_fu_2817_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_2817_p1 = s_reg_6502;
    end else begin
        grp_fu_2817_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state342)) begin
        grp_fu_2893_p0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state173))) begin
        grp_fu_2893_p0 = reg_3092;
    end else if (((1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_2893_p0 = reg_2950;
    end else begin
        grp_fu_2893_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state342)) begin
        grp_fu_2893_p1 = reg_3121;
    end else if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_2893_p1 = reg_3003;
    end else if (((1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state173))) begin
        grp_fu_2893_p1 = reg_2950;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        grp_fu_2893_p1 = 32'd1120403456;
    end else begin
        grp_fu_2893_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_2898_p0 = tmp_9_i_i_reg_7237;
    end else if (((1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state115))) begin
        grp_fu_2898_p0 = reg_3003;
    end else begin
        grp_fu_2898_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_2898_p1 = reg_3003;
    end else if (((1'b1 == ap_CS_fsm_state250) | (1'b1 == ap_CS_fsm_state173))) begin
        grp_fu_2898_p1 = reg_2950;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        grp_fu_2898_p1 = 32'd1120403456;
    end else begin
        grp_fu_2898_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state292)) begin
        grp_fu_2904_p0 = bitcast_ln512_fu_5849_p1;
    end else if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_2904_p0 = reg_2939;
    end else begin
        grp_fu_2904_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state275)) begin
        grp_fu_2907_p0 = theta_q0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_2907_p0 = fc_q0;
    end else begin
        grp_fu_2907_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state277)) begin
        grp_fu_2924_p1 = 64'd4580687790476549393;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_2924_p1 = 64'd4618760256180340048;
    end else begin
        grp_fu_2924_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_2930_p0 = reg_3016;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_2930_p0 = 64'd13842132293034190366;
    end else begin
        grp_fu_2930_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_2930_p1 = 64'd4644688959446712320;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_2930_p1 = tmp_7_reg_6468;
    end else begin
        grp_fu_2930_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state136_on_subcall_done) & (1'b1 == ap_CS_fsm_state136))) begin
        grp_qrf_top_fu_2711_ap_continue = 1'b1;
    end else begin
        grp_qrf_top_fu_2711_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state297)) begin
        grp_sin_or_cos_float_s_fu_2721_t_in = p_x_assign_6_reg_7708;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_sin_or_cos_float_s_fu_2721_t_in = p_x_assign_5_reg_1966;
    end else begin
        grp_sin_or_cos_float_s_fu_2721_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state297)) begin
        grp_sin_or_cos_float_s_fu_2737_t_in = p_x_assign_6_reg_7708;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_sin_or_cos_float_s_fu_2737_t_in = p_x_assign_5_reg_1966;
    end else begin
        grp_sin_or_cos_float_s_fu_2737_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state271)) begin
        p_ce0 = 1'b1;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state281)) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state266)) begin
        sort_index_address0 = sort_index_addr_2_reg_7319;
    end else if (((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd1))) begin
        sort_index_address0 = sext_ln92_fu_4779_p1;
    end else if (((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd0))) begin
        sort_index_address0 = sext_ln87_fu_4769_p1;
    end else if ((1'b1 == ap_CS_fsm_state259)) begin
        sort_index_address0 = zext_ln82_fu_4736_p1;
    end else begin
        sort_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state268)) begin
        sort_index_address1 = zext_ln238_fu_4952_p1;
    end else if ((1'b1 == ap_CS_fsm_state265)) begin
        sort_index_address1 = sort_index_addr_1_reg_7313;
    end else if (((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd1))) begin
        sort_index_address1 = zext_ln93_fu_4784_p1;
    end else if (((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd0))) begin
        sort_index_address1 = sext_ln87_1_fu_4774_p1;
    end else begin
        sort_index_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state266) | (1'b1 == ap_CS_fsm_state259) | ((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd0)))) begin
        sort_index_ce0 = 1'b1;
    end else begin
        sort_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state268) | (1'b1 == ap_CS_fsm_state265) | ((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd0)))) begin
        sort_index_ce1 = 1'b1;
    end else begin
        sort_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state266)) begin
        sort_index_d0 = sort_index_load_reg_7370;
    end else if ((1'b1 == ap_CS_fsm_state259)) begin
        sort_index_d0 = i_0_i31_reg_2415;
    end else begin
        sort_index_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state266) | ((1'b1 == ap_CS_fsm_state259) & (icmp_ln81_fu_4724_p2 == 1'd0)))) begin
        sort_index_we0 = 1'b1;
    end else begin
        sort_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state265)) begin
        sort_index_we1 = 1'b1;
    end else begin
        sort_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state313)) begin
        temp_mat_M_imag_address0 = zext_ln269_1_fu_6091_p1;
    end else if ((1'b1 == ap_CS_fsm_state300)) begin
        temp_mat_M_imag_address0 = temp_mat_M_imag_add_5_reg_7750;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        temp_mat_M_imag_address0 = zext_ln47_1_fu_4401_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        temp_mat_M_imag_address0 = zext_ln45_2_fu_4366_p1;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        temp_mat_M_imag_address0 = zext_ln22_1_fu_4153_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        temp_mat_M_imag_address0 = temp_mat_M_imag_add_1_reg_6661;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_imag_address0 = zext_ln1027_4_fu_3255_p1;
    end else begin
        temp_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state313) | (1'b1 == ap_CS_fsm_state300) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state133))) begin
        temp_mat_M_imag_ce0 = 1'b1;
    end else begin
        temp_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        temp_mat_M_imag_d0 = complex_M_imag_read_2_reg_2536;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        temp_mat_M_imag_d0 = reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_imag_d0 = 32'd0;
    end else begin
        temp_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state123) | ((1'b1 == ap_CS_fsm_state300) & (icmp_ln258_fu_5949_p2 == 1'd1)))) begin
        temp_mat_M_imag_we0 = 1'b1;
    end else begin
        temp_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state313)) begin
        temp_mat_M_real_address0 = zext_ln269_1_fu_6091_p1;
    end else if ((1'b1 == ap_CS_fsm_state300)) begin
        temp_mat_M_real_address0 = temp_mat_M_real_add_5_reg_7745;
    end else if ((1'b1 == ap_CS_fsm_state157)) begin
        temp_mat_M_real_address0 = zext_ln47_1_fu_4401_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        temp_mat_M_real_address0 = zext_ln45_2_fu_4366_p1;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        temp_mat_M_real_address0 = zext_ln22_1_fu_4153_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        temp_mat_M_real_address0 = temp_mat_M_real_add_1_reg_6656;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_real_address0 = zext_ln1027_4_fu_3255_p1;
    end else begin
        temp_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state313) | (1'b1 == ap_CS_fsm_state300) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state133))) begin
        temp_mat_M_real_ce0 = 1'b1;
    end else begin
        temp_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state300)) begin
        temp_mat_M_real_d0 = complex_M_real_read_2_reg_2549;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        temp_mat_M_real_d0 = reg_3021;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_real_d0 = 32'd0;
    end else begin
        temp_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state123) | ((1'b1 == ap_CS_fsm_state300) & (icmp_ln258_fu_5949_p2 == 1'd1)))) begin
        temp_mat_M_real_we0 = 1'b1;
    end else begin
        temp_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state274)) begin
        theta_ce0 = 1'b1;
    end else begin
        theta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state339)) begin
        w_M_imag_address0 = w_M_imag_addr_1_reg_7969;
    end else if ((1'b1 == ap_CS_fsm_state325)) begin
        w_M_imag_address0 = zext_ln278_reg_7915;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        w_M_imag_address0 = zext_ln205_fu_3317_p1;
    end else begin
        w_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state339) | (1'b1 == ap_CS_fsm_state325))) begin
        w_M_imag_ce0 = 1'b1;
    end else begin
        w_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state339)) begin
        w_M_imag_d0 = grp_fu_2765_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        w_M_imag_d0 = 32'd0;
    end else begin
        w_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state339))) begin
        w_M_imag_we0 = 1'b1;
    end else begin
        w_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state340)) begin
        w_M_real_address0 = zext_ln285_fu_6218_p1;
    end else if ((1'b1 == ap_CS_fsm_state339)) begin
        w_M_real_address0 = w_M_real_addr_2_reg_7964;
    end else if ((1'b1 == ap_CS_fsm_state325)) begin
        w_M_real_address0 = zext_ln278_reg_7915;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        w_M_real_address0 = zext_ln205_fu_3317_p1;
    end else begin
        w_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state339) | (1'b1 == ap_CS_fsm_state340) | (1'b1 == ap_CS_fsm_state325))) begin
        w_M_real_ce0 = 1'b1;
    end else begin
        w_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state339)) begin
        w_M_real_d0 = grp_fu_2760_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        w_M_real_d0 = 32'd0;
    end else begin
        w_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state339))) begin
        w_M_real_we0 = 1'b1;
    end else begin
        w_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln200_1_fu_3159_p2 == 1'd1) & (icmp_ln200_fu_3153_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln200_fu_3153_p2 == 1'd1) & (icmp_ln200_1_fu_3159_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_1_fu_3197_p2 == 1'd1) & (icmp_ln201_fu_3191_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_fu_3191_p2 == 1'd1) & (icmp_ln201_1_fu_3197_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln202_fu_3229_p2 == 1'd1) & (ap_phi_mux_phi_ln202_1_phi_fu_1767_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((1'b1 == ap_CS_fsm_state7) & (ap_phi_mux_phi_ln202_1_phi_fu_1767_p4 == 1'd1) & (icmp_ln202_fu_3229_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln203_1_fu_3267_p2 == 1'd1) & (icmp_ln203_fu_3261_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln203_fu_3261_p2 == 1'd1) & (icmp_ln203_1_fu_3267_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln204_1_fu_3305_p2 == 1'd1) & (icmp_ln204_fu_3299_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln204_fu_3299_p2 == 1'd1) & (icmp_ln204_1_fu_3305_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln205_fu_3323_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln206_1_fu_3369_p2 == 1'd1) & (icmp_ln206_fu_3363_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln206_fu_3363_p2 == 1'd1) & (icmp_ln206_1_fu_3369_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln211_fu_3375_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln212_fu_3399_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln213_fu_3419_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln122_fu_3472_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln124_fu_3526_p2 == 1'd1) & (icmp_ln110_fu_3484_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln110_fu_3484_p2 == 1'd1) & (icmp_ln124_fu_3526_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln159_fu_3547_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (icmp_ln169_fu_3580_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b0 == ap_block_state49_on_subcall_done) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln177_fu_3607_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln218_fu_3635_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (icmp_ln225_fu_3706_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state340;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if (((1'b1 == ap_CS_fsm_state94) & (icmp_ln227_fu_3753_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            if (((1'b1 == ap_CS_fsm_state95) & (icmp_ln228_fu_3794_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & (icmp_ln98_fu_3835_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln99_fu_3863_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state99 : begin
            if (((1'b1 == ap_CS_fsm_state99) & (icmp_ln101_fu_3894_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln11_1_fu_3988_p2 == 1'd1) & (icmp_ln11_fu_3982_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else if (((1'b1 == ap_CS_fsm_state125) & (icmp_ln11_fu_3982_p2 == 1'd1) & (icmp_ln11_1_fu_3988_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln12_1_fu_4026_p2 == 1'd1) & (icmp_ln12_fu_4020_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln12_fu_4020_p2 == 1'd1) & (icmp_ln12_1_fu_4026_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln13_1_fu_4064_p2 == 1'd1) & (icmp_ln13_fu_4058_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else if (((1'b1 == ap_CS_fsm_state129) & (icmp_ln13_fu_4058_p2 == 1'd1) & (icmp_ln13_1_fu_4064_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln14_1_fu_4102_p2 == 1'd1) & (icmp_ln14_fu_4096_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end else if (((1'b1 == ap_CS_fsm_state131) & (icmp_ln14_fu_4096_p2 == 1'd1) & (icmp_ln14_1_fu_4102_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_state132 : begin
            if (((1'b1 == ap_CS_fsm_state132) & (icmp_ln20_fu_4108_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end
        end
        ap_ST_fsm_state133 : begin
            if (((1'b1 == ap_CS_fsm_state133) & (icmp_ln21_fu_4132_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state135 : begin
            if (((1'b1 == ap_CS_fsm_state135) & (icmp_ln27_fu_4159_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        ap_ST_fsm_state136 : begin
            if (((1'b0 == ap_block_state136_on_subcall_done) & (1'b1 == ap_CS_fsm_state136))) begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        ap_ST_fsm_state137 : begin
            if (((1'b1 == ap_CS_fsm_state137) & (icmp_ln29_fu_4171_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_state138 : begin
            if (((1'b1 == ap_CS_fsm_state138) & (icmp_ln30_fu_4195_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end
        end
        ap_ST_fsm_state139 : begin
            if (((1'b1 == ap_CS_fsm_state139) & (icmp_ln33_fu_4222_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state150 : begin
            if (((1'b1 == ap_CS_fsm_state150) & (icmp_ln40_fu_4272_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state259;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            if (((1'b1 == ap_CS_fsm_state152) & (icmp_ln42_fu_4332_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln43_fu_4374_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state159 : begin
            if (((1'b1 == ap_CS_fsm_state159) & (icmp_ln51_fu_4411_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state195;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state160;
            end
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            if (((1'b1 == ap_CS_fsm_state166) & (icmp_ln53_fu_4449_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state182;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state182 : begin
            if (((1'b1 == ap_CS_fsm_state182) & (icmp_ln56_fu_4482_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state183;
            end
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            if (((1'b1 == ap_CS_fsm_state184) & (icmp_ln58_fu_4513_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state182;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state185;
            end
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state195 : begin
            if (((1'b1 == ap_CS_fsm_state195) & (tmp_73_fu_4554_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state196;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state231;
            end
        end
        ap_ST_fsm_state196 : begin
            if (((1'b1 == ap_CS_fsm_state196) & (icmp_ln67_fu_4607_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state207;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state197;
            end
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            if (((1'b1 == ap_CS_fsm_state243) & (icmp_ln75_fu_4689_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state244;
            end
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            ap_NS_fsm = ap_ST_fsm_state253;
        end
        ap_ST_fsm_state253 : begin
            ap_NS_fsm = ap_ST_fsm_state254;
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state259 : begin
            if (((1'b1 == ap_CS_fsm_state259) & (icmp_ln81_fu_4724_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state260;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state259;
            end
        end
        ap_ST_fsm_state260 : begin
            if (((1'b1 == ap_CS_fsm_state260) & (icmp_ln84_fu_4745_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state267;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state261;
            end
        end
        ap_ST_fsm_state261 : begin
            if (((1'b1 == ap_CS_fsm_state261) & (icmp_ln86_fu_4763_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state265;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state262;
            end
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state267 : begin
            if (((1'b1 == ap_CS_fsm_state267) & (icmp_ln236_fu_4886_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state271;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state268;
            end
        end
        ap_ST_fsm_state268 : begin
            if (((1'b1 == ap_CS_fsm_state268) & (icmp_ln237_fu_4940_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state267;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state269;
            end
        end
        ap_ST_fsm_state269 : begin
            ap_NS_fsm = ap_ST_fsm_state270;
        end
        ap_ST_fsm_state270 : begin
            ap_NS_fsm = ap_ST_fsm_state268;
        end
        ap_ST_fsm_state271 : begin
            if (((1'b1 == ap_CS_fsm_state271) & (icmp_ln246_fu_4989_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state298;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state272;
            end
        end
        ap_ST_fsm_state272 : begin
            ap_NS_fsm = ap_ST_fsm_state273;
        end
        ap_ST_fsm_state273 : begin
            ap_NS_fsm = ap_ST_fsm_state274;
        end
        ap_ST_fsm_state274 : begin
            if (((1'b1 == ap_CS_fsm_state274) & (icmp_ln248_fu_5006_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state271;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state275;
            end
        end
        ap_ST_fsm_state275 : begin
            ap_NS_fsm = ap_ST_fsm_state276;
        end
        ap_ST_fsm_state276 : begin
            ap_NS_fsm = ap_ST_fsm_state277;
        end
        ap_ST_fsm_state277 : begin
            ap_NS_fsm = ap_ST_fsm_state278;
        end
        ap_ST_fsm_state278 : begin
            ap_NS_fsm = ap_ST_fsm_state279;
        end
        ap_ST_fsm_state279 : begin
            ap_NS_fsm = ap_ST_fsm_state280;
        end
        ap_ST_fsm_state280 : begin
            ap_NS_fsm = ap_ST_fsm_state281;
        end
        ap_ST_fsm_state281 : begin
            ap_NS_fsm = ap_ST_fsm_state282;
        end
        ap_ST_fsm_state282 : begin
            ap_NS_fsm = ap_ST_fsm_state283;
        end
        ap_ST_fsm_state283 : begin
            ap_NS_fsm = ap_ST_fsm_state284;
        end
        ap_ST_fsm_state284 : begin
            ap_NS_fsm = ap_ST_fsm_state285;
        end
        ap_ST_fsm_state285 : begin
            ap_NS_fsm = ap_ST_fsm_state286;
        end
        ap_ST_fsm_state286 : begin
            ap_NS_fsm = ap_ST_fsm_state287;
        end
        ap_ST_fsm_state287 : begin
            ap_NS_fsm = ap_ST_fsm_state288;
        end
        ap_ST_fsm_state288 : begin
            ap_NS_fsm = ap_ST_fsm_state289;
        end
        ap_ST_fsm_state289 : begin
            ap_NS_fsm = ap_ST_fsm_state290;
        end
        ap_ST_fsm_state290 : begin
            ap_NS_fsm = ap_ST_fsm_state291;
        end
        ap_ST_fsm_state291 : begin
            if (((1'b1 == ap_CS_fsm_state291) & (grp_scaled_fixed2ieee_fu_2754_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state292;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state291;
            end
        end
        ap_ST_fsm_state292 : begin
            ap_NS_fsm = ap_ST_fsm_state293;
        end
        ap_ST_fsm_state293 : begin
            ap_NS_fsm = ap_ST_fsm_state294;
        end
        ap_ST_fsm_state294 : begin
            ap_NS_fsm = ap_ST_fsm_state295;
        end
        ap_ST_fsm_state295 : begin
            ap_NS_fsm = ap_ST_fsm_state296;
        end
        ap_ST_fsm_state296 : begin
            ap_NS_fsm = ap_ST_fsm_state297;
        end
        ap_ST_fsm_state297 : begin
            if (((1'b0 == ap_block_state297_on_subcall_done) & (1'b1 == ap_CS_fsm_state297))) begin
                ap_NS_fsm = ap_ST_fsm_state274;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state297;
            end
        end
        ap_ST_fsm_state298 : begin
            if (((1'b1 == ap_CS_fsm_state298) & (icmp_ln254_fu_5874_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state311;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state299;
            end
        end
        ap_ST_fsm_state299 : begin
            if (((1'b1 == ap_CS_fsm_state299) & (icmp_ln255_fu_5910_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state298;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state300;
            end
        end
        ap_ST_fsm_state300 : begin
            if (((1'b1 == ap_CS_fsm_state300) & (icmp_ln258_fu_5949_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state299;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state301;
            end
        end
        ap_ST_fsm_state301 : begin
            ap_NS_fsm = ap_ST_fsm_state302;
        end
        ap_ST_fsm_state302 : begin
            ap_NS_fsm = ap_ST_fsm_state303;
        end
        ap_ST_fsm_state303 : begin
            ap_NS_fsm = ap_ST_fsm_state304;
        end
        ap_ST_fsm_state304 : begin
            ap_NS_fsm = ap_ST_fsm_state305;
        end
        ap_ST_fsm_state305 : begin
            ap_NS_fsm = ap_ST_fsm_state306;
        end
        ap_ST_fsm_state306 : begin
            ap_NS_fsm = ap_ST_fsm_state307;
        end
        ap_ST_fsm_state307 : begin
            ap_NS_fsm = ap_ST_fsm_state308;
        end
        ap_ST_fsm_state308 : begin
            ap_NS_fsm = ap_ST_fsm_state309;
        end
        ap_ST_fsm_state309 : begin
            ap_NS_fsm = ap_ST_fsm_state310;
        end
        ap_ST_fsm_state310 : begin
            ap_NS_fsm = ap_ST_fsm_state300;
        end
        ap_ST_fsm_state311 : begin
            if (((1'b1 == ap_CS_fsm_state311) & (icmp_ln264_fu_6003_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state324;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state312;
            end
        end
        ap_ST_fsm_state312 : begin
            if (((1'b1 == ap_CS_fsm_state312) & (icmp_ln265_fu_6031_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state311;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state313;
            end
        end
        ap_ST_fsm_state313 : begin
            if (((1'b1 == ap_CS_fsm_state313) & (icmp_ln268_fu_6062_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state312;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state314;
            end
        end
        ap_ST_fsm_state314 : begin
            ap_NS_fsm = ap_ST_fsm_state315;
        end
        ap_ST_fsm_state315 : begin
            ap_NS_fsm = ap_ST_fsm_state316;
        end
        ap_ST_fsm_state316 : begin
            ap_NS_fsm = ap_ST_fsm_state317;
        end
        ap_ST_fsm_state317 : begin
            ap_NS_fsm = ap_ST_fsm_state318;
        end
        ap_ST_fsm_state318 : begin
            ap_NS_fsm = ap_ST_fsm_state319;
        end
        ap_ST_fsm_state319 : begin
            ap_NS_fsm = ap_ST_fsm_state320;
        end
        ap_ST_fsm_state320 : begin
            ap_NS_fsm = ap_ST_fsm_state321;
        end
        ap_ST_fsm_state321 : begin
            ap_NS_fsm = ap_ST_fsm_state322;
        end
        ap_ST_fsm_state322 : begin
            ap_NS_fsm = ap_ST_fsm_state323;
        end
        ap_ST_fsm_state323 : begin
            ap_NS_fsm = ap_ST_fsm_state313;
        end
        ap_ST_fsm_state324 : begin
            if (((1'b1 == ap_CS_fsm_state324) & (icmp_ln274_fu_6130_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state325;
            end
        end
        ap_ST_fsm_state325 : begin
            if (((1'b1 == ap_CS_fsm_state325) & (icmp_ln277_fu_6162_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state336;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state326;
            end
        end
        ap_ST_fsm_state326 : begin
            ap_NS_fsm = ap_ST_fsm_state327;
        end
        ap_ST_fsm_state327 : begin
            ap_NS_fsm = ap_ST_fsm_state328;
        end
        ap_ST_fsm_state328 : begin
            ap_NS_fsm = ap_ST_fsm_state329;
        end
        ap_ST_fsm_state329 : begin
            ap_NS_fsm = ap_ST_fsm_state330;
        end
        ap_ST_fsm_state330 : begin
            ap_NS_fsm = ap_ST_fsm_state331;
        end
        ap_ST_fsm_state331 : begin
            ap_NS_fsm = ap_ST_fsm_state332;
        end
        ap_ST_fsm_state332 : begin
            ap_NS_fsm = ap_ST_fsm_state333;
        end
        ap_ST_fsm_state333 : begin
            ap_NS_fsm = ap_ST_fsm_state334;
        end
        ap_ST_fsm_state334 : begin
            ap_NS_fsm = ap_ST_fsm_state335;
        end
        ap_ST_fsm_state335 : begin
            ap_NS_fsm = ap_ST_fsm_state325;
        end
        ap_ST_fsm_state336 : begin
            ap_NS_fsm = ap_ST_fsm_state337;
        end
        ap_ST_fsm_state337 : begin
            ap_NS_fsm = ap_ST_fsm_state338;
        end
        ap_ST_fsm_state338 : begin
            ap_NS_fsm = ap_ST_fsm_state339;
        end
        ap_ST_fsm_state339 : begin
            ap_NS_fsm = ap_ST_fsm_state324;
        end
        ap_ST_fsm_state340 : begin
            if (((1'b1 == ap_CS_fsm_state340) & (icmp_ln284_fu_6206_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state341;
            end
        end
        ap_ST_fsm_state341 : begin
            ap_NS_fsm = ap_ST_fsm_state342;
        end
        ap_ST_fsm_state342 : begin
            ap_NS_fsm = ap_ST_fsm_state343;
        end
        ap_ST_fsm_state343 : begin
            ap_NS_fsm = ap_ST_fsm_state344;
        end
        ap_ST_fsm_state344 : begin
            ap_NS_fsm = ap_ST_fsm_state345;
        end
        ap_ST_fsm_state345 : begin
            ap_NS_fsm = ap_ST_fsm_state346;
        end
        ap_ST_fsm_state346 : begin
            ap_NS_fsm = ap_ST_fsm_state347;
        end
        ap_ST_fsm_state347 : begin
            ap_NS_fsm = ap_ST_fsm_state348;
        end
        ap_ST_fsm_state348 : begin
            ap_NS_fsm = ap_ST_fsm_state349;
        end
        ap_ST_fsm_state349 : begin
            ap_NS_fsm = ap_ST_fsm_state350;
        end
        ap_ST_fsm_state350 : begin
            ap_NS_fsm = ap_ST_fsm_state340;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Autocorr_Buffer_M_i_address1 = zext_ln102_1_fu_3923_p1;

assign Autocorr_Buffer_M_r_address1 = zext_ln102_1_fu_3923_p1;

assign B_V_fu_5343_p1 = r_V_36_fu_5326_p3[55:0];

assign B_trunc_V_fu_5347_p4 = {{r_V_36_fu_5326_p3[55:7]}};

assign DFTpts_fu_3553_p2 = 11'd1 << zext_ln159_fu_3543_p1;

assign Ex_V_fu_5268_p2 = (select_ln482_fu_5167_p3 - zext_ln655_fu_5264_p1);

assign Mx_bits_V_2_fu_5184_p2 = (124'd0 - p_Val2_69_reg_7546);

assign Mx_zeros_V_fu_5240_p1 = tmp_i_i_i1_fu_5232_p3[5:0];

assign P_sm_address0 = zext_ln285_reg_8015;

assign P_sm_d0 = reg_3021;

assign Un_M_imag_address1 = zext_ln259_2_fu_5970_p1;

assign Un_M_real_address1 = zext_ln259_2_fu_5970_p1;

assign X_address0 = zext_ln214_1_fu_3453_p1;

assign Xj_f_M_imag_d0 = FFT_Buffer_im_q0;

assign Xj_f_M_real_d0 = FFT_Buffer_re_q0;

assign add_ln1027_fu_3351_p2 = (phi_mul_reg_1843 + zext_ln1027_10_fu_3347_p1);

assign add_ln102_1_fu_3929_p2 = (zext_ln104_1_reg_6651 + zext_ln102_fu_3914_p1);

assign add_ln102_fu_3918_p2 = (zext_ln104_reg_6633 + zext_ln102_fu_3914_p1);

assign add_ln1044_fu_4300_p2 = (zext_ln1044_fu_4284_p1 + zext_ln1044_1_fu_4296_p1);

assign add_ln104_fu_3883_p2 = (zext_ln99_reg_6638 + zext_ln104_2_fu_3879_p1);

assign add_ln1146_1_fu_5554_p2 = (zext_ln662_fu_5523_p1 + zext_ln1146_fu_5550_p1);

assign add_ln1146_2_fu_5586_p2 = ($signed(zext_ln1146_1_fu_5583_p1) + $signed(sext_ln657_fu_5574_p1));

assign add_ln1146_fu_5577_p2 = ($signed(lhs_V_2_fu_5567_p1) + $signed(rhs_V_2_fu_5571_p1));

assign add_ln114_1_fu_5065_p2 = ($signed(11'd1101) + $signed(tmp_V_fu_5045_p4));

assign add_ln114_fu_5162_p2 = ($signed(11'd1027) + $signed(tmp_V_reg_7496));

assign add_ln11_1_fu_3962_p2 = (phi_ln11_1_reg_2101 + 2'd1);

assign add_ln11_fu_3956_p2 = (phi_ln11_reg_2089 + 2'd1);

assign add_ln12_1_fu_4000_p2 = (phi_ln12_1_reg_2124 + 2'd1);

assign add_ln12_fu_3994_p2 = (phi_ln12_reg_2112 + 2'd1);

assign add_ln13_1_fu_4038_p2 = (phi_ln13_1_reg_2147 + 2'd1);

assign add_ln13_fu_4032_p2 = (phi_ln13_reg_2135 + 2'd1);

assign add_ln14_1_fu_4076_p2 = (phi_ln14_1_reg_2170 + 2'd1);

assign add_ln14_fu_4070_p2 = (phi_ln14_reg_2158 + 2'd1);

assign add_ln200_1_fu_3133_p2 = (phi_ln200_1_reg_1717 + 2'd1);

assign add_ln200_fu_3127_p2 = (phi_ln200_reg_1705 + 4'd1);

assign add_ln201_1_fu_3171_p2 = (phi_ln201_1_reg_1740 + 2'd1);

assign add_ln201_fu_3165_p2 = (phi_ln201_reg_1728 + 2'd1);

assign add_ln202_fu_3203_p2 = (phi_ln202_reg_1751 + 2'd1);

assign add_ln203_1_fu_3241_p2 = (phi_ln203_1_reg_1786 + 2'd1);

assign add_ln203_fu_3235_p2 = (phi_ln203_reg_1774 + 2'd1);

assign add_ln204_1_fu_3279_p2 = (phi_ln204_1_reg_1809 + 2'd1);

assign add_ln204_fu_3273_p2 = (phi_ln204_reg_1797 + 9'd1);

assign add_ln205_fu_3311_p2 = (phi_ln205_reg_1820 + 9'd1);

assign add_ln206_1_fu_3341_p2 = (phi_ln206_1_reg_1855 + 9'd1);

assign add_ln206_2_fu_3329_p2 = (phi_mul_reg_1843 + 11'd361);

assign add_ln206_fu_3335_p2 = (phi_ln206_reg_1831 + 2'd1);

assign add_ln214_1_fu_3448_p2 = (zext_ln213_1_reg_6355 + zext_ln214_fu_3444_p1);

assign add_ln214_fu_3431_p2 = (shl_ln_reg_6337 + zext_ln213_fu_3415_p1);

assign add_ln219_1_fu_3683_p2 = (add_ln219_fu_3677_p2 + zext_ln212_reg_6342);

assign add_ln219_2_fu_3696_p2 = (tmp_45_cast_fu_3688_p3 + zext_ln213_1_reg_6355);

assign add_ln219_fu_3677_p2 = (zext_ln219_2_fu_3673_p1 + zext_ln219_1_fu_3661_p1);

assign add_ln22_fu_4148_p2 = (zext_ln21_reg_6795 + zext_ln22_fu_4144_p1);

assign add_ln230_1_fu_3769_p2 = (zext_ln230_2_fu_3765_p1 + add_ln230_reg_6579);

assign add_ln230_2_fu_3814_p2 = (tmp_36_cast_reg_6592 + zext_ln230_4_fu_3810_p1);

assign add_ln230_3_fu_3825_p2 = (zext_ln228_reg_6597 + zext_ln230_3_fu_3806_p1);

assign add_ln230_fu_3747_p2 = (zext_ln230_1_fu_3743_p1 + zext_ln230_fu_3731_p1);

assign add_ln239_fu_4961_p2 = (zext_ln239_reg_7383 + zext_ln239_2_fu_4957_p1);

assign add_ln246_fu_4983_p2 = (phi_mul5_reg_2491 + 11'd361);

assign add_ln250_fu_5027_p2 = (phi_mul5_reg_2491 + zext_ln250_fu_5023_p1);

assign add_ln259_1_fu_5976_p2 = (zext_ln261_1_reg_7740 + zext_ln259_1_fu_5961_p1);

assign add_ln259_fu_5965_p2 = (zext_ln261_reg_7722 + zext_ln259_1_fu_5961_p1);

assign add_ln261_fu_5938_p2 = (zext_ln259_fu_5922_p1 + zext_ln255_reg_7727);

assign add_ln269_1_fu_6103_p2 = (zext_ln271_reg_7825 + phi_mul7_reg_2632);

assign add_ln269_2_fu_6097_p2 = (phi_mul7_reg_2632 + 11'd361);

assign add_ln269_fu_6086_p2 = (zext_ln271_1_reg_7843 + zext_ln269_fu_6082_p1);

assign add_ln271_fu_6051_p2 = (zext_ln265_reg_7830 + zext_ln271_2_fu_6047_p1);

assign add_ln278_1_fu_6195_p2 = (phi_mul9_reg_2689 + zext_ln278_1_reg_7921);

assign add_ln278_2_fu_6189_p2 = (phi_mul9_reg_2689 + 11'd361);

assign add_ln278_fu_6178_p2 = (zext_ln277_reg_7926 + zext_ln278_2_fu_6174_p1);

assign add_ln34_1_fu_4261_p2 = (zext_ln34_fu_4234_p1 + zext_ln30_reg_6842);

assign add_ln34_fu_4250_p2 = (zext_ln36_reg_6856 + zext_ln34_1_fu_4246_p1);

assign add_ln36_fu_4211_p2 = (zext_ln30_reg_6842 + zext_ln36_fu_4207_p1);

assign add_ln45_fu_4360_p2 = (zext_ln45_fu_4344_p1 + zext_ln45_1_fu_4356_p1);

assign add_ln47_fu_4396_p2 = (zext_ln45_1_reg_6976 + zext_ln47_fu_4392_p1);

assign add_ln54_fu_4459_p2 = (zext_ln52_reg_7054 + trunc_ln54_fu_4455_p1);

assign add_ln59_1_fu_4528_p2 = (zext_ln52_reg_7054 + trunc_ln59_fu_4519_p1);

assign add_ln59_fu_4523_p2 = (sext_ln57_cast_reg_7101 + trunc_ln59_fu_4519_p1);

assign add_ln68_1_fu_4640_p2 = (sext_ln68_2_cast_fu_4632_p3 + zext_ln1044_reg_6941);

assign add_ln68_fu_4617_p2 = ($signed(sext_ln70_reg_7147) + $signed(trunc_ln68_fu_4613_p1));

assign add_ln70_fu_4578_p2 = ($signed(sext_ln70_fu_4574_p1) + $signed(zext_ln68_fu_4562_p1));

assign add_ln72_fu_4590_p2 = ($signed(sext_ln70_fu_4574_p1) + $signed(zext_ln1044_reg_6941));

assign add_ln76_fu_4713_p2 = (zext_ln1044_reg_6941 + zext_ln76_fu_4709_p1);

assign addr_V_fu_5071_p3 = ((closepath_fu_5059_p2[0:0] === 1'b1) ? 11'd74 : add_ln114_1_fu_5065_p2);

assign and_ln300_2_fu_5792_p2 = (icmp_ln833_reg_7582 & icmp_ln833_1_reg_7540);

assign and_ln300_fu_5763_p2 = (icmp_ln833_reg_7582 & icmp_ln833_1_reg_7540);

assign and_ln87_1_fu_4873_p2 = (grp_fu_2912_p2 & and_ln87_fu_4867_p2);

assign and_ln87_fu_4867_p2 = (or_ln87_fu_4859_p2 & or_ln87_1_fu_4863_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd168];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd169];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd180];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd181];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state184 = ap_CS_fsm[32'd183];

assign ap_CS_fsm_state185 = ap_CS_fsm[32'd184];

assign ap_CS_fsm_state186 = ap_CS_fsm[32'd185];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd188];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state190 = ap_CS_fsm[32'd189];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd190];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd192];

assign ap_CS_fsm_state194 = ap_CS_fsm[32'd193];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd194];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd195];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd196];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state199 = ap_CS_fsm[32'd198];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state200 = ap_CS_fsm[32'd199];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd200];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd201];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd202];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd203];

assign ap_CS_fsm_state205 = ap_CS_fsm[32'd204];

assign ap_CS_fsm_state206 = ap_CS_fsm[32'd205];

assign ap_CS_fsm_state207 = ap_CS_fsm[32'd206];

assign ap_CS_fsm_state208 = ap_CS_fsm[32'd207];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd208];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state210 = ap_CS_fsm[32'd209];

assign ap_CS_fsm_state211 = ap_CS_fsm[32'd210];

assign ap_CS_fsm_state212 = ap_CS_fsm[32'd211];

assign ap_CS_fsm_state213 = ap_CS_fsm[32'd212];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state220 = ap_CS_fsm[32'd219];

assign ap_CS_fsm_state221 = ap_CS_fsm[32'd220];

assign ap_CS_fsm_state222 = ap_CS_fsm[32'd221];

assign ap_CS_fsm_state223 = ap_CS_fsm[32'd222];

assign ap_CS_fsm_state224 = ap_CS_fsm[32'd223];

assign ap_CS_fsm_state225 = ap_CS_fsm[32'd224];

assign ap_CS_fsm_state226 = ap_CS_fsm[32'd225];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd226];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state236 = ap_CS_fsm[32'd235];

assign ap_CS_fsm_state237 = ap_CS_fsm[32'd236];

assign ap_CS_fsm_state238 = ap_CS_fsm[32'd237];

assign ap_CS_fsm_state239 = ap_CS_fsm[32'd238];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state240 = ap_CS_fsm[32'd239];

assign ap_CS_fsm_state241 = ap_CS_fsm[32'd240];

assign ap_CS_fsm_state242 = ap_CS_fsm[32'd241];

assign ap_CS_fsm_state243 = ap_CS_fsm[32'd242];

assign ap_CS_fsm_state244 = ap_CS_fsm[32'd243];

assign ap_CS_fsm_state245 = ap_CS_fsm[32'd244];

assign ap_CS_fsm_state246 = ap_CS_fsm[32'd245];

assign ap_CS_fsm_state247 = ap_CS_fsm[32'd246];

assign ap_CS_fsm_state248 = ap_CS_fsm[32'd247];

assign ap_CS_fsm_state249 = ap_CS_fsm[32'd248];

assign ap_CS_fsm_state250 = ap_CS_fsm[32'd249];

assign ap_CS_fsm_state257 = ap_CS_fsm[32'd256];

assign ap_CS_fsm_state258 = ap_CS_fsm[32'd257];

assign ap_CS_fsm_state259 = ap_CS_fsm[32'd258];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state260 = ap_CS_fsm[32'd259];

assign ap_CS_fsm_state261 = ap_CS_fsm[32'd260];

assign ap_CS_fsm_state262 = ap_CS_fsm[32'd261];

assign ap_CS_fsm_state263 = ap_CS_fsm[32'd262];

assign ap_CS_fsm_state264 = ap_CS_fsm[32'd263];

assign ap_CS_fsm_state265 = ap_CS_fsm[32'd264];

assign ap_CS_fsm_state266 = ap_CS_fsm[32'd265];

assign ap_CS_fsm_state267 = ap_CS_fsm[32'd266];

assign ap_CS_fsm_state268 = ap_CS_fsm[32'd267];

assign ap_CS_fsm_state269 = ap_CS_fsm[32'd268];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state270 = ap_CS_fsm[32'd269];

assign ap_CS_fsm_state271 = ap_CS_fsm[32'd270];

assign ap_CS_fsm_state272 = ap_CS_fsm[32'd271];

assign ap_CS_fsm_state273 = ap_CS_fsm[32'd272];

assign ap_CS_fsm_state274 = ap_CS_fsm[32'd273];

assign ap_CS_fsm_state275 = ap_CS_fsm[32'd274];

assign ap_CS_fsm_state276 = ap_CS_fsm[32'd275];

assign ap_CS_fsm_state277 = ap_CS_fsm[32'd276];

assign ap_CS_fsm_state280 = ap_CS_fsm[32'd279];

assign ap_CS_fsm_state281 = ap_CS_fsm[32'd280];

assign ap_CS_fsm_state282 = ap_CS_fsm[32'd281];

assign ap_CS_fsm_state283 = ap_CS_fsm[32'd282];

assign ap_CS_fsm_state284 = ap_CS_fsm[32'd283];

assign ap_CS_fsm_state285 = ap_CS_fsm[32'd284];

assign ap_CS_fsm_state286 = ap_CS_fsm[32'd285];

assign ap_CS_fsm_state287 = ap_CS_fsm[32'd286];

assign ap_CS_fsm_state288 = ap_CS_fsm[32'd287];

assign ap_CS_fsm_state289 = ap_CS_fsm[32'd288];

assign ap_CS_fsm_state290 = ap_CS_fsm[32'd289];

assign ap_CS_fsm_state291 = ap_CS_fsm[32'd290];

assign ap_CS_fsm_state292 = ap_CS_fsm[32'd291];

assign ap_CS_fsm_state293 = ap_CS_fsm[32'd292];

assign ap_CS_fsm_state294 = ap_CS_fsm[32'd293];

assign ap_CS_fsm_state295 = ap_CS_fsm[32'd294];

assign ap_CS_fsm_state296 = ap_CS_fsm[32'd295];

assign ap_CS_fsm_state297 = ap_CS_fsm[32'd296];

assign ap_CS_fsm_state298 = ap_CS_fsm[32'd297];

assign ap_CS_fsm_state299 = ap_CS_fsm[32'd298];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state300 = ap_CS_fsm[32'd299];

assign ap_CS_fsm_state301 = ap_CS_fsm[32'd300];

assign ap_CS_fsm_state302 = ap_CS_fsm[32'd301];

assign ap_CS_fsm_state303 = ap_CS_fsm[32'd302];

assign ap_CS_fsm_state304 = ap_CS_fsm[32'd303];

assign ap_CS_fsm_state305 = ap_CS_fsm[32'd304];

assign ap_CS_fsm_state306 = ap_CS_fsm[32'd305];

assign ap_CS_fsm_state307 = ap_CS_fsm[32'd306];

assign ap_CS_fsm_state308 = ap_CS_fsm[32'd307];

assign ap_CS_fsm_state309 = ap_CS_fsm[32'd308];

assign ap_CS_fsm_state310 = ap_CS_fsm[32'd309];

assign ap_CS_fsm_state311 = ap_CS_fsm[32'd310];

assign ap_CS_fsm_state312 = ap_CS_fsm[32'd311];

assign ap_CS_fsm_state313 = ap_CS_fsm[32'd312];

assign ap_CS_fsm_state314 = ap_CS_fsm[32'd313];

assign ap_CS_fsm_state315 = ap_CS_fsm[32'd314];

assign ap_CS_fsm_state316 = ap_CS_fsm[32'd315];

assign ap_CS_fsm_state317 = ap_CS_fsm[32'd316];

assign ap_CS_fsm_state318 = ap_CS_fsm[32'd317];

assign ap_CS_fsm_state319 = ap_CS_fsm[32'd318];

assign ap_CS_fsm_state320 = ap_CS_fsm[32'd319];

assign ap_CS_fsm_state321 = ap_CS_fsm[32'd320];

assign ap_CS_fsm_state322 = ap_CS_fsm[32'd321];

assign ap_CS_fsm_state323 = ap_CS_fsm[32'd322];

assign ap_CS_fsm_state324 = ap_CS_fsm[32'd323];

assign ap_CS_fsm_state325 = ap_CS_fsm[32'd324];

assign ap_CS_fsm_state326 = ap_CS_fsm[32'd325];

assign ap_CS_fsm_state327 = ap_CS_fsm[32'd326];

assign ap_CS_fsm_state328 = ap_CS_fsm[32'd327];

assign ap_CS_fsm_state329 = ap_CS_fsm[32'd328];

assign ap_CS_fsm_state330 = ap_CS_fsm[32'd329];

assign ap_CS_fsm_state331 = ap_CS_fsm[32'd330];

assign ap_CS_fsm_state332 = ap_CS_fsm[32'd331];

assign ap_CS_fsm_state333 = ap_CS_fsm[32'd332];

assign ap_CS_fsm_state334 = ap_CS_fsm[32'd333];

assign ap_CS_fsm_state335 = ap_CS_fsm[32'd334];

assign ap_CS_fsm_state336 = ap_CS_fsm[32'd335];

assign ap_CS_fsm_state337 = ap_CS_fsm[32'd336];

assign ap_CS_fsm_state338 = ap_CS_fsm[32'd337];

assign ap_CS_fsm_state339 = ap_CS_fsm[32'd338];

assign ap_CS_fsm_state340 = ap_CS_fsm[32'd339];

assign ap_CS_fsm_state341 = ap_CS_fsm[32'd340];

assign ap_CS_fsm_state342 = ap_CS_fsm[32'd341];

assign ap_CS_fsm_state349 = ap_CS_fsm[32'd348];

assign ap_CS_fsm_state350 = ap_CS_fsm[32'd349];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state136_on_subcall_done = ((ap_sync_grp_qrf_top_fu_2711_ap_ready & ap_sync_grp_qrf_top_fu_2711_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state297_on_subcall_done = ((grp_sin_or_cos_float_s_fu_2737_ap_done == 1'b0) | (grp_sin_or_cos_float_s_fu_2721_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state49_on_subcall_done = ((grp_sin_or_cos_float_s_fu_2737_ap_done == 1'b0) | (grp_sin_or_cos_float_s_fu_2721_ap_done == 1'b0));
end

assign ap_phi_mux_phi_ln202_1_phi_fu_1767_p4 = phi_ln202_1_reg_1763;

assign ap_sync_grp_qrf_top_fu_2711_ap_done = (grp_qrf_top_fu_2711_ap_done | ap_sync_reg_grp_qrf_top_fu_2711_ap_done);

assign ap_sync_grp_qrf_top_fu_2711_ap_ready = (grp_qrf_top_fu_2711_ap_ready | ap_sync_reg_grp_qrf_top_fu_2711_ap_ready);

assign bitcast_ln251_1_fu_5869_p1 = xor_ln251_fu_5863_p2;

assign bitcast_ln251_fu_5859_p1 = grp_sin_or_cos_float_s_fu_2737_ap_return;

assign bitcast_ln444_2_fu_4673_p1 = complex_M_imag_read_1_reg_2371;

assign bitcast_ln444_fu_4657_p1 = complex_M_real_read_1_reg_2383;

assign bitcast_ln512_fu_5849_p1 = p_Result_56_fu_5839_p4;

assign bitcast_ln667_2_fu_5987_p1 = Un_M_imag_q0;

assign bitcast_ln667_4_fu_6114_p1 = a_theta_M_imag_q0;

assign bitcast_ln667_fu_3940_p1 = Autocorr_Buffer_M_i_q0;

assign bitcast_ln87_1_fu_4817_p1 = eigval_q1;

assign bitcast_ln87_fu_4799_p1 = eigval_q0;

assign closepath_fu_5059_p2 = ((tmp_V_fu_5045_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign count_fu_4278_p2 = (count_0_i_reg_2273 + 3'd1);

assign eigval_address1 = zext_ln87_1_fu_4794_p1;

assign fc_address0 = zext_ln226_fu_3718_p1;

assign fourth_order_double_4_address0 = zext_ln498_fu_5445_p1;

assign fourth_order_double_5_address0 = zext_ln498_fu_5445_p1;

assign fourth_order_double_6_address0 = zext_ln498_fu_5445_p1;

assign fourth_order_double_7_address0 = zext_ln498_fu_5445_p1;

assign fourth_order_double_s_address0 = zext_ln498_fu_5445_p1;

assign grp_fu_2858_p0 = xor_ln444_1_fu_4677_p2;

assign grp_fu_2863_p0 = xor_ln444_fu_4661_p2;

assign grp_fu_2936_p0 = DFTpts_reg_6451;

assign grp_fu_5131_p0 = grp_fu_5131_p00;

assign grp_fu_5131_p00 = ret_V_22_reg_7525;

assign grp_fu_5131_p1 = grp_fu_5131_p10;

assign grp_fu_5131_p10 = p_Result_50_fu_5117_p3;

assign grp_qrf_top_fu_2711_ap_start = grp_qrf_top_fu_2711_ap_start_reg;

assign grp_scaled_fixed2ieee_fu_2754_ap_start = grp_scaled_fixed2ieee_fu_2754_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_2721_ap_start = grp_sin_or_cos_float_s_fu_2721_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_2721_do_cos = 1'd1;

assign grp_sin_or_cos_float_s_fu_2737_ap_start = grp_sin_or_cos_float_s_fu_2737_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_2737_do_cos = 1'd0;

assign i_10_fu_4177_p2 = (i17_0_i_reg_2214 + 3'd1);

assign i_11_fu_4338_p2 = (i19_0_i_reg_2285 + 3'd1);

assign i_12_fu_4730_p2 = (i_0_i31_reg_2415 + 3'd1);

assign i_13_fu_4417_p2 = (j_14_reg_2308 + 2'd1);

assign i_14_fu_4751_p2 = (flag_reg_2427 + 2'd1);

assign i_15_fu_4695_p2 = (i25_0_i_reg_2404 + 3'd1);

assign i_16_fu_5880_p2 = (i_0_reg_2514 + 3'd1);

assign i_17_fu_6009_p2 = (i31_0_reg_2573 + 9'd1);

assign i_18_fu_6136_p2 = (i34_0_reg_2643 + 9'd1);

assign i_4_fu_3490_p2 = (i_0_i_i_i_reg_1923 + 4'd1);

assign i_5_cast_fu_3576_p1 = i_5_reg_1955;

assign i_6_fu_3478_p2 = (11'd1 + input_assign_reg_1900);

assign i_7_fu_3630_p2 = ($signed(zext_ln161_reg_6462) + $signed(i_0_i_reg_1978));

assign i_8_fu_4114_p2 = (i_0_i25_reg_2181 + 3'd1);

assign i_9_fu_4165_p2 = (i16_0_i_reg_2203 + 4'd1);

assign i_fu_6212_p2 = (i36_0_reg_2700 + 9'd1);

assign i_lower_fu_3613_p2 = ($signed(i_0_i_reg_1978) + $signed(numBF_reg_6473));

assign icmp_ln101_fu_3894_p2 = ((l_0_i_reg_2078 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_3484_p2 = ((i_0_i_i_i_reg_1923 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln11_1_fu_3988_p2 = ((phi_ln11_reg_2089 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_3982_p2 = ((phi_ln11_1_reg_2101 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_3472_p2 = ((input_assign_reg_1900 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_3526_p2 = ((zext_ln108_reg_6379 > reversed_reg_1912) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_4026_p2 = ((phi_ln12_reg_2112 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_4020_p2 = ((phi_ln12_1_reg_2124 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_1_fu_4064_p2 = ((phi_ln13_reg_2135 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_4058_p2 = ((phi_ln13_1_reg_2147 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_1_fu_4102_p2 = ((phi_ln14_reg_2158 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_4096_p2 = ((phi_ln14_1_reg_2170 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_3547_p2 = ((stage_0_i_reg_1943 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_3580_p2 = ((i_5_reg_1955 == trunc_ln6_reg_6456) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_3607_p2 = (($signed(tmp_48_fu_3597_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_ln200_1_fu_3159_p2 = ((phi_ln200_reg_1705 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_3153_p2 = ((phi_ln200_1_reg_1717 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln201_1_fu_3197_p2 = ((phi_ln201_reg_1728 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_3191_p2 = ((phi_ln201_1_reg_1740 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_3229_p2 = ((phi_ln202_reg_1751 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln203_1_fu_3267_p2 = ((phi_ln203_reg_1774 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_3261_p2 = ((phi_ln203_1_reg_1786 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln204_1_fu_3305_p2 = ((phi_ln204_reg_1797 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_3299_p2 = ((phi_ln204_1_reg_1809 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln205_fu_3323_p2 = ((phi_ln205_reg_1820 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln206_1_fu_3369_p2 = ((phi_ln206_reg_1831 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln206_fu_3363_p2 = ((phi_ln206_1_reg_1855 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_4108_p2 = ((i_0_i25_reg_2181 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_3375_p2 = ((l_0_reg_1866 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_3399_p2 = ((n_0_reg_1877 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_3419_p2 = ((j_0_reg_1888 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_3635_p2 = ((j25_0_reg_1987 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_4132_p2 = ((j_0_i26_reg_2192 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_3706_p2 = ((jj_0_reg_1998 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_3753_p2 = ((l26_0_reg_2010 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln228_fu_3794_p2 = ((n27_0_reg_2021 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_4886_p2 = ((x_0_reg_2458 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_4940_p2 = ((y_0_reg_2469 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_4971_p2 = ((sort_index_q1 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln240_fu_4977_p2 = ((sort_index_q1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_4989_p2 = ((x28_0_reg_2480 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_5006_p2 = ((y29_0_reg_2503 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln254_fu_5874_p2 = ((i_0_reg_2514 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln255_fu_5910_p2 = ((j30_0_reg_2525 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_5949_p2 = ((k_0_reg_2562 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln264_fu_6003_p2 = ((i31_0_reg_2573 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_6031_p2 = ((j32_0_reg_2584 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln268_fu_6062_p2 = ((k33_0_reg_2621 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln274_fu_6130_p2 = ((i34_0_reg_2643 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln277_fu_6162_p2 = ((k35_0_reg_2678 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_4159_p2 = ((i16_0_i_reg_2203 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_6206_p2 = ((i36_0_reg_2700 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_4171_p2 = ((i17_0_i_reg_2214 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_4195_p2 = ((j18_0_i_reg_2225 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_4222_p2 = ((k_0_i_reg_2262 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_4272_p2 = ((count_0_i_reg_2273 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_4332_p2 = ((i19_0_i_reg_2285 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_4374_p2 = ((j20_0_i_reg_2297 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_4386_p2 = ((i19_0_i_reg_2285 == j20_0_i_reg_2297) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_4411_p2 = ((j_14_reg_2308 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_4449_p2 = ((j22_0_i_reg_2320 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_4482_p2 = ((j23_0_in_i_reg_2329 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_4513_p2 = ((q_0_i_reg_2338 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_4607_p2 = ((j24_0_in_i_reg_2395 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_4689_p2 = ((i25_0_i_reg_2404 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_4724_p2 = ((i_0_i31_reg_2415 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln833_1_fu_5137_p2 = ((tmp_V_4_reg_7503 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_2_fu_5287_p2 = ((tmp_V_reg_7496 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_5282_p2 = ((tmp_V_reg_7496 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_4745_p2 = ((flag_reg_2427 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_4763_p2 = ((j_0_in_i_reg_2449 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_4841_p2 = ((trunc_ln87_fu_4813_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_2_fu_4847_p2 = ((tmp_24_fu_4821_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln87_3_fu_4853_p2 = ((trunc_ln87_1_fu_4831_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_4835_p2 = ((tmp_22_fu_4803_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_3835_p2 = ((x_0_i_reg_2032 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_3863_p2 = ((y_0_i_reg_2043 == 3'd4) ? 1'b1 : 1'b0);

assign input_assign_1_fu_3512_p4 = {{p_0_i_i_i_reg_1934[9:1]}};

assign j_10_fu_4601_p2 = (j24_0_in_i_reg_2395 + 32'd1);

assign j_11_fu_4476_p2 = (j23_0_in_i_reg_2329 + 32'd1);

assign j_12_fu_5916_p2 = (j30_0_reg_2525 + 3'd1);

assign j_13_fu_6037_p2 = (j32_0_reg_2584 + 3'd1);

assign j_15_fu_4757_p2 = (j_0_in_i_reg_2449 + 32'd1);

assign j_1_fu_3641_p2 = (j25_0_reg_1987 + 11'd1);

assign j_2_fu_3585_p2 = (i_5_reg_1955 + 10'd1);

assign j_3_fu_4138_p2 = (j_0_i26_reg_2192 + 3'd1);

assign j_5_fu_4201_p2 = (j18_0_i_reg_2225 + 3'd1);

assign j_7_fu_4879_p3 = ((and_ln87_1_fu_4873_p2[0:0] === 1'b1) ? j_15_reg_7294 : flag_0_i_reg_2439);

assign j_8_fu_4470_p2 = (32'd1 + j22_0_i_reg_2320);

assign j_9_fu_4380_p2 = (j20_0_i_reg_2297 + 3'd1);

assign j_fu_3425_p2 = (j_0_reg_1888 + 11'd1);

assign jj_fu_3712_p2 = (jj_0_reg_1998 + 11'd1);

assign k_2_fu_5955_p2 = (k_0_reg_2562 + 2'd1);

assign k_3_fu_6168_p2 = (k35_0_reg_2678 + 3'd1);

assign k_4_fu_6068_p2 = (k33_0_reg_2621 + 3'd1);

assign k_fu_4228_p2 = (k_0_i_reg_2262 + 3'd1);

assign l_1_fu_3759_p2 = (l26_0_reg_2010 + 4'd1);

assign l_2_fu_3900_p2 = (l_0_i_reg_2078 + 4'd1);

assign l_fu_3381_p2 = (l_0_reg_1866 + 4'd1);

assign lhs_V_2_fu_5567_p1 = $signed(t1_V_fu_5560_p3);

assign m_fu_4651_p2 = ($signed(m_0_i_reg_2359) + $signed(3'd7));

assign n_1_fu_3405_p2 = (n_0_reg_1877 + 3'd1);

assign n_fu_3800_p2 = (n27_0_reg_2021 + 3'd1);

assign numBF_fu_3573_p1 = trunc_ln6_reg_6456;

assign or_ln241_fu_4924_p2 = (tmp_57_fu_4910_p3 | 4'd1);

assign or_ln300_fu_5810_p2 = (icmp_ln833_2_reg_7588 | and_ln300_fu_5763_p2);

assign or_ln311_fu_5772_p2 = (select_ln271_fu_5756_p3 | icmp_ln833_2_reg_7588);

assign or_ln87_1_fu_4863_p2 = (icmp_ln87_3_reg_7360 | icmp_ln87_2_reg_7355);

assign or_ln87_fu_4859_p2 = (icmp_ln87_reg_7345 | icmp_ln87_1_reg_7350);

assign p_Repl2_6_fu_5785_p3 = ((and_ln300_fu_5763_p2[0:0] === 1'b1) ? results_sign_V_2_reg_7490 : select_ln311_fu_5777_p3);

assign p_Result_50_fu_5117_p3 = {{1'd1}, {tmp_V_4_reg_7503}};

assign p_Result_51_fu_5206_p3 = {{p_Result_i_i_i_87_fu_5196_p4}, {1'd1}};

assign p_Result_52_fu_5224_p3 = {{2'd3}, {p_Result_s_fu_5214_p4}};

assign p_Result_53_fu_5438_p3 = {{sin_basis_fu_5432_p2}, {p_Result_i_i_reg_7595}};

assign p_Result_54_fu_5652_p3 = p_Val2_65_fu_5649_p1[32'd63];

assign p_Result_55_fu_5674_p3 = {{results_sign_V_2_reg_7490}, {p_Val2_70_reg_7557}};

assign p_Result_56_fu_5839_p4 = {{{p_Repl2_6_fu_5785_p3}, {ret_V_20_fu_5815_p3}}, {ret_V_21_fu_5831_p3}};

assign p_Result_i_i_i_87_fu_5196_p4 = {{p_Val2_49_fu_5189_p3[123:63]}};

assign p_Result_i_i_i_fu_5079_p4 = {{addr_V_fu_5071_p3[10:7]}};

integer ap_tvar_int_0;

always @ (p_Result_51_fu_5206_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_s_fu_5214_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_5214_p4[ap_tvar_int_0] = p_Result_51_fu_5206_p3[61 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_49_fu_5189_p3 = ((trunc_ln745_fu_5180_p1[0:0] === 1'b1) ? Mx_bits_V_2_fu_5184_p2 : p_Val2_69_reg_7546);

assign p_Val2_65_fu_5649_p1 = resultf_reg_7693;

assign p_Val2_70_fu_5174_p3 = ((closepath_reg_7509[0:0] === 1'b1) ? 3'd0 : trunc_ln_i_i_reg_7552);

assign p_Val2_s_fu_5033_p1 = reg_3016;

assign p_address0 = zext_ln247_fu_5001_p1;

assign p_r_M_imag_15_fu_4683_p1 = xor_ln444_1_fu_4677_p2;

assign p_r_M_imag_23_fu_6124_p1 = xor_ln667_2_fu_6118_p2;

assign p_r_M_real_17_fu_4667_p1 = xor_ln444_fu_4661_p2;

assign p_t_imag_9_fu_5997_p1 = xor_ln667_1_fu_5991_p2;

assign p_t_imag_fu_3950_p1 = xor_ln667_fu_3944_p2;

assign q_1_fu_4539_p2 = (32'd1 + q_0_i_reg_2338);

assign r_V_20_fu_5321_p2 = Mx_V_reg_7563 << zext_ln1287_fu_5312_p1;

assign r_V_22_fu_5357_p1 = B_trunc_V_fu_5347_p4;

assign r_V_25_fu_5398_p1 = B_squared_V_reg_7610;

assign r_V_34_fu_5101_p2 = ref_4oPi_table_256_V_q0 << zext_ln744_fu_5098_p1;

assign r_V_35_fu_5248_p2 = p_Val2_49_fu_5189_p3 << zext_ln1253_fu_5244_p1;

assign r_V_36_fu_5326_p3 = ((isNeg_reg_7576[0:0] === 1'b1) ? r_V_fu_5316_p2 : r_V_20_fu_5321_p2);

assign r_V_37_fu_5361_p0 = r_V_22_fu_5357_p1;

assign r_V_37_fu_5361_p1 = r_V_22_fu_5357_p1;

assign r_V_37_fu_5361_p2 = (r_V_37_fu_5361_p0 * r_V_37_fu_5361_p1);

assign r_V_38_fu_5401_p0 = r_V_25_fu_5398_p1;

assign r_V_38_fu_5401_p1 = r_V_22_reg_7605;

assign r_V_38_fu_5401_p2 = (r_V_38_fu_5401_p0 * r_V_38_fu_5401_p1);

assign r_V_39_fu_5416_p0 = r_V_25_fu_5398_p1;

assign r_V_39_fu_5416_p1 = r_V_25_fu_5398_p1;

assign r_V_39_fu_5416_p2 = (r_V_39_fu_5416_p0 * r_V_39_fu_5416_p1);

assign r_V_40_fu_5461_p0 = r_V_40_fu_5461_p00;

assign r_V_40_fu_5461_p00 = B_V_reg_7600;

assign r_V_40_fu_5461_p1 = fourth_order_double_5_q0;

assign r_V_40_fu_5461_p2 = ($signed({{1'b0}, {r_V_40_fu_5461_p0}}) * $signed(r_V_40_fu_5461_p1));

assign r_V_41_fu_5484_p0 = r_V_41_fu_5484_p00;

assign r_V_41_fu_5484_p00 = B_squared_V_reg_7610;

assign r_V_41_fu_5484_p1 = fourth_order_double_6_q0;

assign r_V_41_fu_5484_p2 = ($signed({{1'b0}, {r_V_41_fu_5484_p0}}) * $signed(r_V_41_fu_5484_p1));

assign r_V_42_fu_5507_p0 = r_V_42_fu_5507_p00;

assign r_V_42_fu_5507_p00 = B_third_power_V_reg_7623;

assign r_V_42_fu_5507_p1 = r_V_42_fu_5507_p10;

assign r_V_42_fu_5507_p10 = fourth_order_double_7_q0;

assign r_V_42_fu_5507_p2 = (r_V_42_fu_5507_p0 * r_V_42_fu_5507_p1);

assign r_V_43_fu_5534_p0 = r_V_43_fu_5534_p00;

assign r_V_43_fu_5534_p00 = B_fourth_power_V_reg_7628;

assign r_V_43_fu_5534_p1 = r_V_43_fu_5534_p10;

assign r_V_43_fu_5534_p10 = fourth_order_double_s_q0;

assign r_V_43_fu_5534_p2 = (r_V_43_fu_5534_p0 * r_V_43_fu_5534_p1);

assign r_V_44_fu_5621_p0 = ret_V_reg_7678;

assign r_V_44_fu_5621_p1 = r_V_44_fu_5621_p10;

assign r_V_44_fu_5621_p10 = select_ln272_2_fu_5608_p3;

assign r_V_44_fu_5621_p2 = ($signed(r_V_44_fu_5621_p0) * $signed({{1'b0}, {r_V_44_fu_5621_p1}}));

assign r_V_fu_5316_p2 = Mx_V_reg_7563 >> zext_ln1287_fu_5312_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln635_fu_5089_p1;

assign ret_V_19_fu_5642_p2 = ($signed(12'd0) - $signed(rhs_V_3_fu_5638_p1));

assign ret_V_20_fu_5815_p3 = ((or_ln300_fu_5810_p2[0:0] === 1'b1) ? select_ln300_4_fu_5802_p3 : tmp_V_5_fu_5660_p4);

assign ret_V_21_fu_5831_p3 = ((or_ln300_fu_5810_p2[0:0] === 1'b1) ? select_ln300_6_fu_5823_p3 : tmp_V_6_fu_5670_p1);

assign ret_V_fu_5596_p2 = ($signed(sext_ln1146_fu_5592_p1) + $signed(add_ln1146_fu_5577_p2));

assign rev_fu_3504_p3 = {{trunc_ln111_fu_3496_p1}, {trunc_ln110_fu_3500_p1}};

assign rhs_V_2_fu_5571_p1 = $signed(trunc_ln9_reg_7663);

assign rhs_V_3_fu_5638_p1 = $signed(select_ln272_fu_5602_p3);

assign select_ln271_fu_5756_p3 = ((cos_basis_reg_7616[0:0] === 1'b1) ? tmp_27_fu_5680_p18 : tmp_28_fu_5718_p18);

assign select_ln272_2_fu_5608_p3 = ((cos_basis_reg_7616[0:0] === 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_7563);

assign select_ln272_fu_5602_p3 = ((cos_basis_reg_7616[0:0] === 1'b1) ? 11'd0 : Ex_V_reg_7570);

assign select_ln300_4_fu_5802_p3 = ((xor_ln300_fu_5796_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign select_ln300_6_fu_5823_p3 = ((xor_ln300_fu_5796_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln311_fu_5777_p3 = ((or_ln311_fu_5772_p2[0:0] === 1'b1) ? xor_ln311_fu_5767_p2 : p_Result_54_fu_5652_p3);

assign select_ln482_fu_5167_p3 = ((closepath_reg_7509[0:0] === 1'b1) ? add_ln114_fu_5162_p2 : 11'd0);

assign sext_ln1067_fu_4322_p1 = $signed(xor_ln1067_fu_4316_p2);

assign sext_ln1146_fu_5592_p1 = $signed(add_ln1146_2_fu_5586_p2);

assign sext_ln1311_fu_5308_p1 = $signed(ush_fu_5301_p3);

assign sext_ln1334_fu_5292_p1 = Ex_V_reg_7570;

assign sext_ln182_fu_3618_p1 = $signed(i_lower_fu_3613_p2);

assign sext_ln185_fu_3624_p1 = i_0_i_reg_1978;

assign sext_ln54_fu_4464_p1 = $signed(add_ln54_fu_4459_p2);

assign sext_ln57_cast_fu_4506_p3 = {{trunc_ln57_reg_7086}, {2'd0}};

assign sext_ln57_fu_4500_p1 = $signed(tmp_63_fu_4492_p3);

assign sext_ln59_1_fu_4533_p1 = $signed(add_ln59_1_fu_4528_p2);

assign sext_ln59_fu_4545_p1 = $signed(add_ln59_reg_7109);

assign sext_ln657_fu_5574_p1 = $signed(trunc_ln662_1_reg_7668);

assign sext_ln65_fu_4550_p1 = m_0_i_reg_2359;

assign sext_ln68_1_fu_4645_p1 = $signed(add_ln68_1_fu_4640_p2);

assign sext_ln68_2_cast_fu_4632_p3 = {{trunc_ln68_1_fu_4628_p1}, {2'd0}};

assign sext_ln68_fu_4622_p1 = $signed(add_ln68_fu_4617_p2);

assign sext_ln70_fu_4574_p1 = $signed(tmp_59_fu_4566_p3);

assign sext_ln87_1_fu_4774_p1 = j_15_fu_4757_p2;

assign sext_ln87_fu_4769_p1 = flag_0_i_reg_2439;

assign sext_ln92_fu_4779_p1 = flag_0_i_reg_2439;

assign shl_ln_fu_3387_p3 = {{l_0_reg_1866}, {10'd0}};

assign sin_basis_fu_5432_p2 = (cos_basis_fu_5377_p10 ^ 1'd1);

assign stage_fu_3591_p2 = (stage_0_i_reg_1943 + 4'd1);

assign sub_ln1311_fu_5295_p2 = ($signed(12'd0) - $signed(sext_ln1334_fu_5292_p1));

assign t1_V_fu_5560_p3 = {{p_Val2_58_reg_7658}, {4'd0}};

assign theta_address0 = zext_ln249_fu_5018_p1;

assign tmp_22_fu_4803_p4 = {{bitcast_ln87_fu_4799_p1[30:23]}};

assign tmp_24_fu_4821_p4 = {{bitcast_ln87_1_fu_4817_p1[30:23]}};

assign tmp_26_fu_3139_p3 = {{phi_ln200_reg_1705}, {phi_ln200_1_reg_1717}};

assign tmp_33_fu_3723_p3 = {{jj_0_reg_1998}, {3'd0}};

assign tmp_34_fu_3735_p3 = {{jj_0_reg_1998}, {1'd0}};

assign tmp_36_cast_fu_3774_p3 = {{add_ln230_1_fu_3769_p2}, {2'd0}};

assign tmp_37_fu_3782_p3 = {{l26_0_reg_2010}, {2'd0}};

assign tmp_38_fu_3436_p3 = {{add_ln214_fu_3431_p2}, {2'd0}};

assign tmp_39_fu_3851_p3 = {{x_0_i_reg_2032}, {2'd0}};

assign tmp_40_fu_3177_p3 = {{phi_ln201_reg_1728}, {phi_ln201_1_reg_1740}};

assign tmp_41_fu_3906_p3 = {{l_0_i_reg_2078}, {2'd0}};

assign tmp_42_fu_3653_p3 = {{j25_0_reg_1987}, {3'd0}};

assign tmp_43_fu_3665_p3 = {{j25_0_reg_1987}, {1'd0}};

assign tmp_44_fu_3215_p3 = {{phi_ln202_reg_1751}, {phi_ln202_1_reg_1763}};

assign tmp_45_cast_fu_3688_p3 = {{add_ln219_1_fu_3683_p2}, {2'd0}};

assign tmp_45_fu_3247_p3 = {{phi_ln203_reg_1774}, {phi_ln203_1_reg_1786}};

assign tmp_46_fu_3285_p3 = {{phi_ln204_reg_1797}, {phi_ln204_1_reg_1809}};

assign tmp_47_fu_3968_p3 = {{phi_ln11_reg_2089}, {phi_ln11_1_reg_2101}};

assign tmp_48_fu_3597_p4 = {{i_0_i_reg_1978[31:10]}};

assign tmp_49_fu_4120_p3 = {{i_0_i25_reg_2181}, {2'd0}};

assign tmp_50_fu_4288_p3 = {{count_0_i_reg_2273}, {2'd0}};

assign tmp_51_fu_4183_p3 = {{i17_0_i_reg_2214}, {2'd0}};

assign tmp_52_fu_4348_p3 = {{i19_0_i_reg_2285}, {2'd0}};

assign tmp_53_fu_4437_p3 = {{j_14_reg_2308}, {2'd0}};

assign tmp_54_fu_4423_p3 = {{j_14_reg_2308}, {j_14_reg_2308}};

assign tmp_55_fu_4238_p3 = {{k_0_i_reg_2262}, {2'd0}};

assign tmp_56_fu_4898_p3 = {{x_0_reg_2458}, {2'd0}};

assign tmp_57_fu_4910_p3 = {{x_0_reg_2458}, {1'd0}};

assign tmp_58_fu_4930_p3 = {{60'd0}, {or_ln241_fu_4924_p2}};

assign tmp_59_fu_4566_p3 = {{m_0_i_reg_2359}, {2'd0}};

assign tmp_60_fu_4006_p3 = {{phi_ln12_reg_2112}, {phi_ln12_1_reg_2124}};

assign tmp_61_fu_4701_p3 = {{i25_0_i_reg_2404}, {2'd0}};

assign tmp_62_fu_4044_p3 = {{phi_ln13_reg_2135}, {phi_ln13_1_reg_2147}};

assign tmp_63_fu_4492_p3 = {{j_11_fu_4476_p2}, {j_14_reg_2308}};

assign tmp_64_fu_5886_p3 = {{i_0_reg_2514}, {1'd0}};

assign tmp_65_fu_5898_p3 = {{i_0_reg_2514}, {2'd0}};

assign tmp_66_fu_5513_p4 = {{r_V_42_fu_5507_p2[74:38]}};

assign tmp_67_fu_5540_p4 = {{r_V_43_fu_5534_p2[59:31]}};

assign tmp_68_fu_6019_p3 = {{i31_0_reg_2573}, {2'd0}};

assign tmp_69_fu_5926_p3 = {{j30_0_reg_2525}, {1'd0}};

assign tmp_70_fu_6150_p3 = {{i34_0_reg_2643}, {2'd0}};

assign tmp_71_fu_6074_p3 = {{k33_0_reg_2621}, {2'd0}};

assign tmp_72_fu_4082_p3 = {{phi_ln14_reg_2158}, {phi_ln14_1_reg_2170}};

assign tmp_73_fu_4554_p3 = m_0_i_reg_2359[32'd2];

assign tmp_V_4_fu_5055_p1 = p_Val2_s_fu_5033_p1[51:0];

assign tmp_V_5_fu_5660_p4 = {{p_Val2_65_fu_5649_p1[62:52]}};

assign tmp_V_6_fu_5670_p1 = p_Val2_65_fu_5649_p1[51:0];

assign tmp_V_fu_5045_p4 = {{p_Val2_s_fu_5033_p1[62:52]}};


always @ (p_Result_52_fu_5224_p3) begin
    if (p_Result_52_fu_5224_p3[0] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd0;
    end else if (p_Result_52_fu_5224_p3[1] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd1;
    end else if (p_Result_52_fu_5224_p3[2] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd2;
    end else if (p_Result_52_fu_5224_p3[3] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd3;
    end else if (p_Result_52_fu_5224_p3[4] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd4;
    end else if (p_Result_52_fu_5224_p3[5] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd5;
    end else if (p_Result_52_fu_5224_p3[6] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd6;
    end else if (p_Result_52_fu_5224_p3[7] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd7;
    end else if (p_Result_52_fu_5224_p3[8] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd8;
    end else if (p_Result_52_fu_5224_p3[9] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd9;
    end else if (p_Result_52_fu_5224_p3[10] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd10;
    end else if (p_Result_52_fu_5224_p3[11] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd11;
    end else if (p_Result_52_fu_5224_p3[12] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd12;
    end else if (p_Result_52_fu_5224_p3[13] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd13;
    end else if (p_Result_52_fu_5224_p3[14] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd14;
    end else if (p_Result_52_fu_5224_p3[15] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd15;
    end else if (p_Result_52_fu_5224_p3[16] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd16;
    end else if (p_Result_52_fu_5224_p3[17] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd17;
    end else if (p_Result_52_fu_5224_p3[18] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd18;
    end else if (p_Result_52_fu_5224_p3[19] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd19;
    end else if (p_Result_52_fu_5224_p3[20] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd20;
    end else if (p_Result_52_fu_5224_p3[21] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd21;
    end else if (p_Result_52_fu_5224_p3[22] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd22;
    end else if (p_Result_52_fu_5224_p3[23] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd23;
    end else if (p_Result_52_fu_5224_p3[24] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd24;
    end else if (p_Result_52_fu_5224_p3[25] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd25;
    end else if (p_Result_52_fu_5224_p3[26] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd26;
    end else if (p_Result_52_fu_5224_p3[27] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd27;
    end else if (p_Result_52_fu_5224_p3[28] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd28;
    end else if (p_Result_52_fu_5224_p3[29] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd29;
    end else if (p_Result_52_fu_5224_p3[30] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd30;
    end else if (p_Result_52_fu_5224_p3[31] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd31;
    end else if (p_Result_52_fu_5224_p3[32] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd32;
    end else if (p_Result_52_fu_5224_p3[33] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd33;
    end else if (p_Result_52_fu_5224_p3[34] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd34;
    end else if (p_Result_52_fu_5224_p3[35] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd35;
    end else if (p_Result_52_fu_5224_p3[36] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd36;
    end else if (p_Result_52_fu_5224_p3[37] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd37;
    end else if (p_Result_52_fu_5224_p3[38] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd38;
    end else if (p_Result_52_fu_5224_p3[39] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd39;
    end else if (p_Result_52_fu_5224_p3[40] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd40;
    end else if (p_Result_52_fu_5224_p3[41] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd41;
    end else if (p_Result_52_fu_5224_p3[42] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd42;
    end else if (p_Result_52_fu_5224_p3[43] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd43;
    end else if (p_Result_52_fu_5224_p3[44] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd44;
    end else if (p_Result_52_fu_5224_p3[45] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd45;
    end else if (p_Result_52_fu_5224_p3[46] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd46;
    end else if (p_Result_52_fu_5224_p3[47] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd47;
    end else if (p_Result_52_fu_5224_p3[48] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd48;
    end else if (p_Result_52_fu_5224_p3[49] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd49;
    end else if (p_Result_52_fu_5224_p3[50] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd50;
    end else if (p_Result_52_fu_5224_p3[51] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd51;
    end else if (p_Result_52_fu_5224_p3[52] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd52;
    end else if (p_Result_52_fu_5224_p3[53] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd53;
    end else if (p_Result_52_fu_5224_p3[54] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd54;
    end else if (p_Result_52_fu_5224_p3[55] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd55;
    end else if (p_Result_52_fu_5224_p3[56] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd56;
    end else if (p_Result_52_fu_5224_p3[57] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd57;
    end else if (p_Result_52_fu_5224_p3[58] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd58;
    end else if (p_Result_52_fu_5224_p3[59] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd59;
    end else if (p_Result_52_fu_5224_p3[60] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd60;
    end else if (p_Result_52_fu_5224_p3[61] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd61;
    end else if (p_Result_52_fu_5224_p3[62] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd62;
    end else if (p_Result_52_fu_5224_p3[63] == 1'b1) begin
        tmp_i_i_i1_fu_5232_p3 = 64'd63;
    end else begin
        tmp_i_i_i1_fu_5232_p3 = 64'd64;
    end
end

assign trunc_ln108_fu_3464_p1 = input_assign_reg_1900[9:0];

assign trunc_ln110_fu_3500_p1 = p_0_i_i_i_reg_1934[0:0];

assign trunc_ln111_fu_3496_p1 = reversed_reg_1912[30:0];

assign trunc_ln54_fu_4455_p1 = j22_0_i_reg_2320[5:0];

assign trunc_ln57_fu_4488_p1 = j_11_fu_4476_p2[3:0];

assign trunc_ln59_fu_4519_p1 = q_0_i_reg_2338[5:0];

assign trunc_ln601_fu_5094_p1 = addr_V_fu_5071_p3[6:0];

assign trunc_ln68_1_fu_4628_p1 = j_10_fu_4601_p2[3:0];

assign trunc_ln68_fu_4613_p1 = j_10_fu_4601_p2[5:0];

assign trunc_ln745_fu_5180_p1 = p_Val2_70_fu_5174_p3[0:0];

assign trunc_ln87_1_fu_4831_p1 = bitcast_ln87_1_fu_4817_p1[22:0];

assign trunc_ln87_fu_4813_p1 = bitcast_ln87_fu_4799_p1[22:0];

assign ush_fu_5301_p3 = ((isNeg_reg_7576[0:0] === 1'b1) ? sub_ln1311_fu_5295_p2 : sext_ln1334_fu_5292_p1);

assign x_1_fu_4892_p2 = (x_0_reg_2458 + 3'd1);

assign x_2_fu_4995_p2 = (x28_0_reg_2480 + 3'd1);

assign x_fu_3841_p2 = (x_0_i_reg_2032 + 3'd1);

assign xor_ln1067_fu_4316_p2 = (count_0_i_reg_2273 ^ 3'd4);

assign xor_ln202_fu_3209_p2 = (phi_ln202_1_reg_1763 ^ 1'd1);

assign xor_ln251_fu_5863_p2 = (bitcast_ln251_fu_5859_p1 ^ 32'd2147483648);

assign xor_ln300_fu_5796_p2 = (1'd1 ^ and_ln300_2_fu_5792_p2);

assign xor_ln311_fu_5767_p2 = (icmp_ln833_2_reg_7588 ^ 1'd1);

assign xor_ln444_1_fu_4677_p2 = (bitcast_ln444_2_fu_4673_p1 ^ 32'd2147483648);

assign xor_ln444_fu_4661_p2 = (bitcast_ln444_fu_4657_p1 ^ 32'd2147483648);

assign xor_ln667_1_fu_5991_p2 = (bitcast_ln667_2_fu_5987_p1 ^ 32'd2147483648);

assign xor_ln667_2_fu_6118_p2 = (bitcast_ln667_4_fu_6114_p1 ^ 32'd2147483648);

assign xor_ln667_fu_3944_p2 = (bitcast_ln667_fu_3940_p1 ^ 32'd2147483648);

assign y_1_fu_5012_p2 = (y29_0_reg_2503 + 9'd1);

assign y_2_fu_4946_p2 = (y_0_reg_2469 + 3'd1);

assign y_fu_3869_p2 = (y_0_i_reg_2043 + 3'd1);

assign zext_ln1027_10_fu_3347_p1 = phi_ln206_1_reg_1855;

assign zext_ln1027_11_fu_3357_p1 = add_ln1027_fu_3351_p2;

assign zext_ln1027_2_fu_3185_p1 = tmp_40_fu_3177_p3;

assign zext_ln1027_3_fu_3223_p1 = tmp_44_fu_3215_p3;

assign zext_ln1027_4_fu_3255_p1 = tmp_45_fu_3247_p3;

assign zext_ln1027_5_fu_3293_p1 = tmp_46_fu_3285_p3;

assign zext_ln1027_6_fu_3976_p1 = tmp_47_fu_3968_p3;

assign zext_ln1027_7_fu_4014_p1 = tmp_60_fu_4006_p3;

assign zext_ln1027_8_fu_4052_p1 = tmp_62_fu_4044_p3;

assign zext_ln1027_9_fu_4090_p1 = tmp_72_fu_4082_p3;

assign zext_ln1027_fu_3147_p1 = tmp_26_fu_3139_p3;

assign zext_ln102_1_fu_3923_p1 = add_ln102_fu_3918_p2;

assign zext_ln102_2_fu_3934_p1 = add_ln102_1_fu_3929_p2;

assign zext_ln102_fu_3914_p1 = tmp_41_fu_3906_p3;

assign zext_ln1044_1_fu_4296_p1 = tmp_50_fu_4288_p3;

assign zext_ln1044_2_fu_4306_p1 = add_ln1044_fu_4300_p2;

assign zext_ln1044_fu_4284_p1 = count_0_i_reg_2273;

assign zext_ln104_1_fu_3875_p1 = y_0_i_reg_2043;

assign zext_ln104_2_fu_3879_p1 = y_0_i_reg_2043;

assign zext_ln104_3_fu_3888_p1 = add_ln104_fu_3883_p2;

assign zext_ln104_fu_3847_p1 = x_0_i_reg_2032;

assign zext_ln1067_fu_4326_p1 = $unsigned(sext_ln1067_fu_4322_p1);

assign zext_ln108_fu_3468_p1 = input_assign_reg_1900;

assign zext_ln112_fu_3522_p1 = input_assign_1_fu_3512_p4;

assign zext_ln1146_1_fu_5583_p1 = add_ln1146_1_reg_7673;

assign zext_ln1146_fu_5550_p1 = tmp_67_fu_5540_p4;

assign zext_ln1253_fu_5244_p1 = Mx_zeros_V_fu_5240_p1;

assign zext_ln126_fu_3531_p1 = input_assign_reg_1900;

assign zext_ln127_fu_3537_p1 = reversed_reg_1912;

assign zext_ln1287_fu_5312_p1 = $unsigned(sext_ln1311_fu_5308_p1);

assign zext_ln159_fu_3543_p1 = stage_0_i_reg_1943;

assign zext_ln161_fu_3569_p1 = DFTpts_reg_6451;

assign zext_ln205_fu_3317_p1 = phi_ln205_reg_1820;

assign zext_ln212_fu_3395_p1 = l_0_reg_1866;

assign zext_ln213_1_fu_3411_p1 = n_0_reg_1877;

assign zext_ln213_fu_3415_p1 = j_0_reg_1888;

assign zext_ln214_1_fu_3453_p1 = add_ln214_1_fu_3448_p2;

assign zext_ln214_2_fu_3458_p1 = j_0_reg_1888;

assign zext_ln214_fu_3444_p1 = tmp_38_fu_3436_p3;

assign zext_ln219_1_fu_3661_p1 = tmp_42_fu_3653_p3;

assign zext_ln219_2_fu_3673_p1 = tmp_43_fu_3665_p3;

assign zext_ln219_3_fu_3701_p1 = add_ln219_2_reg_6546;

assign zext_ln219_fu_3647_p1 = j25_0_reg_1987;

assign zext_ln21_fu_4128_p1 = tmp_49_fu_4120_p3;

assign zext_ln226_fu_3718_p1 = jj_0_reg_1998;

assign zext_ln228_fu_3790_p1 = tmp_37_fu_3782_p3;

assign zext_ln22_1_fu_4153_p1 = add_ln22_fu_4148_p2;

assign zext_ln22_fu_4144_p1 = j_0_i26_reg_2192;

assign zext_ln230_1_fu_3743_p1 = tmp_34_fu_3735_p3;

assign zext_ln230_2_fu_3765_p1 = l26_0_reg_2010;

assign zext_ln230_3_fu_3806_p1 = n27_0_reg_2021;

assign zext_ln230_4_fu_3810_p1 = n27_0_reg_2021;

assign zext_ln230_5_fu_3819_p1 = add_ln230_2_fu_3814_p2;

assign zext_ln230_6_fu_3830_p1 = add_ln230_3_reg_6620;

assign zext_ln230_fu_3731_p1 = tmp_33_fu_3723_p3;

assign zext_ln238_fu_4952_p1 = y_0_reg_2469;

assign zext_ln239_1_fu_4918_p1 = tmp_57_fu_4910_p3;

assign zext_ln239_2_fu_4957_p1 = y_0_reg_2469;

assign zext_ln239_3_fu_4966_p1 = add_ln239_reg_7416;

assign zext_ln239_fu_4906_p1 = tmp_56_fu_4898_p3;

assign zext_ln247_fu_5001_p1 = x28_0_reg_2480;

assign zext_ln249_fu_5018_p1 = y29_0_reg_2503;

assign zext_ln250_1_fu_5854_p1 = add_ln250_reg_7475;

assign zext_ln250_fu_5023_p1 = y29_0_reg_2503;

assign zext_ln255_fu_5906_p1 = tmp_65_fu_5898_p3;

assign zext_ln259_1_fu_5961_p1 = k_0_reg_2562;

assign zext_ln259_2_fu_5970_p1 = add_ln259_fu_5965_p2;

assign zext_ln259_3_fu_5981_p1 = add_ln259_1_fu_5976_p2;

assign zext_ln259_fu_5922_p1 = j30_0_reg_2525;

assign zext_ln261_1_fu_5934_p1 = tmp_69_fu_5926_p3;

assign zext_ln261_2_fu_5943_p1 = add_ln261_fu_5938_p2;

assign zext_ln261_fu_5894_p1 = tmp_64_fu_5886_p3;

assign zext_ln265_fu_6027_p1 = tmp_68_fu_6019_p3;

assign zext_ln269_1_fu_6091_p1 = add_ln269_fu_6086_p2;

assign zext_ln269_2_fu_6108_p1 = add_ln269_1_fu_6103_p2;

assign zext_ln269_fu_6082_p1 = tmp_71_fu_6074_p3;

assign zext_ln271_1_fu_6043_p1 = j32_0_reg_2584;

assign zext_ln271_2_fu_6047_p1 = j32_0_reg_2584;

assign zext_ln271_3_fu_6056_p1 = add_ln271_fu_6051_p2;

assign zext_ln271_fu_6015_p1 = i31_0_reg_2573;

assign zext_ln277_fu_6158_p1 = tmp_70_fu_6150_p3;

assign zext_ln278_1_fu_6146_p1 = i34_0_reg_2643;

assign zext_ln278_2_fu_6174_p1 = k35_0_reg_2678;

assign zext_ln278_3_fu_6183_p1 = add_ln278_fu_6178_p2;

assign zext_ln278_4_fu_6200_p1 = add_ln278_1_fu_6195_p2;

assign zext_ln278_fu_6142_p1 = i34_0_reg_2643;

assign zext_ln285_fu_6218_p1 = i36_0_reg_2700;

assign zext_ln30_fu_4191_p1 = tmp_51_fu_4183_p3;

assign zext_ln34_1_fu_4246_p1 = tmp_55_fu_4238_p3;

assign zext_ln34_2_fu_4255_p1 = add_ln34_fu_4250_p2;

assign zext_ln34_3_fu_4266_p1 = add_ln34_1_fu_4261_p2;

assign zext_ln34_fu_4234_p1 = k_0_i_reg_2262;

assign zext_ln36_1_fu_4216_p1 = add_ln36_fu_4211_p2;

assign zext_ln36_fu_4207_p1 = j18_0_i_reg_2225;

assign zext_ln41_fu_4311_p1 = count_0_i_reg_2273;

assign zext_ln45_1_fu_4356_p1 = tmp_52_fu_4348_p3;

assign zext_ln45_2_fu_4366_p1 = add_ln45_fu_4360_p2;

assign zext_ln45_fu_4344_p1 = i19_0_i_reg_2285;

assign zext_ln47_1_fu_4401_p1 = add_ln47_fu_4396_p2;

assign zext_ln47_fu_4392_p1 = j20_0_i_reg_2297;

assign zext_ln498_fu_5445_p1 = p_Result_53_fu_5438_p3;

assign zext_ln51_fu_4407_p1 = j_14_reg_2308;

assign zext_ln52_1_fu_4431_p1 = tmp_54_fu_4423_p3;

assign zext_ln52_fu_4445_p1 = tmp_53_fu_4437_p3;

assign zext_ln635_fu_5089_p1 = p_Result_i_i_i_fu_5079_p4;

assign zext_ln655_fu_5264_p1 = Mx_zeros_V_fu_5240_p1;

assign zext_ln662_fu_5523_p1 = tmp_66_fu_5513_p4;

assign zext_ln68_fu_4562_p1 = $unsigned(m_0_i_reg_2359);

assign zext_ln70_fu_4584_p1 = add_ln70_fu_4578_p2;

assign zext_ln72_fu_4595_p1 = add_ln72_fu_4590_p2;

assign zext_ln744_fu_5098_p1 = trunc_ln601_reg_7520;

assign zext_ln76_1_fu_4718_p1 = add_ln76_fu_4713_p2;

assign zext_ln76_fu_4709_p1 = tmp_61_fu_4701_p3;

assign zext_ln82_fu_4736_p1 = i_0_i31_reg_2415;

assign zext_ln85_fu_4741_p1 = flag_reg_2427;

assign zext_ln87_1_fu_4794_p1 = sort_index_q1;

assign zext_ln87_fu_4789_p1 = sort_index_q0;

assign zext_ln93_fu_4784_p1 = flag_reg_2427;

assign zext_ln99_fu_3859_p1 = tmp_39_fu_3851_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_6337[9:0] <= 10'b0000000000;
    zext_ln212_reg_6342[14:4] <= 11'b00000000000;
    zext_ln213_1_reg_6355[16:3] <= 14'b00000000000000;
    zext_ln108_reg_6379[31:11] <= 21'b000000000000000000000;
    zext_ln161_reg_6462[31:11] <= 21'b000000000000000000000;
    numBF_reg_6473[31:10] <= 22'b0000000000000000000000;
    i_5_cast_reg_6478[31:10] <= 22'b0000000000000000000000;
    add_ln230_reg_6579[0] <= 1'b0;
    tmp_36_cast_reg_6592[1:0] <= 2'b00;
    zext_ln228_reg_6597[1:0] <= 2'b00;
    zext_ln228_reg_6597[6] <= 1'b0;
    zext_ln104_reg_6633[6:3] <= 4'b0000;
    zext_ln99_reg_6638[1:0] <= 2'b00;
    zext_ln99_reg_6638[5] <= 1'b0;
    zext_ln104_1_reg_6651[6:3] <= 4'b0000;
    zext_ln21_reg_6795[1:0] <= 2'b00;
    zext_ln21_reg_6795[5] <= 1'b0;
    zext_ln22_1_reg_6808[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln30_reg_6842[1:0] <= 2'b00;
    zext_ln30_reg_6842[5] <= 1'b0;
    zext_ln36_reg_6856[5:3] <= 3'b000;
    zext_ln1044_reg_6941[5:3] <= 3'b000;
    zext_ln45_1_reg_6976[1:0] <= 2'b00;
    zext_ln45_1_reg_6976[5] <= 1'b0;
    zext_ln47_1_reg_7013[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln51_reg_7029[31:2] <= 30'b000000000000000000000000000000;
    zext_ln52_reg_7054[1:0] <= 2'b00;
    zext_ln52_reg_7054[5:4] <= 2'b00;
    sext_ln57_cast_reg_7101[1:0] <= 2'b00;
    sext_ln70_reg_7147[1:0] <= 2'b00;
    zext_ln239_reg_7383[1:0] <= 2'b00;
    zext_ln239_reg_7383[5] <= 1'b0;
    Un_M_real_addr_1_reg_7388[0] <= 1'b0;
    Un_M_real_addr_2_reg_7393[0] <= 1'b1;
    Un_M_imag_addr_1_reg_7398[0] <= 1'b0;
    Un_M_imag_addr_2_reg_7403[0] <= 1'b1;
    r_V_22_reg_7605[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln261_reg_7722[0] <= 1'b0;
    zext_ln261_reg_7722[4] <= 1'b0;
    zext_ln255_reg_7727[1:0] <= 2'b00;
    zext_ln255_reg_7727[5] <= 1'b0;
    zext_ln261_1_reg_7740[0] <= 1'b0;
    zext_ln261_1_reg_7740[4] <= 1'b0;
    zext_ln271_reg_7825[10:9] <= 2'b00;
    zext_ln265_reg_7830[1:0] <= 2'b00;
    zext_ln265_reg_7830[11] <= 1'b0;
    zext_ln271_1_reg_7843[5:3] <= 3'b000;
    zext_ln278_reg_7915[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln278_1_reg_7921[10:9] <= 2'b00;
    zext_ln277_reg_7926[1:0] <= 2'b00;
    zext_ln277_reg_7926[11] <= 1'b0;
    zext_ln285_reg_8015[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //music
