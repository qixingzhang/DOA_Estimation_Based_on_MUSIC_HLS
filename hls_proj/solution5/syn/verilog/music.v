// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="music,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=50.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=43.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=51,HLS_SYN_DSP=195,HLS_SYN_FF=17489,HLS_SYN_LUT=45451,HLS_VERSION=2019_1}" *)

module music (
        ap_clk,
        ap_rst_n,
        m_axi_data_AWVALID,
        m_axi_data_AWREADY,
        m_axi_data_AWADDR,
        m_axi_data_AWID,
        m_axi_data_AWLEN,
        m_axi_data_AWSIZE,
        m_axi_data_AWBURST,
        m_axi_data_AWLOCK,
        m_axi_data_AWCACHE,
        m_axi_data_AWPROT,
        m_axi_data_AWQOS,
        m_axi_data_AWREGION,
        m_axi_data_AWUSER,
        m_axi_data_WVALID,
        m_axi_data_WREADY,
        m_axi_data_WDATA,
        m_axi_data_WSTRB,
        m_axi_data_WLAST,
        m_axi_data_WID,
        m_axi_data_WUSER,
        m_axi_data_ARVALID,
        m_axi_data_ARREADY,
        m_axi_data_ARADDR,
        m_axi_data_ARID,
        m_axi_data_ARLEN,
        m_axi_data_ARSIZE,
        m_axi_data_ARBURST,
        m_axi_data_ARLOCK,
        m_axi_data_ARCACHE,
        m_axi_data_ARPROT,
        m_axi_data_ARQOS,
        m_axi_data_ARREGION,
        m_axi_data_ARUSER,
        m_axi_data_RVALID,
        m_axi_data_RREADY,
        m_axi_data_RDATA,
        m_axi_data_RLAST,
        m_axi_data_RID,
        m_axi_data_RUSER,
        m_axi_data_RRESP,
        m_axi_data_BVALID,
        m_axi_data_BREADY,
        m_axi_data_BRESP,
        m_axi_data_BID,
        m_axi_data_BUSER,
        P_sm_TDATA,
        P_sm_TVALID,
        P_sm_TREADY,
        P_sm_TUSER,
        P_sm_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 234'd1;
parameter    ap_ST_fsm_state2 = 234'd2;
parameter    ap_ST_fsm_state3 = 234'd4;
parameter    ap_ST_fsm_state4 = 234'd8;
parameter    ap_ST_fsm_state5 = 234'd16;
parameter    ap_ST_fsm_state6 = 234'd32;
parameter    ap_ST_fsm_state7 = 234'd64;
parameter    ap_ST_fsm_state8 = 234'd128;
parameter    ap_ST_fsm_state9 = 234'd256;
parameter    ap_ST_fsm_state10 = 234'd512;
parameter    ap_ST_fsm_state11 = 234'd1024;
parameter    ap_ST_fsm_state12 = 234'd2048;
parameter    ap_ST_fsm_state13 = 234'd4096;
parameter    ap_ST_fsm_state14 = 234'd8192;
parameter    ap_ST_fsm_state15 = 234'd16384;
parameter    ap_ST_fsm_state16 = 234'd32768;
parameter    ap_ST_fsm_state17 = 234'd65536;
parameter    ap_ST_fsm_state18 = 234'd131072;
parameter    ap_ST_fsm_state19 = 234'd262144;
parameter    ap_ST_fsm_state20 = 234'd524288;
parameter    ap_ST_fsm_state21 = 234'd1048576;
parameter    ap_ST_fsm_state22 = 234'd2097152;
parameter    ap_ST_fsm_state23 = 234'd4194304;
parameter    ap_ST_fsm_state24 = 234'd8388608;
parameter    ap_ST_fsm_state25 = 234'd16777216;
parameter    ap_ST_fsm_state26 = 234'd33554432;
parameter    ap_ST_fsm_state27 = 234'd67108864;
parameter    ap_ST_fsm_state28 = 234'd134217728;
parameter    ap_ST_fsm_state29 = 234'd268435456;
parameter    ap_ST_fsm_state30 = 234'd536870912;
parameter    ap_ST_fsm_state31 = 234'd1073741824;
parameter    ap_ST_fsm_state32 = 234'd2147483648;
parameter    ap_ST_fsm_state33 = 234'd4294967296;
parameter    ap_ST_fsm_state34 = 234'd8589934592;
parameter    ap_ST_fsm_state35 = 234'd17179869184;
parameter    ap_ST_fsm_state36 = 234'd34359738368;
parameter    ap_ST_fsm_state37 = 234'd68719476736;
parameter    ap_ST_fsm_state38 = 234'd137438953472;
parameter    ap_ST_fsm_state39 = 234'd274877906944;
parameter    ap_ST_fsm_state40 = 234'd549755813888;
parameter    ap_ST_fsm_state41 = 234'd1099511627776;
parameter    ap_ST_fsm_state42 = 234'd2199023255552;
parameter    ap_ST_fsm_state43 = 234'd4398046511104;
parameter    ap_ST_fsm_state44 = 234'd8796093022208;
parameter    ap_ST_fsm_state45 = 234'd17592186044416;
parameter    ap_ST_fsm_state46 = 234'd35184372088832;
parameter    ap_ST_fsm_state47 = 234'd70368744177664;
parameter    ap_ST_fsm_state48 = 234'd140737488355328;
parameter    ap_ST_fsm_state49 = 234'd281474976710656;
parameter    ap_ST_fsm_state50 = 234'd562949953421312;
parameter    ap_ST_fsm_state51 = 234'd1125899906842624;
parameter    ap_ST_fsm_state52 = 234'd2251799813685248;
parameter    ap_ST_fsm_state53 = 234'd4503599627370496;
parameter    ap_ST_fsm_state54 = 234'd9007199254740992;
parameter    ap_ST_fsm_state55 = 234'd18014398509481984;
parameter    ap_ST_fsm_state56 = 234'd36028797018963968;
parameter    ap_ST_fsm_state57 = 234'd72057594037927936;
parameter    ap_ST_fsm_state58 = 234'd144115188075855872;
parameter    ap_ST_fsm_state59 = 234'd288230376151711744;
parameter    ap_ST_fsm_state60 = 234'd576460752303423488;
parameter    ap_ST_fsm_state61 = 234'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 234'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 234'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 234'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 234'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 234'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 234'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 234'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 234'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 234'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 234'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 234'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 234'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 234'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 234'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 234'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 234'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 234'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 234'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 234'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 234'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 234'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 234'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 234'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 234'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 234'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 234'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 234'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 234'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 234'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 234'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 234'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 234'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 234'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 234'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 234'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 234'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 234'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 234'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 234'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 234'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 234'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 234'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 234'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 234'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 234'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 234'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 234'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 234'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 234'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 234'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 234'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 234'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 234'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 234'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 234'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 234'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 234'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 234'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 234'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 234'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 234'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 234'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 234'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 234'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 234'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 234'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 234'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 234'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 234'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 234'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 234'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 234'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 234'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 234'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 234'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 234'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 234'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 234'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 234'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 234'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 234'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 234'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 234'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 234'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 234'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 234'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 234'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 234'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 234'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 234'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 234'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 234'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 234'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 234'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 234'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 234'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 234'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 234'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 234'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 234'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 234'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 234'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 234'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 234'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 234'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 234'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 234'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 234'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 234'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 234'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 234'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 234'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 234'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 234'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 234'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 234'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 234'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 234'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 234'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 234'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 234'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 234'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 234'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 234'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 234'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 234'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 234'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 234'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 234'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 234'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 234'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 234'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 234'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 234'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 234'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 234'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 234'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 234'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 234'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 234'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 234'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 234'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 234'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 234'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 234'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 234'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 234'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 234'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 234'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 234'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 234'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 234'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 234'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 234'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 234'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 234'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 234'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 234'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 234'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 234'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 234'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 234'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 234'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 234'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 234'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 234'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 234'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 234'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 234'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 234'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 234'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 234'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 234'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_USER_VALUE = 0;
parameter    C_M_AXI_DATA_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_data_AWVALID;
input   m_axi_data_AWREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_AWADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_AWID;
output  [7:0] m_axi_data_AWLEN;
output  [2:0] m_axi_data_AWSIZE;
output  [1:0] m_axi_data_AWBURST;
output  [1:0] m_axi_data_AWLOCK;
output  [3:0] m_axi_data_AWCACHE;
output  [2:0] m_axi_data_AWPROT;
output  [3:0] m_axi_data_AWQOS;
output  [3:0] m_axi_data_AWREGION;
output  [C_M_AXI_DATA_AWUSER_WIDTH - 1:0] m_axi_data_AWUSER;
output   m_axi_data_WVALID;
input   m_axi_data_WREADY;
output  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_WDATA;
output  [C_M_AXI_DATA_WSTRB_WIDTH - 1:0] m_axi_data_WSTRB;
output   m_axi_data_WLAST;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_WID;
output  [C_M_AXI_DATA_WUSER_WIDTH - 1:0] m_axi_data_WUSER;
output   m_axi_data_ARVALID;
input   m_axi_data_ARREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_ARADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_ARID;
output  [7:0] m_axi_data_ARLEN;
output  [2:0] m_axi_data_ARSIZE;
output  [1:0] m_axi_data_ARBURST;
output  [1:0] m_axi_data_ARLOCK;
output  [3:0] m_axi_data_ARCACHE;
output  [2:0] m_axi_data_ARPROT;
output  [3:0] m_axi_data_ARQOS;
output  [3:0] m_axi_data_ARREGION;
output  [C_M_AXI_DATA_ARUSER_WIDTH - 1:0] m_axi_data_ARUSER;
input   m_axi_data_RVALID;
output   m_axi_data_RREADY;
input  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_RDATA;
input   m_axi_data_RLAST;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_RID;
input  [C_M_AXI_DATA_RUSER_WIDTH - 1:0] m_axi_data_RUSER;
input  [1:0] m_axi_data_RRESP;
input   m_axi_data_BVALID;
output   m_axi_data_BREADY;
input  [1:0] m_axi_data_BRESP;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_BID;
input  [C_M_AXI_DATA_BUSER_WIDTH - 1:0] m_axi_data_BUSER;
output  [31:0] P_sm_TDATA;
output   P_sm_TVALID;
input   P_sm_TREADY;
output  [0:0] P_sm_TUSER;
output  [0:0] P_sm_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [233:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] data_re;
wire   [31:0] data_im;
reg   [31:0] P_sm_data_1_data_out;
reg    P_sm_data_1_vld_in;
wire    P_sm_data_1_vld_out;
wire    P_sm_data_1_ack_in;
wire    P_sm_data_1_ack_out;
reg   [31:0] P_sm_data_1_payload_A;
reg   [31:0] P_sm_data_1_payload_B;
reg    P_sm_data_1_sel_rd;
reg    P_sm_data_1_sel_wr;
wire    P_sm_data_1_sel;
wire    P_sm_data_1_load_A;
wire    P_sm_data_1_load_B;
reg   [1:0] P_sm_data_1_state;
wire    P_sm_data_1_state_cmp_full;
reg   [0:0] P_sm_user_V_1_data_out;
reg    P_sm_user_V_1_vld_in;
wire    P_sm_user_V_1_vld_out;
wire    P_sm_user_V_1_ack_in;
wire    P_sm_user_V_1_ack_out;
reg   [0:0] P_sm_user_V_1_payload_A;
reg   [0:0] P_sm_user_V_1_payload_B;
reg    P_sm_user_V_1_sel_rd;
reg    P_sm_user_V_1_sel_wr;
wire    P_sm_user_V_1_sel;
wire    P_sm_user_V_1_load_A;
wire    P_sm_user_V_1_load_B;
reg   [1:0] P_sm_user_V_1_state;
wire    P_sm_user_V_1_state_cmp_full;
reg   [0:0] P_sm_last_V_1_data_out;
reg    P_sm_last_V_1_vld_in;
wire    P_sm_last_V_1_vld_out;
wire    P_sm_last_V_1_ack_in;
wire    P_sm_last_V_1_ack_out;
reg   [0:0] P_sm_last_V_1_payload_A;
reg   [0:0] P_sm_last_V_1_payload_B;
reg    P_sm_last_V_1_sel_rd;
reg    P_sm_last_V_1_sel_wr;
wire    P_sm_last_V_1_sel;
wire    P_sm_last_V_1_load_A;
wire    P_sm_last_V_1_load_B;
reg   [1:0] P_sm_last_V_1_state;
wire    P_sm_last_V_1_state_cmp_full;
wire   [9:0] fc_address0;
reg    fc_ce0;
wire   [31:0] fc_q0;
wire   [1:0] p_address0;
reg    p_ce0;
wire   [31:0] p_q0;
wire   [8:0] theta_address0;
reg    theta_ce0;
wire   [31:0] theta_q0;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
reg    data_blk_n_AR;
wire    ap_CS_fsm_state17;
reg    data_blk_n_R;
wire    ap_CS_fsm_state24;
reg    data_blk_n_AW;
wire    ap_CS_fsm_state53;
reg    data_blk_n_W;
wire    ap_CS_fsm_state54;
reg    data_blk_n_B;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state83;
reg    P_sm_TDATA_blk_n;
wire    ap_CS_fsm_state233;
wire    ap_CS_fsm_state234;
reg    data_AWVALID;
wire    data_AWREADY;
reg   [31:0] data_AWADDR;
reg    data_WVALID;
wire    data_WREADY;
reg   [31:0] data_WDATA;
reg    data_ARVALID;
wire    data_ARREADY;
reg   [31:0] data_ARADDR;
wire    data_RVALID;
reg    data_RREADY;
wire   [31:0] data_RDATA;
wire    data_RLAST;
wire   [0:0] data_RID;
wire   [0:0] data_RUSER;
wire   [1:0] data_RRESP;
wire    data_BVALID;
reg    data_BREADY;
wire   [1:0] data_BRESP;
wire   [0:0] data_BID;
wire   [0:0] data_BUSER;
wire   [63:0] grp_fu_2944_p2;
reg   [63:0] reg_2953;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state71;
wire   [31:0] grp_fu_2914_p1;
reg   [31:0] reg_2958;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state72;
wire   [31:0] grp_fu_2765_p2;
reg   [31:0] reg_2964;
wire    ap_CS_fsm_state42;
wire    grp_sin_or_cos_float_s_fu_2726_ap_ready;
wire    grp_sin_or_cos_float_s_fu_2726_ap_done;
wire    grp_sin_or_cos_float_s_fu_2742_ap_ready;
wire    grp_sin_or_cos_float_s_fu_2742_ap_done;
reg    ap_block_state42_on_subcall_done;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state146;
wire    ap_CS_fsm_state153;
wire    ap_CS_fsm_state158;
wire    ap_CS_fsm_state166;
wire    ap_CS_fsm_state174;
wire    ap_CS_fsm_state212;
wire    ap_CS_fsm_state220;
wire    ap_CS_fsm_state227;
wire   [31:0] FFT_Buffer_re_q1;
reg   [31:0] reg_2974;
wire    ap_CS_fsm_state44;
wire   [31:0] FFT_Buffer_re_q0;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state50;
wire   [31:0] FFT_Buffer_im_q1;
reg   [31:0] reg_2983;
wire   [31:0] FFT_Buffer_im_q0;
wire   [31:0] grp_fu_2803_p2;
reg   [31:0] reg_2992;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state152;
wire    ap_CS_fsm_state157;
wire    ap_CS_fsm_state165;
wire    ap_CS_fsm_state173;
wire    ap_CS_fsm_state177;
wire    ap_CS_fsm_state197;
wire    ap_CS_fsm_state211;
wire    ap_CS_fsm_state219;
wire    ap_CS_fsm_state226;
wire   [31:0] grp_fu_2809_p2;
wire   [31:0] grp_fu_2815_p2;
wire   [31:0] grp_fu_2821_p2;
reg   [31:0] reg_3013;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state92;
wire   [31:0] grp_fu_2770_p2;
reg   [31:0] reg_3019;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state178;
wire   [63:0] grp_fu_2918_p1;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state199;
wire   [31:0] temp_mat_M_real_q0;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state218;
wire   [31:0] temp_mat_M_imag_q0;
reg   [31:0] reg_3039;
wire   [31:0] Rx_temp_M_real_q0;
reg   [31:0] reg_3046;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state156;
wire   [31:0] Rx_temp_M_imag_q0;
reg   [31:0] reg_3056;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state147;
reg   [31:0] reg_3084;
wire   [31:0] U_M_real_q0;
wire    ap_CS_fsm_state176;
wire   [31:0] U_M_imag_q0;
wire   [31:0] a_theta_M_real_q0;
wire    ap_CS_fsm_state225;
wire   [31:0] w_q0;
wire    ap_CS_fsm_state230;
wire   [30:0] p_cast19_fu_3128_p1;
reg   [30:0] p_cast19_reg_6286;
wire   [30:0] p_cast_fu_3142_p1;
reg   [30:0] p_cast_reg_6292;
wire   [3:0] add_ln291_fu_3146_p2;
reg   [3:0] add_ln291_reg_6299;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln291_1_fu_3152_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] add_ln292_fu_3184_p2;
reg   [1:0] add_ln292_reg_6315;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln292_1_fu_3190_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] add_ln293_fu_3222_p2;
reg   [1:0] add_ln293_reg_6331;
wire    ap_CS_fsm_state6;
wire   [0:0] xor_ln293_fu_3228_p2;
wire    ap_CS_fsm_state7;
wire   [1:0] add_ln294_fu_3254_p2;
reg   [1:0] add_ln294_reg_6344;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln294_1_fu_3260_p2;
wire    ap_CS_fsm_state9;
wire   [8:0] add_ln295_fu_3292_p2;
reg   [8:0] add_ln295_reg_6360;
wire    ap_CS_fsm_state10;
wire   [1:0] add_ln295_1_fu_3298_p2;
wire    ap_CS_fsm_state11;
wire   [10:0] add_ln296_2_fu_3330_p2;
reg   [10:0] add_ln296_2_reg_6376;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln296_fu_3336_p2;
reg   [1:0] add_ln296_reg_6381;
wire   [8:0] add_ln296_1_fu_3342_p2;
wire    ap_CS_fsm_state13;
wire   [3:0] l_fu_3382_p2;
reg   [3:0] l_reg_6400;
wire    ap_CS_fsm_state14;
wire   [13:0] shl_ln_fu_3388_p3;
reg   [13:0] shl_ln_reg_6405;
wire   [0:0] icmp_ln302_fu_3376_p2;
wire   [2:0] n_1_fu_3402_p2;
reg   [2:0] n_1_reg_6414;
wire    ap_CS_fsm_state15;
wire   [16:0] zext_ln304_1_fu_3408_p1;
reg   [16:0] zext_ln304_1_reg_6419;
wire   [0:0] icmp_ln303_fu_3396_p2;
wire   [10:0] j_fu_3422_p2;
reg   [10:0] j_reg_6428;
wire    ap_CS_fsm_state16;
wire   [30:0] add_ln305_2_fu_3454_p2;
reg   [30:0] add_ln305_2_reg_6433;
wire   [0:0] icmp_ln304_fu_3416_p2;
reg   [31:0] data_addr_read_reg_6444;
wire   [9:0] trunc_ln120_fu_3475_p1;
wire    ap_CS_fsm_state26;
wire   [31:0] zext_ln120_fu_3479_p1;
reg   [31:0] zext_ln120_reg_6454;
wire   [10:0] i_6_fu_3489_p2;
reg   [10:0] i_6_reg_6462;
wire   [3:0] i_4_fu_3501_p2;
wire    ap_CS_fsm_state27;
wire   [31:0] rev_fu_3515_p3;
wire   [0:0] icmp_ln123_fu_3495_p2;
wire   [9:0] zext_ln125_fu_3533_p1;
wire   [0:0] icmp_ln160_fu_3537_p2;
reg   [0:0] icmp_ln160_reg_6485;
reg   [9:0] FFT_Buffer_re_addr_1_reg_6489;
reg   [9:0] FFT_Buffer_re_addr_2_reg_6495;
reg   [9:0] FFT_Buffer_im_addr_1_reg_6501;
reg   [9:0] FFT_Buffer_im_addr_2_reg_6507;
reg   [31:0] temp_reg_6513;
wire    ap_CS_fsm_state28;
reg   [31:0] temp_1_reg_6518;
wire   [31:0] zext_ln227_fu_3570_p1;
reg   [31:0] zext_ln227_reg_6526;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln225_fu_3558_p2;
reg   [9:0] trunc_ln6_reg_6532;
wire   [63:0] grp_fu_2950_p1;
reg   [63:0] tmp_4_reg_6538;
wire    ap_CS_fsm_state31;
wire   [31:0] numBF_fu_3585_p1;
reg   [31:0] numBF_reg_6543;
wire   [31:0] i_5_cast_fu_3588_p1;
reg   [31:0] i_5_cast_reg_6548;
wire    ap_CS_fsm_state41;
wire   [9:0] j_2_fu_3597_p2;
reg   [9:0] j_2_reg_6556;
wire   [3:0] stage_fu_3603_p2;
wire   [0:0] icmp_ln235_fu_3592_p2;
wire   [31:0] grp_sin_or_cos_float_s_fu_2726_ap_return;
reg   [31:0] c_reg_6566;
wire   [31:0] grp_sin_or_cos_float_s_fu_2742_ap_return;
reg   [31:0] s_reg_6572;
reg   [9:0] FFT_Buffer_re_addr_4_reg_6581;
wire    ap_CS_fsm_state43;
wire   [0:0] icmp_ln243_fu_3619_p2;
reg   [9:0] FFT_Buffer_im_addr_4_reg_6586;
reg   [9:0] FFT_Buffer_re_addr_5_reg_6591;
reg   [9:0] FFT_Buffer_im_addr_5_reg_6597;
wire   [31:0] i_7_fu_3642_p2;
reg   [31:0] i_7_reg_6603;
wire   [10:0] j_1_fu_3657_p2;
reg   [10:0] j_1_reg_6611;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln309_fu_3651_p2;
wire   [30:0] zext_ln310_2_fu_3691_p1;
reg   [30:0] zext_ln310_2_reg_6621;
wire   [30:0] add_ln310_2_fu_3695_p2;
reg   [30:0] add_ln310_2_reg_6626;
wire   [30:0] add_ln311_fu_3710_p2;
reg   [30:0] add_ln311_reg_6642;
reg    ap_block_state54_io;
wire   [13:0] zext_ln316_fu_3724_p1;
reg   [13:0] zext_ln316_reg_6653;
wire    ap_CS_fsm_state61;
wire   [10:0] jj_fu_3734_p2;
reg   [10:0] jj_reg_6661;
wire   [0:0] icmp_ln316_fu_3728_p2;
wire   [63:0] grp_fu_2937_p2;
reg   [63:0] tmp_s_reg_6671;
wire    ap_CS_fsm_state63;
wire   [3:0] l_1_fu_3751_p2;
reg   [3:0] l_1_reg_6679;
wire    ap_CS_fsm_state73;
wire   [6:0] zext_ln321_fu_3765_p1;
reg   [6:0] zext_ln321_reg_6684;
wire   [0:0] icmp_ln318_fu_3745_p2;
wire   [16:0] zext_ln319_fu_3790_p1;
reg   [16:0] zext_ln319_reg_6689;
wire   [2:0] n_fu_3800_p2;
reg   [2:0] n_reg_6697;
wire    ap_CS_fsm_state74;
wire   [30:0] add_ln321_2_fu_3823_p2;
reg   [30:0] add_ln321_2_reg_6702;
wire   [0:0] icmp_ln319_fu_3794_p2;
wire   [30:0] add_ln322_fu_3828_p2;
reg   [30:0] add_ln322_reg_6707;
wire   [6:0] add_ln321_3_fu_3833_p2;
reg   [6:0] add_ln321_3_reg_6712;
reg   [31:0] data_addr_1_read_reg_6729;
reg   [31:0] data_addr_2_read_reg_6734;
wire   [2:0] x_fu_3869_p2;
reg   [2:0] x_reg_6742;
wire    ap_CS_fsm_state85;
wire   [6:0] zext_ln116_fu_3875_p1;
reg   [6:0] zext_ln116_reg_6747;
wire   [0:0] icmp_ln109_fu_3863_p2;
wire   [5:0] zext_ln110_fu_3887_p1;
reg   [5:0] zext_ln110_reg_6752;
wire   [2:0] y_fu_3897_p2;
reg   [2:0] y_reg_6760;
wire    ap_CS_fsm_state86;
wire   [6:0] zext_ln116_1_fu_3903_p1;
reg   [6:0] zext_ln116_1_reg_6765;
wire   [0:0] icmp_ln110_fu_3891_p2;
reg   [3:0] temp_mat_M_real_add_1_reg_6770;
reg   [3:0] temp_mat_M_imag_add_1_reg_6775;
wire   [3:0] l_2_fu_3928_p2;
reg   [3:0] l_2_reg_6783;
wire    ap_CS_fsm_state87;
wire   [0:0] icmp_ln112_fu_3922_p2;
wire   [31:0] Autocorr_Buffer_M_r_q0;
wire    ap_CS_fsm_state88;
wire   [31:0] p_t_imag_fu_3978_p1;
wire   [31:0] Autocorr_Buffer_M_r_q1;
wire   [31:0] Autocorr_Buffer_M_i_q1;
wire   [1:0] add_ln13_fu_3984_p2;
reg   [1:0] add_ln13_reg_6837;
wire    ap_CS_fsm_state100;
wire   [1:0] add_ln13_1_fu_3990_p2;
wire    ap_CS_fsm_state101;
wire   [1:0] add_ln14_fu_4022_p2;
reg   [1:0] add_ln14_reg_6853;
wire    ap_CS_fsm_state102;
wire   [1:0] add_ln14_1_fu_4028_p2;
wire    ap_CS_fsm_state103;
wire   [1:0] add_ln15_fu_4060_p2;
reg   [1:0] add_ln15_reg_6869;
wire    ap_CS_fsm_state104;
wire   [1:0] add_ln15_1_fu_4066_p2;
wire    ap_CS_fsm_state105;
wire   [1:0] add_ln16_fu_4098_p2;
reg   [1:0] add_ln16_reg_6885;
wire    ap_CS_fsm_state106;
wire   [1:0] add_ln16_1_fu_4104_p2;
wire    ap_CS_fsm_state107;
wire   [2:0] i_8_fu_4142_p2;
reg   [2:0] i_8_reg_6904;
wire    ap_CS_fsm_state108;
wire   [5:0] zext_ln23_fu_4156_p1;
reg   [5:0] zext_ln23_reg_6909;
wire   [0:0] icmp_ln22_fu_4136_p2;
wire   [2:0] j_3_fu_4166_p2;
reg   [2:0] j_3_reg_6917;
wire    ap_CS_fsm_state109;
wire   [63:0] zext_ln24_1_fu_4181_p1;
reg   [63:0] zext_ln24_1_reg_6922;
wire   [0:0] icmp_ln23_fu_4160_p2;
wire   [3:0] i_9_fu_4193_p2;
reg   [3:0] i_9_reg_6943;
wire    ap_CS_fsm_state111;
wire   [2:0] i_10_fu_4205_p2;
reg   [2:0] i_10_reg_6951;
wire    ap_CS_fsm_state113;
wire   [5:0] zext_ln32_fu_4219_p1;
reg   [5:0] zext_ln32_reg_6956;
wire   [0:0] icmp_ln31_fu_4199_p2;
wire   [2:0] j_5_fu_4229_p2;
reg   [2:0] j_5_reg_6965;
wire    ap_CS_fsm_state114;
wire   [5:0] zext_ln39_fu_4235_p1;
reg   [5:0] zext_ln39_reg_6970;
wire   [0:0] icmp_ln32_fu_4223_p2;
reg   [3:0] eig_mat_M_real_addr_3_reg_6975;
reg   [3:0] eig_mat_M_imag_addr_2_reg_6980;
wire   [2:0] k_fu_4256_p2;
reg   [2:0] k_reg_6988;
wire    ap_CS_fsm_state115;
wire   [0:0] icmp_ln35_fu_4250_p2;
wire   [31:0] R_temp_M_real_q0;
wire    ap_CS_fsm_state116;
wire   [31:0] R_temp_M_imag_q0;
wire   [31:0] Q_temp_M_real_q0;
wire   [31:0] Q_temp_M_imag_q0;
wire    ap_CS_fsm_state120;
wire   [2:0] count_fu_4306_p2;
reg   [2:0] count_reg_7050;
wire    ap_CS_fsm_state121;
wire   [5:0] zext_ln1044_fu_4312_p1;
reg   [5:0] zext_ln1044_reg_7055;
wire   [0:0] icmp_ln43_fu_4300_p2;
reg   [3:0] U_M_real_addr_2_reg_7067;
wire    ap_CS_fsm_state122;
reg   [3:0] U_M_imag_addr_2_reg_7072;
wire   [31:0] eig_mat_M_real_q0;
reg   [31:0] eigval_temp_reg_7077;
wire   [2:0] i_11_fu_4366_p2;
reg   [2:0] i_11_reg_7085;
wire    ap_CS_fsm_state123;
wire   [5:0] zext_ln49_1_fu_4384_p1;
reg   [5:0] zext_ln49_1_reg_7090;
wire   [0:0] icmp_ln45_fu_4360_p2;
reg   [3:0] Rx_temp_M_real_addr_2_reg_7095;
reg   [3:0] Rx_temp_M_imag_addr_2_reg_7100;
wire   [2:0] j_9_fu_4408_p2;
reg   [2:0] j_9_reg_7118;
wire    ap_CS_fsm_state126;
wire   [0:0] icmp_ln48_fu_4414_p2;
reg   [0:0] icmp_ln48_reg_7123;
wire   [0:0] icmp_ln46_fu_4402_p2;
wire   [63:0] zext_ln51_1_fu_4429_p1;
reg   [63:0] zext_ln51_1_reg_7127;
wire   [31:0] zext_ln55_fu_4435_p1;
reg   [31:0] zext_ln55_reg_7143;
wire    ap_CS_fsm_state128;
wire   [1:0] i_13_fu_4445_p2;
reg   [1:0] i_13_reg_7153;
wire   [0:0] icmp_ln55_fu_4439_p2;
wire   [5:0] zext_ln56_fu_4473_p1;
reg   [5:0] zext_ln56_reg_7168;
reg   [3:0] Rx_temp_M_real_addr_4_reg_7177;
wire    ap_CS_fsm_state132;
wire   [0:0] icmp_ln57_fu_4477_p2;
reg   [3:0] Rx_temp_M_imag_addr_4_reg_7182;
wire   [31:0] j_8_fu_4498_p2;
reg   [31:0] j_8_reg_7187;
wire   [31:0] j_11_fu_4504_p2;
reg   [31:0] j_11_reg_7192;
wire    ap_CS_fsm_state141;
wire   [3:0] trunc_ln62_fu_4516_p1;
reg   [3:0] trunc_ln62_reg_7200;
wire   [0:0] icmp_ln61_fu_4510_p2;
wire   [5:0] sext_ln62_cast_fu_4534_p3;
reg   [5:0] sext_ln62_cast_reg_7215;
wire   [5:0] add_ln65_fu_4551_p2;
reg   [5:0] add_ln65_reg_7223;
wire    ap_CS_fsm_state143;
wire   [0:0] icmp_ln63_fu_4541_p2;
wire   [31:0] q_1_fu_4567_p2;
reg   [31:0] q_1_reg_7238;
reg   [3:0] Rx_temp_M_real_addr_8_reg_7243;
reg   [3:0] Rx_temp_M_imag_addr_8_reg_7248;
wire  signed [31:0] sext_ln71_fu_4578_p1;
wire    ap_CS_fsm_state149;
wire  signed [5:0] sext_ln78_fu_4602_p1;
reg  signed [5:0] sext_ln78_reg_7261;
wire   [0:0] tmp_72_fu_4582_p3;
reg   [3:0] Rx_temp_M_real_addr_5_reg_7266;
reg   [3:0] Rx_temp_M_imag_addr_5_reg_7271;
reg   [3:0] U_M_real_addr_3_reg_7276;
reg   [3:0] U_M_imag_addr_3_reg_7281;
wire   [31:0] j_10_fu_4629_p2;
reg   [31:0] j_10_reg_7286;
wire    ap_CS_fsm_state150;
wire   [0:0] icmp_ln74_fu_4635_p2;
wire   [2:0] m_fu_4679_p2;
reg   [2:0] m_reg_7314;
wire    ap_CS_fsm_state155;
wire   [31:0] p_r_M_real_17_fu_4695_p1;
wire   [31:0] p_r_M_imag_15_fu_4711_p1;
wire   [31:0] grp_fu_2863_p2;
wire   [31:0] grp_fu_2869_p2;
wire   [31:0] grp_fu_2789_p2;
reg   [31:0] tmp_9_i_i_reg_7351;
wire   [31:0] grp_fu_2898_p2;
reg   [31:0] sum_M_real_reg_7356;
wire    ap_CS_fsm_state163;
wire   [31:0] grp_fu_2904_p2;
reg   [31:0] sum_M_imag_reg_7362;
wire    ap_CS_fsm_state168;
wire   [31:0] grp_fu_2929_p2;
reg   [31:0] midsum_reg_7373;
wire    ap_CS_fsm_state172;
wire   [2:0] i_15_fu_4723_p2;
reg   [2:0] i_15_reg_7383;
wire    ap_CS_fsm_state175;
reg   [3:0] U_M_real_addr_5_reg_7388;
wire   [0:0] icmp_ln83_fu_4717_p2;
reg   [3:0] U_M_imag_addr_5_reg_7393;
wire   [2:0] i_12_fu_4758_p2;
wire    ap_CS_fsm_state184;
wire   [31:0] zext_ln95_fu_4769_p1;
wire    ap_CS_fsm_state185;
wire   [1:0] i_14_fu_4779_p2;
reg   [1:0] i_14_reg_7415;
wire  signed [31:0] j_15_fu_4785_p2;
reg  signed [31:0] j_15_reg_7420;
wire    ap_CS_fsm_state186;
wire   [0:0] icmp_ln96_fu_4791_p2;
reg   [1:0] sort_index_addr_1_reg_7439;
reg   [1:0] sort_index_addr_2_reg_7445;
wire    ap_CS_fsm_state187;
wire   [31:0] j_7_fu_4911_p3;
wire    ap_CS_fsm_state188;
wire   [2:0] sort_index_q0;
reg   [2:0] sort_index_load_reg_7466;
wire    ap_CS_fsm_state189;
wire   [2:0] x_1_fu_4924_p2;
reg   [2:0] x_1_reg_7474;
wire    ap_CS_fsm_state191;
wire   [5:0] zext_ln332_fu_4938_p1;
reg   [5:0] zext_ln332_reg_7479;
wire   [0:0] icmp_ln329_fu_4918_p2;
reg   [2:0] Un_M_real_addr_1_reg_7484;
reg   [2:0] Un_M_real_addr_2_reg_7489;
reg   [2:0] Un_M_imag_addr_1_reg_7494;
reg   [2:0] Un_M_imag_addr_2_reg_7499;
wire   [2:0] y_2_fu_4978_p2;
reg   [2:0] y_2_reg_7507;
wire    ap_CS_fsm_state192;
wire   [5:0] add_ln332_fu_4993_p2;
reg   [5:0] add_ln332_reg_7512;
wire   [0:0] icmp_ln330_fu_4972_p2;
wire    ap_CS_fsm_state193;
wire   [0:0] icmp_ln331_fu_5003_p2;
reg   [0:0] icmp_ln331_reg_7532;
wire   [0:0] icmp_ln333_fu_5009_p2;
reg   [0:0] icmp_ln333_reg_7536;
wire   [10:0] add_ln339_fu_5015_p2;
reg   [10:0] add_ln339_reg_7540;
wire    ap_CS_fsm_state195;
wire   [2:0] x_2_fu_5027_p2;
reg   [2:0] x_2_reg_7548;
wire   [0:0] icmp_ln339_fu_5021_p2;
wire    ap_CS_fsm_state196;
wire   [8:0] y_1_fu_5044_p2;
reg   [8:0] y_1_reg_7566;
wire    ap_CS_fsm_state198;
wire   [10:0] add_ln344_fu_5059_p2;
reg   [10:0] add_ln344_reg_7571;
wire   [0:0] icmp_ln341_fu_5038_p2;
reg   [0:0] results_sign_V_2_reg_7581;
wire    ap_CS_fsm_state200;
wire   [10:0] tmp_V_fu_5077_p4;
reg   [10:0] tmp_V_reg_7587;
wire   [51:0] tmp_V_4_fu_5087_p1;
reg   [51:0] tmp_V_4_reg_7594;
wire   [0:0] closepath_fu_5091_p2;
reg   [0:0] closepath_reg_7600;
wire   [6:0] trunc_ln601_fu_5126_p1;
reg   [6:0] trunc_ln601_reg_7611;
wire    ap_CS_fsm_state201;
wire   [0:0] icmp_ln833_1_fu_5170_p2;
reg   [0:0] icmp_ln833_1_reg_7626;
wire   [2:0] p_Val2_70_fu_5207_p3;
reg   [2:0] p_Val2_70_reg_7632;
wire    ap_CS_fsm_state202;
wire   [62:0] Mx_V_fu_5290_p4;
reg   [62:0] Mx_V_reg_7637;
wire  signed [10:0] Ex_V_fu_5304_p2;
reg  signed [10:0] Ex_V_reg_7642;
wire   [0:0] cos_basis_fu_5364_p10;
reg   [0:0] cos_basis_reg_7647;
wire   [55:0] B_V_fu_5396_p1;
reg   [55:0] B_V_reg_7654;
wire   [97:0] r_V_22_fu_5410_p1;
reg   [97:0] r_V_22_reg_7659;
reg   [48:0] B_squared_V_reg_7664;
wire   [0:0] icmp_ln833_fu_5453_p2;
reg   [0:0] icmp_ln833_reg_7695;
wire   [0:0] icmp_ln833_2_fu_5458_p2;
reg   [0:0] icmp_ln833_2_reg_7701;
reg   [62:0] result_V_reg_7708;
wire    ap_CS_fsm_state203;
wire   [11:0] ret_V_19_fu_5692_p2;
reg   [11:0] ret_V_19_reg_7713;
wire    ap_CS_fsm_state204;
wire    grp_scaled_fixed2ieee_fu_2759_ap_ready;
wire    grp_scaled_fixed2ieee_fu_2759_ap_done;
reg   [31:0] p_x_assign_6_reg_7723;
wire    ap_CS_fsm_state205;
wire   [2:0] i_16_fu_5931_p2;
reg   [2:0] i_16_reg_7732;
wire    ap_CS_fsm_state207;
wire   [4:0] zext_ln357_fu_5945_p1;
reg   [4:0] zext_ln357_reg_7737;
wire   [0:0] icmp_ln349_fu_5925_p2;
wire   [5:0] zext_ln350_fu_5957_p1;
reg   [5:0] zext_ln350_reg_7742;
wire   [2:0] j_12_fu_5967_p2;
reg   [2:0] j_12_reg_7750;
wire    ap_CS_fsm_state208;
wire   [4:0] zext_ln357_1_fu_5985_p1;
reg   [4:0] zext_ln357_1_reg_7755;
wire   [0:0] icmp_ln350_fu_5961_p2;
reg   [3:0] temp_mat_M_real_add_5_reg_7760;
reg   [3:0] temp_mat_M_imag_add_5_reg_7765;
wire   [1:0] k_2_fu_6006_p2;
reg   [1:0] k_2_reg_7773;
wire    ap_CS_fsm_state209;
wire   [0:0] icmp_ln353_fu_6000_p2;
wire   [31:0] Un_M_real_q0;
wire    ap_CS_fsm_state210;
wire   [31:0] p_t_imag_9_fu_6048_p1;
wire   [31:0] Un_M_real_q1;
wire   [31:0] Un_M_imag_q1;
wire    ap_CS_fsm_state214;
wire   [8:0] i_17_fu_6060_p2;
reg   [8:0] i_17_reg_7835;
wire    ap_CS_fsm_state215;
wire   [10:0] zext_ln368_fu_6066_p1;
reg   [10:0] zext_ln368_reg_7840;
wire   [0:0] icmp_ln360_fu_6054_p2;
wire   [11:0] zext_ln361_fu_6078_p1;
reg   [11:0] zext_ln361_reg_7845;
wire   [2:0] j_13_fu_6088_p2;
reg   [2:0] j_13_reg_7853;
wire    ap_CS_fsm_state216;
wire   [5:0] zext_ln368_1_fu_6094_p1;
reg   [5:0] zext_ln368_1_reg_7858;
wire   [0:0] icmp_ln361_fu_6082_p2;
reg   [10:0] AUU_M_real_addr_2_reg_7863;
reg   [10:0] AUU_M_imag_addr_2_reg_7868;
wire   [2:0] k_4_fu_6119_p2;
reg   [2:0] k_4_reg_7876;
wire    ap_CS_fsm_state217;
wire   [0:0] icmp_ln364_fu_6113_p2;
wire   [10:0] add_ln366_2_fu_6148_p2;
reg   [10:0] add_ln366_2_reg_7891;
wire   [31:0] p_r_M_imag_23_fu_6175_p1;
wire    ap_CS_fsm_state222;
wire   [8:0] i_18_fu_6187_p2;
reg   [8:0] i_18_reg_7925;
wire    ap_CS_fsm_state223;
wire   [63:0] zext_ln389_fu_6193_p1;
reg   [63:0] zext_ln389_reg_7930;
wire   [0:0] icmp_ln384_fu_6181_p2;
wire   [10:0] zext_ln389_1_fu_6197_p1;
reg   [10:0] zext_ln389_1_reg_7935;
wire   [11:0] zext_ln387_fu_6209_p1;
reg   [11:0] zext_ln387_reg_7940;
wire   [2:0] k_3_fu_6219_p2;
reg   [2:0] k_3_reg_7948;
wire    ap_CS_fsm_state224;
wire   [0:0] icmp_ln387_fu_6213_p2;
wire   [10:0] add_ln389_2_fu_6240_p2;
reg   [10:0] add_ln389_2_reg_7963;
reg   [8:0] w_addr_1_reg_7978;
wire   [31:0] AUU_M_real_q0;
wire   [31:0] AUU_M_imag_q0;
wire   [31:0] a_theta_M_imag_q0;
wire    ap_CS_fsm_state229;
wire   [8:0] i_fu_6263_p2;
reg   [8:0] i_reg_8006;
wire    ap_CS_fsm_state232;
reg    ap_block_state232;
wire   [0:0] icmp_ln394_fu_6257_p2;
wire   [0:0] icmp_ln396_fu_6274_p2;
reg   [0:0] icmp_ln396_reg_8016;
wire   [0:0] icmp_ln397_fu_6280_p2;
reg   [0:0] icmp_ln397_reg_8021;
reg   [3:0] Q_temp_M_real_address0;
reg    Q_temp_M_real_ce0;
reg    Q_temp_M_real_we0;
reg   [31:0] Q_temp_M_real_d0;
reg   [3:0] Q_temp_M_imag_address0;
reg    Q_temp_M_imag_ce0;
reg    Q_temp_M_imag_we0;
reg   [31:0] Q_temp_M_imag_d0;
reg   [3:0] R_temp_M_real_address0;
reg    R_temp_M_real_ce0;
reg    R_temp_M_real_we0;
reg   [31:0] R_temp_M_real_d0;
reg   [3:0] R_temp_M_imag_address0;
reg    R_temp_M_imag_ce0;
reg    R_temp_M_imag_we0;
reg   [31:0] R_temp_M_imag_d0;
reg   [3:0] Rx_temp_M_real_address0;
reg    Rx_temp_M_real_ce0;
reg    Rx_temp_M_real_we0;
reg   [31:0] Rx_temp_M_real_d0;
reg   [3:0] Rx_temp_M_imag_address0;
reg    Rx_temp_M_imag_ce0;
reg    Rx_temp_M_imag_we0;
reg   [31:0] Rx_temp_M_imag_d0;
reg   [3:0] eig_mat_M_real_address0;
reg    eig_mat_M_real_ce0;
reg    eig_mat_M_real_we0;
reg   [31:0] eig_mat_M_real_d0;
reg   [3:0] eig_mat_M_imag_address0;
reg    eig_mat_M_imag_ce0;
reg    eig_mat_M_imag_we0;
reg   [31:0] eig_mat_M_imag_d0;
wire   [31:0] eig_mat_M_imag_q0;
reg   [9:0] FFT_Buffer_re_address0;
reg    FFT_Buffer_re_ce0;
reg    FFT_Buffer_re_we0;
reg   [31:0] FFT_Buffer_re_d0;
reg   [9:0] FFT_Buffer_re_address1;
reg    FFT_Buffer_re_ce1;
reg    FFT_Buffer_re_we1;
reg   [31:0] FFT_Buffer_re_d1;
reg   [9:0] FFT_Buffer_im_address0;
reg    FFT_Buffer_im_ce0;
reg    FFT_Buffer_im_we0;
reg   [31:0] FFT_Buffer_im_d0;
reg   [9:0] FFT_Buffer_im_address1;
reg    FFT_Buffer_im_ce1;
reg    FFT_Buffer_im_we1;
reg   [31:0] FFT_Buffer_im_d1;
reg   [5:0] Autocorr_Buffer_M_r_address0;
reg    Autocorr_Buffer_M_r_ce0;
reg    Autocorr_Buffer_M_r_we0;
reg   [31:0] Autocorr_Buffer_M_r_d0;
wire   [5:0] Autocorr_Buffer_M_r_address1;
reg    Autocorr_Buffer_M_r_ce1;
reg   [5:0] Autocorr_Buffer_M_i_address0;
reg    Autocorr_Buffer_M_i_ce0;
reg    Autocorr_Buffer_M_i_we0;
reg   [31:0] Autocorr_Buffer_M_i_d0;
wire   [31:0] Autocorr_Buffer_M_i_q0;
wire   [5:0] Autocorr_Buffer_M_i_address1;
reg    Autocorr_Buffer_M_i_ce1;
reg   [3:0] U_M_real_address0;
reg    U_M_real_ce0;
reg    U_M_real_we0;
reg   [31:0] U_M_real_d0;
reg   [3:0] U_M_imag_address0;
reg    U_M_imag_ce0;
reg    U_M_imag_we0;
reg   [31:0] U_M_imag_d0;
reg   [2:0] Un_M_real_address0;
reg    Un_M_real_ce0;
reg    Un_M_real_we0;
reg   [31:0] Un_M_real_d0;
wire   [2:0] Un_M_real_address1;
reg    Un_M_real_ce1;
reg   [2:0] Un_M_imag_address0;
reg    Un_M_imag_ce0;
reg    Un_M_imag_we0;
reg   [31:0] Un_M_imag_d0;
wire   [31:0] Un_M_imag_q0;
wire   [2:0] Un_M_imag_address1;
reg    Un_M_imag_ce1;
reg   [3:0] temp_mat_M_real_address0;
reg    temp_mat_M_real_ce0;
reg    temp_mat_M_real_we0;
reg   [31:0] temp_mat_M_real_d0;
reg   [3:0] temp_mat_M_imag_address0;
reg    temp_mat_M_imag_ce0;
reg    temp_mat_M_imag_we0;
reg   [31:0] temp_mat_M_imag_d0;
reg   [10:0] AUU_M_real_address0;
reg    AUU_M_real_ce0;
reg    AUU_M_real_we0;
reg   [31:0] AUU_M_real_d0;
reg   [10:0] AUU_M_imag_address0;
reg    AUU_M_imag_ce0;
reg    AUU_M_imag_we0;
reg   [31:0] AUU_M_imag_d0;
reg   [10:0] a_theta_M_real_address0;
reg    a_theta_M_real_ce0;
reg    a_theta_M_real_we0;
reg   [31:0] a_theta_M_real_d0;
reg   [10:0] a_theta_M_imag_address0;
reg    a_theta_M_imag_ce0;
reg    a_theta_M_imag_we0;
reg   [31:0] a_theta_M_imag_d0;
reg   [1:0] eigval_address0;
reg    eigval_ce0;
reg    eigval_we0;
wire   [31:0] eigval_q0;
wire   [1:0] eigval_address1;
reg    eigval_ce1;
wire   [31:0] eigval_q1;
reg   [1:0] sort_index_address0;
reg    sort_index_ce0;
reg    sort_index_we0;
reg   [2:0] sort_index_d0;
reg   [1:0] sort_index_address1;
reg    sort_index_ce1;
reg    sort_index_we1;
wire   [2:0] sort_index_q1;
reg   [8:0] w_address0;
reg    w_ce0;
reg    w_we0;
wire   [3:0] grp_qrf_top_fu_2716_A_M_real_address0;
wire    grp_qrf_top_fu_2716_A_M_real_ce0;
wire   [31:0] grp_qrf_top_fu_2716_A_M_real_d0;
wire    grp_qrf_top_fu_2716_A_M_real_we0;
wire   [3:0] grp_qrf_top_fu_2716_A_M_real_address1;
wire    grp_qrf_top_fu_2716_A_M_real_ce1;
wire   [31:0] grp_qrf_top_fu_2716_A_M_real_d1;
wire    grp_qrf_top_fu_2716_A_M_real_we1;
wire   [3:0] grp_qrf_top_fu_2716_A_M_imag_address0;
wire    grp_qrf_top_fu_2716_A_M_imag_ce0;
wire   [31:0] grp_qrf_top_fu_2716_A_M_imag_d0;
wire    grp_qrf_top_fu_2716_A_M_imag_we0;
wire   [3:0] grp_qrf_top_fu_2716_A_M_imag_address1;
wire    grp_qrf_top_fu_2716_A_M_imag_ce1;
wire   [31:0] grp_qrf_top_fu_2716_A_M_imag_d1;
wire    grp_qrf_top_fu_2716_A_M_imag_we1;
wire   [3:0] grp_qrf_top_fu_2716_Q_M_real_address0;
wire    grp_qrf_top_fu_2716_Q_M_real_ce0;
wire   [31:0] grp_qrf_top_fu_2716_Q_M_real_d0;
wire    grp_qrf_top_fu_2716_Q_M_real_we0;
wire   [3:0] grp_qrf_top_fu_2716_Q_M_real_address1;
wire    grp_qrf_top_fu_2716_Q_M_real_ce1;
wire   [31:0] grp_qrf_top_fu_2716_Q_M_real_d1;
wire    grp_qrf_top_fu_2716_Q_M_real_we1;
wire   [3:0] grp_qrf_top_fu_2716_Q_M_imag_address0;
wire    grp_qrf_top_fu_2716_Q_M_imag_ce0;
wire   [31:0] grp_qrf_top_fu_2716_Q_M_imag_d0;
wire    grp_qrf_top_fu_2716_Q_M_imag_we0;
wire   [3:0] grp_qrf_top_fu_2716_Q_M_imag_address1;
wire    grp_qrf_top_fu_2716_Q_M_imag_ce1;
wire   [31:0] grp_qrf_top_fu_2716_Q_M_imag_d1;
wire    grp_qrf_top_fu_2716_Q_M_imag_we1;
wire   [3:0] grp_qrf_top_fu_2716_R_M_real_address0;
wire    grp_qrf_top_fu_2716_R_M_real_ce0;
wire   [31:0] grp_qrf_top_fu_2716_R_M_real_d0;
wire    grp_qrf_top_fu_2716_R_M_real_we0;
wire   [3:0] grp_qrf_top_fu_2716_R_M_real_address1;
wire    grp_qrf_top_fu_2716_R_M_real_ce1;
wire   [31:0] grp_qrf_top_fu_2716_R_M_real_d1;
wire    grp_qrf_top_fu_2716_R_M_real_we1;
wire   [3:0] grp_qrf_top_fu_2716_R_M_imag_address0;
wire    grp_qrf_top_fu_2716_R_M_imag_ce0;
wire   [31:0] grp_qrf_top_fu_2716_R_M_imag_d0;
wire    grp_qrf_top_fu_2716_R_M_imag_we0;
wire   [3:0] grp_qrf_top_fu_2716_R_M_imag_address1;
wire    grp_qrf_top_fu_2716_R_M_imag_ce1;
wire   [31:0] grp_qrf_top_fu_2716_R_M_imag_d1;
wire    grp_qrf_top_fu_2716_R_M_imag_we1;
wire    grp_qrf_top_fu_2716_ap_start;
wire    grp_qrf_top_fu_2716_ap_done;
wire    grp_qrf_top_fu_2716_ap_ready;
wire    grp_qrf_top_fu_2716_ap_idle;
reg    grp_qrf_top_fu_2716_ap_continue;
wire    grp_sin_or_cos_float_s_fu_2726_ap_start;
wire    grp_sin_or_cos_float_s_fu_2726_ap_idle;
reg   [31:0] grp_sin_or_cos_float_s_fu_2726_t_in;
wire    grp_sin_or_cos_float_s_fu_2726_do_cos;
wire    grp_sin_or_cos_float_s_fu_2742_ap_start;
wire    grp_sin_or_cos_float_s_fu_2742_ap_idle;
reg   [31:0] grp_sin_or_cos_float_s_fu_2742_t_in;
wire    grp_sin_or_cos_float_s_fu_2742_do_cos;
wire    grp_scaled_fixed2ieee_fu_2759_ap_start;
wire    grp_scaled_fixed2ieee_fu_2759_ap_idle;
wire   [63:0] grp_scaled_fixed2ieee_fu_2759_ap_return;
reg   [3:0] phi_ln291_reg_1734;
wire   [0:0] icmp_ln291_fu_3172_p2;
wire   [0:0] icmp_ln291_1_fu_3178_p2;
reg   [1:0] phi_ln291_1_reg_1746;
reg   [1:0] phi_ln292_reg_1757;
wire   [0:0] icmp_ln292_fu_3210_p2;
wire   [0:0] icmp_ln292_1_fu_3216_p2;
reg   [1:0] phi_ln292_1_reg_1769;
reg   [1:0] phi_ln293_reg_1780;
wire   [0:0] ap_phi_mux_phi_ln293_1_phi_fu_1796_p4;
wire   [0:0] icmp_ln293_fu_3248_p2;
reg   [0:0] phi_ln293_1_reg_1792;
reg   [1:0] phi_ln294_reg_1803;
wire   [0:0] icmp_ln294_fu_3280_p2;
wire   [0:0] icmp_ln294_1_fu_3286_p2;
reg   [1:0] phi_ln294_1_reg_1815;
reg   [8:0] phi_ln295_reg_1826;
wire   [0:0] icmp_ln295_fu_3318_p2;
wire   [0:0] icmp_ln295_1_fu_3324_p2;
reg   [1:0] phi_ln295_1_reg_1838;
reg   [1:0] phi_ln296_reg_1849;
wire   [0:0] icmp_ln296_fu_3364_p2;
wire   [0:0] icmp_ln296_1_fu_3370_p2;
reg   [10:0] phi_mul_reg_1861;
reg   [8:0] phi_ln296_1_reg_1873;
reg   [3:0] l_0_reg_1884;
reg   [2:0] n_0_reg_1895;
reg   [10:0] j_0_reg_1906;
wire    ap_CS_fsm_state25;
reg   [10:0] input_assign_reg_1918;
wire    ap_CS_fsm_state29;
reg   [31:0] reversed_reg_1930;
wire   [0:0] icmp_ln158_fu_3483_p2;
reg   [3:0] i_0_i_i_i_reg_1941;
reg   [9:0] p_0_i_i_i_reg_1952;
reg   [3:0] stage_0_i_reg_1961;
reg   [9:0] i_5_reg_1973;
reg   [31:0] p_x_assign_5_reg_1984;
reg  signed [31:0] i_0_i_reg_1996;
wire    ap_CS_fsm_state51;
reg   [10:0] j24_0_reg_2005;
reg   [10:0] jj_0_reg_2016;
reg   [3:0] l25_0_reg_2027;
reg   [2:0] n26_0_reg_2038;
wire    ap_CS_fsm_state84;
reg   [2:0] x_0_i_reg_2049;
reg   [2:0] y_0_i_reg_2060;
wire    ap_CS_fsm_state99;
reg   [31:0] p_r_M_imag_reg_2071;
reg   [31:0] p_r_M_real_reg_2083;
reg   [3:0] l_0_i_reg_2095;
reg   [1:0] phi_ln13_reg_2106;
wire   [0:0] icmp_ln13_fu_4010_p2;
wire   [0:0] icmp_ln13_1_fu_4016_p2;
reg   [1:0] phi_ln13_1_reg_2118;
reg   [1:0] phi_ln14_reg_2129;
wire   [0:0] icmp_ln14_fu_4048_p2;
wire   [0:0] icmp_ln14_1_fu_4054_p2;
reg   [1:0] phi_ln14_1_reg_2141;
reg   [1:0] phi_ln15_reg_2152;
wire   [0:0] icmp_ln15_fu_4086_p2;
wire   [0:0] icmp_ln15_1_fu_4092_p2;
reg   [1:0] phi_ln15_1_reg_2164;
reg   [1:0] phi_ln16_reg_2175;
wire   [0:0] icmp_ln16_fu_4124_p2;
wire   [0:0] icmp_ln16_1_fu_4130_p2;
reg   [1:0] phi_ln16_1_reg_2187;
reg   [2:0] i_0_i43_reg_2198;
reg   [2:0] j_0_i44_reg_2209;
wire    ap_CS_fsm_state110;
reg   [3:0] i16_0_i_reg_2220;
reg   [2:0] i17_0_i_reg_2231;
wire    ap_CS_fsm_state112;
wire    ap_sync_grp_qrf_top_fu_2716_ap_ready;
wire    ap_sync_grp_qrf_top_fu_2716_ap_done;
reg    ap_block_state112_on_subcall_done;
reg   [2:0] j18_0_i_reg_2242;
reg   [31:0] complex_M_imag_read_reg_2253;
reg   [31:0] complex_M_real_read_reg_2266;
reg   [2:0] k_0_i_reg_2279;
reg   [2:0] count_0_i_reg_2290;
wire   [0:0] icmp_ln29_fu_4187_p2;
reg   [2:0] i19_0_i_reg_2302;
reg   [2:0] j20_0_i_reg_2314;
wire    ap_CS_fsm_state127;
reg   [1:0] j_14_reg_2325;
reg   [31:0] j22_0_i_reg_2337;
wire    ap_CS_fsm_state140;
reg   [31:0] j23_0_in_i_reg_2346;
reg   [31:0] q_0_i_reg_2355;
wire    ap_CS_fsm_state148;
reg   [31:0] p_x_assign_reg_2364;
reg  signed [2:0] m_0_i_reg_2376;
reg   [31:0] complex_M_imag_read_1_reg_2388;
reg   [31:0] complex_M_real_read_1_reg_2400;
reg   [31:0] j24_0_in_i_reg_2412;
reg   [2:0] i25_0_i_reg_2421;
wire    ap_CS_fsm_state183;
reg   [2:0] i_0_i49_reg_2432;
wire   [0:0] icmp_ln91_fu_4752_p2;
reg   [1:0] flag_reg_2444;
wire    ap_CS_fsm_state190;
reg  signed [31:0] flag_0_i_reg_2456;
wire   [0:0] icmp_ln94_fu_4773_p2;
reg   [31:0] j_0_in_i_reg_2466;
reg   [2:0] x_0_reg_2475;
reg   [2:0] y_0_reg_2486;
wire    ap_CS_fsm_state194;
reg   [2:0] x27_0_reg_2497;
reg   [10:0] phi_mul9_reg_2508;
reg   [8:0] y28_0_reg_2520;
wire    ap_CS_fsm_state206;
reg    ap_block_state206_on_subcall_done;
reg   [2:0] i_0_reg_2531;
reg   [2:0] j29_0_reg_2542;
reg   [31:0] complex_M_imag_read_2_reg_2553;
reg   [31:0] complex_M_real_read_2_reg_2566;
reg   [1:0] k_0_reg_2579;
reg   [8:0] i30_0_reg_2590;
reg   [2:0] j31_0_reg_2601;
reg   [31:0] complex_M_imag_read_3_reg_2612;
reg   [31:0] complex_M_real_read_3_reg_2625;
reg   [2:0] k32_0_reg_2638;
reg   [10:0] phi_mul11_reg_2649;
reg   [8:0] i33_0_reg_2660;
wire    ap_CS_fsm_state231;
reg   [31:0] complex_M_real_read_4_reg_2671;
reg   [2:0] k34_0_reg_2683;
reg   [10:0] phi_mul13_reg_2694;
reg   [8:0] p_016_rec_reg_2705;
reg    grp_qrf_top_fu_2716_ap_start_reg;
reg    ap_sync_reg_grp_qrf_top_fu_2716_ap_ready;
reg    ap_sync_reg_grp_qrf_top_fu_2716_ap_done;
reg    grp_sin_or_cos_float_s_fu_2726_ap_start_reg;
reg    grp_sin_or_cos_float_s_fu_2742_ap_start_reg;
reg    grp_scaled_fixed2ieee_fu_2759_ap_start_reg;
wire   [63:0] zext_ln1027_fu_3166_p1;
wire   [63:0] zext_ln1027_2_fu_3204_p1;
wire   [63:0] zext_ln1027_3_fu_3242_p1;
wire   [63:0] zext_ln1027_4_fu_3274_p1;
wire   [63:0] zext_ln1027_5_fu_3312_p1;
wire   [63:0] zext_ln1027_11_fu_3358_p1;
wire   [63:0] zext_ln305_2_fu_3469_p1;
wire   [63:0] zext_ln162_fu_3542_p1;
wire   [63:0] zext_ln163_fu_3548_p1;
wire  signed [63:0] sext_ln250_fu_3630_p1;
wire  signed [63:0] sext_ln253_fu_3636_p1;
wire   [63:0] zext_ln310_fu_3663_p1;
wire   [63:0] zext_ln317_fu_3740_p1;
wire   [63:0] zext_ln321_5_fu_3858_p1;
wire   [63:0] zext_ln116_3_fu_3916_p1;
wire   [63:0] zext_ln114_6_fu_3951_p1;
wire   [63:0] zext_ln114_7_fu_3962_p1;
wire   [63:0] zext_ln1027_6_fu_4004_p1;
wire   [63:0] zext_ln1027_7_fu_4042_p1;
wire   [63:0] zext_ln1027_8_fu_4080_p1;
wire   [63:0] zext_ln1027_9_fu_4118_p1;
wire   [63:0] zext_ln39_1_fu_4244_p1;
wire   [63:0] zext_ln37_2_fu_4283_p1;
wire   [63:0] zext_ln37_3_fu_4294_p1;
wire   [63:0] zext_ln1044_2_fu_4334_p1;
wire   [63:0] zext_ln1067_fu_4354_p1;
wire   [63:0] zext_ln44_fu_4339_p1;
wire   [63:0] zext_ln49_2_fu_4394_p1;
wire   [63:0] zext_ln56_1_fu_4459_p1;
wire  signed [63:0] sext_ln59_fu_4492_p1;
wire  signed [63:0] sext_ln62_fu_4528_p1;
wire  signed [63:0] sext_ln65_1_fu_4561_p1;
wire  signed [63:0] sext_ln65_fu_4573_p1;
wire   [63:0] zext_ln78_fu_4612_p1;
wire   [63:0] zext_ln80_fu_4623_p1;
wire  signed [63:0] sext_ln76_fu_4650_p1;
wire  signed [63:0] sext_ln76_1_fu_4673_p1;
wire   [63:0] zext_ln85_1_fu_4746_p1;
wire   [63:0] zext_ln92_fu_4764_p1;
wire  signed [63:0] sext_ln97_fu_4797_p1;
wire  signed [63:0] sext_ln97_1_fu_4802_p1;
wire  signed [63:0] sext_ln102_fu_4807_p1;
wire   [63:0] zext_ln103_fu_4812_p1;
wire   [63:0] zext_ln97_fu_4817_p1;
wire   [63:0] zext_ln97_1_fu_4822_p1;
wire   [63:0] zext_ln332_1_fu_4950_p1;
wire   [63:0] tmp_52_fu_4962_p3;
wire   [63:0] zext_ln331_fu_4984_p1;
wire   [63:0] zext_ln332_3_fu_4998_p1;
wire   [63:0] zext_ln340_fu_5033_p1;
wire   [63:0] zext_ln343_fu_5050_p1;
wire   [63:0] zext_ln635_fu_5121_p1;
wire   [63:0] zext_ln498_fu_5444_p1;
wire   [63:0] zext_ln344_1_fu_5905_p1;
wire   [63:0] zext_ln357_2_fu_5994_p1;
wire   [63:0] zext_ln355_2_fu_6021_p1;
wire   [63:0] zext_ln355_3_fu_6032_p1;
wire   [63:0] zext_ln368_3_fu_6107_p1;
wire   [63:0] zext_ln366_1_fu_6142_p1;
wire   [63:0] zext_ln366_2_fu_6159_p1;
wire   [63:0] zext_ln389_3_fu_6234_p1;
wire   [63:0] zext_ln389_4_fu_6251_p1;
wire   [63:0] zext_ln395_fu_6269_p1;
wire   [63:0] zext_ln305_3_fu_3459_p1;
wire   [63:0] zext_ln310_3_fu_3700_p1;
wire   [63:0] zext_ln311_fu_3714_p1;
wire   [63:0] zext_ln321_4_fu_3838_p1;
wire   [63:0] zext_ln322_fu_3848_p1;
wire   [31:0] bitcast_ln345_1_fu_5920_p1;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
reg   [31:0] grp_fu_2765_p0;
reg   [31:0] grp_fu_2765_p1;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state154;
wire    ap_CS_fsm_state167;
wire    ap_CS_fsm_state213;
wire    ap_CS_fsm_state221;
wire    ap_CS_fsm_state228;
reg   [31:0] grp_fu_2770_p0;
reg   [31:0] grp_fu_2770_p1;
reg   [31:0] grp_fu_2803_p0;
reg   [31:0] grp_fu_2803_p1;
wire    ap_CS_fsm_state164;
reg   [31:0] grp_fu_2809_p0;
reg   [31:0] grp_fu_2809_p1;
reg   [31:0] grp_fu_2815_p0;
reg   [31:0] grp_fu_2815_p1;
reg   [31:0] grp_fu_2821_p0;
reg   [31:0] grp_fu_2821_p1;
wire   [31:0] grp_fu_2863_p0;
wire   [31:0] grp_fu_2869_p0;
reg   [31:0] grp_fu_2898_p0;
reg   [31:0] grp_fu_2898_p1;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state159;
wire    ap_CS_fsm_state179;
reg   [31:0] grp_fu_2904_p0;
reg   [31:0] grp_fu_2904_p1;
reg   [63:0] grp_fu_2914_p0;
wire   [63:0] bitcast_ln512_fu_5900_p1;
reg   [31:0] grp_fu_2918_p0;
reg   [63:0] grp_fu_2937_p1;
reg   [63:0] grp_fu_2944_p0;
reg   [63:0] grp_fu_2944_p1;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state64;
wire   [31:0] grp_fu_2950_p0;
wire   [29:0] tmp_40_fu_3118_p4;
wire   [29:0] tmp_41_fu_3132_p4;
wire   [5:0] tmp_26_fu_3158_p3;
wire   [3:0] tmp_42_fu_3196_p3;
wire   [2:0] tmp_54_fu_3234_p3;
wire   [3:0] tmp_56_fu_3266_p3;
wire   [10:0] tmp_66_fu_3304_p3;
wire   [10:0] zext_ln1027_10_fu_3348_p1;
wire   [10:0] add_ln1027_fu_3352_p2;
wire   [13:0] zext_ln304_fu_3412_p1;
wire   [13:0] add_ln305_fu_3428_p2;
wire   [15:0] tmp_35_fu_3433_p3;
wire   [16:0] zext_ln305_fu_3441_p1;
wire   [16:0] add_ln305_1_fu_3445_p2;
wire   [30:0] zext_ln305_1_fu_3450_p1;
wire   [30:0] trunc_ln124_fu_3507_p1;
wire   [0:0] trunc_ln123_fu_3511_p1;
wire   [8:0] input_assign_1_fu_3523_p4;
wire   [10:0] zext_ln225_fu_3554_p1;
wire   [10:0] DFTpts_fu_3564_p2;
wire   [21:0] tmp_68_fu_3609_p4;
wire   [31:0] i_lower_fu_3625_p2;
wire   [13:0] zext_ln309_fu_3647_p1;
wire   [13:0] add_ln310_fu_3669_p2;
wire   [15:0] tmp_39_fu_3674_p3;
wire   [16:0] zext_ln310_1_fu_3682_p1;
wire   [16:0] add_ln310_1_fu_3686_p2;
wire   [5:0] tmp_33_fu_3757_p3;
wire   [13:0] shl_ln1_fu_3769_p3;
wire   [13:0] add_ln321_fu_3777_p2;
wire   [15:0] tmp_34_fu_3782_p3;
wire   [16:0] zext_ln321_2_fu_3810_p1;
wire   [16:0] add_ln321_1_fu_3814_p2;
wire   [30:0] zext_ln321_3_fu_3819_p1;
wire   [6:0] zext_ln321_1_fu_3806_p1;
wire   [4:0] tmp_36_fu_3879_p3;
wire   [5:0] zext_ln116_2_fu_3907_p1;
wire   [5:0] add_ln116_fu_3911_p2;
wire   [5:0] tmp_38_fu_3934_p3;
wire   [6:0] zext_ln114_fu_3942_p1;
wire   [6:0] add_ln114_5_fu_3946_p2;
wire   [6:0] add_ln114_6_fu_3957_p2;
wire   [31:0] bitcast_ln667_fu_3968_p1;
wire   [31:0] xor_ln667_fu_3972_p2;
wire   [3:0] tmp_67_fu_3996_p3;
wire   [3:0] tmp_69_fu_4034_p3;
wire   [3:0] tmp_70_fu_4072_p3;
wire   [3:0] tmp_71_fu_4110_p3;
wire   [4:0] tmp_43_fu_4148_p3;
wire   [5:0] zext_ln24_fu_4172_p1;
wire   [5:0] add_ln24_fu_4176_p2;
wire   [4:0] tmp_45_fu_4211_p3;
wire   [5:0] add_ln39_fu_4239_p2;
wire   [4:0] tmp_49_fu_4266_p3;
wire   [5:0] zext_ln37_1_fu_4274_p1;
wire   [5:0] add_ln37_fu_4278_p2;
wire   [5:0] zext_ln37_fu_4262_p1;
wire   [5:0] add_ln37_1_fu_4289_p2;
wire   [4:0] tmp_44_fu_4316_p3;
wire   [5:0] zext_ln1044_1_fu_4324_p1;
wire   [5:0] add_ln1044_fu_4328_p2;
wire   [2:0] xor_ln1067_fu_4344_p2;
wire  signed [3:0] sext_ln1067_fu_4350_p1;
wire   [4:0] tmp_46_fu_4376_p3;
wire   [5:0] zext_ln49_fu_4372_p1;
wire   [5:0] add_ln49_fu_4388_p2;
wire   [5:0] zext_ln51_fu_4420_p1;
wire   [5:0] add_ln51_fu_4424_p2;
wire   [3:0] tmp_48_fu_4451_p3;
wire   [3:0] tmp_47_fu_4465_p3;
wire   [5:0] trunc_ln59_fu_4483_p1;
wire   [5:0] add_ln59_fu_4487_p2;
wire   [33:0] tmp_57_fu_4520_p3;
wire   [5:0] trunc_ln65_fu_4547_p1;
wire   [5:0] add_ln65_1_fu_4556_p2;
wire   [4:0] tmp_53_fu_4594_p3;
wire   [5:0] zext_ln76_fu_4590_p1;
wire   [5:0] add_ln78_fu_4606_p2;
wire   [5:0] add_ln80_fu_4618_p2;
wire   [5:0] trunc_ln76_fu_4641_p1;
wire   [5:0] add_ln76_fu_4645_p2;
wire   [3:0] trunc_ln76_1_fu_4656_p1;
wire   [5:0] sext_ln76_2_cast_fu_4660_p3;
wire   [5:0] add_ln76_1_fu_4668_p2;
wire   [31:0] bitcast_ln444_fu_4685_p1;
wire   [31:0] xor_ln444_fu_4689_p2;
wire   [31:0] bitcast_ln444_2_fu_4701_p1;
wire   [31:0] xor_ln444_1_fu_4705_p2;
wire   [4:0] tmp_55_fu_4729_p3;
wire   [5:0] zext_ln85_fu_4737_p1;
wire   [5:0] add_ln85_fu_4741_p2;
wire   [31:0] bitcast_ln97_fu_4827_p1;
wire   [31:0] bitcast_ln97_1_fu_4845_p1;
wire   [7:0] tmp_21_fu_4831_p4;
wire   [22:0] trunc_ln97_fu_4841_p1;
wire   [0:0] icmp_ln97_1_fu_4869_p2;
wire   [0:0] icmp_ln97_fu_4863_p2;
wire   [7:0] tmp_23_fu_4849_p4;
wire   [22:0] trunc_ln97_1_fu_4859_p1;
wire   [0:0] icmp_ln97_3_fu_4887_p2;
wire   [0:0] icmp_ln97_2_fu_4881_p2;
wire   [0:0] or_ln97_fu_4875_p2;
wire   [0:0] or_ln97_1_fu_4893_p2;
wire   [0:0] and_ln97_fu_4899_p2;
wire   [0:0] tmp_25_fu_2923_p2;
wire   [0:0] and_ln97_1_fu_4905_p2;
wire   [4:0] tmp_50_fu_4930_p3;
wire   [3:0] tmp_51_fu_4942_p3;
wire   [3:0] or_ln334_fu_4956_p2;
wire   [5:0] zext_ln332_2_fu_4989_p1;
wire   [10:0] zext_ln344_fu_5055_p1;
wire   [63:0] p_Val2_s_fu_5065_p1;
wire   [10:0] add_ln114_1_fu_5097_p2;
wire   [10:0] addr_V_fu_5103_p3;
wire   [3:0] p_Result_i_i_i_fu_5111_p4;
wire   [255:0] zext_ln744_fu_5137_p1;
wire   [255:0] r_V_34_fu_5140_p2;
wire   [169:0] ret_V_22_fu_5146_p4;
wire   [52:0] p_Result_50_fu_5130_p3;
wire   [169:0] grp_fu_5164_p0;
wire   [52:0] grp_fu_5164_p1;
wire   [10:0] add_ln114_fu_5175_p2;
wire   [222:0] grp_fu_5164_p2;
wire   [2:0] trunc_ln_i_i_fu_5197_p4;
wire   [123:0] p_Val2_69_fu_5187_p4;
wire   [0:0] trunc_ln745_fu_5214_p1;
wire   [123:0] Mx_bits_V_2_fu_5218_p2;
wire   [123:0] p_Val2_49_fu_5224_p3;
wire   [60:0] p_Result_i_i_i_87_fu_5232_p4;
wire   [61:0] p_Result_51_fu_5242_p3;
reg   [61:0] p_Result_s_fu_5250_p4;
wire   [63:0] p_Result_52_fu_5260_p3;
reg   [63:0] tmp_i_i_i1_fu_5268_p3;
wire   [5:0] Mx_zeros_V_fu_5276_p1;
wire   [123:0] zext_ln1253_fu_5280_p1;
wire   [123:0] r_V_35_fu_5284_p2;
wire   [10:0] select_ln482_fu_5180_p3;
wire   [10:0] zext_ln655_fu_5300_p1;
wire  signed [11:0] sext_ln1334_fu_5310_p1;
wire   [0:0] isNeg_fu_5314_p3;
wire   [11:0] sub_ln1311_fu_5322_p2;
wire   [11:0] ush_fu_5328_p3;
wire  signed [31:0] sext_ln1311_fu_5336_p1;
wire   [62:0] zext_ln1287_fu_5340_p1;
wire   [62:0] r_V_fu_5344_p2;
wire   [62:0] r_V_20_fu_5350_p2;
wire   [62:0] r_V_36_fu_5356_p3;
wire   [48:0] B_trunc_V_fu_5400_p4;
wire   [48:0] r_V_37_fu_5414_p0;
wire   [48:0] r_V_37_fu_5414_p1;
wire   [97:0] r_V_37_fu_5414_p2;
wire   [0:0] sin_basis_fu_5430_p2;
wire   [6:0] p_Result_i_i_fu_5386_p4;
wire   [7:0] p_Result_53_fu_5436_p3;
wire   [48:0] r_V_38_fu_5478_p0;
wire   [97:0] r_V_25_fu_5475_p1;
wire   [48:0] r_V_38_fu_5478_p1;
wire   [97:0] r_V_38_fu_5478_p2;
wire   [48:0] r_V_39_fu_5493_p0;
wire   [48:0] r_V_39_fu_5493_p1;
wire   [97:0] r_V_39_fu_5493_p2;
wire   [55:0] r_V_40_fu_5524_p0;
wire  signed [51:0] r_V_40_fu_5524_p1;
wire   [107:0] r_V_40_fu_5524_p2;
wire   [48:0] r_V_41_fu_5547_p0;
wire  signed [43:0] r_V_41_fu_5547_p1;
wire   [92:0] r_V_41_fu_5547_p2;
wire   [41:0] B_third_power_V_fu_5483_p4;
wire   [41:0] r_V_42_fu_5571_p0;
wire   [32:0] r_V_42_fu_5571_p1;
wire   [74:0] r_V_42_fu_5571_p2;
wire   [36:0] tmp_60_fu_5577_p4;
wire   [34:0] B_fourth_power_V_fu_5499_p4;
wire   [34:0] r_V_43_fu_5599_p0;
wire   [24:0] r_V_43_fu_5599_p1;
wire   [59:0] r_V_43_fu_5599_p2;
wire   [62:0] t1_V_fu_5509_p3;
wire   [55:0] trunc_ln9_fu_5530_p4;
wire   [47:0] trunc_ln662_1_fu_5553_p4;
wire   [28:0] tmp_61_fu_5605_p4;
wire  signed [63:0] lhs_V_2_fu_5615_p1;
wire  signed [63:0] rhs_V_2_fu_5619_p1;
wire   [37:0] zext_ln662_fu_5587_p1;
wire   [37:0] zext_ln1146_fu_5627_p1;
wire   [37:0] add_ln1146_1_fu_5637_p2;
wire   [48:0] zext_ln1146_1_fu_5643_p1;
wire  signed [48:0] sext_ln657_fu_5623_p1;
wire   [48:0] add_ln1146_2_fu_5647_p2;
wire  signed [63:0] sext_ln1146_fu_5653_p1;
wire   [63:0] add_ln1146_fu_5631_p2;
wire   [62:0] select_ln272_2_fu_5469_p3;
wire   [63:0] ret_V_fu_5657_p2;
wire  signed [63:0] r_V_44_fu_5671_p0;
wire   [62:0] r_V_44_fu_5671_p1;
wire   [125:0] r_V_44_fu_5671_p2;
wire   [10:0] select_ln272_fu_5463_p3;
wire  signed [11:0] rhs_V_3_fu_5688_p1;
wire   [63:0] p_Val2_65_fu_5699_p1;
wire   [3:0] p_Result_55_fu_5725_p3;
wire   [0:0] tmp_27_fu_5731_p18;
wire   [0:0] tmp_28_fu_5769_p18;
wire   [0:0] select_ln271_fu_5807_p3;
wire   [0:0] or_ln311_fu_5823_p2;
wire   [0:0] xor_ln311_fu_5818_p2;
wire   [0:0] p_Result_54_fu_5703_p3;
wire   [0:0] and_ln300_fu_5814_p2;
wire   [0:0] select_ln311_fu_5828_p3;
wire   [0:0] and_ln300_2_fu_5843_p2;
wire   [0:0] xor_ln300_fu_5847_p2;
wire   [0:0] or_ln300_fu_5861_p2;
wire   [10:0] select_ln300_4_fu_5853_p3;
wire   [10:0] tmp_V_5_fu_5711_p4;
wire   [51:0] select_ln300_6_fu_5874_p3;
wire   [51:0] tmp_V_6_fu_5721_p1;
wire   [0:0] p_Repl2_6_fu_5836_p3;
wire   [10:0] ret_V_20_fu_5866_p3;
wire   [51:0] ret_V_21_fu_5882_p3;
wire   [63:0] p_Result_56_fu_5890_p4;
wire   [31:0] bitcast_ln345_fu_5910_p1;
wire   [31:0] xor_ln345_fu_5914_p2;
wire   [3:0] tmp_58_fu_5937_p3;
wire   [4:0] tmp_59_fu_5949_p3;
wire   [3:0] tmp_63_fu_5977_p3;
wire   [5:0] zext_ln355_fu_5973_p1;
wire   [5:0] add_ln357_fu_5989_p2;
wire   [4:0] zext_ln355_1_fu_6012_p1;
wire   [4:0] add_ln355_fu_6016_p2;
wire   [4:0] add_ln355_1_fu_6027_p2;
wire   [31:0] bitcast_ln667_2_fu_6038_p1;
wire   [31:0] xor_ln667_1_fu_6042_p2;
wire   [10:0] tmp_62_fu_6070_p3;
wire   [11:0] zext_ln368_2_fu_6098_p1;
wire   [11:0] add_ln368_fu_6102_p2;
wire   [4:0] tmp_65_fu_6125_p3;
wire   [5:0] zext_ln366_fu_6133_p1;
wire   [5:0] add_ln366_fu_6137_p2;
wire   [10:0] add_ln366_1_fu_6154_p2;
wire   [31:0] bitcast_ln667_4_fu_6165_p1;
wire   [31:0] xor_ln667_2_fu_6169_p2;
wire   [10:0] tmp_64_fu_6201_p3;
wire   [11:0] zext_ln389_2_fu_6225_p1;
wire   [11:0] add_ln389_fu_6229_p2;
wire   [10:0] add_ln389_1_fu_6246_p2;
reg   [1:0] grp_fu_2765_opcode;
reg    grp_fu_2765_ce;
reg   [1:0] grp_fu_2770_opcode;
reg    grp_fu_2803_ce;
reg   [233:0] ap_NS_fsm;
wire   [222:0] grp_fu_5164_p00;
wire   [222:0] grp_fu_5164_p10;
wire   [107:0] r_V_40_fu_5524_p00;
wire   [92:0] r_V_41_fu_5547_p00;
wire   [74:0] r_V_42_fu_5571_p00;
wire   [74:0] r_V_42_fu_5571_p10;
wire   [59:0] r_V_43_fu_5599_p00;
wire   [59:0] r_V_43_fu_5599_p10;
wire   [125:0] r_V_44_fu_5671_p10;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 234'd1;
#0 P_sm_data_1_sel_rd = 1'b0;
#0 P_sm_data_1_sel_wr = 1'b0;
#0 P_sm_data_1_state = 2'd0;
#0 P_sm_user_V_1_sel_rd = 1'b0;
#0 P_sm_user_V_1_sel_wr = 1'b0;
#0 P_sm_user_V_1_state = 2'd0;
#0 P_sm_last_V_1_sel_rd = 1'b0;
#0 P_sm_last_V_1_sel_wr = 1'b0;
#0 P_sm_last_V_1_state = 2'd0;
#0 grp_qrf_top_fu_2716_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_qrf_top_fu_2716_ap_ready = 1'b0;
#0 ap_sync_reg_grp_qrf_top_fu_2716_ap_done = 1'b0;
#0 grp_sin_or_cos_float_s_fu_2726_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_2742_ap_start_reg = 1'b0;
#0 grp_scaled_fixed2ieee_fu_2759_ap_start_reg = 1'b0;
end

music_fc #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
fc_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_address0),
    .ce0(fc_ce0),
    .q0(fc_q0)
);

music_p #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
p_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p_address0),
    .ce0(p_ce0),
    .q0(p_q0)
);

music_theta #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
theta_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(theta_address0),
    .ce0(theta_ce0),
    .q0(theta_q0)
);

music_ref_4oPi_tarcU #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

music_fourth_ordesc4 #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

music_fourth_ordetde #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

music_fourth_ordeudo #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

music_fourth_ordevdy #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

music_fourth_ordewdI #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

music_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
music_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd176),
    .data_re(data_re),
    .data_im(data_im)
);

music_data_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_CACHE_VALUE ))
music_data_m_axi_U(
    .AWVALID(m_axi_data_AWVALID),
    .AWREADY(m_axi_data_AWREADY),
    .AWADDR(m_axi_data_AWADDR),
    .AWID(m_axi_data_AWID),
    .AWLEN(m_axi_data_AWLEN),
    .AWSIZE(m_axi_data_AWSIZE),
    .AWBURST(m_axi_data_AWBURST),
    .AWLOCK(m_axi_data_AWLOCK),
    .AWCACHE(m_axi_data_AWCACHE),
    .AWPROT(m_axi_data_AWPROT),
    .AWQOS(m_axi_data_AWQOS),
    .AWREGION(m_axi_data_AWREGION),
    .AWUSER(m_axi_data_AWUSER),
    .WVALID(m_axi_data_WVALID),
    .WREADY(m_axi_data_WREADY),
    .WDATA(m_axi_data_WDATA),
    .WSTRB(m_axi_data_WSTRB),
    .WLAST(m_axi_data_WLAST),
    .WID(m_axi_data_WID),
    .WUSER(m_axi_data_WUSER),
    .ARVALID(m_axi_data_ARVALID),
    .ARREADY(m_axi_data_ARREADY),
    .ARADDR(m_axi_data_ARADDR),
    .ARID(m_axi_data_ARID),
    .ARLEN(m_axi_data_ARLEN),
    .ARSIZE(m_axi_data_ARSIZE),
    .ARBURST(m_axi_data_ARBURST),
    .ARLOCK(m_axi_data_ARLOCK),
    .ARCACHE(m_axi_data_ARCACHE),
    .ARPROT(m_axi_data_ARPROT),
    .ARQOS(m_axi_data_ARQOS),
    .ARREGION(m_axi_data_ARREGION),
    .ARUSER(m_axi_data_ARUSER),
    .RVALID(m_axi_data_RVALID),
    .RREADY(m_axi_data_RREADY),
    .RDATA(m_axi_data_RDATA),
    .RLAST(m_axi_data_RLAST),
    .RID(m_axi_data_RID),
    .RUSER(m_axi_data_RUSER),
    .RRESP(m_axi_data_RRESP),
    .BVALID(m_axi_data_BVALID),
    .BREADY(m_axi_data_BREADY),
    .BRESP(m_axi_data_BRESP),
    .BID(m_axi_data_BID),
    .BUSER(m_axi_data_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data_ARVALID),
    .I_ARREADY(data_ARREADY),
    .I_ARADDR(data_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(data_RVALID),
    .I_RREADY(data_RREADY),
    .I_RDATA(data_RDATA),
    .I_RID(data_RID),
    .I_RUSER(data_RUSER),
    .I_RRESP(data_RRESP),
    .I_RLAST(data_RLAST),
    .I_AWVALID(data_AWVALID),
    .I_AWREADY(data_AWREADY),
    .I_AWADDR(data_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(data_WVALID),
    .I_WREADY(data_WREADY),
    .I_WDATA(data_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(data_BVALID),
    .I_BREADY(data_BREADY),
    .I_BRESP(data_BRESP),
    .I_BID(data_BID),
    .I_BUSER(data_BUSER)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Q_temp_M_real_address0),
    .ce0(Q_temp_M_real_ce0),
    .we0(Q_temp_M_real_we0),
    .d0(Q_temp_M_real_d0),
    .q0(Q_temp_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Q_temp_M_imag_address0),
    .ce0(Q_temp_M_imag_ce0),
    .we0(Q_temp_M_imag_we0),
    .d0(Q_temp_M_imag_d0),
    .q0(Q_temp_M_imag_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(R_temp_M_real_address0),
    .ce0(R_temp_M_real_ce0),
    .we0(R_temp_M_real_we0),
    .d0(R_temp_M_real_d0),
    .q0(R_temp_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(R_temp_M_imag_address0),
    .ce0(R_temp_M_imag_ce0),
    .we0(R_temp_M_imag_we0),
    .d0(R_temp_M_imag_d0),
    .q0(R_temp_M_imag_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Rx_temp_M_real_address0),
    .ce0(Rx_temp_M_real_ce0),
    .we0(Rx_temp_M_real_we0),
    .d0(Rx_temp_M_real_d0),
    .q0(Rx_temp_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Rx_temp_M_imag_address0),
    .ce0(Rx_temp_M_imag_ce0),
    .we0(Rx_temp_M_imag_we0),
    .d0(Rx_temp_M_imag_d0),
    .q0(Rx_temp_M_imag_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(eig_mat_M_real_address0),
    .ce0(eig_mat_M_real_ce0),
    .we0(eig_mat_M_real_we0),
    .d0(eig_mat_M_real_d0),
    .q0(eig_mat_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(eig_mat_M_imag_address0),
    .ce0(eig_mat_M_imag_ce0),
    .we0(eig_mat_M_imag_we0),
    .d0(eig_mat_M_imag_d0),
    .q0(eig_mat_M_imag_q0)
);

music_FFT_Buffer_re #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
FFT_Buffer_re_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(FFT_Buffer_re_address0),
    .ce0(FFT_Buffer_re_ce0),
    .we0(FFT_Buffer_re_we0),
    .d0(FFT_Buffer_re_d0),
    .q0(FFT_Buffer_re_q0),
    .address1(FFT_Buffer_re_address1),
    .ce1(FFT_Buffer_re_ce1),
    .we1(FFT_Buffer_re_we1),
    .d1(FFT_Buffer_re_d1),
    .q1(FFT_Buffer_re_q1)
);

music_FFT_Buffer_re #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
FFT_Buffer_im_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(FFT_Buffer_im_address0),
    .ce0(FFT_Buffer_im_ce0),
    .we0(FFT_Buffer_im_we0),
    .d0(FFT_Buffer_im_d0),
    .q0(FFT_Buffer_im_q0),
    .address1(FFT_Buffer_im_address1),
    .ce1(FFT_Buffer_im_ce1),
    .we1(FFT_Buffer_im_we1),
    .d1(FFT_Buffer_im_d1),
    .q1(FFT_Buffer_im_q1)
);

music_Autocorr_BuBew #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
Autocorr_Buffer_M_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Autocorr_Buffer_M_r_address0),
    .ce0(Autocorr_Buffer_M_r_ce0),
    .we0(Autocorr_Buffer_M_r_we0),
    .d0(Autocorr_Buffer_M_r_d0),
    .q0(Autocorr_Buffer_M_r_q0),
    .address1(Autocorr_Buffer_M_r_address1),
    .ce1(Autocorr_Buffer_M_r_ce1),
    .q1(Autocorr_Buffer_M_r_q1)
);

music_Autocorr_BuBew #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
Autocorr_Buffer_M_i_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Autocorr_Buffer_M_i_address0),
    .ce0(Autocorr_Buffer_M_i_ce0),
    .we0(Autocorr_Buffer_M_i_we0),
    .d0(Autocorr_Buffer_M_i_d0),
    .q0(Autocorr_Buffer_M_i_q0),
    .address1(Autocorr_Buffer_M_i_address1),
    .ce1(Autocorr_Buffer_M_i_ce1),
    .q1(Autocorr_Buffer_M_i_q1)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
U_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(U_M_real_address0),
    .ce0(U_M_real_ce0),
    .we0(U_M_real_we0),
    .d0(U_M_real_d0),
    .q0(U_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
U_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(U_M_imag_address0),
    .ce0(U_M_imag_ce0),
    .we0(U_M_imag_we0),
    .d0(U_M_imag_d0),
    .q0(U_M_imag_q0)
);

music_Un_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Un_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Un_M_real_address0),
    .ce0(Un_M_real_ce0),
    .we0(Un_M_real_we0),
    .d0(Un_M_real_d0),
    .q0(Un_M_real_q0),
    .address1(Un_M_real_address1),
    .ce1(Un_M_real_ce1),
    .q1(Un_M_real_q1)
);

music_Un_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
Un_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Un_M_imag_address0),
    .ce0(Un_M_imag_ce0),
    .we0(Un_M_imag_we0),
    .d0(Un_M_imag_d0),
    .q0(Un_M_imag_q0),
    .address1(Un_M_imag_address1),
    .ce1(Un_M_imag_ce1),
    .q1(Un_M_imag_q1)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(temp_mat_M_real_address0),
    .ce0(temp_mat_M_real_ce0),
    .we0(temp_mat_M_real_we0),
    .d0(temp_mat_M_real_d0),
    .q0(temp_mat_M_real_q0)
);

music_Q_temp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(temp_mat_M_imag_address0),
    .ce0(temp_mat_M_imag_ce0),
    .we0(temp_mat_M_imag_we0),
    .d0(temp_mat_M_imag_d0),
    .q0(temp_mat_M_imag_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
AUU_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(AUU_M_real_address0),
    .ce0(AUU_M_real_ce0),
    .we0(AUU_M_real_we0),
    .d0(AUU_M_real_d0),
    .q0(AUU_M_real_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
AUU_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(AUU_M_imag_address0),
    .ce0(AUU_M_imag_ce0),
    .we0(AUU_M_imag_we0),
    .d0(AUU_M_imag_d0),
    .q0(AUU_M_imag_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
a_theta_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_theta_M_real_address0),
    .ce0(a_theta_M_real_ce0),
    .we0(a_theta_M_real_we0),
    .d0(a_theta_M_real_d0),
    .q0(a_theta_M_real_q0)
);

music_AUU_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 1444 ),
    .AddressWidth( 11 ))
a_theta_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_theta_M_imag_address0),
    .ce0(a_theta_M_imag_ce0),
    .we0(a_theta_M_imag_we0),
    .d0(a_theta_M_imag_d0),
    .q0(a_theta_M_imag_q0)
);

music_eigval #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
eigval_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(eigval_address0),
    .ce0(eigval_ce0),
    .we0(eigval_we0),
    .d0(eig_mat_M_real_q0),
    .q0(eigval_q0),
    .address1(eigval_address1),
    .ce1(eigval_ce1),
    .q1(eigval_q1)
);

music_sort_index #(
    .DataWidth( 3 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
sort_index_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sort_index_address0),
    .ce0(sort_index_ce0),
    .we0(sort_index_we0),
    .d0(sort_index_d0),
    .q0(sort_index_q0),
    .address1(sort_index_address1),
    .ce1(sort_index_ce1),
    .we1(sort_index_we1),
    .d1(sort_index_q1),
    .q1(sort_index_q1)
);

music_w #(
    .DataWidth( 32 ),
    .AddressRange( 361 ),
    .AddressWidth( 9 ))
w_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(w_address0),
    .ce0(w_ce0),
    .we0(w_we0),
    .d0(grp_fu_2765_p2),
    .q0(w_q0)
);

qrf_top grp_qrf_top_fu_2716(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .A_M_real_address0(grp_qrf_top_fu_2716_A_M_real_address0),
    .A_M_real_ce0(grp_qrf_top_fu_2716_A_M_real_ce0),
    .A_M_real_d0(grp_qrf_top_fu_2716_A_M_real_d0),
    .A_M_real_q0(eig_mat_M_real_q0),
    .A_M_real_we0(grp_qrf_top_fu_2716_A_M_real_we0),
    .A_M_real_address1(grp_qrf_top_fu_2716_A_M_real_address1),
    .A_M_real_ce1(grp_qrf_top_fu_2716_A_M_real_ce1),
    .A_M_real_d1(grp_qrf_top_fu_2716_A_M_real_d1),
    .A_M_real_q1(32'd0),
    .A_M_real_we1(grp_qrf_top_fu_2716_A_M_real_we1),
    .A_M_imag_address0(grp_qrf_top_fu_2716_A_M_imag_address0),
    .A_M_imag_ce0(grp_qrf_top_fu_2716_A_M_imag_ce0),
    .A_M_imag_d0(grp_qrf_top_fu_2716_A_M_imag_d0),
    .A_M_imag_q0(eig_mat_M_imag_q0),
    .A_M_imag_we0(grp_qrf_top_fu_2716_A_M_imag_we0),
    .A_M_imag_address1(grp_qrf_top_fu_2716_A_M_imag_address1),
    .A_M_imag_ce1(grp_qrf_top_fu_2716_A_M_imag_ce1),
    .A_M_imag_d1(grp_qrf_top_fu_2716_A_M_imag_d1),
    .A_M_imag_q1(32'd0),
    .A_M_imag_we1(grp_qrf_top_fu_2716_A_M_imag_we1),
    .Q_M_real_address0(grp_qrf_top_fu_2716_Q_M_real_address0),
    .Q_M_real_ce0(grp_qrf_top_fu_2716_Q_M_real_ce0),
    .Q_M_real_d0(grp_qrf_top_fu_2716_Q_M_real_d0),
    .Q_M_real_q0(32'd0),
    .Q_M_real_we0(grp_qrf_top_fu_2716_Q_M_real_we0),
    .Q_M_real_address1(grp_qrf_top_fu_2716_Q_M_real_address1),
    .Q_M_real_ce1(grp_qrf_top_fu_2716_Q_M_real_ce1),
    .Q_M_real_d1(grp_qrf_top_fu_2716_Q_M_real_d1),
    .Q_M_real_q1(32'd0),
    .Q_M_real_we1(grp_qrf_top_fu_2716_Q_M_real_we1),
    .Q_M_imag_address0(grp_qrf_top_fu_2716_Q_M_imag_address0),
    .Q_M_imag_ce0(grp_qrf_top_fu_2716_Q_M_imag_ce0),
    .Q_M_imag_d0(grp_qrf_top_fu_2716_Q_M_imag_d0),
    .Q_M_imag_q0(32'd0),
    .Q_M_imag_we0(grp_qrf_top_fu_2716_Q_M_imag_we0),
    .Q_M_imag_address1(grp_qrf_top_fu_2716_Q_M_imag_address1),
    .Q_M_imag_ce1(grp_qrf_top_fu_2716_Q_M_imag_ce1),
    .Q_M_imag_d1(grp_qrf_top_fu_2716_Q_M_imag_d1),
    .Q_M_imag_q1(32'd0),
    .Q_M_imag_we1(grp_qrf_top_fu_2716_Q_M_imag_we1),
    .R_M_real_address0(grp_qrf_top_fu_2716_R_M_real_address0),
    .R_M_real_ce0(grp_qrf_top_fu_2716_R_M_real_ce0),
    .R_M_real_d0(grp_qrf_top_fu_2716_R_M_real_d0),
    .R_M_real_q0(32'd0),
    .R_M_real_we0(grp_qrf_top_fu_2716_R_M_real_we0),
    .R_M_real_address1(grp_qrf_top_fu_2716_R_M_real_address1),
    .R_M_real_ce1(grp_qrf_top_fu_2716_R_M_real_ce1),
    .R_M_real_d1(grp_qrf_top_fu_2716_R_M_real_d1),
    .R_M_real_q1(32'd0),
    .R_M_real_we1(grp_qrf_top_fu_2716_R_M_real_we1),
    .R_M_imag_address0(grp_qrf_top_fu_2716_R_M_imag_address0),
    .R_M_imag_ce0(grp_qrf_top_fu_2716_R_M_imag_ce0),
    .R_M_imag_d0(grp_qrf_top_fu_2716_R_M_imag_d0),
    .R_M_imag_q0(32'd0),
    .R_M_imag_we0(grp_qrf_top_fu_2716_R_M_imag_we0),
    .R_M_imag_address1(grp_qrf_top_fu_2716_R_M_imag_address1),
    .R_M_imag_ce1(grp_qrf_top_fu_2716_R_M_imag_ce1),
    .R_M_imag_d1(grp_qrf_top_fu_2716_R_M_imag_d1),
    .R_M_imag_q1(32'd0),
    .R_M_imag_we1(grp_qrf_top_fu_2716_R_M_imag_we1),
    .ap_start(grp_qrf_top_fu_2716_ap_start),
    .ap_done(grp_qrf_top_fu_2716_ap_done),
    .ap_ready(grp_qrf_top_fu_2716_ap_ready),
    .ap_idle(grp_qrf_top_fu_2716_ap_idle),
    .ap_continue(grp_qrf_top_fu_2716_ap_continue)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_2726(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sin_or_cos_float_s_fu_2726_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_2726_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_2726_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_2726_ap_ready),
    .t_in(grp_sin_or_cos_float_s_fu_2726_t_in),
    .do_cos(grp_sin_or_cos_float_s_fu_2726_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_2726_ap_return)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_2742(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sin_or_cos_float_s_fu_2742_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_2742_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_2742_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_2742_ap_ready),
    .t_in(grp_sin_or_cos_float_s_fu_2742_t_in),
    .do_cos(grp_sin_or_cos_float_s_fu_2742_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_2742_ap_return)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_2759(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_scaled_fixed2ieee_fu_2759_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_2759_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_2759_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_2759_ap_ready),
    .in_V(result_V_reg_7708),
    .prescale(ret_V_19_reg_7713),
    .ap_return(grp_scaled_fixed2ieee_fu_2759_ap_return)
);

music_faddfsub_32jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32jbC_U82(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2765_p0),
    .din1(grp_fu_2765_p1),
    .opcode(grp_fu_2765_opcode),
    .ce(grp_fu_2765_ce),
    .dout(grp_fu_2765_p2)
);

music_faddfsub_32jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32jbC_U83(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2770_p0),
    .din1(grp_fu_2770_p1),
    .opcode(grp_fu_2770_opcode),
    .ce(1'b1),
    .dout(grp_fu_2770_p2)
);

music_fsub_32ns_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3lbW_U84(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2863_p2),
    .din1(grp_fu_2869_p2),
    .ce(1'b1),
    .dout(grp_fu_2789_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U85(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2803_p0),
    .din1(grp_fu_2803_p1),
    .ce(grp_fu_2803_ce),
    .dout(grp_fu_2803_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U86(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2809_p0),
    .din1(grp_fu_2809_p1),
    .ce(1'b1),
    .dout(grp_fu_2809_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U87(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2815_p0),
    .din1(grp_fu_2815_p1),
    .ce(1'b1),
    .dout(grp_fu_2815_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U88(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2821_p0),
    .din1(grp_fu_2821_p1),
    .ce(1'b1),
    .dout(grp_fu_2821_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U89(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2863_p0),
    .din1(Rx_temp_M_real_q0),
    .ce(1'b1),
    .dout(grp_fu_2863_p2)
);

music_fmul_32ns_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3mb6_U90(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2869_p0),
    .din1(Rx_temp_M_imag_q0),
    .ce(1'b1),
    .dout(grp_fu_2869_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U91(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2898_p0),
    .din1(grp_fu_2898_p1),
    .ce(1'b1),
    .dout(grp_fu_2898_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U92(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2904_p0),
    .din1(grp_fu_2904_p1),
    .ce(1'b1),
    .dout(grp_fu_2904_p2)
);

music_fptrunc_64nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
music_fptrunc_64nHfu_U93(
    .din0(grp_fu_2914_p0),
    .dout(grp_fu_2914_p1)
);

music_fpext_32ns_IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
music_fpext_32ns_IfE_U94(
    .din0(grp_fu_2918_p0),
    .dout(grp_fu_2918_p1)
);

music_fcmp_32ns_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
music_fcmp_32ns_3ocq_U95(
    .din0(eigval_q0),
    .din1(eigval_q1),
    .opcode(5'd2),
    .dout(tmp_25_fu_2923_p2)
);

music_fsqrt_32ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsqrt_32ns_pcA_U96(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd0),
    .din1(p_x_assign_reg_2364),
    .ce(1'b1),
    .dout(grp_fu_2929_p2)
);

music_dmul_64ns_6JfO #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
music_dmul_64ns_6JfO_U97(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2918_p1),
    .din1(grp_fu_2937_p1),
    .ce(1'b1),
    .dout(grp_fu_2937_p2)
);

music_ddiv_64ns_6KfY #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
music_ddiv_64ns_6KfY_U98(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2944_p0),
    .din1(grp_fu_2944_p1),
    .ce(1'b1),
    .dout(grp_fu_2944_p2)
);

music_sitodp_32nsLf8 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
music_sitodp_32nsLf8_U99(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2950_p0),
    .ce(1'b1),
    .dout(grp_fu_2950_p1)
);

music_mul_170ns_5Mgi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 223 ))
music_mul_170ns_5Mgi_U100(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_5164_p0),
    .din1(grp_fu_5164_p1),
    .ce(1'b1),
    .dout(grp_fu_5164_p2)
);

music_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
music_mux_83_1_1_1_U101(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_70_fu_5207_p3),
    .dout(cos_basis_fu_5364_p10)
);

music_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
music_mux_164_1_1_1_U102(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_55_fu_5725_p3),
    .dout(tmp_27_fu_5731_p18)
);

music_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
music_mux_164_1_1_1_U103(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_55_fu_5725_p3),
    .dout(tmp_28_fu_5769_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == P_sm_data_1_ack_out) & (1'b1 == P_sm_data_1_vld_out))) begin
            P_sm_data_1_sel_rd <= ~P_sm_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == P_sm_data_1_vld_in))) begin
            P_sm_data_1_sel_wr <= ~P_sm_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == P_sm_data_1_state) & (1'b0 == P_sm_data_1_vld_in)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_data_1_vld_in) & (1'b1 == P_sm_data_1_ack_out)))) begin
            P_sm_data_1_state <= 2'd2;
        end else if ((((2'd1 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY) & (1'b1 == P_sm_data_1_vld_in)))) begin
            P_sm_data_1_state <= 2'd1;
        end else if (((~((1'b0 == P_sm_data_1_vld_in) & (1'b1 == P_sm_data_1_ack_out)) & ~((1'b0 == P_sm_TREADY) & (1'b1 == P_sm_data_1_vld_in)) & (2'd3 == P_sm_data_1_state)) | ((2'd1 == P_sm_data_1_state) & (1'b1 == P_sm_data_1_ack_out)) | ((2'd2 == P_sm_data_1_state) & (1'b1 == P_sm_data_1_vld_in)))) begin
            P_sm_data_1_state <= 2'd3;
        end else begin
            P_sm_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == P_sm_last_V_1_ack_out) & (1'b1 == P_sm_last_V_1_vld_out))) begin
            P_sm_last_V_1_sel_rd <= ~P_sm_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == P_sm_last_V_1_ack_in) & (1'b1 == P_sm_last_V_1_vld_in))) begin
            P_sm_last_V_1_sel_wr <= ~P_sm_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_last_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == P_sm_last_V_1_state) & (1'b0 == P_sm_last_V_1_vld_in)) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_last_V_1_vld_in) & (1'b1 == P_sm_last_V_1_ack_out)))) begin
            P_sm_last_V_1_state <= 2'd2;
        end else if ((((2'd1 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY) & (1'b1 == P_sm_last_V_1_vld_in)))) begin
            P_sm_last_V_1_state <= 2'd1;
        end else if (((~((1'b0 == P_sm_last_V_1_vld_in) & (1'b1 == P_sm_last_V_1_ack_out)) & ~((1'b0 == P_sm_TREADY) & (1'b1 == P_sm_last_V_1_vld_in)) & (2'd3 == P_sm_last_V_1_state)) | ((2'd1 == P_sm_last_V_1_state) & (1'b1 == P_sm_last_V_1_ack_out)) | ((2'd2 == P_sm_last_V_1_state) & (1'b1 == P_sm_last_V_1_vld_in)))) begin
            P_sm_last_V_1_state <= 2'd3;
        end else begin
            P_sm_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == P_sm_user_V_1_ack_out) & (1'b1 == P_sm_user_V_1_vld_out))) begin
            P_sm_user_V_1_sel_rd <= ~P_sm_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == P_sm_user_V_1_ack_in) & (1'b1 == P_sm_user_V_1_vld_in))) begin
            P_sm_user_V_1_sel_wr <= ~P_sm_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        P_sm_user_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == P_sm_user_V_1_state) & (1'b0 == P_sm_user_V_1_vld_in)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_user_V_1_vld_in) & (1'b1 == P_sm_user_V_1_ack_out)))) begin
            P_sm_user_V_1_state <= 2'd2;
        end else if ((((2'd1 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY) & (1'b1 == P_sm_user_V_1_vld_in)))) begin
            P_sm_user_V_1_state <= 2'd1;
        end else if (((~((1'b0 == P_sm_user_V_1_vld_in) & (1'b1 == P_sm_user_V_1_ack_out)) & ~((1'b0 == P_sm_TREADY) & (1'b1 == P_sm_user_V_1_vld_in)) & (2'd3 == P_sm_user_V_1_state)) | ((2'd1 == P_sm_user_V_1_state) & (1'b1 == P_sm_user_V_1_ack_out)) | ((2'd2 == P_sm_user_V_1_state) & (1'b1 == P_sm_user_V_1_vld_in)))) begin
            P_sm_user_V_1_state <= 2'd3;
        end else begin
            P_sm_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_qrf_top_fu_2716_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state112_on_subcall_done) & (1'b1 == ap_CS_fsm_state112))) begin
            ap_sync_reg_grp_qrf_top_fu_2716_ap_done <= 1'b0;
        end else if ((grp_qrf_top_fu_2716_ap_done == 1'b1)) begin
            ap_sync_reg_grp_qrf_top_fu_2716_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_qrf_top_fu_2716_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state112_on_subcall_done) & (1'b1 == ap_CS_fsm_state112))) begin
            ap_sync_reg_grp_qrf_top_fu_2716_ap_ready <= 1'b0;
        end else if ((grp_qrf_top_fu_2716_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_qrf_top_fu_2716_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_qrf_top_fu_2716_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_qrf_top_fu_2716_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state112)) | ((icmp_ln29_fu_4187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state111)))) begin
            grp_qrf_top_fu_2716_ap_start_reg <= 1'b1;
        end else if ((grp_qrf_top_fu_2716_ap_ready == 1'b1)) begin
            grp_qrf_top_fu_2716_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_scaled_fixed2ieee_fu_2759_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state203)) begin
            grp_scaled_fixed2ieee_fu_2759_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_fu_2759_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_fu_2759_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sin_or_cos_float_s_fu_2726_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state205) | ((icmp_ln235_fu_3592_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41)))) begin
            grp_sin_or_cos_float_s_fu_2726_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_2726_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_2726_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sin_or_cos_float_s_fu_2742_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state205) | ((icmp_ln235_fu_3592_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41)))) begin
            grp_sin_or_cos_float_s_fu_2742_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_2742_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_2742_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        complex_M_imag_read_1_reg_2388 <= grp_fu_2770_p2;
    end else if (((tmp_72_fu_4582_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state149))) begin
        complex_M_imag_read_1_reg_2388 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state214)) begin
        complex_M_imag_read_2_reg_2553 <= grp_fu_2770_p2;
    end else if (((icmp_ln350_fu_5961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state208))) begin
        complex_M_imag_read_2_reg_2553 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state222)) begin
        complex_M_imag_read_3_reg_2612 <= grp_fu_2770_p2;
    end else if (((icmp_ln361_fu_6082_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state216))) begin
        complex_M_imag_read_3_reg_2612 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        complex_M_imag_read_reg_2253 <= grp_fu_2770_p2;
    end else if (((icmp_ln32_fu_4223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state114))) begin
        complex_M_imag_read_reg_2253 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        complex_M_real_read_1_reg_2400 <= grp_fu_2765_p2;
    end else if (((tmp_72_fu_4582_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state149))) begin
        complex_M_real_read_1_reg_2400 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state214)) begin
        complex_M_real_read_2_reg_2566 <= grp_fu_2765_p2;
    end else if (((icmp_ln350_fu_5961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state208))) begin
        complex_M_real_read_2_reg_2566 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state222)) begin
        complex_M_real_read_3_reg_2625 <= grp_fu_2765_p2;
    end else if (((icmp_ln361_fu_6082_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state216))) begin
        complex_M_real_read_3_reg_2625 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        complex_M_real_read_4_reg_2671 <= grp_fu_2765_p2;
    end else if (((icmp_ln384_fu_6181_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state223))) begin
        complex_M_real_read_4_reg_2671 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        complex_M_real_read_reg_2266 <= grp_fu_2765_p2;
    end else if (((icmp_ln32_fu_4223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state114))) begin
        complex_M_real_read_reg_2266 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_4187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
        count_0_i_reg_2290 <= 3'd0;
    end else if (((icmp_ln83_fu_4717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state175))) begin
        count_0_i_reg_2290 <= count_reg_7050;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_4773_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state185))) begin
        flag_0_i_reg_2456 <= zext_ln95_fu_4769_p1;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        flag_0_i_reg_2456 <= j_7_fu_4911_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_4752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state184))) begin
        flag_reg_2444 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state190)) begin
        flag_reg_2444 <= i_14_reg_7415;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_4136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
        i16_0_i_reg_2220 <= 4'd0;
    end else if (((icmp_ln31_fu_4199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
        i16_0_i_reg_2220 <= i_9_reg_6943;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_4223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state114))) begin
        i17_0_i_reg_2231 <= i_10_reg_6951;
    end else if (((1'b0 == ap_block_state112_on_subcall_done) & (1'b1 == ap_CS_fsm_state112))) begin
        i17_0_i_reg_2231 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_4402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
        i19_0_i_reg_2302 <= i_11_reg_7085;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        i19_0_i_reg_2302 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        i25_0_i_reg_2421 <= i_15_reg_7383;
    end else if ((1'b1 == ap_CS_fsm_state174)) begin
        i25_0_i_reg_2421 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln349_fu_5925_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state207))) begin
        i30_0_reg_2590 <= 9'd0;
    end else if (((icmp_ln361_fu_6082_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state216))) begin
        i30_0_reg_2590 <= i_17_reg_7835;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln360_fu_6054_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state215))) begin
        i33_0_reg_2660 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        i33_0_reg_2660 <= i_18_reg_7925;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_1_fu_4130_p2 == 1'd1) & (icmp_ln16_fu_4124_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state107))) begin
        i_0_i43_reg_2198 <= 3'd0;
    end else if (((icmp_ln23_fu_4160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        i_0_i43_reg_2198 <= i_8_reg_6904;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_4300_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state121))) begin
        i_0_i49_reg_2432 <= 3'd0;
    end else if (((icmp_ln91_fu_4752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state184))) begin
        i_0_i49_reg_2432 <= i_12_fu_4758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_3483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        i_0_i_i_i_reg_1941 <= 4'd0;
    end else if (((icmp_ln123_fu_3495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        i_0_i_i_i_reg_1941 <= i_4_fu_3501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_0_i_reg_1996 <= i_7_reg_6603;
    end else if (((1'b0 == ap_block_state42_on_subcall_done) & (1'b1 == ap_CS_fsm_state42))) begin
        i_0_i_reg_1996 <= i_5_cast_reg_6548;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln339_fu_5021_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state195))) begin
        i_0_reg_2531 <= 3'd0;
    end else if (((icmp_ln350_fu_5961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state208))) begin
        i_0_reg_2531 <= i_16_reg_7732;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_3619_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        i_5_reg_1973 <= j_2_reg_6556;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        i_5_reg_1973 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln304_fu_3416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        input_assign_reg_1918 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        input_assign_reg_1918 <= i_6_reg_6462;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_4250_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state115))) begin
        j18_0_i_reg_2242 <= j_5_reg_6965;
    end else if (((icmp_ln31_fu_4199_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state113))) begin
        j18_0_i_reg_2242 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        j20_0_i_reg_2314 <= j_9_reg_7118;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        j20_0_i_reg_2314 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        j22_0_i_reg_2337 <= j_8_reg_7187;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        j22_0_i_reg_2337 <= zext_ln55_reg_7143;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_4477_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state132))) begin
        j23_0_in_i_reg_2346 <= zext_ln55_reg_7143;
    end else if (((icmp_ln63_fu_4541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state143))) begin
        j23_0_in_i_reg_2346 <= j_11_reg_7192;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        j24_0_in_i_reg_2412 <= j_10_reg_7286;
    end else if (((tmp_72_fu_4582_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state149))) begin
        j24_0_in_i_reg_2412 <= sext_ln71_fu_4578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln225_fu_3558_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        j24_0_reg_2005 <= 11'd0;
    end else if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        j24_0_reg_2005 <= j_1_reg_6611;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln353_fu_6000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state209))) begin
        j29_0_reg_2542 <= j_12_reg_7750;
    end else if (((icmp_ln349_fu_5925_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state207))) begin
        j29_0_reg_2542 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln364_fu_6113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state217))) begin
        j31_0_reg_2601 <= j_13_reg_7853;
    end else if (((icmp_ln360_fu_6054_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state215))) begin
        j31_0_reg_2601 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_4136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        j_0_i44_reg_2209 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        j_0_i44_reg_2209 <= j_3_reg_6917;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_4773_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state185))) begin
        j_0_in_i_reg_2466 <= zext_ln95_fu_4769_p1;
    end else if ((1'b1 == ap_CS_fsm_state188)) begin
        j_0_in_i_reg_2466 <= j_15_reg_7420;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln303_fu_3396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        j_0_reg_1906 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        j_0_reg_1906 <= j_reg_6428;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_4360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state123))) begin
        j_14_reg_2325 <= 2'd0;
    end else if (((icmp_ln61_fu_4510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state141))) begin
        j_14_reg_2325 <= i_13_reg_7153;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_fu_3376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        jj_0_reg_2016 <= 11'd0;
    end else if (((icmp_ln384_fu_6181_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state223))) begin
        jj_0_reg_2016 <= jj_reg_6661;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state222)) begin
        k32_0_reg_2638 <= k_4_reg_7876;
    end else if (((icmp_ln361_fu_6082_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state216))) begin
        k32_0_reg_2638 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        k34_0_reg_2683 <= k_3_reg_7948;
    end else if (((icmp_ln384_fu_6181_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state223))) begin
        k34_0_reg_2683 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        k_0_i_reg_2279 <= k_reg_6988;
    end else if (((icmp_ln32_fu_4223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state114))) begin
        k_0_i_reg_2279 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state214)) begin
        k_0_reg_2579 <= k_2_reg_7773;
    end else if (((icmp_ln350_fu_5961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state208))) begin
        k_0_reg_2579 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln319_fu_3794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state74))) begin
        l25_0_reg_2027 <= l_1_reg_6679;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        l25_0_reg_2027 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        l_0_i_reg_2095 <= l_2_reg_6783;
    end else if (((icmp_ln110_fu_3891_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state86))) begin
        l_0_i_reg_2095 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_1_fu_3370_p2 == 1'd1) & (icmp_ln296_fu_3364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        l_0_reg_1884 <= 4'd0;
    end else if (((icmp_ln303_fu_3396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        l_0_reg_1884 <= l_reg_6400;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        m_0_i_reg_2376 <= m_reg_7314;
    end else if (((icmp_ln55_fu_4439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        m_0_i_reg_2376 <= 3'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln318_fu_3745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        n26_0_reg_2038 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        n26_0_reg_2038 <= n_reg_6697;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_fu_3651_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        n_0_reg_1895 <= n_1_reg_6414;
    end else if (((icmp_ln302_fu_3376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        n_0_reg_1895 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_3728_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
        p_016_rec_reg_2705 <= 9'd0;
    end else if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == ap_CS_fsm_state234))) begin
        p_016_rec_reg_2705 <= i_reg_8006;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_3483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        p_0_i_i_i_reg_1952 <= trunc_ln120_fu_3475_p1;
    end else if (((icmp_ln123_fu_3495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        p_0_i_i_i_reg_1952 <= zext_ln125_fu_3533_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        p_r_M_imag_reg_2071 <= grp_fu_2770_p2;
    end else if (((icmp_ln110_fu_3891_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state86))) begin
        p_r_M_imag_reg_2071 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        p_r_M_real_reg_2083 <= grp_fu_2765_p2;
    end else if (((icmp_ln110_fu_3891_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state86))) begin
        p_r_M_real_reg_2083 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_3619_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        p_x_assign_5_reg_1984 <= reg_2964;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        p_x_assign_5_reg_1984 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        p_x_assign_reg_2364 <= grp_fu_2765_p2;
    end else if (((icmp_ln55_fu_4439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
        p_x_assign_reg_2364 <= 32'd1065353216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_4010_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        phi_ln13_1_reg_2118 <= add_ln13_1_fu_3990_p2;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        phi_ln13_1_reg_2118 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_3863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        phi_ln13_reg_2106 <= 2'd0;
    end else if (((icmp_ln13_fu_4010_p2 == 1'd1) & (icmp_ln13_1_fu_4016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        phi_ln13_reg_2106 <= add_ln13_reg_6837;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_4048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
        phi_ln14_1_reg_2141 <= add_ln14_1_fu_4028_p2;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        phi_ln14_1_reg_2141 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_1_fu_4016_p2 == 1'd1) & (icmp_ln13_fu_4010_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        phi_ln14_reg_2129 <= 2'd0;
    end else if (((icmp_ln14_fu_4048_p2 == 1'd1) & (icmp_ln14_1_fu_4054_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
        phi_ln14_reg_2129 <= add_ln14_reg_6853;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_fu_4086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
        phi_ln15_1_reg_2164 <= add_ln15_1_fu_4066_p2;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        phi_ln15_1_reg_2164 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_1_fu_4054_p2 == 1'd1) & (icmp_ln14_fu_4048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
        phi_ln15_reg_2152 <= 2'd0;
    end else if (((icmp_ln15_fu_4086_p2 == 1'd1) & (icmp_ln15_1_fu_4092_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
        phi_ln15_reg_2152 <= add_ln15_reg_6869;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_fu_4124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        phi_ln16_1_reg_2187 <= add_ln16_1_fu_4104_p2;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        phi_ln16_1_reg_2187 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_1_fu_4092_p2 == 1'd1) & (icmp_ln15_fu_4086_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state105))) begin
        phi_ln16_reg_2175 <= 2'd0;
    end else if (((icmp_ln16_fu_4124_p2 == 1'd1) & (icmp_ln16_1_fu_4130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        phi_ln16_reg_2175 <= add_ln16_reg_6885;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_fu_3172_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln291_1_reg_1746 <= add_ln291_1_fu_3152_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln291_1_reg_1746 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_fu_3172_p2 == 1'd1) & (icmp_ln291_1_fu_3178_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln291_reg_1734 <= add_ln291_reg_6299;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln291_reg_1734 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln292_fu_3210_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln292_1_reg_1769 <= add_ln292_1_fu_3190_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln292_1_reg_1769 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_1_fu_3178_p2 == 1'd1) & (icmp_ln291_fu_3172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln292_reg_1757 <= 2'd0;
    end else if (((icmp_ln292_fu_3210_p2 == 1'd1) & (icmp_ln292_1_fu_3216_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln292_reg_1757 <= add_ln292_reg_6315;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_phi_ln293_1_phi_fu_1796_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln293_1_reg_1792 <= xor_ln293_fu_3228_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_ln293_1_reg_1792 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln292_1_fu_3216_p2 == 1'd1) & (icmp_ln292_fu_3210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln293_reg_1780 <= 2'd0;
    end else if (((ap_phi_mux_phi_ln293_1_phi_fu_1796_p4 == 1'd1) & (icmp_ln293_fu_3248_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln293_reg_1780 <= add_ln293_reg_6331;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln294_fu_3280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln294_1_reg_1815 <= add_ln294_1_fu_3260_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_ln294_1_reg_1815 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_3248_p2 == 1'd1) & (ap_phi_mux_phi_ln293_1_phi_fu_1796_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln294_reg_1803 <= 2'd0;
    end else if (((icmp_ln294_fu_3280_p2 == 1'd1) & (icmp_ln294_1_fu_3286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln294_reg_1803 <= add_ln294_reg_6344;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln295_fu_3318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_ln295_1_reg_1838 <= add_ln295_1_fu_3298_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        phi_ln295_1_reg_1838 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln294_1_fu_3286_p2 == 1'd1) & (icmp_ln294_fu_3280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln295_reg_1826 <= 9'd0;
    end else if (((icmp_ln295_fu_3318_p2 == 1'd1) & (icmp_ln295_1_fu_3324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_ln295_reg_1826 <= add_ln295_reg_6360;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_fu_3364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        phi_ln296_1_reg_1873 <= add_ln296_1_fu_3342_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_ln296_1_reg_1873 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln295_1_fu_3324_p2 == 1'd1) & (icmp_ln295_fu_3318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_ln296_reg_1849 <= 2'd0;
    end else if (((icmp_ln296_fu_3364_p2 == 1'd1) & (icmp_ln296_1_fu_3370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        phi_ln296_reg_1849 <= add_ln296_reg_6381;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state222)) begin
        phi_mul11_reg_2649 <= add_ln366_2_reg_7891;
    end else if (((icmp_ln361_fu_6082_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state216))) begin
        phi_mul11_reg_2649 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state229)) begin
        phi_mul13_reg_2694 <= add_ln389_2_reg_7963;
    end else if (((icmp_ln384_fu_6181_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state223))) begin
        phi_mul13_reg_2694 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_4918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state191))) begin
        phi_mul9_reg_2508 <= 11'd0;
    end else if (((icmp_ln341_fu_5038_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state198))) begin
        phi_mul9_reg_2508 <= add_ln339_reg_7540;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln295_1_fu_3324_p2 == 1'd1) & (icmp_ln295_fu_3318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_mul_reg_1861 <= 11'd0;
    end else if (((icmp_ln296_fu_3364_p2 == 1'd1) & (icmp_ln296_1_fu_3370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        phi_mul_reg_1861 <= add_ln296_2_reg_6376;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        q_0_i_reg_2355 <= q_1_reg_7238;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        q_0_i_reg_2355 <= zext_ln55_reg_7143;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | ((data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53)))) begin
        reg_2974 <= FFT_Buffer_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        reg_2974 <= FFT_Buffer_re_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | ((data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53)))) begin
        reg_2983 <= FFT_Buffer_im_q0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        reg_2983 <= FFT_Buffer_im_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_3483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        reversed_reg_1930 <= 32'd0;
    end else if (((icmp_ln123_fu_3495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        reversed_reg_1930 <= rev_fu_3515_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_3483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        stage_0_i_reg_1961 <= 4'd1;
    end else if (((icmp_ln235_fu_3592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        stage_0_i_reg_1961 <= stage_fu_3603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_4918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state191))) begin
        x27_0_reg_2497 <= 3'd0;
    end else if (((icmp_ln341_fu_5038_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state198))) begin
        x27_0_reg_2497 <= x_2_reg_7548;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln318_fu_3745_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
        x_0_i_reg_2049 <= 3'd0;
    end else if (((icmp_ln110_fu_3891_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
        x_0_i_reg_2049 <= x_reg_6742;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_4773_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state185))) begin
        x_0_reg_2475 <= 3'd0;
    end else if (((icmp_ln330_fu_4972_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state192))) begin
        x_0_reg_2475 <= x_1_reg_7474;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state206_on_subcall_done) & (1'b1 == ap_CS_fsm_state206))) begin
        y28_0_reg_2520 <= y_1_reg_7566;
    end else if ((1'b1 == ap_CS_fsm_state197)) begin
        y28_0_reg_2520 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        y_0_i_reg_2060 <= y_reg_6760;
    end else if (((icmp_ln109_fu_3863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        y_0_i_reg_2060 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_4918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state191))) begin
        y_0_reg_2486 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state194)) begin
        y_0_reg_2486 <= y_2_reg_7507;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln361_fu_6082_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state216))) begin
        AUU_M_imag_addr_2_reg_7868 <= zext_ln368_3_fu_6107_p1;
        AUU_M_real_addr_2_reg_7863 <= zext_ln368_3_fu_6107_p1;
        zext_ln368_1_reg_7858[2 : 0] <= zext_ln368_1_fu_6094_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        B_V_reg_7654 <= B_V_fu_5396_p1;
        B_squared_V_reg_7664 <= {{r_V_37_fu_5414_p2[97:49]}};
        Ex_V_reg_7642 <= Ex_V_fu_5304_p2;
        Mx_V_reg_7637 <= {{r_V_35_fu_5284_p2[123:61]}};
        cos_basis_reg_7647 <= cos_basis_fu_5364_p10;
        icmp_ln833_2_reg_7701 <= icmp_ln833_2_fu_5458_p2;
        icmp_ln833_reg_7695 <= icmp_ln833_fu_5453_p2;
        p_Val2_70_reg_7632 <= p_Val2_70_fu_5207_p3;
        r_V_22_reg_7659[48 : 0] <= r_V_22_fu_5410_p1[48 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_fu_3495_p2 == 1'd1) & (icmp_ln160_fu_3537_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        FFT_Buffer_im_addr_1_reg_6501 <= zext_ln162_fu_3542_p1;
        FFT_Buffer_im_addr_2_reg_6507 <= zext_ln163_fu_3548_p1;
        FFT_Buffer_re_addr_1_reg_6489 <= zext_ln162_fu_3542_p1;
        FFT_Buffer_re_addr_2_reg_6495 <= zext_ln163_fu_3548_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_3619_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        FFT_Buffer_im_addr_4_reg_6586 <= sext_ln250_fu_3630_p1;
        FFT_Buffer_im_addr_5_reg_6597 <= sext_ln253_fu_3636_p1;
        FFT_Buffer_re_addr_4_reg_6581 <= sext_ln250_fu_3630_p1;
        FFT_Buffer_re_addr_5_reg_6591 <= sext_ln253_fu_3636_p1;
        i_7_reg_6603 <= i_7_fu_3642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == P_sm_data_1_load_A)) begin
        P_sm_data_1_payload_A <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == P_sm_data_1_load_B)) begin
        P_sm_data_1_payload_B <= w_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == P_sm_last_V_1_load_A)) begin
        P_sm_last_V_1_payload_A <= icmp_ln397_reg_8021;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == P_sm_last_V_1_load_B)) begin
        P_sm_last_V_1_payload_B <= icmp_ln397_reg_8021;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == P_sm_user_V_1_load_A)) begin
        P_sm_user_V_1_payload_A <= icmp_ln396_reg_8016;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == P_sm_user_V_1_load_B)) begin
        P_sm_user_V_1_payload_B <= icmp_ln396_reg_8016;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_4360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state123))) begin
        Rx_temp_M_imag_addr_2_reg_7100 <= zext_ln49_2_fu_4394_p1;
        Rx_temp_M_real_addr_2_reg_7095 <= zext_ln49_2_fu_4394_p1;
        zext_ln49_1_reg_7090[4 : 2] <= zext_ln49_1_fu_4384_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_4477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state132))) begin
        Rx_temp_M_imag_addr_4_reg_7182 <= sext_ln59_fu_4492_p1;
        Rx_temp_M_real_addr_4_reg_7177 <= sext_ln59_fu_4492_p1;
        j_8_reg_7187 <= j_8_fu_4498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_fu_4582_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state149))) begin
        Rx_temp_M_imag_addr_5_reg_7271 <= zext_ln78_fu_4612_p1;
        Rx_temp_M_real_addr_5_reg_7266 <= zext_ln78_fu_4612_p1;
        U_M_imag_addr_3_reg_7281 <= zext_ln80_fu_4623_p1;
        U_M_real_addr_3_reg_7276 <= zext_ln80_fu_4623_p1;
        sext_ln78_reg_7261[5 : 2] <= sext_ln78_fu_4602_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state146)) begin
        Rx_temp_M_imag_addr_8_reg_7248 <= sext_ln65_fu_4573_p1;
        Rx_temp_M_real_addr_8_reg_7243 <= sext_ln65_fu_4573_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        U_M_imag_addr_2_reg_7072 <= zext_ln1067_fu_4354_p1;
        U_M_real_addr_2_reg_7067 <= zext_ln1067_fu_4354_p1;
        eigval_temp_reg_7077 <= eig_mat_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_4717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state175))) begin
        U_M_imag_addr_5_reg_7393 <= zext_ln85_1_fu_4746_p1;
        U_M_real_addr_5_reg_7388 <= zext_ln85_1_fu_4746_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_4918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state191))) begin
        Un_M_imag_addr_1_reg_7494[2 : 1] <= zext_ln332_1_fu_4950_p1[2 : 1];
        Un_M_imag_addr_2_reg_7499[2 : 1] <= tmp_52_fu_4962_p3[2 : 1];
        Un_M_real_addr_1_reg_7484[2 : 1] <= zext_ln332_1_fu_4950_p1[2 : 1];
        Un_M_real_addr_2_reg_7489[2 : 1] <= tmp_52_fu_4962_p3[2 : 1];
        zext_ln332_reg_7479[4 : 2] <= zext_ln332_fu_4938_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        add_ln13_reg_6837 <= add_ln13_fu_3984_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        add_ln14_reg_6853 <= add_ln14_fu_4022_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        add_ln15_reg_6869 <= add_ln15_fu_4060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        add_ln16_reg_6885 <= add_ln16_fu_4098_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln291_reg_6299 <= add_ln291_fu_3146_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln292_reg_6315 <= add_ln292_fu_3184_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln293_reg_6331 <= add_ln293_fu_3222_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln294_reg_6344 <= add_ln294_fu_3254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln295_reg_6360 <= add_ln295_fu_3292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln296_2_reg_6376 <= add_ln296_2_fu_3330_p2;
        add_ln296_reg_6381 <= add_ln296_fu_3336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln304_fu_3416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        add_ln305_2_reg_6433 <= add_ln305_2_fu_3454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_fu_3651_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        add_ln310_2_reg_6626 <= add_ln310_2_fu_3695_p2;
        zext_ln310_2_reg_6621[16 : 0] <= zext_ln310_2_fu_3691_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        add_ln311_reg_6642 <= add_ln311_fu_3710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln319_fu_3794_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state74))) begin
        add_ln321_2_reg_6702 <= add_ln321_2_fu_3823_p2;
        add_ln321_3_reg_6712 <= add_ln321_3_fu_3833_p2;
        add_ln322_reg_6707 <= add_ln322_fu_3828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln330_fu_4972_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state192))) begin
        add_ln332_reg_7512 <= add_ln332_fu_4993_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state195)) begin
        add_ln339_reg_7540 <= add_ln339_fu_5015_p2;
        x_2_reg_7548 <= x_2_fu_5027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln341_fu_5038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state198))) begin
        add_ln344_reg_7571 <= add_ln344_fu_5059_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln364_fu_6113_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state217))) begin
        add_ln366_2_reg_7891 <= add_ln366_2_fu_6148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_6213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state224))) begin
        add_ln389_2_reg_7963 <= add_ln389_2_fu_6240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_4541_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state143))) begin
        add_ln65_reg_7223 <= add_ln65_fu_4551_p2;
        q_1_reg_7238 <= q_1_fu_4567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state42_on_subcall_done) & (1'b1 == ap_CS_fsm_state42))) begin
        c_reg_6566 <= grp_sin_or_cos_float_s_fu_2726_ap_return;
        s_reg_6572 <= grp_sin_or_cos_float_s_fu_2742_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state200)) begin
        closepath_reg_7600 <= closepath_fu_5091_p2;
        results_sign_V_2_reg_7581 <= p_Val2_s_fu_5065_p1[32'd63];
        tmp_V_4_reg_7594 <= tmp_V_4_fu_5087_p1;
        tmp_V_reg_7587 <= {{p_Val2_s_fu_5065_p1[62:52]}};
        trunc_ln601_reg_7611 <= trunc_ln601_fu_5126_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        count_reg_7050 <= count_fu_4306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
        data_addr_1_read_reg_6729 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state83))) begin
        data_addr_2_read_reg_6734 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        data_addr_read_reg_6444 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_4223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state114))) begin
        eig_mat_M_imag_addr_2_reg_6980 <= zext_ln39_1_fu_4244_p1;
        eig_mat_M_real_addr_3_reg_6975 <= zext_ln39_1_fu_4244_p1;
        zext_ln39_reg_6970[2 : 0] <= zext_ln39_fu_4235_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        i_10_reg_6951 <= i_10_fu_4205_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        i_11_reg_7085 <= i_11_fu_4366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        i_13_reg_7153 <= i_13_fu_4445_p2;
        zext_ln55_reg_7143[1 : 0] <= zext_ln55_fu_4435_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state185)) begin
        i_14_reg_7415 <= i_14_fu_4779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state175)) begin
        i_15_reg_7383 <= i_15_fu_4723_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state207)) begin
        i_16_reg_7732 <= i_16_fu_5931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state215)) begin
        i_17_reg_7835 <= i_17_fu_6060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state223)) begin
        i_18_reg_7925 <= i_18_fu_6187_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_5_cast_reg_6548[9 : 0] <= i_5_cast_fu_3588_p1[9 : 0];
        j_2_reg_6556 <= j_2_fu_3597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_6_reg_6462 <= i_6_fu_3489_p2;
        zext_ln120_reg_6454[10 : 0] <= zext_ln120_fu_3479_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        i_8_reg_6904 <= i_8_fu_4142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_9_reg_6943 <= i_9_fu_4193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (1'b1 == ap_CS_fsm_state232))) begin
        i_reg_8006 <= i_fu_6263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_fu_3495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        icmp_ln160_reg_6485 <= icmp_ln160_fu_3537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state193)) begin
        icmp_ln331_reg_7532 <= icmp_ln331_fu_5003_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln331_fu_5003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state193))) begin
        icmp_ln333_reg_7536 <= icmp_ln333_fu_5009_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (icmp_ln394_fu_6257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state232))) begin
        icmp_ln396_reg_8016 <= icmp_ln396_fu_6274_p2;
        icmp_ln397_reg_8021 <= icmp_ln397_fu_6280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_4402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        icmp_ln48_reg_7123 <= icmp_ln48_fu_4414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state201)) begin
        icmp_ln833_1_reg_7626 <= icmp_ln833_1_fu_5170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state150)) begin
        j_10_reg_7286 <= j_10_fu_4629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        j_11_reg_7192 <= j_11_fu_4504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state208)) begin
        j_12_reg_7750 <= j_12_fu_5967_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state216)) begin
        j_13_reg_7853 <= j_13_fu_6088_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state186)) begin
        j_15_reg_7420 <= j_15_fu_4785_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_1_reg_6611 <= j_1_fu_3657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        j_3_reg_6917 <= j_3_fu_4166_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        j_5_reg_6965 <= j_5_fu_4229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        j_9_reg_7118 <= j_9_fu_4408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_6428 <= j_fu_3422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        jj_reg_6661 <= jj_fu_3734_p2;
        zext_ln316_reg_6653[10 : 0] <= zext_ln316_fu_3724_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        k_2_reg_7773 <= k_2_fu_6006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state224)) begin
        k_3_reg_7948 <= k_3_fu_6219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state217)) begin
        k_4_reg_7876 <= k_4_fu_6119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        k_reg_6988 <= k_fu_4256_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        l_1_reg_6679 <= l_1_fu_3751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        l_2_reg_6783 <= l_2_fu_3928_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        l_reg_6400 <= l_fu_3382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_4635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state150))) begin
        m_reg_7314 <= m_fu_4679_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        midsum_reg_7373 <= grp_fu_2929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        n_1_reg_6414 <= n_1_fu_3402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        n_reg_6697 <= n_fu_3800_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        numBF_reg_6543[9 : 0] <= numBF_fu_3585_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cast19_reg_6286[29 : 0] <= p_cast19_fu_3128_p1[29 : 0];
        p_cast_reg_6292[29 : 0] <= p_cast_fu_3142_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state205)) begin
        p_x_assign_6_reg_7723 <= grp_fu_2803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_2953 <= grp_fu_2944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state40))) begin
        reg_2958 <= grp_fu_2914_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | ((1'b0 == ap_block_state42_on_subcall_done) & (1'b1 == ap_CS_fsm_state42)))) begin
        reg_2964 <= grp_fu_2765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_2992 <= grp_fu_2803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_3013 <= grp_fu_2765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_3019 <= grp_fu_2770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state218) | (1'b1 == ap_CS_fsm_state124))) begin
        reg_3039 <= temp_mat_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state129))) begin
        reg_3046 <= Rx_temp_M_real_q0;
        reg_3056 <= Rx_temp_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state135))) begin
        reg_3084 <= grp_fu_2765_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state203)) begin
        result_V_reg_7708 <= {{r_V_44_fu_5671_p2[125:63]}};
        ret_V_19_reg_7713 <= ret_V_19_fu_5692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        sext_ln62_cast_reg_7215[5 : 2] <= sext_ln62_cast_fu_4534_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_fu_3376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        shl_ln_reg_6405[13 : 10] <= shl_ln_fu_3388_p3[13 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_4791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state186))) begin
        sort_index_addr_1_reg_7439 <= sext_ln102_fu_4807_p1;
        sort_index_addr_2_reg_7445 <= zext_ln103_fu_4812_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state189)) begin
        sort_index_load_reg_7466 <= sort_index_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        sum_M_imag_reg_7362 <= grp_fu_2904_p2;
        sum_M_real_reg_7356 <= grp_fu_2898_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        temp_1_reg_6518 <= FFT_Buffer_im_q0;
        temp_reg_6513 <= FFT_Buffer_re_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln110_fu_3891_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state86))) begin
        temp_mat_M_imag_add_1_reg_6775 <= zext_ln116_3_fu_3916_p1;
        temp_mat_M_real_add_1_reg_6770 <= zext_ln116_3_fu_3916_p1;
        zext_ln116_1_reg_6765[2 : 0] <= zext_ln116_1_fu_3903_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln350_fu_5961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state208))) begin
        temp_mat_M_imag_add_5_reg_7765 <= zext_ln357_2_fu_5994_p1;
        temp_mat_M_real_add_5_reg_7760 <= zext_ln357_2_fu_5994_p1;
        zext_ln357_1_reg_7755[3 : 1] <= zext_ln357_1_fu_5985_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_4_reg_6538 <= grp_fu_2950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        tmp_9_i_i_reg_7351 <= grp_fu_2789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_s_reg_6671 <= grp_fu_2937_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_4510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state141))) begin
        trunc_ln62_reg_7200 <= trunc_ln62_fu_4516_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln225_fu_3558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        trunc_ln6_reg_6532 <= {{DFTpts_fu_3564_p2[10:1]}};
        zext_ln227_reg_6526[10 : 0] <= zext_ln227_fu_3570_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_6213_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state224))) begin
        w_addr_1_reg_7978 <= zext_ln389_reg_7930;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state191)) begin
        x_1_reg_7474 <= x_1_fu_4924_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        x_reg_6742 <= x_fu_3869_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        y_1_reg_7566 <= y_1_fu_5044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state192)) begin
        y_2_reg_7507 <= y_2_fu_4978_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        y_reg_6760 <= y_fu_3897_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_4300_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state121))) begin
        zext_ln1044_reg_7055[2 : 0] <= zext_ln1044_fu_4312_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_3863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        zext_ln110_reg_6752[4 : 2] <= zext_ln110_fu_3887_p1[4 : 2];
        zext_ln116_reg_6747[2 : 0] <= zext_ln116_fu_3875_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_4136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        zext_ln23_reg_6909[4 : 2] <= zext_ln23_fu_4156_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_4160_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state109))) begin
        zext_ln24_1_reg_6922[5 : 0] <= zext_ln24_1_fu_4181_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln303_fu_3396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        zext_ln304_1_reg_6419[2 : 0] <= zext_ln304_1_fu_3408_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln318_fu_3745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        zext_ln319_reg_6689[15 : 2] <= zext_ln319_fu_3790_p1[15 : 2];
        zext_ln321_reg_6684[5 : 2] <= zext_ln321_fu_3765_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_4199_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state113))) begin
        zext_ln32_reg_6956[4 : 2] <= zext_ln32_fu_4219_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln349_fu_5925_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state207))) begin
        zext_ln350_reg_7742[4 : 2] <= zext_ln350_fu_5957_p1[4 : 2];
        zext_ln357_reg_7737[3 : 1] <= zext_ln357_fu_5945_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln360_fu_6054_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state215))) begin
        zext_ln361_reg_7845[10 : 2] <= zext_ln361_fu_6078_p1[10 : 2];
        zext_ln368_reg_7840[8 : 0] <= zext_ln368_fu_6066_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln384_fu_6181_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state223))) begin
        zext_ln387_reg_7940[10 : 2] <= zext_ln387_fu_6209_p1[10 : 2];
        zext_ln389_1_reg_7935[8 : 0] <= zext_ln389_1_fu_6197_p1[8 : 0];
        zext_ln389_reg_7930[8 : 0] <= zext_ln389_fu_6193_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_4402_p2 == 1'd0) & (icmp_ln48_fu_4414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
        zext_ln51_1_reg_7127[5 : 0] <= zext_ln51_1_fu_4429_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        zext_ln56_reg_7168[3 : 2] <= zext_ln56_fu_4473_p1[3 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state224)) begin
        AUU_M_imag_address0 = zext_ln389_3_fu_6234_p1;
    end else if ((1'b1 == ap_CS_fsm_state217)) begin
        AUU_M_imag_address0 = AUU_M_imag_addr_2_reg_7868;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_imag_address0 = zext_ln1027_5_fu_3312_p1;
    end else begin
        AUU_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state11))) begin
        AUU_M_imag_ce0 = 1'b1;
    end else begin
        AUU_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state217)) begin
        AUU_M_imag_d0 = complex_M_imag_read_3_reg_2612;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_imag_d0 = 32'd0;
    end else begin
        AUU_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln364_fu_6113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state217)))) begin
        AUU_M_imag_we0 = 1'b1;
    end else begin
        AUU_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state224)) begin
        AUU_M_real_address0 = zext_ln389_3_fu_6234_p1;
    end else if ((1'b1 == ap_CS_fsm_state217)) begin
        AUU_M_real_address0 = AUU_M_real_addr_2_reg_7863;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_real_address0 = zext_ln1027_5_fu_3312_p1;
    end else begin
        AUU_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state11))) begin
        AUU_M_real_ce0 = 1'b1;
    end else begin
        AUU_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state217)) begin
        AUU_M_real_d0 = complex_M_real_read_3_reg_2625;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        AUU_M_real_d0 = 32'd0;
    end else begin
        AUU_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln364_fu_6113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state217)))) begin
        AUU_M_real_we0 = 1'b1;
    end else begin
        AUU_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln114_7_fu_3962_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln321_5_fu_3858_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_i_address0 = zext_ln1027_fu_3166_p1;
    end else begin
        Autocorr_Buffer_M_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state3))) begin
        Autocorr_Buffer_M_i_ce0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Autocorr_Buffer_M_i_ce1 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        Autocorr_Buffer_M_i_d0 = data_addr_2_read_reg_6734;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_i_d0 = 32'd0;
    end else begin
        Autocorr_Buffer_M_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state3))) begin
        Autocorr_Buffer_M_i_we0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln114_7_fu_3962_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln321_5_fu_3858_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_r_address0 = zext_ln1027_fu_3166_p1;
    end else begin
        Autocorr_Buffer_M_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state3))) begin
        Autocorr_Buffer_M_r_ce0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Autocorr_Buffer_M_r_ce1 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        Autocorr_Buffer_M_r_d0 = data_addr_1_read_reg_6729;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Autocorr_Buffer_M_r_d0 = 32'd0;
    end else begin
        Autocorr_Buffer_M_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state3))) begin
        Autocorr_Buffer_M_r_we0 = 1'b1;
    end else begin
        Autocorr_Buffer_M_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        FFT_Buffer_im_address0 = zext_ln310_fu_3663_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state46))) begin
        FFT_Buffer_im_address0 = FFT_Buffer_im_addr_5_reg_6597;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        FFT_Buffer_im_address0 = FFT_Buffer_im_addr_2_reg_6507;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        FFT_Buffer_im_address0 = zext_ln162_fu_3542_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        FFT_Buffer_im_address0 = zext_ln305_2_fu_3469_p1;
    end else begin
        FFT_Buffer_im_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        FFT_Buffer_im_address1 = FFT_Buffer_im_addr_5_reg_6597;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        FFT_Buffer_im_address1 = FFT_Buffer_im_addr_4_reg_6586;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        FFT_Buffer_im_address1 = sext_ln250_fu_3630_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        FFT_Buffer_im_address1 = FFT_Buffer_im_addr_1_reg_6501;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        FFT_Buffer_im_address1 = zext_ln163_fu_3548_p1;
    end else begin
        FFT_Buffer_im_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state46))) begin
        FFT_Buffer_im_ce0 = 1'b1;
    end else begin
        FFT_Buffer_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        FFT_Buffer_im_ce1 = 1'b1;
    end else begin
        FFT_Buffer_im_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        FFT_Buffer_im_d0 = temp_1_reg_6518;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        FFT_Buffer_im_d0 = 32'd0;
    end else begin
        FFT_Buffer_im_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state51))) begin
        FFT_Buffer_im_d1 = grp_fu_2770_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        FFT_Buffer_im_d1 = FFT_Buffer_im_q1;
    end else begin
        FFT_Buffer_im_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln160_reg_6485 == 1'd0) & (1'b1 == ap_CS_fsm_state29)))) begin
        FFT_Buffer_im_we0 = 1'b1;
    end else begin
        FFT_Buffer_im_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state28))) begin
        FFT_Buffer_im_we1 = 1'b1;
    end else begin
        FFT_Buffer_im_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        FFT_Buffer_re_address0 = zext_ln310_fu_3663_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state46))) begin
        FFT_Buffer_re_address0 = FFT_Buffer_re_addr_5_reg_6591;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        FFT_Buffer_re_address0 = FFT_Buffer_re_addr_2_reg_6495;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        FFT_Buffer_re_address0 = zext_ln162_fu_3542_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        FFT_Buffer_re_address0 = zext_ln305_2_fu_3469_p1;
    end else begin
        FFT_Buffer_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        FFT_Buffer_re_address1 = FFT_Buffer_re_addr_5_reg_6591;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        FFT_Buffer_re_address1 = FFT_Buffer_re_addr_4_reg_6581;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        FFT_Buffer_re_address1 = sext_ln250_fu_3630_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        FFT_Buffer_re_address1 = FFT_Buffer_re_addr_1_reg_6489;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        FFT_Buffer_re_address1 = zext_ln163_fu_3548_p1;
    end else begin
        FFT_Buffer_re_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state46))) begin
        FFT_Buffer_re_ce0 = 1'b1;
    end else begin
        FFT_Buffer_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        FFT_Buffer_re_ce1 = 1'b1;
    end else begin
        FFT_Buffer_re_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        FFT_Buffer_re_d0 = temp_reg_6513;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        FFT_Buffer_re_d0 = data_addr_read_reg_6444;
    end else begin
        FFT_Buffer_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state51))) begin
        FFT_Buffer_re_d1 = grp_fu_2765_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        FFT_Buffer_re_d1 = FFT_Buffer_re_q1;
    end else begin
        FFT_Buffer_re_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln160_reg_6485 == 1'd0) & (1'b1 == ap_CS_fsm_state29)))) begin
        FFT_Buffer_re_we0 = 1'b1;
    end else begin
        FFT_Buffer_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state28))) begin
        FFT_Buffer_re_we1 = 1'b1;
    end else begin
        FFT_Buffer_re_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state234) | (1'b1 == ap_CS_fsm_state233))) begin
        P_sm_TDATA_blk_n = P_sm_data_1_state[1'd1];
    end else begin
        P_sm_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == P_sm_data_1_sel)) begin
        P_sm_data_1_data_out = P_sm_data_1_payload_B;
    end else begin
        P_sm_data_1_data_out = P_sm_data_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == ap_CS_fsm_state233))) begin
        P_sm_data_1_vld_in = 1'b1;
    end else begin
        P_sm_data_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == P_sm_last_V_1_sel)) begin
        P_sm_last_V_1_data_out = P_sm_last_V_1_payload_B;
    end else begin
        P_sm_last_V_1_data_out = P_sm_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == ap_CS_fsm_state233))) begin
        P_sm_last_V_1_vld_in = 1'b1;
    end else begin
        P_sm_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == P_sm_user_V_1_sel)) begin
        P_sm_user_V_1_data_out = P_sm_user_V_1_payload_B;
    end else begin
        P_sm_user_V_1_data_out = P_sm_user_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == ap_CS_fsm_state233))) begin
        P_sm_user_V_1_vld_in = 1'b1;
    end else begin
        P_sm_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        Q_temp_M_imag_address0 = zext_ln37_2_fu_4283_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        Q_temp_M_imag_address0 = zext_ln1027_6_fu_4004_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_imag_address0 = grp_qrf_top_fu_2716_Q_M_imag_address0;
    end else begin
        Q_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state101))) begin
        Q_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_imag_ce0 = grp_qrf_top_fu_2716_Q_M_imag_ce0;
    end else begin
        Q_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Q_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_imag_d0 = grp_qrf_top_fu_2716_Q_M_imag_d0;
    end else begin
        Q_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Q_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_imag_we0 = grp_qrf_top_fu_2716_Q_M_imag_we0;
    end else begin
        Q_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        Q_temp_M_real_address0 = zext_ln37_2_fu_4283_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        Q_temp_M_real_address0 = zext_ln1027_6_fu_4004_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_real_address0 = grp_qrf_top_fu_2716_Q_M_real_address0;
    end else begin
        Q_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state101))) begin
        Q_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_real_ce0 = grp_qrf_top_fu_2716_Q_M_real_ce0;
    end else begin
        Q_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Q_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_real_d0 = grp_qrf_top_fu_2716_Q_M_real_d0;
    end else begin
        Q_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        Q_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        Q_temp_M_real_we0 = grp_qrf_top_fu_2716_Q_M_real_we0;
    end else begin
        Q_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        R_temp_M_imag_address0 = zext_ln37_3_fu_4294_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        R_temp_M_imag_address0 = zext_ln1027_7_fu_4042_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_imag_address0 = grp_qrf_top_fu_2716_R_M_imag_address0;
    end else begin
        R_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state103))) begin
        R_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_imag_ce0 = grp_qrf_top_fu_2716_R_M_imag_ce0;
    end else begin
        R_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        R_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_imag_d0 = grp_qrf_top_fu_2716_R_M_imag_d0;
    end else begin
        R_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        R_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_imag_we0 = grp_qrf_top_fu_2716_R_M_imag_we0;
    end else begin
        R_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        R_temp_M_real_address0 = zext_ln37_3_fu_4294_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        R_temp_M_real_address0 = zext_ln1027_7_fu_4042_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_real_address0 = grp_qrf_top_fu_2716_R_M_real_address0;
    end else begin
        R_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state103))) begin
        R_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_real_ce0 = grp_qrf_top_fu_2716_R_M_real_ce0;
    end else begin
        R_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        R_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_real_d0 = grp_qrf_top_fu_2716_R_M_real_d0;
    end else begin
        R_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        R_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        R_temp_M_real_we0 = grp_qrf_top_fu_2716_R_M_real_we0;
    end else begin
        R_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_fu_4635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state150))) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_5_reg_7271;
    end else if (((icmp_ln74_fu_4635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state150))) begin
        Rx_temp_M_imag_address0 = sext_ln76_fu_4650_p1;
    end else if ((1'b1 == ap_CS_fsm_state148)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_8_reg_7248;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        Rx_temp_M_imag_address0 = sext_ln65_fu_4573_p1;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        Rx_temp_M_imag_address0 = sext_ln65_1_fu_4561_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        Rx_temp_M_imag_address0 = sext_ln62_fu_4528_p1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_4_reg_7182;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        Rx_temp_M_imag_address0 = sext_ln59_fu_4492_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        Rx_temp_M_imag_address0 = zext_ln56_1_fu_4459_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        Rx_temp_M_imag_address0 = zext_ln51_1_reg_7127;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_2_reg_7100;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Rx_temp_M_imag_address0 = zext_ln1027_8_fu_4080_p1;
    end else begin
        Rx_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state105) | ((icmp_ln74_fu_4635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state150)) | ((icmp_ln74_fu_4635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state150)))) begin
        Rx_temp_M_imag_ce0 = 1'b1;
    end else begin
        Rx_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        Rx_temp_M_imag_d0 = grp_fu_2770_p2;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        Rx_temp_M_imag_d0 = grp_fu_2904_p2;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        Rx_temp_M_imag_d0 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        Rx_temp_M_imag_d0 = reg_3039;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Rx_temp_M_imag_d0 = 32'd0;
    end else begin
        Rx_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state105) | ((icmp_ln48_reg_7123 == 1'd0) & (1'b1 == ap_CS_fsm_state127)) | ((icmp_ln48_fu_4414_p2 == 1'd1) & (icmp_ln46_fu_4402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126)))) begin
        Rx_temp_M_imag_we0 = 1'b1;
    end else begin
        Rx_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_fu_4635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state150))) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_5_reg_7266;
    end else if (((icmp_ln74_fu_4635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state150))) begin
        Rx_temp_M_real_address0 = sext_ln76_fu_4650_p1;
    end else if ((1'b1 == ap_CS_fsm_state148)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_8_reg_7243;
    end else if ((1'b1 == ap_CS_fsm_state146)) begin
        Rx_temp_M_real_address0 = sext_ln65_fu_4573_p1;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        Rx_temp_M_real_address0 = sext_ln65_1_fu_4561_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        Rx_temp_M_real_address0 = sext_ln62_fu_4528_p1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_4_reg_7177;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        Rx_temp_M_real_address0 = sext_ln59_fu_4492_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        Rx_temp_M_real_address0 = zext_ln56_1_fu_4459_p1;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        Rx_temp_M_real_address0 = zext_ln51_1_reg_7127;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_2_reg_7095;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Rx_temp_M_real_address0 = zext_ln1027_8_fu_4080_p1;
    end else begin
        Rx_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state105) | ((icmp_ln74_fu_4635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state150)) | ((icmp_ln74_fu_4635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state150)))) begin
        Rx_temp_M_real_ce0 = 1'b1;
    end else begin
        Rx_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        Rx_temp_M_real_d0 = grp_fu_2765_p2;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        Rx_temp_M_real_d0 = grp_fu_2898_p2;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        Rx_temp_M_real_d0 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        Rx_temp_M_real_d0 = reg_2964;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        Rx_temp_M_real_d0 = 32'd0;
    end else begin
        Rx_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state105) | ((icmp_ln48_reg_7123 == 1'd0) & (1'b1 == ap_CS_fsm_state127)) | ((icmp_ln48_fu_4414_p2 == 1'd1) & (icmp_ln46_fu_4402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state126)))) begin
        Rx_temp_M_real_we0 = 1'b1;
    end else begin
        Rx_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln331_fu_5003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state193)) | ((icmp_ln333_fu_5009_p2 == 1'd1) & (icmp_ln331_fu_5003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state193)))) begin
        U_M_imag_address0 = zext_ln332_3_fu_4998_p1;
    end else if ((1'b1 == ap_CS_fsm_state183)) begin
        U_M_imag_address0 = U_M_imag_addr_5_reg_7393;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        U_M_imag_address0 = zext_ln85_1_fu_4746_p1;
    end else if ((1'b1 == ap_CS_fsm_state163)) begin
        U_M_imag_address0 = U_M_imag_addr_3_reg_7281;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        U_M_imag_address0 = sext_ln76_1_fu_4673_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        U_M_imag_address0 = U_M_imag_addr_2_reg_7072;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        U_M_imag_address0 = zext_ln24_1_reg_6922;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        U_M_imag_address0 = zext_ln1027_2_fu_3204_p1;
    end else begin
        U_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln331_fu_5003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state193)) | ((icmp_ln333_fu_5009_p2 == 1'd1) & (icmp_ln331_fu_5003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state193)))) begin
        U_M_imag_ce0 = 1'b1;
    end else begin
        U_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state163))) begin
        U_M_imag_d0 = grp_fu_2904_p2;
    end else if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state5))) begin
        U_M_imag_d0 = 32'd0;
    end else begin
        U_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln55_fu_4439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128)))) begin
        U_M_imag_we0 = 1'b1;
    end else begin
        U_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln331_fu_5003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state193)) | ((icmp_ln333_fu_5009_p2 == 1'd1) & (icmp_ln331_fu_5003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state193)))) begin
        U_M_real_address0 = zext_ln332_3_fu_4998_p1;
    end else if ((1'b1 == ap_CS_fsm_state183)) begin
        U_M_real_address0 = U_M_real_addr_5_reg_7388;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        U_M_real_address0 = zext_ln85_1_fu_4746_p1;
    end else if ((1'b1 == ap_CS_fsm_state163)) begin
        U_M_real_address0 = U_M_real_addr_3_reg_7276;
    end else if ((1'b1 == ap_CS_fsm_state150)) begin
        U_M_real_address0 = sext_ln76_1_fu_4673_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        U_M_real_address0 = U_M_real_addr_2_reg_7067;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        U_M_real_address0 = zext_ln24_1_reg_6922;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        U_M_real_address0 = zext_ln1027_2_fu_3204_p1;
    end else begin
        U_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state175) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln331_fu_5003_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state193)) | ((icmp_ln333_fu_5009_p2 == 1'd1) & (icmp_ln331_fu_5003_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state193)))) begin
        U_M_real_ce0 = 1'b1;
    end else begin
        U_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state163))) begin
        U_M_real_d0 = grp_fu_2898_p2;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        U_M_real_d0 = 32'd1065353216;
    end else if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state5))) begin
        U_M_real_d0 = 32'd0;
    end else begin
        U_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state163) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln55_fu_4439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128)))) begin
        U_M_real_we0 = 1'b1;
    end else begin
        U_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        Un_M_imag_address0 = zext_ln355_3_fu_6032_p1;
    end else if (((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194))) begin
        Un_M_imag_address0 = Un_M_imag_addr_1_reg_7494;
    end else if (((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194))) begin
        Un_M_imag_address0 = Un_M_imag_addr_2_reg_7499;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_imag_address0 = zext_ln1027_3_fu_3242_p1;
    end else begin
        Un_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state7) | ((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194)) | ((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194)))) begin
        Un_M_imag_ce0 = 1'b1;
    end else begin
        Un_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        Un_M_imag_ce1 = 1'b1;
    end else begin
        Un_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194)) | ((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194)))) begin
        Un_M_imag_d0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_imag_d0 = 32'd0;
    end else begin
        Un_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194)) | ((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194)))) begin
        Un_M_imag_we0 = 1'b1;
    end else begin
        Un_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        Un_M_real_address0 = zext_ln355_3_fu_6032_p1;
    end else if (((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194))) begin
        Un_M_real_address0 = Un_M_real_addr_1_reg_7484;
    end else if (((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194))) begin
        Un_M_real_address0 = Un_M_real_addr_2_reg_7489;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_real_address0 = zext_ln1027_3_fu_3242_p1;
    end else begin
        Un_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state7) | ((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194)) | ((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194)))) begin
        Un_M_real_ce0 = 1'b1;
    end else begin
        Un_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        Un_M_real_ce1 = 1'b1;
    end else begin
        Un_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194)) | ((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194)))) begin
        Un_M_real_d0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Un_M_real_d0 = 32'd0;
    end else begin
        Un_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((icmp_ln331_reg_7532 == 1'd1) & (1'b1 == ap_CS_fsm_state194)) | ((icmp_ln333_reg_7536 == 1'd1) & (icmp_ln331_reg_7532 == 1'd0) & (1'b1 == ap_CS_fsm_state194)))) begin
        Un_M_real_we0 = 1'b1;
    end else begin
        Un_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state224)) begin
        a_theta_M_imag_address0 = zext_ln389_4_fu_6251_p1;
    end else if ((1'b1 == ap_CS_fsm_state217)) begin
        a_theta_M_imag_address0 = zext_ln366_2_fu_6159_p1;
    end else if ((1'b1 == ap_CS_fsm_state206)) begin
        a_theta_M_imag_address0 = zext_ln344_1_fu_5905_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_theta_M_imag_address0 = zext_ln1027_11_fu_3358_p1;
    end else begin
        a_theta_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_state206_on_subcall_done) & (1'b1 == ap_CS_fsm_state206)))) begin
        a_theta_M_imag_ce0 = 1'b1;
    end else begin
        a_theta_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        a_theta_M_imag_d0 = bitcast_ln345_1_fu_5920_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_theta_M_imag_d0 = 32'd0;
    end else begin
        a_theta_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_state206_on_subcall_done) & (1'b1 == ap_CS_fsm_state206)))) begin
        a_theta_M_imag_we0 = 1'b1;
    end else begin
        a_theta_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state224)) begin
        a_theta_M_real_address0 = zext_ln389_4_fu_6251_p1;
    end else if ((1'b1 == ap_CS_fsm_state217)) begin
        a_theta_M_real_address0 = zext_ln366_2_fu_6159_p1;
    end else if ((1'b1 == ap_CS_fsm_state206)) begin
        a_theta_M_real_address0 = zext_ln344_1_fu_5905_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_theta_M_real_address0 = zext_ln1027_11_fu_3358_p1;
    end else begin
        a_theta_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state224) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_state206_on_subcall_done) & (1'b1 == ap_CS_fsm_state206)))) begin
        a_theta_M_real_ce0 = 1'b1;
    end else begin
        a_theta_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        a_theta_M_real_d0 = grp_sin_or_cos_float_s_fu_2726_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        a_theta_M_real_d0 = 32'd0;
    end else begin
        a_theta_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_state206_on_subcall_done) & (1'b1 == ap_CS_fsm_state206)))) begin
        a_theta_M_real_we0 = 1'b1;
    end else begin
        a_theta_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (icmp_ln394_fu_6257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state232))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (icmp_ln394_fu_6257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state232))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((data_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state76)) begin
            data_ARADDR = zext_ln322_fu_3848_p1;
        end else if ((1'b1 == ap_CS_fsm_state75)) begin
            data_ARADDR = zext_ln321_4_fu_3838_p1;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            data_ARADDR = zext_ln305_3_fu_3459_p1;
        end else begin
            data_ARADDR = 'bx;
        end
    end else begin
        data_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state76)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state75)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        data_ARVALID = 1'b1;
    end else begin
        data_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) & (1'b0 == ap_block_state54_io))) begin
        data_AWADDR = zext_ln311_fu_3714_p1;
    end else if (((data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
        data_AWADDR = zext_ln310_3_fu_3700_p1;
    end else begin
        data_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state54) & (1'b0 == ap_block_state54_io)) | ((data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53)))) begin
        data_AWVALID = 1'b1;
    end else begin
        data_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state59)))) begin
        data_BREADY = 1'b1;
    end else begin
        data_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state83)) | ((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state24)))) begin
        data_RREADY = 1'b1;
    end else begin
        data_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        data_WDATA = reg_2983;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        data_WDATA = reg_2974;
    end else begin
        data_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((data_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state55)) | ((1'b1 == ap_CS_fsm_state54) & (1'b0 == ap_block_state54_io)))) begin
        data_WVALID = 1'b1;
    end else begin
        data_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state17))) begin
        data_blk_n_AR = m_axi_data_ARREADY;
    end else begin
        data_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53))) begin
        data_blk_n_AW = m_axi_data_AWREADY;
    end else begin
        data_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        data_blk_n_B = m_axi_data_BVALID;
    end else begin
        data_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state24))) begin
        data_blk_n_R = m_axi_data_RVALID;
    end else begin
        data_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54))) begin
        data_blk_n_W = m_axi_data_WREADY;
    end else begin
        data_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        eig_mat_M_imag_address0 = eig_mat_M_imag_addr_2_reg_6980;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        eig_mat_M_imag_address0 = zext_ln24_1_reg_6922;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        eig_mat_M_imag_address0 = zext_ln1027_9_fu_4118_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        eig_mat_M_imag_address0 = grp_qrf_top_fu_2716_A_M_imag_address0;
    end else begin
        eig_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state107))) begin
        eig_mat_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        eig_mat_M_imag_ce0 = grp_qrf_top_fu_2716_A_M_imag_ce0;
    end else begin
        eig_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        eig_mat_M_imag_d0 = complex_M_imag_read_reg_2253;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        eig_mat_M_imag_d0 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        eig_mat_M_imag_d0 = 32'd0;
    end else begin
        eig_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state107) | ((icmp_ln35_fu_4250_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state115)))) begin
        eig_mat_M_imag_we0 = 1'b1;
    end else begin
        eig_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        eig_mat_M_real_address0 = zext_ln1044_2_fu_4334_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        eig_mat_M_real_address0 = eig_mat_M_real_addr_3_reg_6975;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        eig_mat_M_real_address0 = zext_ln24_1_reg_6922;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        eig_mat_M_real_address0 = zext_ln1027_9_fu_4118_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        eig_mat_M_real_address0 = grp_qrf_top_fu_2716_A_M_real_address0;
    end else begin
        eig_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state107))) begin
        eig_mat_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        eig_mat_M_real_ce0 = grp_qrf_top_fu_2716_A_M_real_ce0;
    end else begin
        eig_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        eig_mat_M_real_d0 = complex_M_real_read_reg_2266;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        eig_mat_M_real_d0 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        eig_mat_M_real_d0 = 32'd0;
    end else begin
        eig_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state107) | ((icmp_ln35_fu_4250_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state115)))) begin
        eig_mat_M_real_we0 = 1'b1;
    end else begin
        eig_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state187)) begin
        eigval_address0 = zext_ln97_fu_4817_p1;
    end else if ((1'b1 == ap_CS_fsm_state122)) begin
        eigval_address0 = zext_ln44_fu_4339_p1;
    end else begin
        eigval_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state122))) begin
        eigval_ce0 = 1'b1;
    end else begin
        eigval_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state187)) begin
        eigval_ce1 = 1'b1;
    end else begin
        eigval_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        eigval_we0 = 1'b1;
    end else begin
        eigval_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        fc_ce0 = 1'b1;
    end else begin
        fc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state202)) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state227) | (1'b1 == ap_CS_fsm_state220) | (1'b1 == ap_CS_fsm_state212) | (1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state166) | (1'b1 == ap_CS_fsm_state158) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state146) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state229) | (1'b1 == ap_CS_fsm_state222) | (1'b1 == ap_CS_fsm_state214) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state230) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state46) | ((1'b0 == ap_block_state42_on_subcall_done) & (1'b1 == ap_CS_fsm_state42)))) begin
        grp_fu_2765_ce = 1'b1;
    end else begin
        grp_fu_2765_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state124))) begin
        grp_fu_2765_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state230) | ((icmp_ln235_fu_3592_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41)))) begin
        grp_fu_2765_opcode = 2'd0;
    end else begin
        grp_fu_2765_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        grp_fu_2765_p0 = w_q0;
    end else if ((1'b1 == ap_CS_fsm_state228)) begin
        grp_fu_2765_p0 = complex_M_real_read_4_reg_2671;
    end else if ((1'b1 == ap_CS_fsm_state221)) begin
        grp_fu_2765_p0 = complex_M_real_read_3_reg_2625;
    end else if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_2765_p0 = complex_M_real_read_2_reg_2566;
    end else if ((1'b1 == ap_CS_fsm_state167)) begin
        grp_fu_2765_p0 = p_x_assign_reg_2364;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        grp_fu_2765_p0 = complex_M_real_read_1_reg_2400;
    end else if ((1'b1 == ap_CS_fsm_state147)) begin
        grp_fu_2765_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        grp_fu_2765_p0 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_fu_2765_p0 = complex_M_real_read_reg_2266;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_2765_p0 = p_r_M_real_reg_2083;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_2765_p0 = FFT_Buffer_re_q0;
    end else if (((1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_2765_p0 = grp_fu_2803_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_2765_p0 = p_x_assign_5_reg_1984;
    end else begin
        grp_fu_2765_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state230)) begin
        grp_fu_2765_p1 = complex_M_real_read_4_reg_2671;
    end else if ((1'b1 == ap_CS_fsm_state173)) begin
        grp_fu_2765_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state124)) begin
        grp_fu_2765_p1 = eigval_temp_reg_7077;
    end else if (((1'b1 == ap_CS_fsm_state228) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state147))) begin
        grp_fu_2765_p1 = reg_2964;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_2765_p1 = reg_3013;
    end else if (((1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_2765_p1 = grp_fu_2809_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_2765_p1 = reg_2958;
    end else begin
        grp_fu_2765_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state147))) begin
        grp_fu_2770_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state91))) begin
        grp_fu_2770_opcode = 2'd0;
    end else begin
        grp_fu_2770_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state221)) begin
        grp_fu_2770_p0 = complex_M_imag_read_3_reg_2612;
    end else if ((1'b1 == ap_CS_fsm_state213)) begin
        grp_fu_2770_p0 = complex_M_imag_read_2_reg_2553;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        grp_fu_2770_p0 = complex_M_imag_read_1_reg_2388;
    end else if ((1'b1 == ap_CS_fsm_state147)) begin
        grp_fu_2770_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        grp_fu_2770_p0 = complex_M_imag_read_reg_2253;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_2770_p0 = p_r_M_imag_reg_2071;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_2770_p0 = FFT_Buffer_im_q0;
    end else if (((1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_2770_p0 = grp_fu_2815_p2;
    end else begin
        grp_fu_2770_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state221) | (1'b1 == ap_CS_fsm_state213) | (1'b1 == ap_CS_fsm_state154) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state147))) begin
        grp_fu_2770_p1 = reg_3019;
    end else if (((1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_2770_p1 = grp_fu_2821_p2;
    end else begin
        grp_fu_2770_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state226) | (1'b1 == ap_CS_fsm_state219) | (1'b1 == ap_CS_fsm_state211) | (1'b1 == ap_CS_fsm_state197) | (1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state165) | (1'b1 == ap_CS_fsm_state157) | (1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state164) | (1'b1 == ap_CS_fsm_state210) | (1'b1 == ap_CS_fsm_state205) | (1'b1 == ap_CS_fsm_state196) | (1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state225) | (1'b1 == ap_CS_fsm_state176) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state218) | ((grp_scaled_fixed2ieee_fu_2759_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state204)))) begin
        grp_fu_2803_ce = 1'b1;
    end else begin
        grp_fu_2803_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state225)) begin
        grp_fu_2803_p0 = AUU_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2803_p0 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2803_p0 = Un_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_2803_p0 = reg_2992;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        grp_fu_2803_p0 = reg_2958;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        grp_fu_2803_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_2803_p0 = grp_fu_2929_p2;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_2803_p0 = sum_M_real_reg_7356;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_2803_p0 = p_r_M_real_17_fu_4695_p1;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_2803_p0 = reg_3046;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state129))) begin
        grp_fu_2803_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2803_p0 = R_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2803_p0 = Autocorr_Buffer_M_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_2803_p0 = p_r_M_real_reg_2083;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2803_p0 = FFT_Buffer_re_q1;
    end else begin
        grp_fu_2803_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state225)) begin
        grp_fu_2803_p1 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2803_p1 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2803_p1 = Un_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_2803_p1 = grp_fu_2914_p1;
    end else if ((1'b1 == ap_CS_fsm_state196)) begin
        grp_fu_2803_p1 = p_q0;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        grp_fu_2803_p1 = midsum_reg_7373;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        grp_fu_2803_p1 = grp_fu_2929_p2;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_2803_p1 = sum_M_real_reg_7356;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_2803_p1 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_2803_p1 = reg_3046;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state129))) begin
        grp_fu_2803_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2803_p1 = Q_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2803_p1 = Autocorr_Buffer_M_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_2803_p1 = 32'd1092616192;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2803_p1 = c_reg_6566;
    end else begin
        grp_fu_2803_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state225)) begin
        grp_fu_2809_p0 = AUU_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2809_p0 = p_r_M_imag_23_fu_6175_p1;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2809_p0 = Un_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        grp_fu_2809_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_2809_p0 = sum_M_imag_reg_7362;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_2809_p0 = p_r_M_imag_15_fu_4711_p1;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_2809_p0 = reg_3056;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state129))) begin
        grp_fu_2809_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2809_p0 = R_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2809_p0 = Autocorr_Buffer_M_i_q1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_2809_p0 = p_r_M_imag_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2809_p0 = FFT_Buffer_im_q1;
    end else begin
        grp_fu_2809_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state225)) begin
        grp_fu_2809_p1 = a_theta_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2809_p1 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2809_p1 = p_t_imag_9_fu_6048_p1;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_2809_p1 = sum_M_imag_reg_7362;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_2809_p1 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_2809_p1 = reg_3056;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state129))) begin
        grp_fu_2809_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2809_p1 = Q_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2809_p1 = p_t_imag_fu_3978_p1;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state176))) begin
        grp_fu_2809_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2809_p1 = s_reg_6572;
    end else begin
        grp_fu_2809_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2815_p0 = p_r_M_imag_23_fu_6175_p1;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2815_p0 = Un_M_imag_q1;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        grp_fu_2815_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_2815_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_2815_p0 = reg_3056;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state151))) begin
        grp_fu_2815_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2815_p0 = R_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2815_p0 = Autocorr_Buffer_M_i_q1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_2815_p0 = p_r_M_imag_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2815_p0 = FFT_Buffer_im_q1;
    end else begin
        grp_fu_2815_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2815_p1 = temp_mat_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2815_p1 = Un_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        grp_fu_2815_p1 = midsum_reg_7373;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_2815_p1 = U_M_real_q0;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_2815_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_2815_p1 = reg_3046;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2815_p1 = Q_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2815_p1 = Autocorr_Buffer_M_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_2815_p1 = 32'd1092616192;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2815_p1 = c_reg_6566;
    end else begin
        grp_fu_2815_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2821_p0 = a_theta_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2821_p0 = Un_M_real_q1;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        grp_fu_2821_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        grp_fu_2821_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_2821_p0 = reg_3046;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state151))) begin
        grp_fu_2821_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2821_p0 = R_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2821_p0 = Autocorr_Buffer_M_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_2821_p0 = p_r_M_real_reg_2083;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2821_p0 = FFT_Buffer_re_q1;
    end else begin
        grp_fu_2821_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state218)) begin
        grp_fu_2821_p1 = temp_mat_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state210)) begin
        grp_fu_2821_p1 = p_t_imag_9_fu_6048_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        grp_fu_2821_p1 = U_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state156))) begin
        grp_fu_2821_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_2821_p1 = reg_3056;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_2821_p1 = Q_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_2821_p1 = p_t_imag_fu_3978_p1;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state176))) begin
        grp_fu_2821_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_2821_p1 = s_reg_6572;
    end else begin
        grp_fu_2821_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state136))) begin
        grp_fu_2898_p0 = reg_3084;
    end else if (((1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state95))) begin
        grp_fu_2898_p0 = reg_2964;
    end else begin
        grp_fu_2898_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        grp_fu_2898_p1 = reg_3019;
    end else if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state136))) begin
        grp_fu_2898_p1 = reg_2964;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_2898_p1 = 32'd1120403456;
    end else begin
        grp_fu_2898_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        grp_fu_2904_p0 = tmp_9_i_i_reg_7351;
    end else if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state95))) begin
        grp_fu_2904_p0 = reg_3019;
    end else begin
        grp_fu_2904_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        grp_fu_2904_p1 = reg_3019;
    end else if (((1'b1 == ap_CS_fsm_state179) | (1'b1 == ap_CS_fsm_state136))) begin
        grp_fu_2904_p1 = reg_2964;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_2904_p1 = 32'd1120403456;
    end else begin
        grp_fu_2904_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state204)) begin
        grp_fu_2914_p0 = bitcast_ln512_fu_5900_p1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_2914_p0 = reg_2953;
    end else begin
        grp_fu_2914_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state199)) begin
        grp_fu_2918_p0 = theta_q0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_2918_p0 = fc_q0;
    end else begin
        grp_fu_2918_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state199)) begin
        grp_fu_2937_p1 = 64'd4580687790476549393;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_2937_p1 = 64'd4618760256180340048;
    end else begin
        grp_fu_2937_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_2944_p0 = tmp_s_reg_6671;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_2944_p0 = 64'd13842132293034190366;
    end else begin
        grp_fu_2944_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_2944_p1 = 64'd4644688959446712320;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_2944_p1 = tmp_4_reg_6538;
    end else begin
        grp_fu_2944_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state112_on_subcall_done) & (1'b1 == ap_CS_fsm_state112))) begin
        grp_qrf_top_fu_2716_ap_continue = 1'b1;
    end else begin
        grp_qrf_top_fu_2716_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        grp_sin_or_cos_float_s_fu_2726_t_in = p_x_assign_6_reg_7723;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_sin_or_cos_float_s_fu_2726_t_in = p_x_assign_5_reg_1984;
    end else begin
        grp_sin_or_cos_float_s_fu_2726_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state206)) begin
        grp_sin_or_cos_float_s_fu_2742_t_in = p_x_assign_6_reg_7723;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_sin_or_cos_float_s_fu_2742_t_in = p_x_assign_5_reg_1984;
    end else begin
        grp_sin_or_cos_float_s_fu_2742_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state195)) begin
        p_ce0 = 1'b1;
    end else begin
        p_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state200)) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state190)) begin
        sort_index_address0 = sort_index_addr_2_reg_7445;
    end else if (((icmp_ln96_fu_4791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state186))) begin
        sort_index_address0 = sext_ln102_fu_4807_p1;
    end else if (((icmp_ln96_fu_4791_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state186))) begin
        sort_index_address0 = sext_ln97_fu_4797_p1;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        sort_index_address0 = zext_ln92_fu_4764_p1;
    end else begin
        sort_index_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state192)) begin
        sort_index_address1 = zext_ln331_fu_4984_p1;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        sort_index_address1 = sort_index_addr_1_reg_7439;
    end else if (((icmp_ln96_fu_4791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state186))) begin
        sort_index_address1 = zext_ln103_fu_4812_p1;
    end else if (((icmp_ln96_fu_4791_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state186))) begin
        sort_index_address1 = sext_ln97_1_fu_4802_p1;
    end else begin
        sort_index_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state184) | ((icmp_ln96_fu_4791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state186)) | ((icmp_ln96_fu_4791_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state186)))) begin
        sort_index_ce0 = 1'b1;
    end else begin
        sort_index_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state189) | ((icmp_ln96_fu_4791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state186)) | ((icmp_ln96_fu_4791_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state186)))) begin
        sort_index_ce1 = 1'b1;
    end else begin
        sort_index_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state190)) begin
        sort_index_d0 = sort_index_load_reg_7466;
    end else if ((1'b1 == ap_CS_fsm_state184)) begin
        sort_index_d0 = i_0_i49_reg_2432;
    end else begin
        sort_index_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state190) | ((icmp_ln91_fu_4752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state184)))) begin
        sort_index_we0 = 1'b1;
    end else begin
        sort_index_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state189)) begin
        sort_index_we1 = 1'b1;
    end else begin
        sort_index_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state217)) begin
        temp_mat_M_imag_address0 = zext_ln366_1_fu_6142_p1;
    end else if ((1'b1 == ap_CS_fsm_state209)) begin
        temp_mat_M_imag_address0 = temp_mat_M_imag_add_5_reg_7765;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        temp_mat_M_imag_address0 = zext_ln51_1_fu_4429_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        temp_mat_M_imag_address0 = zext_ln49_2_fu_4394_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        temp_mat_M_imag_address0 = zext_ln24_1_fu_4181_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        temp_mat_M_imag_address0 = temp_mat_M_imag_add_1_reg_6775;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_imag_address0 = zext_ln1027_4_fu_3274_p1;
    end else begin
        temp_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state9))) begin
        temp_mat_M_imag_ce0 = 1'b1;
    end else begin
        temp_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        temp_mat_M_imag_d0 = complex_M_imag_read_2_reg_2553;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        temp_mat_M_imag_d0 = grp_fu_2904_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_imag_d0 = 32'd0;
    end else begin
        temp_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state9) | ((icmp_ln353_fu_6000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state209)))) begin
        temp_mat_M_imag_we0 = 1'b1;
    end else begin
        temp_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state217)) begin
        temp_mat_M_real_address0 = zext_ln366_1_fu_6142_p1;
    end else if ((1'b1 == ap_CS_fsm_state209)) begin
        temp_mat_M_real_address0 = temp_mat_M_real_add_5_reg_7760;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        temp_mat_M_real_address0 = zext_ln51_1_fu_4429_p1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        temp_mat_M_real_address0 = zext_ln49_2_fu_4394_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        temp_mat_M_real_address0 = zext_ln24_1_fu_4181_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        temp_mat_M_real_address0 = temp_mat_M_real_add_1_reg_6770;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_real_address0 = zext_ln1027_4_fu_3274_p1;
    end else begin
        temp_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state217) | (1'b1 == ap_CS_fsm_state209) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state9))) begin
        temp_mat_M_real_ce0 = 1'b1;
    end else begin
        temp_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state209)) begin
        temp_mat_M_real_d0 = complex_M_real_read_2_reg_2566;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        temp_mat_M_real_d0 = grp_fu_2898_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_mat_M_real_d0 = 32'd0;
    end else begin
        temp_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state9) | ((icmp_ln353_fu_6000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state209)))) begin
        temp_mat_M_real_we0 = 1'b1;
    end else begin
        temp_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        theta_ce0 = 1'b1;
    end else begin
        theta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state232)) begin
        w_address0 = zext_ln395_fu_6269_p1;
    end else if ((1'b1 == ap_CS_fsm_state231)) begin
        w_address0 = w_addr_1_reg_7978;
    end else if ((1'b1 == ap_CS_fsm_state224)) begin
        w_address0 = zext_ln389_reg_7930;
    end else begin
        w_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state231) | (1'b1 == ap_CS_fsm_state224) | (~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (1'b1 == ap_CS_fsm_state232)))) begin
        w_ce0 = 1'b1;
    end else begin
        w_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state231)) begin
        w_we0 = 1'b1;
    end else begin
        w_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln291_1_fu_3178_p2 == 1'd1) & (icmp_ln291_fu_3172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln291_fu_3172_p2 == 1'd1) & (icmp_ln291_1_fu_3178_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln292_1_fu_3216_p2 == 1'd1) & (icmp_ln292_fu_3210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln292_fu_3210_p2 == 1'd1) & (icmp_ln292_1_fu_3216_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln293_fu_3248_p2 == 1'd1) & (ap_phi_mux_phi_ln293_1_phi_fu_1796_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((ap_phi_mux_phi_ln293_1_phi_fu_1796_p4 == 1'd1) & (icmp_ln293_fu_3248_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln294_1_fu_3286_p2 == 1'd1) & (icmp_ln294_fu_3280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((icmp_ln294_fu_3280_p2 == 1'd1) & (icmp_ln294_1_fu_3286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln295_1_fu_3324_p2 == 1'd1) & (icmp_ln295_fu_3318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((icmp_ln295_fu_3318_p2 == 1'd1) & (icmp_ln295_1_fu_3324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln296_1_fu_3370_p2 == 1'd1) & (icmp_ln296_fu_3364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((icmp_ln296_fu_3364_p2 == 1'd1) & (icmp_ln296_1_fu_3370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln302_fu_3376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln303_fu_3396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln304_fu_3416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln158_fu_3483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln160_fu_3537_p2 == 1'd1) & (icmp_ln123_fu_3495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((icmp_ln123_fu_3495_p2 == 1'd1) & (icmp_ln160_fu_3537_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln225_fu_3558_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln235_fu_3592_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b0 == ap_block_state42_on_subcall_done) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln243_fu_3619_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln309_fu_3651_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((data_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & (1'b0 == ap_block_state54_io))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((data_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((icmp_ln316_fu_3728_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state232;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((icmp_ln318_fu_3745_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            if (((icmp_ln319_fu_3794_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            if (((data_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state85 : begin
            if (((icmp_ln109_fu_3863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            if (((icmp_ln110_fu_3891_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state87 : begin
            if (((icmp_ln112_fu_3922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((icmp_ln13_1_fu_4016_p2 == 1'd1) & (icmp_ln13_fu_4010_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else if (((icmp_ln13_fu_4010_p2 == 1'd1) & (icmp_ln13_1_fu_4016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((icmp_ln14_1_fu_4054_p2 == 1'd1) & (icmp_ln14_fu_4048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else if (((icmp_ln14_fu_4048_p2 == 1'd1) & (icmp_ln14_1_fu_4054_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((icmp_ln15_1_fu_4092_p2 == 1'd1) & (icmp_ln15_fu_4086_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else if (((icmp_ln15_fu_4086_p2 == 1'd1) & (icmp_ln15_1_fu_4092_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (((icmp_ln16_1_fu_4130_p2 == 1'd1) & (icmp_ln16_fu_4124_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else if (((icmp_ln16_fu_4124_p2 == 1'd1) & (icmp_ln16_1_fu_4130_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state108 : begin
            if (((icmp_ln22_fu_4136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            if (((icmp_ln23_fu_4160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state111 : begin
            if (((icmp_ln29_fu_4187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state111))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            if (((1'b0 == ap_block_state112_on_subcall_done) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            if (((icmp_ln31_fu_4199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state113))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            if (((icmp_ln32_fu_4223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_state115 : begin
            if (((icmp_ln35_fu_4250_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state115))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state121 : begin
            if (((icmp_ln43_fu_4300_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state121))) begin
                ap_NS_fsm = ap_ST_fsm_state184;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if (((icmp_ln45_fu_4360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((icmp_ln46_fu_4402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state128 : begin
            if (((icmp_ln55_fu_4439_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state128))) begin
                ap_NS_fsm = ap_ST_fsm_state149;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            if (((icmp_ln57_fu_4477_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state132))) begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state141 : begin
            if (((icmp_ln61_fu_4510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state141))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state142;
            end
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            if (((icmp_ln63_fu_4541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state143))) begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state144;
            end
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state149 : begin
            if (((tmp_72_fu_4582_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state149))) begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state169;
            end
        end
        ap_ST_fsm_state150 : begin
            if (((icmp_ln74_fu_4635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state150))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state151;
            end
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            if (((icmp_ln83_fu_4717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state175))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state184 : begin
            if (((icmp_ln91_fu_4752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state184))) begin
                ap_NS_fsm = ap_ST_fsm_state185;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state184;
            end
        end
        ap_ST_fsm_state185 : begin
            if (((icmp_ln94_fu_4773_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state185))) begin
                ap_NS_fsm = ap_ST_fsm_state191;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state186;
            end
        end
        ap_ST_fsm_state186 : begin
            if (((icmp_ln96_fu_4791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state186))) begin
                ap_NS_fsm = ap_ST_fsm_state189;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state187;
            end
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state191 : begin
            if (((icmp_ln329_fu_4918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state191))) begin
                ap_NS_fsm = ap_ST_fsm_state195;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state192;
            end
        end
        ap_ST_fsm_state192 : begin
            if (((icmp_ln330_fu_4972_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state192))) begin
                ap_NS_fsm = ap_ST_fsm_state191;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state193;
            end
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state195 : begin
            if (((icmp_ln339_fu_5021_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state195))) begin
                ap_NS_fsm = ap_ST_fsm_state207;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state196;
            end
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            if (((icmp_ln341_fu_5038_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state198))) begin
                ap_NS_fsm = ap_ST_fsm_state195;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state199;
            end
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            if (((grp_scaled_fixed2ieee_fu_2759_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state204))) begin
                ap_NS_fsm = ap_ST_fsm_state205;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state204;
            end
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            if (((1'b0 == ap_block_state206_on_subcall_done) & (1'b1 == ap_CS_fsm_state206))) begin
                ap_NS_fsm = ap_ST_fsm_state198;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state206;
            end
        end
        ap_ST_fsm_state207 : begin
            if (((icmp_ln349_fu_5925_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state207))) begin
                ap_NS_fsm = ap_ST_fsm_state215;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state208;
            end
        end
        ap_ST_fsm_state208 : begin
            if (((icmp_ln350_fu_5961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state208))) begin
                ap_NS_fsm = ap_ST_fsm_state207;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state209;
            end
        end
        ap_ST_fsm_state209 : begin
            if (((icmp_ln353_fu_6000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state209))) begin
                ap_NS_fsm = ap_ST_fsm_state208;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state210;
            end
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state215 : begin
            if (((icmp_ln360_fu_6054_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state215))) begin
                ap_NS_fsm = ap_ST_fsm_state223;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state216;
            end
        end
        ap_ST_fsm_state216 : begin
            if (((icmp_ln361_fu_6082_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state216))) begin
                ap_NS_fsm = ap_ST_fsm_state215;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state217;
            end
        end
        ap_ST_fsm_state217 : begin
            if (((icmp_ln364_fu_6113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state217))) begin
                ap_NS_fsm = ap_ST_fsm_state216;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state218;
            end
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state223 : begin
            if (((icmp_ln384_fu_6181_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state223))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state224;
            end
        end
        ap_ST_fsm_state224 : begin
            if (((icmp_ln387_fu_6213_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state224))) begin
                ap_NS_fsm = ap_ST_fsm_state230;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state225;
            end
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state232 : begin
            if ((~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (icmp_ln394_fu_6257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state232))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY))) & (icmp_ln394_fu_6257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state232))) begin
                ap_NS_fsm = ap_ST_fsm_state233;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state232;
            end
        end
        ap_ST_fsm_state233 : begin
            if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == ap_CS_fsm_state233))) begin
                ap_NS_fsm = ap_ST_fsm_state234;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state233;
            end
        end
        ap_ST_fsm_state234 : begin
            if (((1'b1 == P_sm_data_1_ack_in) & (1'b1 == ap_CS_fsm_state234))) begin
                ap_NS_fsm = ap_ST_fsm_state232;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state234;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Autocorr_Buffer_M_i_address1 = zext_ln114_6_fu_3951_p1;

assign Autocorr_Buffer_M_r_address1 = zext_ln114_6_fu_3951_p1;

assign B_V_fu_5396_p1 = r_V_36_fu_5356_p3[55:0];

assign B_fourth_power_V_fu_5499_p4 = {{r_V_39_fu_5493_p2[97:63]}};

assign B_third_power_V_fu_5483_p4 = {{r_V_38_fu_5478_p2[97:56]}};

assign B_trunc_V_fu_5400_p4 = {{r_V_36_fu_5356_p3[55:7]}};

assign DFTpts_fu_3564_p2 = 11'd1 << zext_ln225_fu_3554_p1;

assign Ex_V_fu_5304_p2 = (select_ln482_fu_5180_p3 - zext_ln655_fu_5300_p1);

assign Mx_V_fu_5290_p4 = {{r_V_35_fu_5284_p2[123:61]}};

assign Mx_bits_V_2_fu_5218_p2 = (124'd0 - p_Val2_69_fu_5187_p4);

assign Mx_zeros_V_fu_5276_p1 = tmp_i_i_i1_fu_5268_p3[5:0];

assign P_sm_TDATA = P_sm_data_1_data_out;

assign P_sm_TLAST = P_sm_last_V_1_data_out;

assign P_sm_TUSER = P_sm_user_V_1_data_out;

assign P_sm_TVALID = P_sm_last_V_1_state[1'd0];

assign P_sm_data_1_ack_in = P_sm_data_1_state[1'd1];

assign P_sm_data_1_ack_out = P_sm_TREADY;

assign P_sm_data_1_load_A = (~P_sm_data_1_sel_wr & P_sm_data_1_state_cmp_full);

assign P_sm_data_1_load_B = (P_sm_data_1_state_cmp_full & P_sm_data_1_sel_wr);

assign P_sm_data_1_sel = P_sm_data_1_sel_rd;

assign P_sm_data_1_state_cmp_full = ((P_sm_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign P_sm_data_1_vld_out = P_sm_data_1_state[1'd0];

assign P_sm_last_V_1_ack_in = P_sm_last_V_1_state[1'd1];

assign P_sm_last_V_1_ack_out = P_sm_TREADY;

assign P_sm_last_V_1_load_A = (~P_sm_last_V_1_sel_wr & P_sm_last_V_1_state_cmp_full);

assign P_sm_last_V_1_load_B = (P_sm_last_V_1_state_cmp_full & P_sm_last_V_1_sel_wr);

assign P_sm_last_V_1_sel = P_sm_last_V_1_sel_rd;

assign P_sm_last_V_1_state_cmp_full = ((P_sm_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign P_sm_last_V_1_vld_out = P_sm_last_V_1_state[1'd0];

assign P_sm_user_V_1_ack_in = P_sm_user_V_1_state[1'd1];

assign P_sm_user_V_1_ack_out = P_sm_TREADY;

assign P_sm_user_V_1_load_A = (~P_sm_user_V_1_sel_wr & P_sm_user_V_1_state_cmp_full);

assign P_sm_user_V_1_load_B = (P_sm_user_V_1_state_cmp_full & P_sm_user_V_1_sel_wr);

assign P_sm_user_V_1_sel = P_sm_user_V_1_sel_rd;

assign P_sm_user_V_1_state_cmp_full = ((P_sm_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign P_sm_user_V_1_vld_out = P_sm_user_V_1_state[1'd0];

assign Un_M_imag_address1 = zext_ln355_2_fu_6021_p1;

assign Un_M_real_address1 = zext_ln355_2_fu_6021_p1;

assign add_ln1027_fu_3352_p2 = (phi_mul_reg_1861 + zext_ln1027_10_fu_3348_p1);

assign add_ln1044_fu_4328_p2 = (zext_ln1044_fu_4312_p1 + zext_ln1044_1_fu_4324_p1);

assign add_ln1146_1_fu_5637_p2 = (zext_ln662_fu_5587_p1 + zext_ln1146_fu_5627_p1);

assign add_ln1146_2_fu_5647_p2 = ($signed(zext_ln1146_1_fu_5643_p1) + $signed(sext_ln657_fu_5623_p1));

assign add_ln1146_fu_5631_p2 = ($signed(lhs_V_2_fu_5615_p1) + $signed(rhs_V_2_fu_5619_p1));

assign add_ln114_1_fu_5097_p2 = ($signed(11'd1101) + $signed(tmp_V_fu_5077_p4));

assign add_ln114_5_fu_3946_p2 = (zext_ln116_reg_6747 + zext_ln114_fu_3942_p1);

assign add_ln114_6_fu_3957_p2 = (zext_ln116_1_reg_6765 + zext_ln114_fu_3942_p1);

assign add_ln114_fu_5175_p2 = ($signed(11'd1027) + $signed(tmp_V_reg_7587));

assign add_ln116_fu_3911_p2 = (zext_ln110_reg_6752 + zext_ln116_2_fu_3907_p1);

assign add_ln13_1_fu_3990_p2 = (phi_ln13_1_reg_2118 + 2'd1);

assign add_ln13_fu_3984_p2 = (phi_ln13_reg_2106 + 2'd1);

assign add_ln14_1_fu_4028_p2 = (phi_ln14_1_reg_2141 + 2'd1);

assign add_ln14_fu_4022_p2 = (phi_ln14_reg_2129 + 2'd1);

assign add_ln15_1_fu_4066_p2 = (phi_ln15_1_reg_2164 + 2'd1);

assign add_ln15_fu_4060_p2 = (phi_ln15_reg_2152 + 2'd1);

assign add_ln16_1_fu_4104_p2 = (phi_ln16_1_reg_2187 + 2'd1);

assign add_ln16_fu_4098_p2 = (phi_ln16_reg_2175 + 2'd1);

assign add_ln24_fu_4176_p2 = (zext_ln23_reg_6909 + zext_ln24_fu_4172_p1);

assign add_ln291_1_fu_3152_p2 = (phi_ln291_1_reg_1746 + 2'd1);

assign add_ln291_fu_3146_p2 = (phi_ln291_reg_1734 + 4'd1);

assign add_ln292_1_fu_3190_p2 = (phi_ln292_1_reg_1769 + 2'd1);

assign add_ln292_fu_3184_p2 = (phi_ln292_reg_1757 + 2'd1);

assign add_ln293_fu_3222_p2 = (phi_ln293_reg_1780 + 2'd1);

assign add_ln294_1_fu_3260_p2 = (phi_ln294_1_reg_1815 + 2'd1);

assign add_ln294_fu_3254_p2 = (phi_ln294_reg_1803 + 2'd1);

assign add_ln295_1_fu_3298_p2 = (phi_ln295_1_reg_1838 + 2'd1);

assign add_ln295_fu_3292_p2 = (phi_ln295_reg_1826 + 9'd1);

assign add_ln296_1_fu_3342_p2 = (phi_ln296_1_reg_1873 + 9'd1);

assign add_ln296_2_fu_3330_p2 = (phi_mul_reg_1861 + 11'd361);

assign add_ln296_fu_3336_p2 = (phi_ln296_reg_1849 + 2'd1);

assign add_ln305_1_fu_3445_p2 = (zext_ln304_1_reg_6419 + zext_ln305_fu_3441_p1);

assign add_ln305_2_fu_3454_p2 = (zext_ln305_1_fu_3450_p1 + p_cast_reg_6292);

assign add_ln305_fu_3428_p2 = (shl_ln_reg_6405 + zext_ln304_fu_3412_p1);

assign add_ln310_1_fu_3686_p2 = (zext_ln304_1_reg_6419 + zext_ln310_1_fu_3682_p1);

assign add_ln310_2_fu_3695_p2 = (zext_ln310_2_fu_3691_p1 + p_cast_reg_6292);

assign add_ln310_fu_3669_p2 = (shl_ln_reg_6405 + zext_ln309_fu_3647_p1);

assign add_ln311_fu_3710_p2 = (zext_ln310_2_reg_6621 + p_cast19_reg_6286);

assign add_ln321_1_fu_3814_p2 = (zext_ln319_reg_6689 + zext_ln321_2_fu_3810_p1);

assign add_ln321_2_fu_3823_p2 = (zext_ln321_3_fu_3819_p1 + p_cast_reg_6292);

assign add_ln321_3_fu_3833_p2 = (zext_ln321_reg_6684 + zext_ln321_1_fu_3806_p1);

assign add_ln321_fu_3777_p2 = (shl_ln1_fu_3769_p3 + zext_ln316_reg_6653);

assign add_ln322_fu_3828_p2 = (zext_ln321_3_fu_3819_p1 + p_cast19_reg_6286);

assign add_ln332_fu_4993_p2 = (zext_ln332_reg_7479 + zext_ln332_2_fu_4989_p1);

assign add_ln339_fu_5015_p2 = (phi_mul9_reg_2508 + 11'd361);

assign add_ln344_fu_5059_p2 = (phi_mul9_reg_2508 + zext_ln344_fu_5055_p1);

assign add_ln355_1_fu_6027_p2 = (zext_ln357_1_reg_7755 + zext_ln355_1_fu_6012_p1);

assign add_ln355_fu_6016_p2 = (zext_ln357_reg_7737 + zext_ln355_1_fu_6012_p1);

assign add_ln357_fu_5989_p2 = (zext_ln355_fu_5973_p1 + zext_ln350_reg_7742);

assign add_ln366_1_fu_6154_p2 = (zext_ln368_reg_7840 + phi_mul11_reg_2649);

assign add_ln366_2_fu_6148_p2 = (phi_mul11_reg_2649 + 11'd361);

assign add_ln366_fu_6137_p2 = (zext_ln368_1_reg_7858 + zext_ln366_fu_6133_p1);

assign add_ln368_fu_6102_p2 = (zext_ln361_reg_7845 + zext_ln368_2_fu_6098_p1);

assign add_ln37_1_fu_4289_p2 = (zext_ln37_fu_4262_p1 + zext_ln32_reg_6956);

assign add_ln37_fu_4278_p2 = (zext_ln39_reg_6970 + zext_ln37_1_fu_4274_p1);

assign add_ln389_1_fu_6246_p2 = (phi_mul13_reg_2694 + zext_ln389_1_reg_7935);

assign add_ln389_2_fu_6240_p2 = (phi_mul13_reg_2694 + 11'd361);

assign add_ln389_fu_6229_p2 = (zext_ln387_reg_7940 + zext_ln389_2_fu_6225_p1);

assign add_ln39_fu_4239_p2 = (zext_ln32_reg_6956 + zext_ln39_fu_4235_p1);

assign add_ln49_fu_4388_p2 = (zext_ln49_fu_4372_p1 + zext_ln49_1_fu_4384_p1);

assign add_ln51_fu_4424_p2 = (zext_ln49_1_reg_7090 + zext_ln51_fu_4420_p1);

assign add_ln59_fu_4487_p2 = (zext_ln56_reg_7168 + trunc_ln59_fu_4483_p1);

assign add_ln65_1_fu_4556_p2 = (zext_ln56_reg_7168 + trunc_ln65_fu_4547_p1);

assign add_ln65_fu_4551_p2 = (sext_ln62_cast_reg_7215 + trunc_ln65_fu_4547_p1);

assign add_ln76_1_fu_4668_p2 = (sext_ln76_2_cast_fu_4660_p3 + zext_ln1044_reg_7055);

assign add_ln76_fu_4645_p2 = ($signed(sext_ln78_reg_7261) + $signed(trunc_ln76_fu_4641_p1));

assign add_ln78_fu_4606_p2 = ($signed(sext_ln78_fu_4602_p1) + $signed(zext_ln76_fu_4590_p1));

assign add_ln80_fu_4618_p2 = ($signed(sext_ln78_fu_4602_p1) + $signed(zext_ln1044_reg_7055));

assign add_ln85_fu_4741_p2 = (zext_ln1044_reg_7055 + zext_ln85_fu_4737_p1);

assign addr_V_fu_5103_p3 = ((closepath_fu_5091_p2[0:0] === 1'b1) ? 11'd74 : add_ln114_1_fu_5097_p2);

assign and_ln300_2_fu_5843_p2 = (icmp_ln833_reg_7695 & icmp_ln833_1_reg_7626);

assign and_ln300_fu_5814_p2 = (icmp_ln833_reg_7695 & icmp_ln833_1_reg_7626);

assign and_ln97_1_fu_4905_p2 = (tmp_25_fu_2923_p2 & and_ln97_fu_4899_p2);

assign and_ln97_fu_4899_p2 = (or_ln97_fu_4875_p2 & or_ln97_1_fu_4893_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state146 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd175];

assign ap_CS_fsm_state177 = ap_CS_fsm[32'd176];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd177];

assign ap_CS_fsm_state179 = ap_CS_fsm[32'd178];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state184 = ap_CS_fsm[32'd183];

assign ap_CS_fsm_state185 = ap_CS_fsm[32'd184];

assign ap_CS_fsm_state186 = ap_CS_fsm[32'd185];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd188];

assign ap_CS_fsm_state190 = ap_CS_fsm[32'd189];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd190];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd192];

assign ap_CS_fsm_state194 = ap_CS_fsm[32'd193];

assign ap_CS_fsm_state195 = ap_CS_fsm[32'd194];

assign ap_CS_fsm_state196 = ap_CS_fsm[32'd195];

assign ap_CS_fsm_state197 = ap_CS_fsm[32'd196];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state199 = ap_CS_fsm[32'd198];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state200 = ap_CS_fsm[32'd199];

assign ap_CS_fsm_state201 = ap_CS_fsm[32'd200];

assign ap_CS_fsm_state202 = ap_CS_fsm[32'd201];

assign ap_CS_fsm_state203 = ap_CS_fsm[32'd202];

assign ap_CS_fsm_state204 = ap_CS_fsm[32'd203];

assign ap_CS_fsm_state205 = ap_CS_fsm[32'd204];

assign ap_CS_fsm_state206 = ap_CS_fsm[32'd205];

assign ap_CS_fsm_state207 = ap_CS_fsm[32'd206];

assign ap_CS_fsm_state208 = ap_CS_fsm[32'd207];

assign ap_CS_fsm_state209 = ap_CS_fsm[32'd208];

assign ap_CS_fsm_state210 = ap_CS_fsm[32'd209];

assign ap_CS_fsm_state211 = ap_CS_fsm[32'd210];

assign ap_CS_fsm_state212 = ap_CS_fsm[32'd211];

assign ap_CS_fsm_state213 = ap_CS_fsm[32'd212];

assign ap_CS_fsm_state214 = ap_CS_fsm[32'd213];

assign ap_CS_fsm_state215 = ap_CS_fsm[32'd214];

assign ap_CS_fsm_state216 = ap_CS_fsm[32'd215];

assign ap_CS_fsm_state217 = ap_CS_fsm[32'd216];

assign ap_CS_fsm_state218 = ap_CS_fsm[32'd217];

assign ap_CS_fsm_state219 = ap_CS_fsm[32'd218];

assign ap_CS_fsm_state220 = ap_CS_fsm[32'd219];

assign ap_CS_fsm_state221 = ap_CS_fsm[32'd220];

assign ap_CS_fsm_state222 = ap_CS_fsm[32'd221];

assign ap_CS_fsm_state223 = ap_CS_fsm[32'd222];

assign ap_CS_fsm_state224 = ap_CS_fsm[32'd223];

assign ap_CS_fsm_state225 = ap_CS_fsm[32'd224];

assign ap_CS_fsm_state226 = ap_CS_fsm[32'd225];

assign ap_CS_fsm_state227 = ap_CS_fsm[32'd226];

assign ap_CS_fsm_state228 = ap_CS_fsm[32'd227];

assign ap_CS_fsm_state229 = ap_CS_fsm[32'd228];

assign ap_CS_fsm_state230 = ap_CS_fsm[32'd229];

assign ap_CS_fsm_state231 = ap_CS_fsm[32'd230];

assign ap_CS_fsm_state232 = ap_CS_fsm[32'd231];

assign ap_CS_fsm_state233 = ap_CS_fsm[32'd232];

assign ap_CS_fsm_state234 = ap_CS_fsm[32'd233];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state112_on_subcall_done = ((ap_sync_grp_qrf_top_fu_2716_ap_ready & ap_sync_grp_qrf_top_fu_2716_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state206_on_subcall_done = ((grp_sin_or_cos_float_s_fu_2742_ap_done == 1'b0) | (grp_sin_or_cos_float_s_fu_2726_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state232 = ((2'd1 == P_sm_last_V_1_state) | (2'd1 == P_sm_user_V_1_state) | (2'd1 == P_sm_data_1_state) | ((2'd3 == P_sm_last_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_user_V_1_state) & (1'b0 == P_sm_TREADY)) | ((2'd3 == P_sm_data_1_state) & (1'b0 == P_sm_TREADY)));
end

always @ (*) begin
    ap_block_state42_on_subcall_done = ((grp_sin_or_cos_float_s_fu_2742_ap_done == 1'b0) | (grp_sin_or_cos_float_s_fu_2726_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state54_io = ((data_WREADY == 1'b0) | (data_AWREADY == 1'b0));
end

assign ap_phi_mux_phi_ln293_1_phi_fu_1796_p4 = phi_ln293_1_reg_1792;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_qrf_top_fu_2716_ap_done = (grp_qrf_top_fu_2716_ap_done | ap_sync_reg_grp_qrf_top_fu_2716_ap_done);

assign ap_sync_grp_qrf_top_fu_2716_ap_ready = (grp_qrf_top_fu_2716_ap_ready | ap_sync_reg_grp_qrf_top_fu_2716_ap_ready);

assign bitcast_ln345_1_fu_5920_p1 = xor_ln345_fu_5914_p2;

assign bitcast_ln345_fu_5910_p1 = grp_sin_or_cos_float_s_fu_2742_ap_return;

assign bitcast_ln444_2_fu_4701_p1 = complex_M_imag_read_1_reg_2388;

assign bitcast_ln444_fu_4685_p1 = complex_M_real_read_1_reg_2400;

assign bitcast_ln512_fu_5900_p1 = p_Result_56_fu_5890_p4;

assign bitcast_ln667_2_fu_6038_p1 = Un_M_imag_q0;

assign bitcast_ln667_4_fu_6165_p1 = a_theta_M_imag_q0;

assign bitcast_ln667_fu_3968_p1 = Autocorr_Buffer_M_i_q0;

assign bitcast_ln97_1_fu_4845_p1 = eigval_q1;

assign bitcast_ln97_fu_4827_p1 = eigval_q0;

assign closepath_fu_5091_p2 = ((tmp_V_fu_5077_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign count_fu_4306_p2 = (count_0_i_reg_2290 + 3'd1);

assign eigval_address1 = zext_ln97_1_fu_4822_p1;

assign fc_address0 = zext_ln317_fu_3740_p1;

assign fourth_order_double_4_address0 = zext_ln498_fu_5444_p1;

assign fourth_order_double_5_address0 = zext_ln498_fu_5444_p1;

assign fourth_order_double_6_address0 = zext_ln498_fu_5444_p1;

assign fourth_order_double_7_address0 = zext_ln498_fu_5444_p1;

assign fourth_order_double_s_address0 = zext_ln498_fu_5444_p1;

assign grp_fu_2863_p0 = xor_ln444_1_fu_4705_p2;

assign grp_fu_2869_p0 = xor_ln444_fu_4689_p2;

assign grp_fu_2950_p0 = DFTpts_fu_3564_p2;

assign grp_fu_5164_p0 = grp_fu_5164_p00;

assign grp_fu_5164_p00 = ret_V_22_fu_5146_p4;

assign grp_fu_5164_p1 = grp_fu_5164_p10;

assign grp_fu_5164_p10 = p_Result_50_fu_5130_p3;

assign grp_qrf_top_fu_2716_ap_start = grp_qrf_top_fu_2716_ap_start_reg;

assign grp_scaled_fixed2ieee_fu_2759_ap_start = grp_scaled_fixed2ieee_fu_2759_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_2726_ap_start = grp_sin_or_cos_float_s_fu_2726_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_2726_do_cos = 1'd1;

assign grp_sin_or_cos_float_s_fu_2742_ap_start = grp_sin_or_cos_float_s_fu_2742_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_2742_do_cos = 1'd0;

assign i_10_fu_4205_p2 = (i17_0_i_reg_2231 + 3'd1);

assign i_11_fu_4366_p2 = (i19_0_i_reg_2302 + 3'd1);

assign i_12_fu_4758_p2 = (i_0_i49_reg_2432 + 3'd1);

assign i_13_fu_4445_p2 = (j_14_reg_2325 + 2'd1);

assign i_14_fu_4779_p2 = (flag_reg_2444 + 2'd1);

assign i_15_fu_4723_p2 = (i25_0_i_reg_2421 + 3'd1);

assign i_16_fu_5931_p2 = (i_0_reg_2531 + 3'd1);

assign i_17_fu_6060_p2 = (i30_0_reg_2590 + 9'd1);

assign i_18_fu_6187_p2 = (i33_0_reg_2660 + 9'd1);

assign i_4_fu_3501_p2 = (i_0_i_i_i_reg_1941 + 4'd1);

assign i_5_cast_fu_3588_p1 = i_5_reg_1973;

assign i_6_fu_3489_p2 = (11'd1 + input_assign_reg_1918);

assign i_7_fu_3642_p2 = ($signed(zext_ln227_reg_6526) + $signed(i_0_i_reg_1996));

assign i_8_fu_4142_p2 = (i_0_i43_reg_2198 + 3'd1);

assign i_9_fu_4193_p2 = (i16_0_i_reg_2220 + 4'd1);

assign i_fu_6263_p2 = (p_016_rec_reg_2705 + 9'd1);

assign i_lower_fu_3625_p2 = ($signed(i_0_i_reg_1996) + $signed(numBF_reg_6543));

assign icmp_ln109_fu_3863_p2 = ((x_0_i_reg_2049 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_3891_p2 = ((y_0_i_reg_2060 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_3922_p2 = ((l_0_i_reg_2095 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_3495_p2 = ((i_0_i_i_i_reg_1941 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln13_1_fu_4016_p2 = ((phi_ln13_reg_2106 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_4010_p2 = ((phi_ln13_1_reg_2118 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_1_fu_4054_p2 = ((phi_ln14_reg_2129 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_4048_p2 = ((phi_ln14_1_reg_2141 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_3483_p2 = ((input_assign_reg_1918 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln15_1_fu_4092_p2 = ((phi_ln15_reg_2152 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_4086_p2 = ((phi_ln15_1_reg_2164 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_3537_p2 = ((zext_ln120_reg_6454 > reversed_reg_1930) ? 1'b1 : 1'b0);

assign icmp_ln16_1_fu_4130_p2 = ((phi_ln16_reg_2175 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_4124_p2 = ((phi_ln16_1_reg_2187 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_3558_p2 = ((stage_0_i_reg_1961 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_4136_p2 = ((i_0_i43_reg_2198 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_3592_p2 = ((i_5_reg_1973 == trunc_ln6_reg_6532) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_4160_p2 = ((j_0_i44_reg_2209 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_3619_p2 = (($signed(tmp_68_fu_3609_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_ln291_1_fu_3178_p2 = ((phi_ln291_reg_1734 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_3172_p2 = ((phi_ln291_1_reg_1746 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln292_1_fu_3216_p2 = ((phi_ln292_reg_1757 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_3210_p2 = ((phi_ln292_1_reg_1769 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_3248_p2 = ((phi_ln293_reg_1780 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln294_1_fu_3286_p2 = ((phi_ln294_reg_1803 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln294_fu_3280_p2 = ((phi_ln294_1_reg_1815 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln295_1_fu_3324_p2 = ((phi_ln295_reg_1826 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_3318_p2 = ((phi_ln295_1_reg_1838 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln296_1_fu_3370_p2 = ((phi_ln296_reg_1849 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_3364_p2 = ((phi_ln296_1_reg_1873 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_4187_p2 = ((i16_0_i_reg_2220 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_3376_p2 = ((l_0_reg_1884 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_3396_p2 = ((n_0_reg_1895 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln304_fu_3416_p2 = ((j_0_reg_1906 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln309_fu_3651_p2 = ((j24_0_reg_2005 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln316_fu_3728_p2 = ((jj_0_reg_2016 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_3745_p2 = ((l25_0_reg_2027 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln319_fu_3794_p2 = ((n26_0_reg_2038 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_4199_p2 = ((i17_0_i_reg_2231 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_4918_p2 = ((x_0_reg_2475 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_4223_p2 = ((j18_0_i_reg_2242 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_4972_p2 = ((y_0_reg_2486 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln331_fu_5003_p2 = ((sort_index_q1 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln333_fu_5009_p2 = ((sort_index_q1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln339_fu_5021_p2 = ((x27_0_reg_2497 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln341_fu_5038_p2 = ((y28_0_reg_2520 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln349_fu_5925_p2 = ((i_0_reg_2531 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_5961_p2 = ((j29_0_reg_2542 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln353_fu_6000_p2 = ((k_0_reg_2579 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_4250_p2 = ((k_0_i_reg_2279 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_6054_p2 = ((i30_0_reg_2590 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln361_fu_6082_p2 = ((j31_0_reg_2601 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln364_fu_6113_p2 = ((k32_0_reg_2638 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_6181_p2 = ((i33_0_reg_2660 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_6213_p2 = ((k34_0_reg_2683 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln394_fu_6257_p2 = ((p_016_rec_reg_2705 == 9'd361) ? 1'b1 : 1'b0);

assign icmp_ln396_fu_6274_p2 = ((p_016_rec_reg_2705 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln397_fu_6280_p2 = ((p_016_rec_reg_2705 == 9'd360) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_4300_p2 = ((count_0_i_reg_2290 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_4360_p2 = ((i19_0_i_reg_2302 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_4402_p2 = ((j20_0_i_reg_2314 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_4414_p2 = ((i19_0_i_reg_2302 == j20_0_i_reg_2314) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_4439_p2 = ((j_14_reg_2325 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_4477_p2 = ((j22_0_i_reg_2337 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_4510_p2 = ((j23_0_in_i_reg_2346 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_4541_p2 = ((q_0_i_reg_2355 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_4635_p2 = ((j24_0_in_i_reg_2412 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln833_1_fu_5170_p2 = ((tmp_V_4_reg_7594 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_2_fu_5458_p2 = ((tmp_V_reg_7587 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_5453_p2 = ((tmp_V_reg_7587 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_4717_p2 = ((i25_0_i_reg_2421 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_4752_p2 = ((i_0_i49_reg_2432 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_4773_p2 = ((flag_reg_2444 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_4791_p2 = ((j_0_in_i_reg_2466 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln97_1_fu_4869_p2 = ((trunc_ln97_fu_4841_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln97_2_fu_4881_p2 = ((tmp_23_fu_4849_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln97_3_fu_4887_p2 = ((trunc_ln97_1_fu_4859_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_4863_p2 = ((tmp_21_fu_4831_p4 != 8'd255) ? 1'b1 : 1'b0);

assign input_assign_1_fu_3523_p4 = {{p_0_i_i_i_reg_1952[9:1]}};

assign isNeg_fu_5314_p3 = Ex_V_fu_5304_p2[32'd10];

assign j_10_fu_4629_p2 = (j24_0_in_i_reg_2412 + 32'd1);

assign j_11_fu_4504_p2 = (j23_0_in_i_reg_2346 + 32'd1);

assign j_12_fu_5967_p2 = (j29_0_reg_2542 + 3'd1);

assign j_13_fu_6088_p2 = (j31_0_reg_2601 + 3'd1);

assign j_15_fu_4785_p2 = (j_0_in_i_reg_2466 + 32'd1);

assign j_1_fu_3657_p2 = (j24_0_reg_2005 + 11'd1);

assign j_2_fu_3597_p2 = (i_5_reg_1973 + 10'd1);

assign j_3_fu_4166_p2 = (j_0_i44_reg_2209 + 3'd1);

assign j_5_fu_4229_p2 = (j18_0_i_reg_2242 + 3'd1);

assign j_7_fu_4911_p3 = ((and_ln97_1_fu_4905_p2[0:0] === 1'b1) ? j_15_reg_7420 : flag_0_i_reg_2456);

assign j_8_fu_4498_p2 = (32'd1 + j22_0_i_reg_2337);

assign j_9_fu_4408_p2 = (j20_0_i_reg_2314 + 3'd1);

assign j_fu_3422_p2 = (j_0_reg_1906 + 11'd1);

assign jj_fu_3734_p2 = (jj_0_reg_2016 + 11'd1);

assign k_2_fu_6006_p2 = (k_0_reg_2579 + 2'd1);

assign k_3_fu_6219_p2 = (k34_0_reg_2683 + 3'd1);

assign k_4_fu_6119_p2 = (k32_0_reg_2638 + 3'd1);

assign k_fu_4256_p2 = (k_0_i_reg_2279 + 3'd1);

assign l_1_fu_3751_p2 = (l25_0_reg_2027 + 4'd1);

assign l_2_fu_3928_p2 = (l_0_i_reg_2095 + 4'd1);

assign l_fu_3382_p2 = (l_0_reg_1884 + 4'd1);

assign lhs_V_2_fu_5615_p1 = $signed(t1_V_fu_5509_p3);

assign m_fu_4679_p2 = ($signed(m_0_i_reg_2376) + $signed(3'd7));

assign n_1_fu_3402_p2 = (n_0_reg_1895 + 3'd1);

assign n_fu_3800_p2 = (n26_0_reg_2038 + 3'd1);

assign numBF_fu_3585_p1 = trunc_ln6_reg_6532;

assign or_ln300_fu_5861_p2 = (icmp_ln833_2_reg_7701 | and_ln300_fu_5814_p2);

assign or_ln311_fu_5823_p2 = (select_ln271_fu_5807_p3 | icmp_ln833_2_reg_7701);

assign or_ln334_fu_4956_p2 = (tmp_51_fu_4942_p3 | 4'd1);

assign or_ln97_1_fu_4893_p2 = (icmp_ln97_3_fu_4887_p2 | icmp_ln97_2_fu_4881_p2);

assign or_ln97_fu_4875_p2 = (icmp_ln97_fu_4863_p2 | icmp_ln97_1_fu_4869_p2);

assign p_Repl2_6_fu_5836_p3 = ((and_ln300_fu_5814_p2[0:0] === 1'b1) ? results_sign_V_2_reg_7581 : select_ln311_fu_5828_p3);

assign p_Result_50_fu_5130_p3 = {{1'd1}, {tmp_V_4_reg_7594}};

assign p_Result_51_fu_5242_p3 = {{p_Result_i_i_i_87_fu_5232_p4}, {1'd1}};

assign p_Result_52_fu_5260_p3 = {{2'd3}, {p_Result_s_fu_5250_p4}};

assign p_Result_53_fu_5436_p3 = {{sin_basis_fu_5430_p2}, {p_Result_i_i_fu_5386_p4}};

assign p_Result_54_fu_5703_p3 = p_Val2_65_fu_5699_p1[32'd63];

assign p_Result_55_fu_5725_p3 = {{results_sign_V_2_reg_7581}, {p_Val2_70_reg_7632}};

assign p_Result_56_fu_5890_p4 = {{{p_Repl2_6_fu_5836_p3}, {ret_V_20_fu_5866_p3}}, {ret_V_21_fu_5882_p3}};

assign p_Result_i_i_fu_5386_p4 = {{r_V_36_fu_5356_p3[62:56]}};

assign p_Result_i_i_i_87_fu_5232_p4 = {{p_Val2_49_fu_5224_p3[123:63]}};

assign p_Result_i_i_i_fu_5111_p4 = {{addr_V_fu_5103_p3[10:7]}};

integer ap_tvar_int_0;

always @ (p_Result_51_fu_5242_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_s_fu_5250_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_5250_p4[ap_tvar_int_0] = p_Result_51_fu_5242_p3[61 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_49_fu_5224_p3 = ((trunc_ln745_fu_5214_p1[0:0] === 1'b1) ? Mx_bits_V_2_fu_5218_p2 : p_Val2_69_fu_5187_p4);

assign p_Val2_65_fu_5699_p1 = grp_scaled_fixed2ieee_fu_2759_ap_return;

assign p_Val2_69_fu_5187_p4 = {{grp_fu_5164_p2[166:43]}};

assign p_Val2_70_fu_5207_p3 = ((closepath_reg_7600[0:0] === 1'b1) ? 3'd0 : trunc_ln_i_i_fu_5197_p4);

assign p_Val2_s_fu_5065_p1 = grp_fu_2937_p2;

assign p_address0 = zext_ln340_fu_5033_p1;

assign p_cast19_fu_3128_p1 = tmp_40_fu_3118_p4;

assign p_cast_fu_3142_p1 = tmp_41_fu_3132_p4;

assign p_r_M_imag_15_fu_4711_p1 = xor_ln444_1_fu_4705_p2;

assign p_r_M_imag_23_fu_6175_p1 = xor_ln667_2_fu_6169_p2;

assign p_r_M_real_17_fu_4695_p1 = xor_ln444_fu_4689_p2;

assign p_t_imag_9_fu_6048_p1 = xor_ln667_1_fu_6042_p2;

assign p_t_imag_fu_3978_p1 = xor_ln667_fu_3972_p2;

assign q_1_fu_4567_p2 = (32'd1 + q_0_i_reg_2355);

assign r_V_20_fu_5350_p2 = Mx_V_fu_5290_p4 << zext_ln1287_fu_5340_p1;

assign r_V_22_fu_5410_p1 = B_trunc_V_fu_5400_p4;

assign r_V_25_fu_5475_p1 = B_squared_V_reg_7664;

assign r_V_34_fu_5140_p2 = ref_4oPi_table_256_V_q0 << zext_ln744_fu_5137_p1;

assign r_V_35_fu_5284_p2 = p_Val2_49_fu_5224_p3 << zext_ln1253_fu_5280_p1;

assign r_V_36_fu_5356_p3 = ((isNeg_fu_5314_p3[0:0] === 1'b1) ? r_V_fu_5344_p2 : r_V_20_fu_5350_p2);

assign r_V_37_fu_5414_p0 = r_V_22_fu_5410_p1;

assign r_V_37_fu_5414_p1 = r_V_22_fu_5410_p1;

assign r_V_37_fu_5414_p2 = (r_V_37_fu_5414_p0 * r_V_37_fu_5414_p1);

assign r_V_38_fu_5478_p0 = r_V_25_fu_5475_p1;

assign r_V_38_fu_5478_p1 = r_V_22_reg_7659;

assign r_V_38_fu_5478_p2 = (r_V_38_fu_5478_p0 * r_V_38_fu_5478_p1);

assign r_V_39_fu_5493_p0 = r_V_25_fu_5475_p1;

assign r_V_39_fu_5493_p1 = r_V_25_fu_5475_p1;

assign r_V_39_fu_5493_p2 = (r_V_39_fu_5493_p0 * r_V_39_fu_5493_p1);

assign r_V_40_fu_5524_p0 = r_V_40_fu_5524_p00;

assign r_V_40_fu_5524_p00 = B_V_reg_7654;

assign r_V_40_fu_5524_p1 = fourth_order_double_5_q0;

assign r_V_40_fu_5524_p2 = ($signed({{1'b0}, {r_V_40_fu_5524_p0}}) * $signed(r_V_40_fu_5524_p1));

assign r_V_41_fu_5547_p0 = r_V_41_fu_5547_p00;

assign r_V_41_fu_5547_p00 = B_squared_V_reg_7664;

assign r_V_41_fu_5547_p1 = fourth_order_double_6_q0;

assign r_V_41_fu_5547_p2 = ($signed({{1'b0}, {r_V_41_fu_5547_p0}}) * $signed(r_V_41_fu_5547_p1));

assign r_V_42_fu_5571_p0 = r_V_42_fu_5571_p00;

assign r_V_42_fu_5571_p00 = B_third_power_V_fu_5483_p4;

assign r_V_42_fu_5571_p1 = r_V_42_fu_5571_p10;

assign r_V_42_fu_5571_p10 = fourth_order_double_7_q0;

assign r_V_42_fu_5571_p2 = (r_V_42_fu_5571_p0 * r_V_42_fu_5571_p1);

assign r_V_43_fu_5599_p0 = r_V_43_fu_5599_p00;

assign r_V_43_fu_5599_p00 = B_fourth_power_V_fu_5499_p4;

assign r_V_43_fu_5599_p1 = r_V_43_fu_5599_p10;

assign r_V_43_fu_5599_p10 = fourth_order_double_s_q0;

assign r_V_43_fu_5599_p2 = (r_V_43_fu_5599_p0 * r_V_43_fu_5599_p1);

assign r_V_44_fu_5671_p0 = ret_V_fu_5657_p2;

assign r_V_44_fu_5671_p1 = r_V_44_fu_5671_p10;

assign r_V_44_fu_5671_p10 = select_ln272_2_fu_5469_p3;

assign r_V_44_fu_5671_p2 = ($signed(r_V_44_fu_5671_p0) * $signed({{1'b0}, {r_V_44_fu_5671_p1}}));

assign r_V_fu_5344_p2 = Mx_V_fu_5290_p4 >> zext_ln1287_fu_5340_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln635_fu_5121_p1;

assign ret_V_19_fu_5692_p2 = ($signed(12'd0) - $signed(rhs_V_3_fu_5688_p1));

assign ret_V_20_fu_5866_p3 = ((or_ln300_fu_5861_p2[0:0] === 1'b1) ? select_ln300_4_fu_5853_p3 : tmp_V_5_fu_5711_p4);

assign ret_V_21_fu_5882_p3 = ((or_ln300_fu_5861_p2[0:0] === 1'b1) ? select_ln300_6_fu_5874_p3 : tmp_V_6_fu_5721_p1);

assign ret_V_22_fu_5146_p4 = {{r_V_34_fu_5140_p2[255:86]}};

assign ret_V_fu_5657_p2 = ($signed(sext_ln1146_fu_5653_p1) + $signed(add_ln1146_fu_5631_p2));

assign rev_fu_3515_p3 = {{trunc_ln124_fu_3507_p1}, {trunc_ln123_fu_3511_p1}};

assign rhs_V_2_fu_5619_p1 = $signed(trunc_ln9_fu_5530_p4);

assign rhs_V_3_fu_5688_p1 = $signed(select_ln272_fu_5463_p3);

assign select_ln271_fu_5807_p3 = ((cos_basis_reg_7647[0:0] === 1'b1) ? tmp_27_fu_5731_p18 : tmp_28_fu_5769_p18);

assign select_ln272_2_fu_5469_p3 = ((cos_basis_reg_7647[0:0] === 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_7637);

assign select_ln272_fu_5463_p3 = ((cos_basis_reg_7647[0:0] === 1'b1) ? 11'd0 : Ex_V_reg_7642);

assign select_ln300_4_fu_5853_p3 = ((xor_ln300_fu_5847_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign select_ln300_6_fu_5874_p3 = ((xor_ln300_fu_5847_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln311_fu_5828_p3 = ((or_ln311_fu_5823_p2[0:0] === 1'b1) ? xor_ln311_fu_5818_p2 : p_Result_54_fu_5703_p3);

assign select_ln482_fu_5180_p3 = ((closepath_reg_7600[0:0] === 1'b1) ? add_ln114_fu_5175_p2 : 11'd0);

assign sext_ln102_fu_4807_p1 = flag_0_i_reg_2456;

assign sext_ln1067_fu_4350_p1 = $signed(xor_ln1067_fu_4344_p2);

assign sext_ln1146_fu_5653_p1 = $signed(add_ln1146_2_fu_5647_p2);

assign sext_ln1311_fu_5336_p1 = $signed(ush_fu_5328_p3);

assign sext_ln1334_fu_5310_p1 = Ex_V_fu_5304_p2;

assign sext_ln250_fu_3630_p1 = $signed(i_lower_fu_3625_p2);

assign sext_ln253_fu_3636_p1 = i_0_i_reg_1996;

assign sext_ln59_fu_4492_p1 = $signed(add_ln59_fu_4487_p2);

assign sext_ln62_cast_fu_4534_p3 = {{trunc_ln62_reg_7200}, {2'd0}};

assign sext_ln62_fu_4528_p1 = $signed(tmp_57_fu_4520_p3);

assign sext_ln657_fu_5623_p1 = $signed(trunc_ln662_1_fu_5553_p4);

assign sext_ln65_1_fu_4561_p1 = $signed(add_ln65_1_fu_4556_p2);

assign sext_ln65_fu_4573_p1 = $signed(add_ln65_reg_7223);

assign sext_ln71_fu_4578_p1 = m_0_i_reg_2376;

assign sext_ln76_1_fu_4673_p1 = $signed(add_ln76_1_fu_4668_p2);

assign sext_ln76_2_cast_fu_4660_p3 = {{trunc_ln76_1_fu_4656_p1}, {2'd0}};

assign sext_ln76_fu_4650_p1 = $signed(add_ln76_fu_4645_p2);

assign sext_ln78_fu_4602_p1 = $signed(tmp_53_fu_4594_p3);

assign sext_ln97_1_fu_4802_p1 = j_15_fu_4785_p2;

assign sext_ln97_fu_4797_p1 = flag_0_i_reg_2456;

assign shl_ln1_fu_3769_p3 = {{l25_0_reg_2027}, {10'd0}};

assign shl_ln_fu_3388_p3 = {{l_0_reg_1884}, {10'd0}};

assign sin_basis_fu_5430_p2 = (cos_basis_fu_5364_p10 ^ 1'd1);

assign stage_fu_3603_p2 = (stage_0_i_reg_1961 + 4'd1);

assign sub_ln1311_fu_5322_p2 = ($signed(12'd0) - $signed(sext_ln1334_fu_5310_p1));

assign t1_V_fu_5509_p3 = {{fourth_order_double_4_q0}, {4'd0}};

assign theta_address0 = zext_ln343_fu_5050_p1;

assign tmp_21_fu_4831_p4 = {{bitcast_ln97_fu_4827_p1[30:23]}};

assign tmp_23_fu_4849_p4 = {{bitcast_ln97_1_fu_4845_p1[30:23]}};

assign tmp_26_fu_3158_p3 = {{phi_ln291_reg_1734}, {phi_ln291_1_reg_1746}};

assign tmp_33_fu_3757_p3 = {{l25_0_reg_2027}, {2'd0}};

assign tmp_34_fu_3782_p3 = {{add_ln321_fu_3777_p2}, {2'd0}};

assign tmp_35_fu_3433_p3 = {{add_ln305_fu_3428_p2}, {2'd0}};

assign tmp_36_fu_3879_p3 = {{x_0_i_reg_2049}, {2'd0}};

assign tmp_38_fu_3934_p3 = {{l_0_i_reg_2095}, {2'd0}};

assign tmp_39_fu_3674_p3 = {{add_ln310_fu_3669_p2}, {2'd0}};

assign tmp_40_fu_3118_p4 = {{data_im[31:2]}};

assign tmp_41_fu_3132_p4 = {{data_re[31:2]}};

assign tmp_42_fu_3196_p3 = {{phi_ln292_reg_1757}, {phi_ln292_1_reg_1769}};

assign tmp_43_fu_4148_p3 = {{i_0_i43_reg_2198}, {2'd0}};

assign tmp_44_fu_4316_p3 = {{count_0_i_reg_2290}, {2'd0}};

assign tmp_45_fu_4211_p3 = {{i17_0_i_reg_2231}, {2'd0}};

assign tmp_46_fu_4376_p3 = {{i19_0_i_reg_2302}, {2'd0}};

assign tmp_47_fu_4465_p3 = {{j_14_reg_2325}, {2'd0}};

assign tmp_48_fu_4451_p3 = {{j_14_reg_2325}, {j_14_reg_2325}};

assign tmp_49_fu_4266_p3 = {{k_0_i_reg_2279}, {2'd0}};

assign tmp_50_fu_4930_p3 = {{x_0_reg_2475}, {2'd0}};

assign tmp_51_fu_4942_p3 = {{x_0_reg_2475}, {1'd0}};

assign tmp_52_fu_4962_p3 = {{60'd0}, {or_ln334_fu_4956_p2}};

assign tmp_53_fu_4594_p3 = {{m_0_i_reg_2376}, {2'd0}};

assign tmp_54_fu_3234_p3 = {{phi_ln293_reg_1780}, {phi_ln293_1_reg_1792}};

assign tmp_55_fu_4729_p3 = {{i25_0_i_reg_2421}, {2'd0}};

assign tmp_56_fu_3266_p3 = {{phi_ln294_reg_1803}, {phi_ln294_1_reg_1815}};

assign tmp_57_fu_4520_p3 = {{j_11_fu_4504_p2}, {j_14_reg_2325}};

assign tmp_58_fu_5937_p3 = {{i_0_reg_2531}, {1'd0}};

assign tmp_59_fu_5949_p3 = {{i_0_reg_2531}, {2'd0}};

assign tmp_60_fu_5577_p4 = {{r_V_42_fu_5571_p2[74:38]}};

assign tmp_61_fu_5605_p4 = {{r_V_43_fu_5599_p2[59:31]}};

assign tmp_62_fu_6070_p3 = {{i30_0_reg_2590}, {2'd0}};

assign tmp_63_fu_5977_p3 = {{j29_0_reg_2542}, {1'd0}};

assign tmp_64_fu_6201_p3 = {{i33_0_reg_2660}, {2'd0}};

assign tmp_65_fu_6125_p3 = {{k32_0_reg_2638}, {2'd0}};

assign tmp_66_fu_3304_p3 = {{phi_ln295_reg_1826}, {phi_ln295_1_reg_1838}};

assign tmp_67_fu_3996_p3 = {{phi_ln13_reg_2106}, {phi_ln13_1_reg_2118}};

assign tmp_68_fu_3609_p4 = {{i_0_i_reg_1996[31:10]}};

assign tmp_69_fu_4034_p3 = {{phi_ln14_reg_2129}, {phi_ln14_1_reg_2141}};

assign tmp_70_fu_4072_p3 = {{phi_ln15_reg_2152}, {phi_ln15_1_reg_2164}};

assign tmp_71_fu_4110_p3 = {{phi_ln16_reg_2175}, {phi_ln16_1_reg_2187}};

assign tmp_72_fu_4582_p3 = m_0_i_reg_2376[32'd2];

assign tmp_V_4_fu_5087_p1 = p_Val2_s_fu_5065_p1[51:0];

assign tmp_V_5_fu_5711_p4 = {{p_Val2_65_fu_5699_p1[62:52]}};

assign tmp_V_6_fu_5721_p1 = p_Val2_65_fu_5699_p1[51:0];

assign tmp_V_fu_5077_p4 = {{p_Val2_s_fu_5065_p1[62:52]}};


always @ (p_Result_52_fu_5260_p3) begin
    if (p_Result_52_fu_5260_p3[0] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd0;
    end else if (p_Result_52_fu_5260_p3[1] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd1;
    end else if (p_Result_52_fu_5260_p3[2] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd2;
    end else if (p_Result_52_fu_5260_p3[3] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd3;
    end else if (p_Result_52_fu_5260_p3[4] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd4;
    end else if (p_Result_52_fu_5260_p3[5] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd5;
    end else if (p_Result_52_fu_5260_p3[6] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd6;
    end else if (p_Result_52_fu_5260_p3[7] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd7;
    end else if (p_Result_52_fu_5260_p3[8] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd8;
    end else if (p_Result_52_fu_5260_p3[9] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd9;
    end else if (p_Result_52_fu_5260_p3[10] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd10;
    end else if (p_Result_52_fu_5260_p3[11] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd11;
    end else if (p_Result_52_fu_5260_p3[12] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd12;
    end else if (p_Result_52_fu_5260_p3[13] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd13;
    end else if (p_Result_52_fu_5260_p3[14] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd14;
    end else if (p_Result_52_fu_5260_p3[15] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd15;
    end else if (p_Result_52_fu_5260_p3[16] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd16;
    end else if (p_Result_52_fu_5260_p3[17] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd17;
    end else if (p_Result_52_fu_5260_p3[18] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd18;
    end else if (p_Result_52_fu_5260_p3[19] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd19;
    end else if (p_Result_52_fu_5260_p3[20] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd20;
    end else if (p_Result_52_fu_5260_p3[21] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd21;
    end else if (p_Result_52_fu_5260_p3[22] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd22;
    end else if (p_Result_52_fu_5260_p3[23] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd23;
    end else if (p_Result_52_fu_5260_p3[24] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd24;
    end else if (p_Result_52_fu_5260_p3[25] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd25;
    end else if (p_Result_52_fu_5260_p3[26] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd26;
    end else if (p_Result_52_fu_5260_p3[27] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd27;
    end else if (p_Result_52_fu_5260_p3[28] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd28;
    end else if (p_Result_52_fu_5260_p3[29] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd29;
    end else if (p_Result_52_fu_5260_p3[30] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd30;
    end else if (p_Result_52_fu_5260_p3[31] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd31;
    end else if (p_Result_52_fu_5260_p3[32] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd32;
    end else if (p_Result_52_fu_5260_p3[33] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd33;
    end else if (p_Result_52_fu_5260_p3[34] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd34;
    end else if (p_Result_52_fu_5260_p3[35] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd35;
    end else if (p_Result_52_fu_5260_p3[36] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd36;
    end else if (p_Result_52_fu_5260_p3[37] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd37;
    end else if (p_Result_52_fu_5260_p3[38] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd38;
    end else if (p_Result_52_fu_5260_p3[39] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd39;
    end else if (p_Result_52_fu_5260_p3[40] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd40;
    end else if (p_Result_52_fu_5260_p3[41] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd41;
    end else if (p_Result_52_fu_5260_p3[42] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd42;
    end else if (p_Result_52_fu_5260_p3[43] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd43;
    end else if (p_Result_52_fu_5260_p3[44] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd44;
    end else if (p_Result_52_fu_5260_p3[45] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd45;
    end else if (p_Result_52_fu_5260_p3[46] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd46;
    end else if (p_Result_52_fu_5260_p3[47] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd47;
    end else if (p_Result_52_fu_5260_p3[48] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd48;
    end else if (p_Result_52_fu_5260_p3[49] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd49;
    end else if (p_Result_52_fu_5260_p3[50] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd50;
    end else if (p_Result_52_fu_5260_p3[51] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd51;
    end else if (p_Result_52_fu_5260_p3[52] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd52;
    end else if (p_Result_52_fu_5260_p3[53] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd53;
    end else if (p_Result_52_fu_5260_p3[54] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd54;
    end else if (p_Result_52_fu_5260_p3[55] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd55;
    end else if (p_Result_52_fu_5260_p3[56] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd56;
    end else if (p_Result_52_fu_5260_p3[57] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd57;
    end else if (p_Result_52_fu_5260_p3[58] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd58;
    end else if (p_Result_52_fu_5260_p3[59] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd59;
    end else if (p_Result_52_fu_5260_p3[60] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd60;
    end else if (p_Result_52_fu_5260_p3[61] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd61;
    end else if (p_Result_52_fu_5260_p3[62] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd62;
    end else if (p_Result_52_fu_5260_p3[63] == 1'b1) begin
        tmp_i_i_i1_fu_5268_p3 = 64'd63;
    end else begin
        tmp_i_i_i1_fu_5268_p3 = 64'd64;
    end
end

assign trunc_ln120_fu_3475_p1 = input_assign_reg_1918[9:0];

assign trunc_ln123_fu_3511_p1 = p_0_i_i_i_reg_1952[0:0];

assign trunc_ln124_fu_3507_p1 = reversed_reg_1930[30:0];

assign trunc_ln59_fu_4483_p1 = j22_0_i_reg_2337[5:0];

assign trunc_ln601_fu_5126_p1 = addr_V_fu_5103_p3[6:0];

assign trunc_ln62_fu_4516_p1 = j_11_fu_4504_p2[3:0];

assign trunc_ln65_fu_4547_p1 = q_0_i_reg_2355[5:0];

assign trunc_ln662_1_fu_5553_p4 = {{r_V_41_fu_5547_p2[92:45]}};

assign trunc_ln745_fu_5214_p1 = p_Val2_70_fu_5207_p3[0:0];

assign trunc_ln76_1_fu_4656_p1 = j_10_fu_4629_p2[3:0];

assign trunc_ln76_fu_4641_p1 = j_10_fu_4629_p2[5:0];

assign trunc_ln97_1_fu_4859_p1 = bitcast_ln97_1_fu_4845_p1[22:0];

assign trunc_ln97_fu_4841_p1 = bitcast_ln97_fu_4827_p1[22:0];

assign trunc_ln9_fu_5530_p4 = {{r_V_40_fu_5524_p2[107:52]}};

assign trunc_ln_i_i_fu_5197_p4 = {{grp_fu_5164_p2[169:167]}};

assign ush_fu_5328_p3 = ((isNeg_fu_5314_p3[0:0] === 1'b1) ? sub_ln1311_fu_5322_p2 : sext_ln1334_fu_5310_p1);

assign x_1_fu_4924_p2 = (x_0_reg_2475 + 3'd1);

assign x_2_fu_5027_p2 = (x27_0_reg_2497 + 3'd1);

assign x_fu_3869_p2 = (x_0_i_reg_2049 + 3'd1);

assign xor_ln1067_fu_4344_p2 = (count_0_i_reg_2290 ^ 3'd4);

assign xor_ln293_fu_3228_p2 = (phi_ln293_1_reg_1792 ^ 1'd1);

assign xor_ln300_fu_5847_p2 = (1'd1 ^ and_ln300_2_fu_5843_p2);

assign xor_ln311_fu_5818_p2 = (icmp_ln833_2_reg_7701 ^ 1'd1);

assign xor_ln345_fu_5914_p2 = (bitcast_ln345_fu_5910_p1 ^ 32'd2147483648);

assign xor_ln444_1_fu_4705_p2 = (bitcast_ln444_2_fu_4701_p1 ^ 32'd2147483648);

assign xor_ln444_fu_4689_p2 = (bitcast_ln444_fu_4685_p1 ^ 32'd2147483648);

assign xor_ln667_1_fu_6042_p2 = (bitcast_ln667_2_fu_6038_p1 ^ 32'd2147483648);

assign xor_ln667_2_fu_6169_p2 = (bitcast_ln667_4_fu_6165_p1 ^ 32'd2147483648);

assign xor_ln667_fu_3972_p2 = (bitcast_ln667_fu_3968_p1 ^ 32'd2147483648);

assign y_1_fu_5044_p2 = (y28_0_reg_2520 + 9'd1);

assign y_2_fu_4978_p2 = (y_0_reg_2486 + 3'd1);

assign y_fu_3897_p2 = (y_0_i_reg_2060 + 3'd1);

assign zext_ln1027_10_fu_3348_p1 = phi_ln296_1_reg_1873;

assign zext_ln1027_11_fu_3358_p1 = add_ln1027_fu_3352_p2;

assign zext_ln1027_2_fu_3204_p1 = tmp_42_fu_3196_p3;

assign zext_ln1027_3_fu_3242_p1 = tmp_54_fu_3234_p3;

assign zext_ln1027_4_fu_3274_p1 = tmp_56_fu_3266_p3;

assign zext_ln1027_5_fu_3312_p1 = tmp_66_fu_3304_p3;

assign zext_ln1027_6_fu_4004_p1 = tmp_67_fu_3996_p3;

assign zext_ln1027_7_fu_4042_p1 = tmp_69_fu_4034_p3;

assign zext_ln1027_8_fu_4080_p1 = tmp_70_fu_4072_p3;

assign zext_ln1027_9_fu_4118_p1 = tmp_71_fu_4110_p3;

assign zext_ln1027_fu_3166_p1 = tmp_26_fu_3158_p3;

assign zext_ln103_fu_4812_p1 = flag_reg_2444;

assign zext_ln1044_1_fu_4324_p1 = tmp_44_fu_4316_p3;

assign zext_ln1044_2_fu_4334_p1 = add_ln1044_fu_4328_p2;

assign zext_ln1044_fu_4312_p1 = count_0_i_reg_2290;

assign zext_ln1067_fu_4354_p1 = $unsigned(sext_ln1067_fu_4350_p1);

assign zext_ln110_fu_3887_p1 = tmp_36_fu_3879_p3;

assign zext_ln1146_1_fu_5643_p1 = add_ln1146_1_fu_5637_p2;

assign zext_ln1146_fu_5627_p1 = tmp_61_fu_5605_p4;

assign zext_ln114_6_fu_3951_p1 = add_ln114_5_fu_3946_p2;

assign zext_ln114_7_fu_3962_p1 = add_ln114_6_fu_3957_p2;

assign zext_ln114_fu_3942_p1 = tmp_38_fu_3934_p3;

assign zext_ln116_1_fu_3903_p1 = y_0_i_reg_2060;

assign zext_ln116_2_fu_3907_p1 = y_0_i_reg_2060;

assign zext_ln116_3_fu_3916_p1 = add_ln116_fu_3911_p2;

assign zext_ln116_fu_3875_p1 = x_0_i_reg_2049;

assign zext_ln120_fu_3479_p1 = input_assign_reg_1918;

assign zext_ln1253_fu_5280_p1 = Mx_zeros_V_fu_5276_p1;

assign zext_ln125_fu_3533_p1 = input_assign_1_fu_3523_p4;

assign zext_ln1287_fu_5340_p1 = $unsigned(sext_ln1311_fu_5336_p1);

assign zext_ln162_fu_3542_p1 = input_assign_reg_1918;

assign zext_ln163_fu_3548_p1 = reversed_reg_1930;

assign zext_ln225_fu_3554_p1 = stage_0_i_reg_1961;

assign zext_ln227_fu_3570_p1 = DFTpts_fu_3564_p2;

assign zext_ln23_fu_4156_p1 = tmp_43_fu_4148_p3;

assign zext_ln24_1_fu_4181_p1 = add_ln24_fu_4176_p2;

assign zext_ln24_fu_4172_p1 = j_0_i44_reg_2209;

assign zext_ln304_1_fu_3408_p1 = n_0_reg_1895;

assign zext_ln304_fu_3412_p1 = j_0_reg_1906;

assign zext_ln305_1_fu_3450_p1 = add_ln305_1_fu_3445_p2;

assign zext_ln305_2_fu_3469_p1 = j_0_reg_1906;

assign zext_ln305_3_fu_3459_p1 = add_ln305_2_reg_6433;

assign zext_ln305_fu_3441_p1 = tmp_35_fu_3433_p3;

assign zext_ln309_fu_3647_p1 = j24_0_reg_2005;

assign zext_ln310_1_fu_3682_p1 = tmp_39_fu_3674_p3;

assign zext_ln310_2_fu_3691_p1 = add_ln310_1_fu_3686_p2;

assign zext_ln310_3_fu_3700_p1 = add_ln310_2_reg_6626;

assign zext_ln310_fu_3663_p1 = j24_0_reg_2005;

assign zext_ln311_fu_3714_p1 = add_ln311_reg_6642;

assign zext_ln316_fu_3724_p1 = jj_0_reg_2016;

assign zext_ln317_fu_3740_p1 = jj_0_reg_2016;

assign zext_ln319_fu_3790_p1 = tmp_34_fu_3782_p3;

assign zext_ln321_1_fu_3806_p1 = n26_0_reg_2038;

assign zext_ln321_2_fu_3810_p1 = n26_0_reg_2038;

assign zext_ln321_3_fu_3819_p1 = add_ln321_1_fu_3814_p2;

assign zext_ln321_4_fu_3838_p1 = add_ln321_2_reg_6702;

assign zext_ln321_5_fu_3858_p1 = add_ln321_3_reg_6712;

assign zext_ln321_fu_3765_p1 = tmp_33_fu_3757_p3;

assign zext_ln322_fu_3848_p1 = add_ln322_reg_6707;

assign zext_ln32_fu_4219_p1 = tmp_45_fu_4211_p3;

assign zext_ln331_fu_4984_p1 = y_0_reg_2486;

assign zext_ln332_1_fu_4950_p1 = tmp_51_fu_4942_p3;

assign zext_ln332_2_fu_4989_p1 = y_0_reg_2486;

assign zext_ln332_3_fu_4998_p1 = add_ln332_reg_7512;

assign zext_ln332_fu_4938_p1 = tmp_50_fu_4930_p3;

assign zext_ln340_fu_5033_p1 = x27_0_reg_2497;

assign zext_ln343_fu_5050_p1 = y28_0_reg_2520;

assign zext_ln344_1_fu_5905_p1 = add_ln344_reg_7571;

assign zext_ln344_fu_5055_p1 = y28_0_reg_2520;

assign zext_ln350_fu_5957_p1 = tmp_59_fu_5949_p3;

assign zext_ln355_1_fu_6012_p1 = k_0_reg_2579;

assign zext_ln355_2_fu_6021_p1 = add_ln355_fu_6016_p2;

assign zext_ln355_3_fu_6032_p1 = add_ln355_1_fu_6027_p2;

assign zext_ln355_fu_5973_p1 = j29_0_reg_2542;

assign zext_ln357_1_fu_5985_p1 = tmp_63_fu_5977_p3;

assign zext_ln357_2_fu_5994_p1 = add_ln357_fu_5989_p2;

assign zext_ln357_fu_5945_p1 = tmp_58_fu_5937_p3;

assign zext_ln361_fu_6078_p1 = tmp_62_fu_6070_p3;

assign zext_ln366_1_fu_6142_p1 = add_ln366_fu_6137_p2;

assign zext_ln366_2_fu_6159_p1 = add_ln366_1_fu_6154_p2;

assign zext_ln366_fu_6133_p1 = tmp_65_fu_6125_p3;

assign zext_ln368_1_fu_6094_p1 = j31_0_reg_2601;

assign zext_ln368_2_fu_6098_p1 = j31_0_reg_2601;

assign zext_ln368_3_fu_6107_p1 = add_ln368_fu_6102_p2;

assign zext_ln368_fu_6066_p1 = i30_0_reg_2590;

assign zext_ln37_1_fu_4274_p1 = tmp_49_fu_4266_p3;

assign zext_ln37_2_fu_4283_p1 = add_ln37_fu_4278_p2;

assign zext_ln37_3_fu_4294_p1 = add_ln37_1_fu_4289_p2;

assign zext_ln37_fu_4262_p1 = k_0_i_reg_2279;

assign zext_ln387_fu_6209_p1 = tmp_64_fu_6201_p3;

assign zext_ln389_1_fu_6197_p1 = i33_0_reg_2660;

assign zext_ln389_2_fu_6225_p1 = k34_0_reg_2683;

assign zext_ln389_3_fu_6234_p1 = add_ln389_fu_6229_p2;

assign zext_ln389_4_fu_6251_p1 = add_ln389_1_fu_6246_p2;

assign zext_ln389_fu_6193_p1 = i33_0_reg_2660;

assign zext_ln395_fu_6269_p1 = p_016_rec_reg_2705;

assign zext_ln39_1_fu_4244_p1 = add_ln39_fu_4239_p2;

assign zext_ln39_fu_4235_p1 = j18_0_i_reg_2242;

assign zext_ln44_fu_4339_p1 = count_0_i_reg_2290;

assign zext_ln498_fu_5444_p1 = p_Result_53_fu_5436_p3;

assign zext_ln49_1_fu_4384_p1 = tmp_46_fu_4376_p3;

assign zext_ln49_2_fu_4394_p1 = add_ln49_fu_4388_p2;

assign zext_ln49_fu_4372_p1 = i19_0_i_reg_2302;

assign zext_ln51_1_fu_4429_p1 = add_ln51_fu_4424_p2;

assign zext_ln51_fu_4420_p1 = j20_0_i_reg_2314;

assign zext_ln55_fu_4435_p1 = j_14_reg_2325;

assign zext_ln56_1_fu_4459_p1 = tmp_48_fu_4451_p3;

assign zext_ln56_fu_4473_p1 = tmp_47_fu_4465_p3;

assign zext_ln635_fu_5121_p1 = p_Result_i_i_i_fu_5111_p4;

assign zext_ln655_fu_5300_p1 = Mx_zeros_V_fu_5276_p1;

assign zext_ln662_fu_5587_p1 = tmp_60_fu_5577_p4;

assign zext_ln744_fu_5137_p1 = trunc_ln601_reg_7611;

assign zext_ln76_fu_4590_p1 = $unsigned(m_0_i_reg_2376);

assign zext_ln78_fu_4612_p1 = add_ln78_fu_4606_p2;

assign zext_ln80_fu_4623_p1 = add_ln80_fu_4618_p2;

assign zext_ln85_1_fu_4746_p1 = add_ln85_fu_4741_p2;

assign zext_ln85_fu_4737_p1 = tmp_55_fu_4729_p3;

assign zext_ln92_fu_4764_p1 = i_0_i49_reg_2432;

assign zext_ln95_fu_4769_p1 = flag_reg_2444;

assign zext_ln97_1_fu_4822_p1 = sort_index_q1;

assign zext_ln97_fu_4817_p1 = sort_index_q0;

always @ (posedge ap_clk) begin
    p_cast19_reg_6286[30] <= 1'b0;
    p_cast_reg_6292[30] <= 1'b0;
    shl_ln_reg_6405[9:0] <= 10'b0000000000;
    zext_ln304_1_reg_6419[16:3] <= 14'b00000000000000;
    zext_ln120_reg_6454[31:11] <= 21'b000000000000000000000;
    zext_ln227_reg_6526[31:11] <= 21'b000000000000000000000;
    numBF_reg_6543[31:10] <= 22'b0000000000000000000000;
    i_5_cast_reg_6548[31:10] <= 22'b0000000000000000000000;
    zext_ln310_2_reg_6621[30:17] <= 14'b00000000000000;
    zext_ln316_reg_6653[13:11] <= 3'b000;
    zext_ln321_reg_6684[1:0] <= 2'b00;
    zext_ln321_reg_6684[6] <= 1'b0;
    zext_ln319_reg_6689[1:0] <= 2'b00;
    zext_ln319_reg_6689[16] <= 1'b0;
    zext_ln116_reg_6747[6:3] <= 4'b0000;
    zext_ln110_reg_6752[1:0] <= 2'b00;
    zext_ln110_reg_6752[5] <= 1'b0;
    zext_ln116_1_reg_6765[6:3] <= 4'b0000;
    zext_ln23_reg_6909[1:0] <= 2'b00;
    zext_ln23_reg_6909[5] <= 1'b0;
    zext_ln24_1_reg_6922[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_6956[1:0] <= 2'b00;
    zext_ln32_reg_6956[5] <= 1'b0;
    zext_ln39_reg_6970[5:3] <= 3'b000;
    zext_ln1044_reg_7055[5:3] <= 3'b000;
    zext_ln49_1_reg_7090[1:0] <= 2'b00;
    zext_ln49_1_reg_7090[5] <= 1'b0;
    zext_ln51_1_reg_7127[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln55_reg_7143[31:2] <= 30'b000000000000000000000000000000;
    zext_ln56_reg_7168[1:0] <= 2'b00;
    zext_ln56_reg_7168[5:4] <= 2'b00;
    sext_ln62_cast_reg_7215[1:0] <= 2'b00;
    sext_ln78_reg_7261[1:0] <= 2'b00;
    zext_ln332_reg_7479[1:0] <= 2'b00;
    zext_ln332_reg_7479[5] <= 1'b0;
    Un_M_real_addr_1_reg_7484[0] <= 1'b0;
    Un_M_real_addr_2_reg_7489[0] <= 1'b1;
    Un_M_imag_addr_1_reg_7494[0] <= 1'b0;
    Un_M_imag_addr_2_reg_7499[0] <= 1'b1;
    r_V_22_reg_7659[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln357_reg_7737[0] <= 1'b0;
    zext_ln357_reg_7737[4] <= 1'b0;
    zext_ln350_reg_7742[1:0] <= 2'b00;
    zext_ln350_reg_7742[5] <= 1'b0;
    zext_ln357_1_reg_7755[0] <= 1'b0;
    zext_ln357_1_reg_7755[4] <= 1'b0;
    zext_ln368_reg_7840[10:9] <= 2'b00;
    zext_ln361_reg_7845[1:0] <= 2'b00;
    zext_ln361_reg_7845[11] <= 1'b0;
    zext_ln368_1_reg_7858[5:3] <= 3'b000;
    zext_ln389_reg_7930[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln389_1_reg_7935[10:9] <= 2'b00;
    zext_ln387_reg_7940[1:0] <= 2'b00;
    zext_ln387_reg_7940[11] <= 1'b0;
end

endmodule //music
