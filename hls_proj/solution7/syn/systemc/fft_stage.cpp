// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fft_stage.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fft_stage::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fft_stage::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> fft_stage::ap_ST_fsm_state1 = "1";
const sc_lv<4> fft_stage::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> fft_stage::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> fft_stage::ap_ST_fsm_state20 = "1000";
const sc_lv<32> fft_stage::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool fft_stage::ap_const_boolean_1 = true;
const sc_lv<32> fft_stage::ap_const_lv32_2 = "10";
const bool fft_stage::ap_const_boolean_0 = false;
const sc_lv<1> fft_stage::ap_const_lv1_0 = "0";
const sc_lv<32> fft_stage::ap_const_lv32_1 = "1";
const sc_lv<1> fft_stage::ap_const_lv1_1 = "1";
const sc_lv<10> fft_stage::ap_const_lv10_0 = "0000000000";
const sc_lv<10> fft_stage::ap_const_lv10_200 = "1000000000";
const sc_lv<10> fft_stage::ap_const_lv10_1 = "1";
const sc_lv<2> fft_stage::ap_const_lv2_0 = "00";
const sc_lv<2> fft_stage::ap_const_lv2_1 = "1";
const sc_lv<32> fft_stage::ap_const_lv32_3 = "11";

fft_stage::fft_stage(sc_module_name name) : sc_module(name), mVcdFile(0) {
    W_real44_U = new fft_stage_119_W_rfYi("W_real44_U");
    W_real44_U->clk(ap_clk);
    W_real44_U->reset(ap_rst);
    W_real44_U->address0(W_real44_address0);
    W_real44_U->ce0(W_real44_ce0);
    W_real44_U->q0(W_real44_q0);
    W_imag35_U = new fft_stage_119_W_ig8j("W_imag35_U");
    W_imag35_U->clk(ap_clk);
    W_imag35_U->reset(ap_rst);
    W_imag35_U->address0(W_imag35_address0);
    W_imag35_U->ce0(W_imag35_ce0);
    W_imag35_U->q0(W_imag35_q0);
    music_faddfsub_32bkb_U91 = new music_faddfsub_32bkb<1,5,32,32,32>("music_faddfsub_32bkb_U91");
    music_faddfsub_32bkb_U91->clk(ap_clk);
    music_faddfsub_32bkb_U91->reset(ap_rst);
    music_faddfsub_32bkb_U91->din0(grp_fu_181_p0);
    music_faddfsub_32bkb_U91->din1(grp_fu_181_p1);
    music_faddfsub_32bkb_U91->opcode(grp_fu_181_opcode);
    music_faddfsub_32bkb_U91->ce(ap_var_for_const0);
    music_faddfsub_32bkb_U91->dout(grp_fu_181_p2);
    music_fsub_32ns_3cud_U92 = new music_fsub_32ns_3cud<1,5,32,32,32>("music_fsub_32ns_3cud_U92");
    music_fsub_32ns_3cud_U92->clk(ap_clk);
    music_fsub_32ns_3cud_U92->reset(ap_rst);
    music_fsub_32ns_3cud_U92->din0(grp_fu_185_p0);
    music_fsub_32ns_3cud_U92->din1(grp_fu_185_p1);
    music_fsub_32ns_3cud_U92->ce(ap_var_for_const0);
    music_fsub_32ns_3cud_U92->dout(grp_fu_185_p2);
    music_fadd_32ns_3dEe_U93 = new music_fadd_32ns_3dEe<1,5,32,32,32>("music_fadd_32ns_3dEe_U93");
    music_fadd_32ns_3dEe_U93->clk(ap_clk);
    music_fadd_32ns_3dEe_U93->reset(ap_rst);
    music_fadd_32ns_3dEe_U93->din0(grp_fu_189_p0);
    music_fadd_32ns_3dEe_U93->din1(grp_fu_189_p1);
    music_fadd_32ns_3dEe_U93->ce(ap_var_for_const0);
    music_fadd_32ns_3dEe_U93->dout(grp_fu_189_p2);
    music_fmul_32ns_3eOg_U94 = new music_fmul_32ns_3eOg<1,4,32,32,32>("music_fmul_32ns_3eOg_U94");
    music_fmul_32ns_3eOg_U94->clk(ap_clk);
    music_fmul_32ns_3eOg_U94->reset(ap_rst);
    music_fmul_32ns_3eOg_U94->din0(grp_fu_193_p0);
    music_fmul_32ns_3eOg_U94->din1(c_reg_286);
    music_fmul_32ns_3eOg_U94->ce(ap_var_for_const0);
    music_fmul_32ns_3eOg_U94->dout(grp_fu_193_p2);
    music_fmul_32ns_3eOg_U95 = new music_fmul_32ns_3eOg<1,4,32,32,32>("music_fmul_32ns_3eOg_U95");
    music_fmul_32ns_3eOg_U95->clk(ap_clk);
    music_fmul_32ns_3eOg_U95->reset(ap_rst);
    music_fmul_32ns_3eOg_U95->din0(grp_fu_197_p0);
    music_fmul_32ns_3eOg_U95->din1(s_reg_291);
    music_fmul_32ns_3eOg_U95->ce(ap_var_for_const0);
    music_fmul_32ns_3eOg_U95->dout(grp_fu_197_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Out_I_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( zext_ln194_reg_270_pp0_iter8_reg );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_Out_I_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( zext_ln191_reg_252_pp0_iter8_reg );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_Out_I_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_Out_I_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_Out_I_d0);
    sensitive << ( reg_201 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_Out_I_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( reg_207 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_Out_I_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln181_reg_243_pp0_iter8_reg );

    SC_METHOD(thread_Out_I_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln181_reg_243_pp0_iter8_reg );

    SC_METHOD(thread_Out_R_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( zext_ln194_reg_270_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_Out_R_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( zext_ln191_reg_252_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_Out_R_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_Out_R_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_Out_R_d0);
    sensitive << ( reg_201 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_Out_R_d1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( reg_207 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_Out_R_we0);
    sensitive << ( icmp_ln181_reg_243_pp0_iter7_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_Out_R_we1);
    sensitive << ( icmp_ln181_reg_243_pp0_iter7_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_W_imag35_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln191_fu_225_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_W_imag35_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_W_real44_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln191_fu_225_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_W_real44_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_X_I_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln194_fu_237_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_X_I_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln191_reg_252_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_X_I_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_X_I_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_X_R_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln194_fu_237_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_X_R_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln191_reg_252_pp0_iter3_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_X_R_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_X_R_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_00001);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state13_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state17_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter8);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter3);

    SC_METHOD(thread_ap_condition_441);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( icmp_ln181_reg_243_pp0_iter3_reg );
    sensitive << ( ap_block_pp0_stage1_00001 );

    SC_METHOD(thread_ap_condition_445);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln181_reg_243_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_00001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln181_fu_213_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_174_p4);
    sensitive << ( i_reg_170 );
    sensitive << ( icmp_ln181_reg_243 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_247 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_grp_fu_181_opcode);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_condition_441 );
    sensitive << ( ap_condition_445 );

    SC_METHOD(thread_grp_fu_181_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_reg_308 );
    sensitive << ( tmp_2_reg_318 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_181_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_reg_313 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_reg_323 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_185_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( X_R_load_2_reg_333 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( X_I_load_2_reg_356 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_185_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( temp_R_reg_339 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( temp_I_reg_350 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_189_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( X_R_load_2_reg_333 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( X_I_load_2_reg_356 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_189_p1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( temp_R_reg_339 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( temp_I_reg_350 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_193_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( X_R_load_reg_296 );
    sensitive << ( X_I_load_reg_302 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_197_p0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( X_R_load_reg_296 );
    sensitive << ( X_I_load_reg_302 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_i_lower_fu_231_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_174_p4 );

    SC_METHOD(thread_icmp_ln181_fu_213_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_phi_fu_174_p4 );

    SC_METHOD(thread_j_fu_219_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_174_p4 );

    SC_METHOD(thread_zext_ln191_fu_225_p1);
    sensitive << ( ap_phi_mux_i_phi_fu_174_p4 );

    SC_METHOD(thread_zext_ln194_fu_237_p1);
    sensitive << ( i_lower_fu_231_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln181_fu_213_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fft_stage_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_R_address0, "(port)X_R_address0");
    sc_trace(mVcdFile, X_R_ce0, "(port)X_R_ce0");
    sc_trace(mVcdFile, X_R_q0, "(port)X_R_q0");
    sc_trace(mVcdFile, X_R_address1, "(port)X_R_address1");
    sc_trace(mVcdFile, X_R_ce1, "(port)X_R_ce1");
    sc_trace(mVcdFile, X_R_q1, "(port)X_R_q1");
    sc_trace(mVcdFile, X_I_address0, "(port)X_I_address0");
    sc_trace(mVcdFile, X_I_ce0, "(port)X_I_ce0");
    sc_trace(mVcdFile, X_I_q0, "(port)X_I_q0");
    sc_trace(mVcdFile, X_I_address1, "(port)X_I_address1");
    sc_trace(mVcdFile, X_I_ce1, "(port)X_I_ce1");
    sc_trace(mVcdFile, X_I_q1, "(port)X_I_q1");
    sc_trace(mVcdFile, Out_R_address0, "(port)Out_R_address0");
    sc_trace(mVcdFile, Out_R_ce0, "(port)Out_R_ce0");
    sc_trace(mVcdFile, Out_R_we0, "(port)Out_R_we0");
    sc_trace(mVcdFile, Out_R_d0, "(port)Out_R_d0");
    sc_trace(mVcdFile, Out_R_address1, "(port)Out_R_address1");
    sc_trace(mVcdFile, Out_R_ce1, "(port)Out_R_ce1");
    sc_trace(mVcdFile, Out_R_we1, "(port)Out_R_we1");
    sc_trace(mVcdFile, Out_R_d1, "(port)Out_R_d1");
    sc_trace(mVcdFile, Out_I_address0, "(port)Out_I_address0");
    sc_trace(mVcdFile, Out_I_ce0, "(port)Out_I_ce0");
    sc_trace(mVcdFile, Out_I_we0, "(port)Out_I_we0");
    sc_trace(mVcdFile, Out_I_d0, "(port)Out_I_d0");
    sc_trace(mVcdFile, Out_I_address1, "(port)Out_I_address1");
    sc_trace(mVcdFile, Out_I_ce1, "(port)Out_I_ce1");
    sc_trace(mVcdFile, Out_I_we1, "(port)Out_I_we1");
    sc_trace(mVcdFile, Out_I_d1, "(port)Out_I_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, W_real44_address0, "W_real44_address0");
    sc_trace(mVcdFile, W_real44_ce0, "W_real44_ce0");
    sc_trace(mVcdFile, W_real44_q0, "W_real44_q0");
    sc_trace(mVcdFile, W_imag35_address0, "W_imag35_address0");
    sc_trace(mVcdFile, W_imag35_ce0, "W_imag35_ce0");
    sc_trace(mVcdFile, W_imag35_q0, "W_imag35_q0");
    sc_trace(mVcdFile, i_reg_170, "i_reg_170");
    sc_trace(mVcdFile, grp_fu_185_p2, "grp_fu_185_p2");
    sc_trace(mVcdFile, reg_201, "reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter2, "ap_block_state7_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter3, "ap_block_state9_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter4, "ap_block_state11_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage1_iter5, "ap_block_state13_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter6, "ap_block_state15_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage1_iter7, "ap_block_state17_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter8, "ap_block_state19_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, icmp_ln181_reg_243, "icmp_ln181_reg_243");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter7_reg, "icmp_ln181_reg_243_pp0_iter7_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter3, "ap_block_state8_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter4, "ap_block_state10_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter5, "ap_block_state12_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter6, "ap_block_state14_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter7, "ap_block_state16_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter8, "ap_block_state18_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, grp_fu_189_p2, "grp_fu_189_p2");
    sc_trace(mVcdFile, reg_207, "reg_207");
    sc_trace(mVcdFile, icmp_ln181_fu_213_p2, "icmp_ln181_fu_213_p2");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter1_reg, "icmp_ln181_reg_243_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter2_reg, "icmp_ln181_reg_243_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter3_reg, "icmp_ln181_reg_243_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter4_reg, "icmp_ln181_reg_243_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter5_reg, "icmp_ln181_reg_243_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter6_reg, "icmp_ln181_reg_243_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln181_reg_243_pp0_iter8_reg, "icmp_ln181_reg_243_pp0_iter8_reg");
    sc_trace(mVcdFile, j_fu_219_p2, "j_fu_219_p2");
    sc_trace(mVcdFile, j_reg_247, "j_reg_247");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln191_fu_225_p1, "zext_ln191_fu_225_p1");
    sc_trace(mVcdFile, zext_ln191_reg_252, "zext_ln191_reg_252");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter1_reg, "zext_ln191_reg_252_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter2_reg, "zext_ln191_reg_252_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter3_reg, "zext_ln191_reg_252_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter4_reg, "zext_ln191_reg_252_pp0_iter4_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter5_reg, "zext_ln191_reg_252_pp0_iter5_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter6_reg, "zext_ln191_reg_252_pp0_iter6_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter7_reg, "zext_ln191_reg_252_pp0_iter7_reg");
    sc_trace(mVcdFile, zext_ln191_reg_252_pp0_iter8_reg, "zext_ln191_reg_252_pp0_iter8_reg");
    sc_trace(mVcdFile, zext_ln194_fu_237_p1, "zext_ln194_fu_237_p1");
    sc_trace(mVcdFile, zext_ln194_reg_270, "zext_ln194_reg_270");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter1_reg, "zext_ln194_reg_270_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter2_reg, "zext_ln194_reg_270_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter3_reg, "zext_ln194_reg_270_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter4_reg, "zext_ln194_reg_270_pp0_iter4_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter5_reg, "zext_ln194_reg_270_pp0_iter5_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter6_reg, "zext_ln194_reg_270_pp0_iter6_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter7_reg, "zext_ln194_reg_270_pp0_iter7_reg");
    sc_trace(mVcdFile, zext_ln194_reg_270_pp0_iter8_reg, "zext_ln194_reg_270_pp0_iter8_reg");
    sc_trace(mVcdFile, c_reg_286, "c_reg_286");
    sc_trace(mVcdFile, s_reg_291, "s_reg_291");
    sc_trace(mVcdFile, X_R_load_reg_296, "X_R_load_reg_296");
    sc_trace(mVcdFile, X_I_load_reg_302, "X_I_load_reg_302");
    sc_trace(mVcdFile, grp_fu_193_p2, "grp_fu_193_p2");
    sc_trace(mVcdFile, tmp_reg_308, "tmp_reg_308");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, tmp_1_reg_313, "tmp_1_reg_313");
    sc_trace(mVcdFile, tmp_2_reg_318, "tmp_2_reg_318");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, tmp_3_reg_323, "tmp_3_reg_323");
    sc_trace(mVcdFile, X_R_load_2_reg_333, "X_R_load_2_reg_333");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, grp_fu_181_p2, "grp_fu_181_p2");
    sc_trace(mVcdFile, temp_R_reg_339, "temp_R_reg_339");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, temp_I_reg_350, "temp_I_reg_350");
    sc_trace(mVcdFile, X_I_load_2_reg_356, "X_I_load_2_reg_356");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_174_p4, "ap_phi_mux_i_phi_fu_174_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, grp_fu_181_p0, "grp_fu_181_p0");
    sc_trace(mVcdFile, grp_fu_181_p1, "grp_fu_181_p1");
    sc_trace(mVcdFile, grp_fu_185_p0, "grp_fu_185_p0");
    sc_trace(mVcdFile, grp_fu_185_p1, "grp_fu_185_p1");
    sc_trace(mVcdFile, grp_fu_189_p0, "grp_fu_189_p0");
    sc_trace(mVcdFile, grp_fu_189_p1, "grp_fu_189_p1");
    sc_trace(mVcdFile, grp_fu_193_p0, "grp_fu_193_p0");
    sc_trace(mVcdFile, grp_fu_197_p0, "grp_fu_197_p0");
    sc_trace(mVcdFile, i_lower_fu_231_p2, "i_lower_fu_231_p2");
    sc_trace(mVcdFile, grp_fu_181_opcode, "grp_fu_181_opcode");
    sc_trace(mVcdFile, ap_block_pp0_stage1_00001, "ap_block_pp0_stage1_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_441, "ap_condition_441");
    sc_trace(mVcdFile, ap_condition_445, "ap_condition_445");
#endif

    }
}

fft_stage::~fft_stage() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete W_real44_U;
    delete W_imag35_U;
    delete music_faddfsub_32bkb_U91;
    delete music_fsub_32ns_3cud_U92;
    delete music_fadd_32ns_3dEe_U93;
    delete music_fmul_32ns_3eOg_U94;
    delete music_fmul_32ns_3eOg_U95;
}

void fft_stage::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fft_stage::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln181_reg_243.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_170 = j_reg_247.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_170 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter5_reg.read()))) {
        X_I_load_2_reg_356 = X_I_q1.read();
        temp_I_reg_350 = grp_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln181_reg_243.read(), ap_const_lv1_0))) {
        X_I_load_reg_302 = X_I_q0.read();
        X_R_load_reg_296 = X_R_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter4_reg.read()))) {
        X_R_load_2_reg_333 = X_R_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln181_reg_243.read(), ap_const_lv1_0))) {
        c_reg_286 = W_real44_q0.read();
        s_reg_291 = W_imag35_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln181_reg_243 = icmp_ln181_fu_213_p2.read();
        icmp_ln181_reg_243_pp0_iter1_reg = icmp_ln181_reg_243.read();
        icmp_ln181_reg_243_pp0_iter2_reg = icmp_ln181_reg_243_pp0_iter1_reg.read();
        icmp_ln181_reg_243_pp0_iter3_reg = icmp_ln181_reg_243_pp0_iter2_reg.read();
        icmp_ln181_reg_243_pp0_iter4_reg = icmp_ln181_reg_243_pp0_iter3_reg.read();
        icmp_ln181_reg_243_pp0_iter5_reg = icmp_ln181_reg_243_pp0_iter4_reg.read();
        icmp_ln181_reg_243_pp0_iter6_reg = icmp_ln181_reg_243_pp0_iter5_reg.read();
        icmp_ln181_reg_243_pp0_iter7_reg = icmp_ln181_reg_243_pp0_iter6_reg.read();
        icmp_ln181_reg_243_pp0_iter8_reg = icmp_ln181_reg_243_pp0_iter7_reg.read();
        zext_ln191_reg_252_pp0_iter1_reg = zext_ln191_reg_252.read();
        zext_ln191_reg_252_pp0_iter2_reg = zext_ln191_reg_252_pp0_iter1_reg.read();
        zext_ln191_reg_252_pp0_iter3_reg = zext_ln191_reg_252_pp0_iter2_reg.read();
        zext_ln191_reg_252_pp0_iter4_reg = zext_ln191_reg_252_pp0_iter3_reg.read();
        zext_ln191_reg_252_pp0_iter5_reg = zext_ln191_reg_252_pp0_iter4_reg.read();
        zext_ln191_reg_252_pp0_iter6_reg = zext_ln191_reg_252_pp0_iter5_reg.read();
        zext_ln191_reg_252_pp0_iter7_reg = zext_ln191_reg_252_pp0_iter6_reg.read();
        zext_ln191_reg_252_pp0_iter8_reg = zext_ln191_reg_252_pp0_iter7_reg.read();
        zext_ln194_reg_270_pp0_iter1_reg = zext_ln194_reg_270.read();
        zext_ln194_reg_270_pp0_iter2_reg = zext_ln194_reg_270_pp0_iter1_reg.read();
        zext_ln194_reg_270_pp0_iter3_reg = zext_ln194_reg_270_pp0_iter2_reg.read();
        zext_ln194_reg_270_pp0_iter4_reg = zext_ln194_reg_270_pp0_iter3_reg.read();
        zext_ln194_reg_270_pp0_iter5_reg = zext_ln194_reg_270_pp0_iter4_reg.read();
        zext_ln194_reg_270_pp0_iter6_reg = zext_ln194_reg_270_pp0_iter5_reg.read();
        zext_ln194_reg_270_pp0_iter7_reg = zext_ln194_reg_270_pp0_iter6_reg.read();
        zext_ln194_reg_270_pp0_iter8_reg = zext_ln194_reg_270_pp0_iter7_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        j_reg_247 = j_fu_219_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln181_reg_243_pp0_iter7_reg.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(icmp_ln181_reg_243_pp0_iter7_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_201 = grp_fu_185_p2.read();
        reg_207 = grp_fu_189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter4_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        temp_R_reg_339 = grp_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter2_reg.read()))) {
        tmp_1_reg_313 = grp_fu_197_p2.read();
        tmp_reg_308 = grp_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        tmp_2_reg_318 = grp_fu_193_p2.read();
        tmp_3_reg_323 = grp_fu_197_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_fu_213_p2.read()))) {
        zext_ln191_reg_252 = zext_ln191_fu_225_p1.read();
        zext_ln194_reg_270 = zext_ln194_fu_237_p1.read();
    }
}

void fft_stage::thread_Out_I_address0() {
    Out_I_address0 =  (sc_lv<10>) (zext_ln194_reg_270_pp0_iter8_reg.read());
}

void fft_stage::thread_Out_I_address1() {
    Out_I_address1 =  (sc_lv<10>) (zext_ln191_reg_252_pp0_iter8_reg.read());
}

void fft_stage::thread_Out_I_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        Out_I_ce0 = ap_const_logic_1;
    } else {
        Out_I_ce0 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_I_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        Out_I_ce1 = ap_const_logic_1;
    } else {
        Out_I_ce1 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_I_d0() {
    Out_I_d0 = reg_201.read();
}

void fft_stage::thread_Out_I_d1() {
    Out_I_d1 = reg_207.read();
}

void fft_stage::thread_Out_I_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter8_reg.read()))) {
        Out_I_we0 = ap_const_logic_1;
    } else {
        Out_I_we0 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_I_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter8_reg.read()))) {
        Out_I_we1 = ap_const_logic_1;
    } else {
        Out_I_we1 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_R_address0() {
    Out_R_address0 =  (sc_lv<10>) (zext_ln194_reg_270_pp0_iter7_reg.read());
}

void fft_stage::thread_Out_R_address1() {
    Out_R_address1 =  (sc_lv<10>) (zext_ln191_reg_252_pp0_iter7_reg.read());
}

void fft_stage::thread_Out_R_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Out_R_ce0 = ap_const_logic_1;
    } else {
        Out_R_ce0 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_R_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Out_R_ce1 = ap_const_logic_1;
    } else {
        Out_R_ce1 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_R_d0() {
    Out_R_d0 = reg_201.read();
}

void fft_stage::thread_Out_R_d1() {
    Out_R_d1 = reg_207.read();
}

void fft_stage::thread_Out_R_we0() {
    if ((esl_seteq<1,1,1>(icmp_ln181_reg_243_pp0_iter7_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Out_R_we0 = ap_const_logic_1;
    } else {
        Out_R_we0 = ap_const_logic_0;
    }
}

void fft_stage::thread_Out_R_we1() {
    if ((esl_seteq<1,1,1>(icmp_ln181_reg_243_pp0_iter7_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Out_R_we1 = ap_const_logic_1;
    } else {
        Out_R_we1 = ap_const_logic_0;
    }
}

void fft_stage::thread_W_imag35_address0() {
    W_imag35_address0 =  (sc_lv<9>) (zext_ln191_fu_225_p1.read());
}

void fft_stage::thread_W_imag35_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        W_imag35_ce0 = ap_const_logic_1;
    } else {
        W_imag35_ce0 = ap_const_logic_0;
    }
}

void fft_stage::thread_W_real44_address0() {
    W_real44_address0 =  (sc_lv<9>) (zext_ln191_fu_225_p1.read());
}

void fft_stage::thread_W_real44_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        W_real44_ce0 = ap_const_logic_1;
    } else {
        W_real44_ce0 = ap_const_logic_0;
    }
}

void fft_stage::thread_X_I_address0() {
    X_I_address0 =  (sc_lv<10>) (zext_ln194_fu_237_p1.read());
}

void fft_stage::thread_X_I_address1() {
    X_I_address1 =  (sc_lv<10>) (zext_ln191_reg_252_pp0_iter4_reg.read());
}

void fft_stage::thread_X_I_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        X_I_ce0 = ap_const_logic_1;
    } else {
        X_I_ce0 = ap_const_logic_0;
    }
}

void fft_stage::thread_X_I_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        X_I_ce1 = ap_const_logic_1;
    } else {
        X_I_ce1 = ap_const_logic_0;
    }
}

void fft_stage::thread_X_R_address0() {
    X_R_address0 =  (sc_lv<10>) (zext_ln194_fu_237_p1.read());
}

void fft_stage::thread_X_R_address1() {
    X_R_address1 =  (sc_lv<10>) (zext_ln191_reg_252_pp0_iter3_reg.read());
}

void fft_stage::thread_X_R_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        X_R_ce0 = ap_const_logic_1;
    } else {
        X_R_ce0 = ap_const_logic_0;
    }
}

void fft_stage::thread_X_R_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        X_R_ce1 = ap_const_logic_1;
    } else {
        X_R_ce1 = ap_const_logic_0;
    }
}

void fft_stage::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void fft_stage::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void fft_stage::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fft_stage::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[3];
}

void fft_stage::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage1_00001() {
    ap_block_pp0_stage1_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void fft_stage::thread_ap_block_state10_pp0_stage0_iter4() {
    ap_block_state10_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state11_pp0_stage1_iter4() {
    ap_block_state11_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state12_pp0_stage0_iter5() {
    ap_block_state12_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state13_pp0_stage1_iter5() {
    ap_block_state13_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state14_pp0_stage0_iter6() {
    ap_block_state14_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state15_pp0_stage1_iter6() {
    ap_block_state15_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state16_pp0_stage0_iter7() {
    ap_block_state16_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state17_pp0_stage1_iter7() {
    ap_block_state17_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state18_pp0_stage0_iter8() {
    ap_block_state18_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state19_pp0_stage1_iter8() {
    ap_block_state19_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state7_pp0_stage1_iter2() {
    ap_block_state7_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state8_pp0_stage0_iter3() {
    ap_block_state8_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_block_state9_pp0_stage1_iter3() {
    ap_block_state9_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft_stage::thread_ap_condition_441() {
    ap_condition_441 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter3_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_00001.read(), ap_const_boolean_0));
}

void fft_stage::thread_ap_condition_445() {
    ap_condition_445 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln181_reg_243_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_00001.read(), ap_const_boolean_0));
}

void fft_stage::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln181_fu_213_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void fft_stage::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void fft_stage::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void fft_stage::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fft_stage::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void fft_stage::thread_ap_phi_mux_i_phi_fu_174_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln181_reg_243.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_174_p4 = j_reg_247.read();
    } else {
        ap_phi_mux_i_phi_fu_174_p4 = i_reg_170.read();
    }
}

void fft_stage::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fft_stage::thread_grp_fu_181_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_445.read(), ap_const_boolean_1)) {
            grp_fu_181_opcode = ap_const_lv2_1;
        } else if (esl_seteq<1,1,1>(ap_condition_441.read(), ap_const_boolean_1)) {
            grp_fu_181_opcode = ap_const_lv2_0;
        } else {
            grp_fu_181_opcode = "XX";
        }
    } else {
        grp_fu_181_opcode = "XX";
    }
}

void fft_stage::thread_grp_fu_181_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_181_p0 = tmp_2_reg_318.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_181_p0 = tmp_reg_308.read();
        } else {
            grp_fu_181_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_181_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_181_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_181_p1 = tmp_3_reg_323.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_181_p1 = tmp_1_reg_313.read();
        } else {
            grp_fu_181_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_181_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_185_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        grp_fu_185_p0 = X_I_load_2_reg_356.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_185_p0 = X_R_load_2_reg_333.read();
    } else {
        grp_fu_185_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_185_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        grp_fu_185_p1 = temp_I_reg_350.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_185_p1 = temp_R_reg_339.read();
    } else {
        grp_fu_185_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_189_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        grp_fu_189_p0 = X_I_load_2_reg_356.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_189_p0 = X_R_load_2_reg_333.read();
    } else {
        grp_fu_189_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_189_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        grp_fu_189_p1 = temp_I_reg_350.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_189_p1 = temp_R_reg_339.read();
    } else {
        grp_fu_189_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_193_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_193_p0 = X_I_load_reg_302.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_193_p0 = X_R_load_reg_296.read();
        } else {
            grp_fu_193_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_193_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_grp_fu_197_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            grp_fu_197_p0 = X_R_load_reg_296.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            grp_fu_197_p0 = X_I_load_reg_302.read();
        } else {
            grp_fu_197_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_197_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft_stage::thread_i_lower_fu_231_p2() {
    i_lower_fu_231_p2 = (ap_phi_mux_i_phi_fu_174_p4.read() ^ ap_const_lv10_200);
}

void fft_stage::thread_icmp_ln181_fu_213_p2() {
    icmp_ln181_fu_213_p2 = (!ap_phi_mux_i_phi_fu_174_p4.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_174_p4.read() == ap_const_lv10_200);
}

void fft_stage::thread_j_fu_219_p2() {
    j_fu_219_p2 = (!ap_phi_mux_i_phi_fu_174_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(ap_phi_mux_i_phi_fu_174_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void fft_stage::thread_zext_ln191_fu_225_p1() {
    zext_ln191_fu_225_p1 = esl_zext<64,10>(ap_phi_mux_i_phi_fu_174_p4.read());
}

void fft_stage::thread_zext_ln194_fu_237_p1() {
    zext_ln194_fu_237_p1 = esl_zext<64,10>(i_lower_fu_231_p2.read());
}

void fft_stage::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln181_fu_213_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln181_fu_213_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

