// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module eig_decompose (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Rx_M_real_address0,
        Rx_M_real_ce0,
        Rx_M_real_q0,
        Rx_M_imag_address0,
        Rx_M_imag_ce0,
        Rx_M_imag_q0,
        U_M_real_address0,
        U_M_real_ce0,
        U_M_real_we0,
        U_M_real_d0,
        U_M_real_q0,
        U_M_imag_address0,
        U_M_imag_ce0,
        U_M_imag_we0,
        U_M_imag_d0,
        U_M_imag_q0,
        eigval_0_read,
        eigval_1_read,
        eigval_2_read,
        eigval_3_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 198'd1;
parameter    ap_ST_fsm_state2 = 198'd2;
parameter    ap_ST_fsm_state3 = 198'd4;
parameter    ap_ST_fsm_state4 = 198'd8;
parameter    ap_ST_fsm_state5 = 198'd16;
parameter    ap_ST_fsm_state6 = 198'd32;
parameter    ap_ST_fsm_state7 = 198'd64;
parameter    ap_ST_fsm_state8 = 198'd128;
parameter    ap_ST_fsm_state9 = 198'd256;
parameter    ap_ST_fsm_state10 = 198'd512;
parameter    ap_ST_fsm_state11 = 198'd1024;
parameter    ap_ST_fsm_state12 = 198'd2048;
parameter    ap_ST_fsm_state13 = 198'd4096;
parameter    ap_ST_fsm_state14 = 198'd8192;
parameter    ap_ST_fsm_state15 = 198'd16384;
parameter    ap_ST_fsm_state16 = 198'd32768;
parameter    ap_ST_fsm_state17 = 198'd65536;
parameter    ap_ST_fsm_state18 = 198'd131072;
parameter    ap_ST_fsm_state19 = 198'd262144;
parameter    ap_ST_fsm_state20 = 198'd524288;
parameter    ap_ST_fsm_state21 = 198'd1048576;
parameter    ap_ST_fsm_state22 = 198'd2097152;
parameter    ap_ST_fsm_state23 = 198'd4194304;
parameter    ap_ST_fsm_state24 = 198'd8388608;
parameter    ap_ST_fsm_state25 = 198'd16777216;
parameter    ap_ST_fsm_state26 = 198'd33554432;
parameter    ap_ST_fsm_state27 = 198'd67108864;
parameter    ap_ST_fsm_state28 = 198'd134217728;
parameter    ap_ST_fsm_state29 = 198'd268435456;
parameter    ap_ST_fsm_state30 = 198'd536870912;
parameter    ap_ST_fsm_state31 = 198'd1073741824;
parameter    ap_ST_fsm_state32 = 198'd2147483648;
parameter    ap_ST_fsm_state33 = 198'd4294967296;
parameter    ap_ST_fsm_state34 = 198'd8589934592;
parameter    ap_ST_fsm_state35 = 198'd17179869184;
parameter    ap_ST_fsm_state36 = 198'd34359738368;
parameter    ap_ST_fsm_state37 = 198'd68719476736;
parameter    ap_ST_fsm_state38 = 198'd137438953472;
parameter    ap_ST_fsm_state39 = 198'd274877906944;
parameter    ap_ST_fsm_state40 = 198'd549755813888;
parameter    ap_ST_fsm_state41 = 198'd1099511627776;
parameter    ap_ST_fsm_state42 = 198'd2199023255552;
parameter    ap_ST_fsm_state43 = 198'd4398046511104;
parameter    ap_ST_fsm_state44 = 198'd8796093022208;
parameter    ap_ST_fsm_state45 = 198'd17592186044416;
parameter    ap_ST_fsm_state46 = 198'd35184372088832;
parameter    ap_ST_fsm_state47 = 198'd70368744177664;
parameter    ap_ST_fsm_state48 = 198'd140737488355328;
parameter    ap_ST_fsm_state49 = 198'd281474976710656;
parameter    ap_ST_fsm_state50 = 198'd562949953421312;
parameter    ap_ST_fsm_state51 = 198'd1125899906842624;
parameter    ap_ST_fsm_state52 = 198'd2251799813685248;
parameter    ap_ST_fsm_state53 = 198'd4503599627370496;
parameter    ap_ST_fsm_state54 = 198'd9007199254740992;
parameter    ap_ST_fsm_state55 = 198'd18014398509481984;
parameter    ap_ST_fsm_state56 = 198'd36028797018963968;
parameter    ap_ST_fsm_state57 = 198'd72057594037927936;
parameter    ap_ST_fsm_state58 = 198'd144115188075855872;
parameter    ap_ST_fsm_state59 = 198'd288230376151711744;
parameter    ap_ST_fsm_state60 = 198'd576460752303423488;
parameter    ap_ST_fsm_state61 = 198'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 198'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 198'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 198'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 198'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 198'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 198'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 198'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 198'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 198'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 198'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 198'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 198'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 198'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 198'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 198'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 198'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 198'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 198'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 198'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 198'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 198'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 198'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 198'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 198'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 198'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 198'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 198'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 198'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 198'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 198'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 198'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 198'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 198'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 198'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 198'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 198'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 198'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 198'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 198'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 198'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 198'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 198'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 198'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 198'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 198'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 198'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 198'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 198'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 198'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 198'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 198'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 198'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 198'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 198'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 198'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 198'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 198'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 198'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 198'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 198'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 198'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 198'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 198'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 198'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 198'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 198'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 198'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 198'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 198'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 198'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 198'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 198'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 198'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 198'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 198'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 198'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 198'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 198'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 198'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 198'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 198'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 198'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 198'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 198'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 198'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 198'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 198'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 198'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 198'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 198'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 198'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 198'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 198'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 198'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 198'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 198'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 198'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 198'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 198'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 198'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 198'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 198'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 198'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 198'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 198'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 198'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 198'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 198'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 198'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 198'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 198'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 198'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 198'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 198'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 198'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 198'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 198'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 198'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 198'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 198'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 198'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 198'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 198'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 198'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 198'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 198'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 198'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 198'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 198'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 198'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 198'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 198'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 198'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 198'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 198'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 198'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 198'd200867255532373784442745261542645325315275374222849104412672;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] Rx_M_real_address0;
output   Rx_M_real_ce0;
input  [31:0] Rx_M_real_q0;
output  [3:0] Rx_M_imag_address0;
output   Rx_M_imag_ce0;
input  [31:0] Rx_M_imag_q0;
output  [3:0] U_M_real_address0;
output   U_M_real_ce0;
output   U_M_real_we0;
output  [31:0] U_M_real_d0;
input  [31:0] U_M_real_q0;
output  [3:0] U_M_imag_address0;
output   U_M_imag_ce0;
output   U_M_imag_we0;
output  [31:0] U_M_imag_d0;
input  [31:0] U_M_imag_q0;
input  [31:0] eigval_0_read;
input  [31:0] eigval_1_read;
input  [31:0] eigval_2_read;
input  [31:0] eigval_3_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] Rx_M_real_address0;
reg Rx_M_real_ce0;
reg[3:0] Rx_M_imag_address0;
reg Rx_M_imag_ce0;
reg[3:0] U_M_real_address0;
reg U_M_real_ce0;
reg U_M_real_we0;
reg[31:0] U_M_real_d0;
reg[3:0] U_M_imag_address0;
reg U_M_imag_ce0;
reg U_M_imag_we0;
reg[31:0] U_M_imag_d0;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [197:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_1006_p2;
reg   [31:0] reg_1078;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state167;
wire    ap_CS_fsm_state177;
wire   [31:0] grp_fu_1012_p2;
reg   [31:0] reg_1083;
wire   [31:0] grp_fu_1018_p2;
reg   [31:0] reg_1088;
wire   [31:0] grp_fu_1024_p2;
reg   [31:0] reg_1093;
wire   [31:0] grp_fu_988_p2;
reg   [31:0] reg_1098;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state42;
wire   [31:0] grp_fu_992_p2;
reg   [31:0] reg_1104;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state182;
reg   [31:0] reg_1113;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state147;
wire    ap_CS_fsm_state172;
wire    ap_CS_fsm_state113;
wire   [31:0] Rx_temp_M_real_q0;
reg   [31:0] reg_1129;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state114;
wire   [31:0] Rx_temp_M_imag_q0;
reg   [31:0] reg_1139;
reg   [31:0] reg_1149;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state83;
reg   [31:0] reg_1158;
reg   [31:0] reg_1167;
wire    ap_CS_fsm_state174;
wire   [1:0] add_ln11_fu_1188_p2;
reg   [1:0] add_ln11_reg_2098;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln11_1_fu_1194_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] add_ln12_fu_1226_p2;
reg   [1:0] add_ln12_reg_2114;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln12_1_fu_1232_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] add_ln13_fu_1264_p2;
reg   [1:0] add_ln13_reg_2130;
wire    ap_CS_fsm_state6;
wire   [1:0] add_ln13_1_fu_1270_p2;
wire    ap_CS_fsm_state7;
wire   [1:0] add_ln14_fu_1302_p2;
reg   [1:0] add_ln14_reg_2146;
wire    ap_CS_fsm_state8;
wire   [1:0] add_ln14_1_fu_1308_p2;
wire    ap_CS_fsm_state9;
wire   [2:0] i_fu_1346_p2;
reg   [2:0] i_reg_2165;
wire    ap_CS_fsm_state10;
wire   [5:0] zext_ln20_fu_1360_p1;
reg   [5:0] zext_ln20_reg_2170;
wire   [0:0] icmp_ln19_fu_1340_p2;
wire   [2:0] j_fu_1370_p2;
reg   [2:0] j_reg_2178;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln21_1_fu_1385_p1;
reg   [63:0] zext_ln21_1_reg_2183;
wire   [0:0] icmp_ln20_fu_1364_p2;
wire   [3:0] i_9_fu_1397_p2;
reg   [3:0] i_9_reg_2206;
wire    ap_CS_fsm_state13;
wire   [2:0] i_10_fu_1409_p2;
reg   [2:0] i_10_reg_2214;
wire    ap_CS_fsm_state15;
wire   [5:0] zext_ln30_fu_1423_p1;
reg   [5:0] zext_ln30_reg_2219;
wire   [0:0] icmp_ln29_fu_1403_p2;
wire   [2:0] j_7_fu_1433_p2;
reg   [2:0] j_7_reg_2228;
wire    ap_CS_fsm_state16;
wire   [5:0] zext_ln36_fu_1439_p1;
reg   [5:0] zext_ln36_reg_2233;
wire   [0:0] icmp_ln30_fu_1427_p2;
reg   [3:0] eig_mat_M_real_addr_3_reg_2238;
reg   [3:0] eig_mat_M_imag_addr_2_reg_2243;
wire   [2:0] k_fu_1460_p2;
reg   [2:0] k_reg_2251;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln33_fu_1454_p2;
wire   [31:0] R_temp_M_real_q0;
wire    ap_CS_fsm_state18;
wire   [31:0] R_temp_M_imag_q0;
wire   [31:0] Q_temp_M_real_q0;
wire   [31:0] Q_temp_M_imag_q0;
wire   [2:0] count_fu_1510_p2;
reg   [2:0] count_reg_2303;
wire    ap_CS_fsm_state32;
wire   [5:0] zext_ln1067_fu_1516_p1;
reg   [5:0] zext_ln1067_reg_2308;
wire   [0:0] icmp_ln40_fu_1504_p2;
reg   [3:0] U_M_real_addr_2_reg_2320;
wire    ap_CS_fsm_state33;
reg   [3:0] U_M_imag_addr_2_reg_2325;
wire   [1:0] trunc_ln41_fu_1583_p1;
reg   [1:0] trunc_ln41_reg_2330;
wire   [31:0] eigval_3_1_fu_1621_p3;
reg   [31:0] eigval_3_1_reg_2335;
wire   [31:0] eigval_2_1_fu_1629_p3;
reg   [31:0] eigval_2_1_reg_2341;
wire   [31:0] eigval_1_1_fu_1645_p3;
reg   [31:0] eigval_1_1_reg_2347;
wire   [31:0] eigval_0_1_fu_1669_p3;
reg   [31:0] eigval_0_1_reg_2353;
wire   [2:0] i_11_fu_1683_p2;
reg   [2:0] i_11_reg_2362;
wire    ap_CS_fsm_state34;
wire   [5:0] zext_ln45_1_fu_1701_p1;
reg   [5:0] zext_ln45_1_reg_2367;
wire   [0:0] icmp_ln42_fu_1677_p2;
reg   [3:0] Rx_temp_M_real_addr_3_reg_2382;
reg   [3:0] Rx_temp_M_imag_addr_3_reg_2387;
reg   [31:0] p_r_M_real_11_reg_2392;
wire    ap_CS_fsm_state35;
reg   [31:0] p_r_M_imag_11_reg_2397;
wire   [2:0] j_9_fu_1725_p2;
reg   [2:0] j_9_reg_2405;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln44_fu_1731_p2;
reg   [0:0] icmp_ln44_reg_2410;
wire   [0:0] icmp_ln43_fu_1719_p2;
wire   [63:0] zext_ln47_1_fu_1746_p1;
reg   [63:0] zext_ln47_1_reg_2414;
wire   [31:0] p_y_read_assign_fu_1752_p6;
reg   [31:0] p_y_read_assign_reg_2430;
wire   [31:0] zext_ln51_fu_1761_p1;
reg   [31:0] zext_ln51_reg_2435;
wire    ap_CS_fsm_state44;
wire   [1:0] i_12_fu_1771_p2;
reg   [1:0] i_12_reg_2445;
wire   [0:0] icmp_ln51_fu_1765_p2;
wire   [5:0] zext_ln52_fu_1799_p1;
reg   [5:0] zext_ln52_reg_2460;
reg   [3:0] Rx_temp_M_real_addr_5_reg_2469;
wire    ap_CS_fsm_state54;
wire   [0:0] icmp_ln53_fu_1803_p2;
reg   [3:0] Rx_temp_M_imag_addr_5_reg_2474;
wire   [31:0] j_8_fu_1824_p2;
reg   [31:0] j_8_reg_2479;
wire   [31:0] j_11_fu_1830_p2;
reg   [31:0] j_11_reg_2484;
wire    ap_CS_fsm_state80;
wire   [3:0] trunc_ln57_fu_1842_p1;
reg   [3:0] trunc_ln57_reg_2492;
wire   [0:0] icmp_ln56_fu_1836_p2;
wire   [5:0] sext_ln57_cast_fu_1860_p3;
reg   [5:0] sext_ln57_cast_reg_2507;
wire   [5:0] add_ln59_fu_1877_p2;
reg   [5:0] add_ln59_reg_2515;
wire    ap_CS_fsm_state82;
wire   [0:0] icmp_ln58_fu_1867_p2;
wire   [31:0] q_1_fu_1893_p2;
reg   [31:0] q_1_reg_2530;
reg   [3:0] Rx_temp_M_real_addr_9_reg_2535;
wire    ap_CS_fsm_state90;
reg   [3:0] Rx_temp_M_imag_addr_9_reg_2540;
wire  signed [31:0] sext_ln65_fu_1904_p1;
wire    ap_CS_fsm_state98;
wire  signed [5:0] sext_ln72_fu_1928_p1;
reg  signed [5:0] sext_ln72_reg_2553;
wire   [0:0] tmp_46_fu_1908_p3;
reg   [3:0] U_M_real_addr_3_reg_2558;
reg   [3:0] U_M_imag_addr_3_reg_2563;
reg   [3:0] Rx_temp_M_real_addr_6_reg_2568;
reg   [3:0] Rx_temp_M_imag_addr_6_reg_2573;
wire   [31:0] j_10_fu_1955_p2;
reg   [31:0] j_10_reg_2578;
wire    ap_CS_fsm_state99;
wire   [0:0] icmp_ln67_fu_1961_p2;
wire   [2:0] m_fu_2005_p2;
reg   [2:0] m_reg_2606;
wire   [31:0] p_r_M_real_13_fu_2021_p1;
wire   [31:0] p_r_M_imag_12_fu_2037_p1;
wire   [31:0] grp_fu_1044_p2;
reg   [31:0] tmp_7_i_i_reg_2628;
wire   [31:0] grp_fu_1049_p2;
reg   [31:0] tmp_8_i_i_reg_2633;
wire   [31:0] grp_fu_1000_p2;
reg   [31:0] tmp_9_i_i_reg_2638;
wire   [31:0] grp_fu_1060_p2;
reg   [31:0] sum_M_real_reg_2643;
wire    ap_CS_fsm_state138;
wire   [31:0] grp_fu_1065_p2;
reg   [31:0] sum_M_imag_reg_2649;
wire    ap_CS_fsm_state152;
wire   [31:0] grp_fu_1072_p2;
reg   [31:0] midsum_reg_2660;
wire    ap_CS_fsm_state163;
wire   [2:0] i_13_fu_2049_p2;
reg   [2:0] i_13_reg_2670;
wire    ap_CS_fsm_state173;
reg   [3:0] U_M_real_addr_5_reg_2675;
wire   [0:0] icmp_ln75_fu_2043_p2;
reg   [3:0] U_M_imag_addr_5_reg_2680;
reg   [3:0] Q_temp_M_real_address0;
reg    Q_temp_M_real_ce0;
reg    Q_temp_M_real_we0;
reg   [31:0] Q_temp_M_real_d0;
reg   [3:0] Q_temp_M_imag_address0;
reg    Q_temp_M_imag_ce0;
reg    Q_temp_M_imag_we0;
reg   [31:0] Q_temp_M_imag_d0;
reg   [3:0] R_temp_M_real_address0;
reg    R_temp_M_real_ce0;
reg    R_temp_M_real_we0;
reg   [31:0] R_temp_M_real_d0;
reg   [3:0] R_temp_M_imag_address0;
reg    R_temp_M_imag_ce0;
reg    R_temp_M_imag_we0;
reg   [31:0] R_temp_M_imag_d0;
reg   [3:0] Rx_temp_M_real_address0;
reg    Rx_temp_M_real_ce0;
reg    Rx_temp_M_real_we0;
reg   [31:0] Rx_temp_M_real_d0;
reg   [3:0] Rx_temp_M_imag_address0;
reg    Rx_temp_M_imag_ce0;
reg    Rx_temp_M_imag_we0;
reg   [31:0] Rx_temp_M_imag_d0;
reg   [3:0] eig_mat_M_real_address0;
reg    eig_mat_M_real_ce0;
reg    eig_mat_M_real_we0;
reg   [31:0] eig_mat_M_real_d0;
wire   [31:0] eig_mat_M_real_q0;
reg   [3:0] eig_mat_M_imag_address0;
reg    eig_mat_M_imag_ce0;
reg    eig_mat_M_imag_we0;
reg   [31:0] eig_mat_M_imag_d0;
wire   [31:0] eig_mat_M_imag_q0;
wire    grp_qrf_alt_fu_970_ap_start;
wire    grp_qrf_alt_fu_970_ap_done;
wire    grp_qrf_alt_fu_970_ap_idle;
wire    grp_qrf_alt_fu_970_ap_ready;
wire   [3:0] grp_qrf_alt_fu_970_A_M_real_address0;
wire    grp_qrf_alt_fu_970_A_M_real_ce0;
wire   [3:0] grp_qrf_alt_fu_970_A_M_imag_address0;
wire    grp_qrf_alt_fu_970_A_M_imag_ce0;
wire   [3:0] grp_qrf_alt_fu_970_Q_M_real_address0;
wire    grp_qrf_alt_fu_970_Q_M_real_ce0;
wire    grp_qrf_alt_fu_970_Q_M_real_we0;
wire   [31:0] grp_qrf_alt_fu_970_Q_M_real_d0;
wire   [3:0] grp_qrf_alt_fu_970_Q_M_imag_address0;
wire    grp_qrf_alt_fu_970_Q_M_imag_ce0;
wire    grp_qrf_alt_fu_970_Q_M_imag_we0;
wire   [31:0] grp_qrf_alt_fu_970_Q_M_imag_d0;
wire   [3:0] grp_qrf_alt_fu_970_R_M_real_address0;
wire    grp_qrf_alt_fu_970_R_M_real_ce0;
wire    grp_qrf_alt_fu_970_R_M_real_we0;
wire   [31:0] grp_qrf_alt_fu_970_R_M_real_d0;
wire   [3:0] grp_qrf_alt_fu_970_R_M_imag_address0;
wire    grp_qrf_alt_fu_970_R_M_imag_ce0;
wire    grp_qrf_alt_fu_970_R_M_imag_we0;
wire   [31:0] grp_qrf_alt_fu_970_R_M_imag_d0;
reg   [1:0] phi_ln11_reg_604;
wire   [0:0] icmp_ln11_fu_1214_p2;
wire   [0:0] icmp_ln11_1_fu_1220_p2;
reg   [1:0] phi_ln11_1_reg_616;
reg   [1:0] phi_ln12_reg_627;
wire   [0:0] icmp_ln12_fu_1252_p2;
wire   [0:0] icmp_ln12_1_fu_1258_p2;
reg   [1:0] phi_ln12_1_reg_639;
reg   [1:0] phi_ln13_reg_650;
wire   [0:0] icmp_ln13_fu_1290_p2;
wire   [0:0] icmp_ln13_1_fu_1296_p2;
reg   [1:0] phi_ln13_1_reg_662;
reg   [1:0] phi_ln14_reg_673;
wire   [0:0] icmp_ln14_fu_1328_p2;
wire   [0:0] icmp_ln14_1_fu_1334_p2;
reg   [1:0] phi_ln14_1_reg_685;
reg   [2:0] i_0_reg_696;
reg   [2:0] j_0_reg_707;
wire    ap_CS_fsm_state12;
reg   [3:0] i16_0_reg_718;
reg   [2:0] i17_0_reg_729;
wire    ap_CS_fsm_state14;
reg   [2:0] j18_0_reg_740;
reg   [31:0] complex_M_imag_read_reg_751;
reg   [31:0] complex_M_real_read_reg_764;
reg   [2:0] k_0_reg_777;
reg   [31:0] eigval_0_0_reg_788;
wire   [0:0] icmp_ln27_fu_1391_p2;
reg   [31:0] eigval_1_0_reg_798;
reg   [31:0] eigval_2_0_reg_808;
reg   [31:0] eigval_3_0_reg_818;
reg   [2:0] count_0_reg_828;
reg   [2:0] i19_0_reg_840;
reg   [2:0] j20_0_reg_852;
wire    ap_CS_fsm_state43;
reg   [1:0] j_12_reg_863;
reg   [31:0] j22_0_reg_875;
wire    ap_CS_fsm_state79;
reg   [31:0] j23_0_in_reg_884;
reg   [31:0] q_0_reg_893;
wire    ap_CS_fsm_state97;
reg   [31:0] p_x_assign_reg_902;
reg  signed [2:0] m_0_reg_914;
reg   [31:0] complex_M_imag_read_3_reg_926;
reg   [31:0] complex_M_real_read_3_reg_938;
reg   [31:0] j24_0_in_reg_950;
reg   [2:0] i25_0_reg_959;
wire    ap_CS_fsm_state198;
reg    grp_qrf_alt_fu_970_ap_start_reg;
wire   [63:0] zext_ln1027_fu_1208_p1;
wire   [63:0] zext_ln1027_9_fu_1246_p1;
wire   [63:0] zext_ln1027_10_fu_1284_p1;
wire   [63:0] zext_ln1027_11_fu_1322_p1;
wire   [63:0] zext_ln36_1_fu_1448_p1;
wire   [63:0] zext_ln34_2_fu_1487_p1;
wire   [63:0] zext_ln34_3_fu_1498_p1;
wire   [63:0] zext_ln1044_1_fu_1538_p1;
wire   [63:0] zext_ln1067_4_fu_1577_p1;
wire   [63:0] zext_ln45_2_fu_1711_p1;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln52_1_fu_1785_p1;
wire  signed [63:0] sext_ln54_fu_1818_p1;
wire  signed [63:0] sext_ln57_fu_1854_p1;
wire  signed [63:0] sext_ln59_1_fu_1887_p1;
wire  signed [63:0] sext_ln59_fu_1899_p1;
wire   [63:0] zext_ln72_1_fu_1937_p1;
wire   [63:0] zext_ln70_fu_1949_p1;
wire  signed [63:0] sext_ln68_fu_1988_p1;
wire  signed [63:0] sext_ln68_1_fu_1999_p1;
wire   [63:0] zext_ln76_1_fu_2072_p1;
reg   [31:0] grp_fu_988_p0;
reg   [31:0] grp_fu_988_p1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state143;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state168;
wire    ap_CS_fsm_state178;
reg   [31:0] grp_fu_992_p0;
reg   [31:0] grp_fu_992_p1;
reg   [31:0] grp_fu_1006_p0;
reg   [31:0] grp_fu_1006_p1;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state164;
reg   [31:0] grp_fu_1012_p0;
reg   [31:0] grp_fu_1012_p1;
reg   [31:0] grp_fu_1018_p0;
reg   [31:0] grp_fu_1018_p1;
reg   [31:0] grp_fu_1024_p0;
reg   [31:0] grp_fu_1024_p1;
wire   [31:0] grp_fu_1044_p0;
wire   [31:0] grp_fu_1049_p0;
reg   [31:0] grp_fu_1060_p0;
reg   [31:0] grp_fu_1060_p1;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state183;
reg   [31:0] grp_fu_1065_p0;
reg   [31:0] grp_fu_1065_p1;
wire   [3:0] tmp_53_fu_1200_p3;
wire   [3:0] tmp_43_fu_1238_p3;
wire   [3:0] tmp_44_fu_1276_p3;
wire   [3:0] tmp_45_fu_1314_p3;
wire   [4:0] tmp_54_fu_1352_p3;
wire   [5:0] zext_ln21_fu_1376_p1;
wire   [5:0] add_ln21_fu_1380_p2;
wire   [4:0] tmp_56_fu_1415_p3;
wire   [5:0] add_ln36_fu_1443_p2;
wire   [4:0] tmp_60_fu_1470_p3;
wire   [5:0] zext_ln34_1_fu_1478_p1;
wire   [5:0] add_ln34_fu_1482_p2;
wire   [5:0] zext_ln34_fu_1466_p1;
wire   [5:0] add_ln34_1_fu_1493_p2;
wire   [4:0] tmp_55_fu_1520_p3;
wire   [5:0] zext_ln1044_fu_1528_p1;
wire   [5:0] add_ln1044_fu_1532_p2;
wire   [2:0] xor_ln1067_fu_1567_p2;
wire  signed [3:0] sext_ln1067_fu_1573_p1;
wire   [0:0] icmp_ln41_fu_1587_p2;
wire   [0:0] icmp_ln41_1_fu_1601_p2;
wire   [31:0] select_ln41_fu_1593_p3;
wire   [0:0] icmp_ln41_2_fu_1615_p2;
wire   [31:0] select_ln41_1_fu_1607_p3;
wire   [31:0] select_ln41_2_fu_1637_p3;
wire   [31:0] select_ln41_3_fu_1653_p3;
wire   [31:0] select_ln41_4_fu_1661_p3;
wire   [4:0] tmp_57_fu_1693_p3;
wire   [5:0] zext_ln45_fu_1689_p1;
wire   [5:0] add_ln45_fu_1705_p2;
wire   [5:0] zext_ln47_fu_1737_p1;
wire   [5:0] add_ln47_fu_1741_p2;
wire   [3:0] tmp_59_fu_1777_p3;
wire   [3:0] tmp_58_fu_1791_p3;
wire   [5:0] trunc_ln54_fu_1809_p1;
wire   [5:0] add_ln54_fu_1813_p2;
wire   [33:0] tmp_63_fu_1846_p3;
wire   [5:0] trunc_ln59_fu_1873_p1;
wire   [5:0] add_ln59_1_fu_1882_p2;
wire   [4:0] tmp_61_fu_1920_p3;
wire   [5:0] add_ln72_fu_1932_p2;
wire   [5:0] zext_ln72_fu_1916_p1;
wire   [5:0] add_ln70_fu_1943_p2;
wire   [3:0] trunc_ln68_1_fu_1971_p1;
wire   [5:0] sext_ln68_1_cast_fu_1975_p3;
wire   [5:0] add_ln68_fu_1983_p2;
wire   [5:0] trunc_ln68_fu_1967_p1;
wire   [5:0] add_ln68_1_fu_1994_p2;
wire   [31:0] bitcast_ln444_fu_2011_p1;
wire   [31:0] xor_ln444_fu_2015_p2;
wire   [31:0] bitcast_ln444_3_fu_2027_p1;
wire   [31:0] xor_ln444_1_fu_2031_p2;
wire   [4:0] tmp_62_fu_2055_p3;
wire   [5:0] zext_ln76_fu_2063_p1;
wire   [5:0] add_ln76_fu_2067_p2;
reg   [1:0] grp_fu_988_opcode;
reg   [1:0] grp_fu_992_opcode;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [197:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 198'd1;
#0 grp_qrf_alt_fu_970_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
end

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_temp_M_real_address0),
    .ce0(Q_temp_M_real_ce0),
    .we0(Q_temp_M_real_we0),
    .d0(Q_temp_M_real_d0),
    .q0(Q_temp_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Q_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_temp_M_imag_address0),
    .ce0(Q_temp_M_imag_ce0),
    .we0(Q_temp_M_imag_we0),
    .d0(Q_temp_M_imag_d0),
    .q0(Q_temp_M_imag_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_temp_M_real_address0),
    .ce0(R_temp_M_real_ce0),
    .we0(R_temp_M_real_we0),
    .d0(R_temp_M_real_d0),
    .q0(R_temp_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
R_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(R_temp_M_imag_address0),
    .ce0(R_temp_M_imag_ce0),
    .we0(R_temp_M_imag_we0),
    .d0(R_temp_M_imag_d0),
    .q0(R_temp_M_imag_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rx_temp_M_real_address0),
    .ce0(Rx_temp_M_real_ce0),
    .we0(Rx_temp_M_real_we0),
    .d0(Rx_temp_M_real_d0),
    .q0(Rx_temp_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Rx_temp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rx_temp_M_imag_address0),
    .ce0(Rx_temp_M_imag_ce0),
    .we0(Rx_temp_M_imag_we0),
    .d0(Rx_temp_M_imag_d0),
    .q0(Rx_temp_M_imag_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eig_mat_M_real_address0),
    .ce0(eig_mat_M_real_ce0),
    .we0(eig_mat_M_real_we0),
    .d0(eig_mat_M_real_d0),
    .q0(eig_mat_M_real_q0)
);

eig_decompose_Q_twdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
eig_mat_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(eig_mat_M_imag_address0),
    .ce0(eig_mat_M_imag_ce0),
    .we0(eig_mat_M_imag_we0),
    .d0(eig_mat_M_imag_d0),
    .q0(eig_mat_M_imag_q0)
);

qrf_alt grp_qrf_alt_fu_970(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_qrf_alt_fu_970_ap_start),
    .ap_done(grp_qrf_alt_fu_970_ap_done),
    .ap_idle(grp_qrf_alt_fu_970_ap_idle),
    .ap_ready(grp_qrf_alt_fu_970_ap_ready),
    .A_M_real_address0(grp_qrf_alt_fu_970_A_M_real_address0),
    .A_M_real_ce0(grp_qrf_alt_fu_970_A_M_real_ce0),
    .A_M_real_q0(eig_mat_M_real_q0),
    .A_M_imag_address0(grp_qrf_alt_fu_970_A_M_imag_address0),
    .A_M_imag_ce0(grp_qrf_alt_fu_970_A_M_imag_ce0),
    .A_M_imag_q0(eig_mat_M_imag_q0),
    .Q_M_real_address0(grp_qrf_alt_fu_970_Q_M_real_address0),
    .Q_M_real_ce0(grp_qrf_alt_fu_970_Q_M_real_ce0),
    .Q_M_real_we0(grp_qrf_alt_fu_970_Q_M_real_we0),
    .Q_M_real_d0(grp_qrf_alt_fu_970_Q_M_real_d0),
    .Q_M_imag_address0(grp_qrf_alt_fu_970_Q_M_imag_address0),
    .Q_M_imag_ce0(grp_qrf_alt_fu_970_Q_M_imag_ce0),
    .Q_M_imag_we0(grp_qrf_alt_fu_970_Q_M_imag_we0),
    .Q_M_imag_d0(grp_qrf_alt_fu_970_Q_M_imag_d0),
    .R_M_real_address0(grp_qrf_alt_fu_970_R_M_real_address0),
    .R_M_real_ce0(grp_qrf_alt_fu_970_R_M_real_ce0),
    .R_M_real_we0(grp_qrf_alt_fu_970_R_M_real_we0),
    .R_M_real_d0(grp_qrf_alt_fu_970_R_M_real_d0),
    .R_M_imag_address0(grp_qrf_alt_fu_970_R_M_imag_address0),
    .R_M_imag_ce0(grp_qrf_alt_fu_970_R_M_imag_ce0),
    .R_M_imag_we0(grp_qrf_alt_fu_970_R_M_imag_we0),
    .R_M_imag_d0(grp_qrf_alt_fu_970_R_M_imag_d0)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_988_p0),
    .din1(grp_fu_988_p1),
    .opcode(grp_fu_988_opcode),
    .ce(1'b1),
    .dout(grp_fu_988_p2)
);

music_faddfsub_32ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_faddfsub_32ibs_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_992_p0),
    .din1(grp_fu_992_p1),
    .opcode(grp_fu_992_opcode),
    .ce(1'b1),
    .dout(grp_fu_992_p2)
);

music_fsub_32ns_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsub_32ns_3rcU_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_i_i_reg_2628),
    .din1(tmp_8_i_i_reg_2633),
    .ce(1'b1),
    .dout(grp_fu_1000_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1006_p0),
    .din1(grp_fu_1006_p1),
    .ce(1'b1),
    .dout(grp_fu_1006_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1012_p0),
    .din1(grp_fu_1012_p1),
    .ce(1'b1),
    .dout(grp_fu_1012_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1018_p0),
    .din1(grp_fu_1018_p1),
    .ce(1'b1),
    .dout(grp_fu_1018_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1024_p0),
    .din1(grp_fu_1024_p1),
    .ce(1'b1),
    .dout(grp_fu_1024_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1044_p0),
    .din1(Rx_temp_M_real_q0),
    .ce(1'b1),
    .dout(grp_fu_1044_p2)
);

music_fmul_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fmul_32ns_3jbC_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1049_p0),
    .din1(Rx_temp_M_imag_q0),
    .ce(1'b1),
    .dout(grp_fu_1049_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1060_p0),
    .din1(grp_fu_1060_p1),
    .ce(1'b1),
    .dout(grp_fu_1060_p2)
);

music_fdiv_32ns_3ncg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fdiv_32ns_3ncg_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1065_p0),
    .din1(grp_fu_1065_p1),
    .ce(1'b1),
    .dout(grp_fu_1065_p2)
);

music_fsqrt_32ns_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
music_fsqrt_32ns_qcK_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(p_x_assign_reg_902),
    .ce(1'b1),
    .dout(grp_fu_1072_p2)
);

music_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
music_mux_42_32_1_1_U160(
    .din0(eigval_0_1_reg_2353),
    .din1(eigval_1_1_reg_2347),
    .din2(eigval_2_1_reg_2341),
    .din3(eigval_3_1_reg_2335),
    .din4(trunc_ln41_reg_2330),
    .dout(p_y_read_assign_fu_1752_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_0_preg <= eigval_0_0_reg_788;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_1_preg <= eigval_1_0_reg_798;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_2_preg <= eigval_2_0_reg_808;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            ap_return_3_preg <= eigval_3_0_reg_818;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_qrf_alt_fu_970_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln27_fu_1391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_qrf_alt_fu_970_ap_start_reg <= 1'b1;
        end else if ((grp_qrf_alt_fu_970_ap_ready == 1'b1)) begin
            grp_qrf_alt_fu_970_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        complex_M_imag_read_3_reg_926 <= grp_fu_992_p2;
    end else if (((tmp_46_fu_1908_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
        complex_M_imag_read_3_reg_926 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        complex_M_imag_read_reg_751 <= grp_fu_992_p2;
    end else if (((icmp_ln30_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        complex_M_imag_read_reg_751 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        complex_M_real_read_3_reg_938 <= grp_fu_988_p2;
    end else if (((tmp_46_fu_1908_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
        complex_M_real_read_3_reg_938 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        complex_M_real_read_reg_764 <= grp_fu_988_p2;
    end else if (((icmp_ln30_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        complex_M_real_read_reg_764 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        count_0_reg_828 <= 3'd0;
    end else if (((icmp_ln75_fu_2043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
        count_0_reg_828 <= count_reg_2303;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_0_0_reg_788 <= eigval_0_read;
    end else if (((icmp_ln75_fu_2043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
        eigval_0_0_reg_788 <= eigval_0_1_reg_2353;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_1_0_reg_798 <= eigval_1_read;
    end else if (((icmp_ln75_fu_2043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
        eigval_1_0_reg_798 <= eigval_1_1_reg_2347;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_2_0_reg_808 <= eigval_2_read;
    end else if (((icmp_ln75_fu_2043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
        eigval_2_0_reg_808 <= eigval_2_1_reg_2341;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        eigval_3_0_reg_818 <= eigval_3_read;
    end else if (((icmp_ln75_fu_2043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
        eigval_3_0_reg_818 <= eigval_3_1_reg_2335;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1340_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i16_0_reg_718 <= 4'd0;
    end else if (((icmp_ln29_fu_1403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        i16_0_reg_718 <= i_9_reg_2206;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_1427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i17_0_reg_729 <= i_10_reg_2214;
    end else if (((grp_qrf_alt_fu_970_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i17_0_reg_729 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1719_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        i19_0_reg_840 <= i_11_reg_2362;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        i19_0_reg_840 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        i25_0_reg_959 <= i_13_reg_2670;
    end else if ((1'b1 == ap_CS_fsm_state172)) begin
        i25_0_reg_959 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_1_fu_1334_p2 == 1'd1) & (icmp_ln14_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_0_reg_696 <= 3'd0;
    end else if (((icmp_ln20_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_0_reg_696 <= i_reg_2165;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_1454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        j18_0_reg_740 <= j_7_reg_2228;
    end else if (((icmp_ln29_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        j18_0_reg_740 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        j20_0_reg_852 <= j_9_reg_2405;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        j20_0_reg_852 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        j22_0_reg_875 <= j_8_reg_2479;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        j22_0_reg_875 <= zext_ln51_reg_2435;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1803_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        j23_0_in_reg_884 <= zext_ln51_reg_2435;
    end else if (((icmp_ln58_fu_1867_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        j23_0_in_reg_884 <= j_11_reg_2484;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        j24_0_in_reg_950 <= j_10_reg_2578;
    end else if (((tmp_46_fu_1908_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
        j24_0_in_reg_950 <= sext_ln65_fu_1904_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        j_0_reg_707 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_707 <= j_reg_2178;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        j_12_reg_863 <= 2'd0;
    end else if (((icmp_ln56_fu_1836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        j_12_reg_863 <= i_12_reg_2445;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_0_reg_777 <= k_reg_2251;
    end else if (((icmp_ln30_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        k_0_reg_777 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        m_0_reg_914 <= m_reg_2606;
    end else if (((icmp_ln51_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        m_0_reg_914 <= 3'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        p_x_assign_reg_902 <= grp_fu_988_p2;
    end else if (((icmp_ln51_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        p_x_assign_reg_902 <= 32'd1065353216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_1214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln11_1_reg_616 <= add_ln11_1_fu_1194_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln11_1_reg_616 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_1214_p2 == 1'd1) & (icmp_ln11_1_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln11_reg_604 <= add_ln11_reg_2098;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln11_reg_604 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln12_fu_1252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln12_1_reg_639 <= add_ln12_1_fu_1232_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln12_1_reg_639 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_1_fu_1220_p2 == 1'd1) & (icmp_ln11_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln12_reg_627 <= 2'd0;
    end else if (((icmp_ln12_fu_1252_p2 == 1'd1) & (icmp_ln12_1_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln12_reg_627 <= add_ln12_reg_2114;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln13_1_reg_662 <= add_ln13_1_fu_1270_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_ln13_1_reg_662 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln12_1_fu_1258_p2 == 1'd1) & (icmp_ln12_fu_1252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln13_reg_650 <= 2'd0;
    end else if (((icmp_ln13_fu_1290_p2 == 1'd1) & (icmp_ln13_1_fu_1296_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln13_reg_650 <= add_ln13_reg_2130;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_1328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln14_1_reg_685 <= add_ln14_1_fu_1308_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_ln14_1_reg_685 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_1_fu_1296_p2 == 1'd1) & (icmp_ln13_fu_1290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln14_reg_673 <= 2'd0;
    end else if (((icmp_ln14_fu_1328_p2 == 1'd1) & (icmp_ln14_1_fu_1334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_ln14_reg_673 <= add_ln14_reg_2146;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        q_0_reg_893 <= q_1_reg_2530;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        q_0_reg_893 <= zext_ln51_reg_2435;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_1677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        Rx_temp_M_imag_addr_3_reg_2387 <= zext_ln45_2_fu_1711_p1;
        Rx_temp_M_real_addr_3_reg_2382 <= zext_ln45_2_fu_1711_p1;
        zext_ln45_1_reg_2367[4 : 2] <= zext_ln45_1_fu_1701_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1803_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        Rx_temp_M_imag_addr_5_reg_2474 <= sext_ln54_fu_1818_p1;
        Rx_temp_M_real_addr_5_reg_2469 <= sext_ln54_fu_1818_p1;
        j_8_reg_2479 <= j_8_fu_1824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_46_fu_1908_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
        Rx_temp_M_imag_addr_6_reg_2573 <= zext_ln70_fu_1949_p1;
        Rx_temp_M_real_addr_6_reg_2568 <= zext_ln70_fu_1949_p1;
        U_M_imag_addr_3_reg_2563 <= zext_ln72_1_fu_1937_p1;
        U_M_real_addr_3_reg_2558 <= zext_ln72_1_fu_1937_p1;
        sext_ln72_reg_2553[5 : 2] <= sext_ln72_fu_1928_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        Rx_temp_M_imag_addr_9_reg_2540 <= sext_ln59_fu_1899_p1;
        Rx_temp_M_real_addr_9_reg_2535 <= sext_ln59_fu_1899_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        U_M_imag_addr_2_reg_2325 <= zext_ln1067_4_fu_1577_p1;
        U_M_real_addr_2_reg_2320 <= zext_ln1067_4_fu_1577_p1;
        eigval_0_1_reg_2353 <= eigval_0_1_fu_1669_p3;
        eigval_1_1_reg_2347 <= eigval_1_1_fu_1645_p3;
        eigval_2_1_reg_2341 <= eigval_2_1_fu_1629_p3;
        eigval_3_1_reg_2335 <= eigval_3_1_fu_1621_p3;
        trunc_ln41_reg_2330 <= trunc_ln41_fu_1583_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_2043_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state173))) begin
        U_M_imag_addr_5_reg_2680 <= zext_ln76_1_fu_2072_p1;
        U_M_real_addr_5_reg_2675 <= zext_ln76_1_fu_2072_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln11_reg_2098 <= add_ln11_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln12_reg_2114 <= add_ln12_fu_1226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln13_reg_2130 <= add_ln13_fu_1264_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln14_reg_2146 <= add_ln14_fu_1302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1867_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
        add_ln59_reg_2515 <= add_ln59_fu_1877_p2;
        q_1_reg_2530 <= q_1_fu_1893_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        count_reg_2303 <= count_fu_1510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_1427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        eig_mat_M_imag_addr_2_reg_2243 <= zext_ln36_1_fu_1448_p1;
        eig_mat_M_real_addr_3_reg_2238 <= zext_ln36_1_fu_1448_p1;
        zext_ln36_reg_2233[2 : 0] <= zext_ln36_fu_1439_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_10_reg_2214 <= i_10_fu_1409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_11_reg_2362 <= i_11_fu_1683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        i_12_reg_2445 <= i_12_fu_1771_p2;
        zext_ln51_reg_2435[1 : 0] <= zext_ln51_fu_1761_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state173)) begin
        i_13_reg_2670 <= i_13_fu_2049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_9_reg_2206 <= i_9_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_2165 <= i_fu_1346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        icmp_ln44_reg_2410 <= icmp_ln44_fu_1731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        j_10_reg_2578 <= j_10_fu_1955_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        j_11_reg_2484 <= j_11_fu_1830_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_7_reg_2228 <= j_7_fu_1433_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        j_9_reg_2405 <= j_9_fu_1725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_reg_2178 <= j_fu_1370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_reg_2251 <= k_fu_1460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
        m_reg_2606 <= m_fu_2005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state163)) begin
        midsum_reg_2660 <= grp_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_r_M_imag_11_reg_2397 <= Rx_M_imag_q0;
        p_r_M_real_11_reg_2392 <= Rx_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln44_fu_1731_p2 == 1'd1) & (icmp_ln43_fu_1719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        p_y_read_assign_reg_2430 <= p_y_read_assign_fu_1752_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state167) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1078 <= grp_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1083 <= grp_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state177) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_1088 <= grp_fu_1018_p2;
        reg_1093 <= grp_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_1098 <= grp_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_1104 <= grp_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state91))) begin
        reg_1113 <= grp_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_1129 <= Rx_temp_M_real_q0;
        reg_1139 <= Rx_temp_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state91))) begin
        reg_1149 <= Rx_temp_M_real_q0;
        reg_1158 <= Rx_temp_M_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state182) | (1'b1 == ap_CS_fsm_state63))) begin
        reg_1167 <= grp_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        sext_ln57_cast_reg_2507[5 : 2] <= sext_ln57_cast_fu_1860_p3[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        sum_M_imag_reg_2649 <= grp_fu_1065_p2;
        sum_M_real_reg_2643 <= grp_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        tmp_7_i_i_reg_2628 <= grp_fu_1044_p2;
        tmp_8_i_i_reg_2633 <= grp_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        tmp_9_i_i_reg_2638 <= grp_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_1836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        trunc_ln57_reg_2492 <= trunc_ln57_fu_1842_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_1504_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        zext_ln1067_reg_2308[2 : 0] <= zext_ln1067_fu_1516_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        zext_ln20_reg_2170[4 : 2] <= zext_ln20_fu_1360_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_1364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        zext_ln21_1_reg_2183[5 : 0] <= zext_ln21_1_fu_1385_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_1403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        zext_ln30_reg_2219[4 : 2] <= zext_ln30_fu_1423_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1719_p2 == 1'd0) & (icmp_ln44_fu_1731_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        zext_ln47_1_reg_2414[5 : 0] <= zext_ln47_1_fu_1746_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        zext_ln52_reg_2460[3 : 2] <= zext_ln52_fu_1799_p1[3 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_temp_M_imag_address0 = zext_ln34_2_fu_1487_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_imag_address0 = zext_ln1027_fu_1208_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_address0 = grp_qrf_alt_fu_970_Q_M_imag_address0;
    end else begin
        Q_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state3))) begin
        Q_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_ce0 = grp_qrf_alt_fu_970_Q_M_imag_ce0;
    end else begin
        Q_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_d0 = grp_qrf_alt_fu_970_Q_M_imag_d0;
    end else begin
        Q_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_imag_we0 = grp_qrf_alt_fu_970_Q_M_imag_we0;
    end else begin
        Q_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_temp_M_real_address0 = zext_ln34_2_fu_1487_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_real_address0 = zext_ln1027_fu_1208_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_address0 = grp_qrf_alt_fu_970_Q_M_real_address0;
    end else begin
        Q_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state3))) begin
        Q_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_ce0 = grp_qrf_alt_fu_970_Q_M_real_ce0;
    end else begin
        Q_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_d0 = grp_qrf_alt_fu_970_Q_M_real_d0;
    end else begin
        Q_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Q_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_temp_M_real_we0 = grp_qrf_alt_fu_970_Q_M_real_we0;
    end else begin
        Q_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        R_temp_M_imag_address0 = zext_ln34_3_fu_1498_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_imag_address0 = zext_ln1027_9_fu_1246_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_address0 = grp_qrf_alt_fu_970_R_M_imag_address0;
    end else begin
        R_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5))) begin
        R_temp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_ce0 = grp_qrf_alt_fu_970_R_M_imag_ce0;
    end else begin
        R_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_d0 = grp_qrf_alt_fu_970_R_M_imag_d0;
    end else begin
        R_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_imag_we0 = grp_qrf_alt_fu_970_R_M_imag_we0;
    end else begin
        R_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        R_temp_M_real_address0 = zext_ln34_3_fu_1498_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_real_address0 = zext_ln1027_9_fu_1246_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_address0 = grp_qrf_alt_fu_970_R_M_real_address0;
    end else begin
        R_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state5))) begin
        R_temp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_ce0 = grp_qrf_alt_fu_970_R_M_real_ce0;
    end else begin
        R_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_d0 = grp_qrf_alt_fu_970_R_M_real_d0;
    end else begin
        R_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        R_temp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        R_temp_M_real_we0 = grp_qrf_alt_fu_970_R_M_real_we0;
    end else begin
        R_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        Rx_M_imag_address0 = zext_ln47_1_fu_1746_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        Rx_M_imag_address0 = zext_ln45_2_fu_1711_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Rx_M_imag_address0 = zext_ln21_1_fu_1385_p1;
    end else begin
        Rx_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state11))) begin
        Rx_M_imag_ce0 = 1'b1;
    end else begin
        Rx_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        Rx_M_real_address0 = zext_ln47_1_fu_1746_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        Rx_M_real_address0 = zext_ln45_2_fu_1711_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Rx_M_real_address0 = zext_ln21_1_fu_1385_p1;
    end else begin
        Rx_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state11))) begin
        Rx_M_real_ce0 = 1'b1;
    end else begin
        Rx_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_6_reg_2573;
    end else if (((icmp_ln67_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        Rx_temp_M_imag_address0 = sext_ln68_1_fu_1999_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_9_reg_2540;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        Rx_temp_M_imag_address0 = sext_ln59_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Rx_temp_M_imag_address0 = sext_ln59_1_fu_1887_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Rx_temp_M_imag_address0 = sext_ln57_fu_1854_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_5_reg_2474;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        Rx_temp_M_imag_address0 = sext_ln54_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        Rx_temp_M_imag_address0 = zext_ln52_1_fu_1785_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        Rx_temp_M_imag_address0 = zext_ln47_1_reg_2414;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        Rx_temp_M_imag_address0 = Rx_temp_M_imag_addr_3_reg_2387;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Rx_temp_M_imag_address0 = zext_ln21_1_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_imag_address0 = zext_ln1027_10_fu_1284_p1;
    end else begin
        Rx_temp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln67_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((icmp_ln67_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99)))) begin
        Rx_temp_M_imag_ce0 = 1'b1;
    end else begin
        Rx_temp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        Rx_temp_M_imag_d0 = reg_1104;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        Rx_temp_M_imag_d0 = grp_fu_1065_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        Rx_temp_M_imag_d0 = p_r_M_imag_11_reg_2397;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state12))) begin
        Rx_temp_M_imag_d0 = Rx_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_imag_d0 = 32'd0;
    end else begin
        Rx_temp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln44_fu_1731_p2 == 1'd1) & (icmp_ln43_fu_1719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36)))) begin
        Rx_temp_M_imag_we0 = 1'b1;
    end else begin
        Rx_temp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_6_reg_2568;
    end else if (((icmp_ln67_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        Rx_temp_M_real_address0 = sext_ln68_1_fu_1999_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_9_reg_2535;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        Rx_temp_M_real_address0 = sext_ln59_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Rx_temp_M_real_address0 = sext_ln59_1_fu_1887_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Rx_temp_M_real_address0 = sext_ln57_fu_1854_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_5_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        Rx_temp_M_real_address0 = sext_ln54_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        Rx_temp_M_real_address0 = zext_ln52_1_fu_1785_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        Rx_temp_M_real_address0 = Rx_temp_M_real_addr_3_reg_2382;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        Rx_temp_M_real_address0 = zext_ln47_1_reg_2414;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Rx_temp_M_real_address0 = zext_ln21_1_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_real_address0 = zext_ln1027_10_fu_1284_p1;
    end else begin
        Rx_temp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln67_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99)) | ((icmp_ln67_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state99)))) begin
        Rx_temp_M_real_ce0 = 1'b1;
    end else begin
        Rx_temp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        Rx_temp_M_real_d0 = reg_1113;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        Rx_temp_M_real_d0 = grp_fu_1060_p2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        Rx_temp_M_real_d0 = reg_1098;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state12))) begin
        Rx_temp_M_real_d0 = Rx_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Rx_temp_M_real_d0 = 32'd0;
    end else begin
        Rx_temp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln44_reg_2410 == 1'd1) & (1'b1 == ap_CS_fsm_state43)))) begin
        Rx_temp_M_real_we0 = 1'b1;
    end else begin
        Rx_temp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        U_M_imag_address0 = U_M_imag_addr_5_reg_2680;
    end else if ((1'b1 == ap_CS_fsm_state173)) begin
        U_M_imag_address0 = zext_ln76_1_fu_2072_p1;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        U_M_imag_address0 = U_M_imag_addr_3_reg_2563;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        U_M_imag_address0 = sext_ln68_fu_1988_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        U_M_imag_address0 = U_M_imag_addr_2_reg_2325;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        U_M_imag_address0 = zext_ln21_1_reg_2183;
    end else begin
        U_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state12))) begin
        U_M_imag_ce0 = 1'b1;
    end else begin
        U_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state198))) begin
        U_M_imag_d0 = grp_fu_1065_p2;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state12))) begin
        U_M_imag_d0 = 32'd0;
    end else begin
        U_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln51_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44)))) begin
        U_M_imag_we0 = 1'b1;
    end else begin
        U_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state198)) begin
        U_M_real_address0 = U_M_real_addr_5_reg_2675;
    end else if ((1'b1 == ap_CS_fsm_state173)) begin
        U_M_real_address0 = zext_ln76_1_fu_2072_p1;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        U_M_real_address0 = U_M_real_addr_3_reg_2558;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        U_M_real_address0 = sext_ln68_fu_1988_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        U_M_real_address0 = U_M_real_addr_2_reg_2320;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        U_M_real_address0 = zext_ln21_1_reg_2183;
    end else begin
        U_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state12))) begin
        U_M_real_ce0 = 1'b1;
    end else begin
        U_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state198))) begin
        U_M_real_d0 = grp_fu_1060_p2;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        U_M_real_d0 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        U_M_real_d0 = 32'd0;
    end else begin
        U_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state198) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln51_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44)))) begin
        U_M_real_we0 = 1'b1;
    end else begin
        U_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_0 = eigval_0_0_reg_788;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_1 = eigval_1_0_reg_798;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_2 = eigval_2_0_reg_808;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_return_3 = eigval_3_0_reg_818;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_imag_address0 = eig_mat_M_imag_addr_2_reg_2243;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_imag_address0 = zext_ln21_1_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_imag_address0 = zext_ln1027_11_fu_1322_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_imag_address0 = grp_qrf_alt_fu_970_A_M_imag_address0;
    end else begin
        eig_mat_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12))) begin
        eig_mat_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_imag_ce0 = grp_qrf_alt_fu_970_A_M_imag_ce0;
    end else begin
        eig_mat_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_imag_d0 = complex_M_imag_read_reg_751;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_imag_d0 = Rx_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_imag_d0 = 32'd0;
    end else begin
        eig_mat_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln33_fu_1454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        eig_mat_M_imag_we0 = 1'b1;
    end else begin
        eig_mat_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        eig_mat_M_real_address0 = zext_ln1044_1_fu_1538_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_real_address0 = eig_mat_M_real_addr_3_reg_2238;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_real_address0 = zext_ln21_1_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_real_address0 = zext_ln1027_11_fu_1322_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_real_address0 = grp_qrf_alt_fu_970_A_M_real_address0;
    end else begin
        eig_mat_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12))) begin
        eig_mat_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        eig_mat_M_real_ce0 = grp_qrf_alt_fu_970_A_M_real_ce0;
    end else begin
        eig_mat_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        eig_mat_M_real_d0 = complex_M_real_read_reg_764;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        eig_mat_M_real_d0 = Rx_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        eig_mat_M_real_d0 = 32'd0;
    end else begin
        eig_mat_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln33_fu_1454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        eig_mat_M_real_we0 = 1'b1;
    end else begin
        eig_mat_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1006_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state164)) begin
        grp_fu_1006_p0 = midsum_reg_2660;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_1006_p0 = sum_M_real_reg_2643;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_1006_p0 = p_r_M_real_13_fu_2021_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1006_p0 = reg_1129;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_1006_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1006_p0 = R_temp_M_real_q0;
    end else begin
        grp_fu_1006_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state164))) begin
        grp_fu_1006_p1 = midsum_reg_2660;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_1006_p1 = sum_M_real_reg_2643;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1006_p1 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1006_p1 = reg_1129;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_1006_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1006_p1 = Q_temp_M_real_q0;
    end else begin
        grp_fu_1006_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1012_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_1012_p0 = sum_M_imag_reg_2649;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_1012_p0 = p_r_M_imag_12_fu_2037_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1012_p0 = reg_1139;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_1012_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1012_p0 = R_temp_M_imag_q0;
    end else begin
        grp_fu_1012_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1012_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        grp_fu_1012_p1 = sum_M_imag_reg_2649;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1012_p1 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1012_p1 = reg_1139;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_1012_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1012_p1 = Q_temp_M_imag_q0;
    end else begin
        grp_fu_1012_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1018_p0 = U_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_1018_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1018_p0 = reg_1139;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state100))) begin
        grp_fu_1018_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1018_p0 = R_temp_M_imag_q0;
    end else begin
        grp_fu_1018_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1018_p1 = midsum_reg_2660;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1018_p1 = U_M_real_q0;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state114))) begin
        grp_fu_1018_p1 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1018_p1 = reg_1129;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1018_p1 = Q_temp_M_real_q0;
    end else begin
        grp_fu_1018_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1024_p0 = U_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_1024_p0 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1024_p0 = reg_1129;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state100))) begin
        grp_fu_1024_p0 = Rx_temp_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1024_p0 = R_temp_M_real_q0;
    end else begin
        grp_fu_1024_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_1024_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1024_p1 = U_M_imag_q0;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state114))) begin
        grp_fu_1024_p1 = Rx_temp_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1024_p1 = reg_1139;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1024_p1 = Q_temp_M_imag_q0;
    end else begin
        grp_fu_1024_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_1060_p0 = reg_1113;
    end else if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_1060_p0 = reg_1167;
    end else begin
        grp_fu_1060_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_1060_p1 = reg_1104;
    end else if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_1060_p1 = reg_1113;
    end else begin
        grp_fu_1060_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_1065_p0 = tmp_9_i_i_reg_2638;
    end else if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_1065_p0 = reg_1104;
    end else begin
        grp_fu_1065_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_1065_p1 = reg_1104;
    end else if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_1065_p1 = reg_1113;
    end else begin
        grp_fu_1065_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_988_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_988_opcode = 2'd0;
    end else begin
        grp_fu_988_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        grp_fu_988_p0 = p_x_assign_reg_902;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_fu_988_p0 = complex_M_real_read_3_reg_938;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_988_p0 = reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_988_p0 = p_r_M_real_11_reg_2392;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_988_p0 = complex_M_real_read_reg_764;
    end else if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state168) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_988_p0 = reg_1078;
    end else begin
        grp_fu_988_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        grp_fu_988_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state92))) begin
        grp_fu_988_p1 = reg_1113;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_988_p1 = p_y_read_assign_reg_2430;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_988_p1 = reg_1098;
    end else if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_988_p1 = reg_1083;
    end else begin
        grp_fu_988_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_992_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_992_opcode = 2'd0;
    end else begin
        grp_fu_992_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        grp_fu_992_p0 = complex_M_imag_read_3_reg_926;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_992_p0 = reg_1158;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_992_p0 = complex_M_imag_read_reg_751;
    end else if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_992_p0 = reg_1088;
    end else begin
        grp_fu_992_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_992_p1 = reg_1104;
    end else if (((1'b1 == ap_CS_fsm_state178) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_992_p1 = reg_1093;
    end else begin
        grp_fu_992_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_1_fu_1220_p2 == 1'd1) & (icmp_ln11_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln11_fu_1214_p2 == 1'd1) & (icmp_ln11_1_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln12_1_fu_1258_p2 == 1'd1) & (icmp_ln12_fu_1252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln12_fu_1252_p2 == 1'd1) & (icmp_ln12_1_fu_1258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln13_1_fu_1296_p2 == 1'd1) & (icmp_ln13_fu_1290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((icmp_ln13_fu_1290_p2 == 1'd1) & (icmp_ln13_1_fu_1296_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln14_1_fu_1334_p2 == 1'd1) & (icmp_ln14_fu_1328_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((icmp_ln14_fu_1328_p2 == 1'd1) & (icmp_ln14_1_fu_1334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln19_fu_1340_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln20_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln27_fu_1391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_qrf_alt_fu_970_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln29_fu_1403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln30_fu_1427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln33_fu_1454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln40_fu_1504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln42_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln43_fu_1719_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if (((icmp_ln44_fu_1731_p2 == 1'd1) & (icmp_ln43_fu_1719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state44 : begin
            if (((icmp_ln51_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln53_fu_1803_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state80 : begin
            if (((icmp_ln56_fu_1836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((icmp_ln58_fu_1867_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state98 : begin
            if (((tmp_46_fu_1908_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end
        end
        ap_ST_fsm_state99 : begin
            if (((icmp_ln67_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            if (((icmp_ln75_fu_2043_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1044_fu_1532_p2 = (zext_ln1044_fu_1528_p1 + zext_ln1067_fu_1516_p1);

assign add_ln11_1_fu_1194_p2 = (phi_ln11_1_reg_616 + 2'd1);

assign add_ln11_fu_1188_p2 = (phi_ln11_reg_604 + 2'd1);

assign add_ln12_1_fu_1232_p2 = (phi_ln12_1_reg_639 + 2'd1);

assign add_ln12_fu_1226_p2 = (phi_ln12_reg_627 + 2'd1);

assign add_ln13_1_fu_1270_p2 = (phi_ln13_1_reg_662 + 2'd1);

assign add_ln13_fu_1264_p2 = (phi_ln13_reg_650 + 2'd1);

assign add_ln14_1_fu_1308_p2 = (phi_ln14_1_reg_685 + 2'd1);

assign add_ln14_fu_1302_p2 = (phi_ln14_reg_673 + 2'd1);

assign add_ln21_fu_1380_p2 = (zext_ln20_reg_2170 + zext_ln21_fu_1376_p1);

assign add_ln34_1_fu_1493_p2 = (zext_ln34_fu_1466_p1 + zext_ln30_reg_2219);

assign add_ln34_fu_1482_p2 = (zext_ln36_reg_2233 + zext_ln34_1_fu_1478_p1);

assign add_ln36_fu_1443_p2 = (zext_ln30_reg_2219 + zext_ln36_fu_1439_p1);

assign add_ln45_fu_1705_p2 = (zext_ln45_fu_1689_p1 + zext_ln45_1_fu_1701_p1);

assign add_ln47_fu_1741_p2 = (zext_ln45_1_reg_2367 + zext_ln47_fu_1737_p1);

assign add_ln54_fu_1813_p2 = (zext_ln52_reg_2460 + trunc_ln54_fu_1809_p1);

assign add_ln59_1_fu_1882_p2 = (zext_ln52_reg_2460 + trunc_ln59_fu_1873_p1);

assign add_ln59_fu_1877_p2 = (sext_ln57_cast_reg_2507 + trunc_ln59_fu_1873_p1);

assign add_ln68_1_fu_1994_p2 = ($signed(sext_ln72_reg_2553) + $signed(trunc_ln68_fu_1967_p1));

assign add_ln68_fu_1983_p2 = (sext_ln68_1_cast_fu_1975_p3 + zext_ln1067_reg_2308);

assign add_ln70_fu_1943_p2 = ($signed(sext_ln72_fu_1928_p1) + $signed(zext_ln72_fu_1916_p1));

assign add_ln72_fu_1932_p2 = ($signed(sext_ln72_fu_1928_p1) + $signed(zext_ln1067_reg_2308));

assign add_ln76_fu_2067_p2 = (zext_ln1067_reg_2308 + zext_ln76_fu_2063_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state167 = ap_CS_fsm[32'd166];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd167];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state177 = ap_CS_fsm[32'd176];

assign ap_CS_fsm_state178 = ap_CS_fsm[32'd177];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd181];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state198 = ap_CS_fsm[32'd197];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign bitcast_ln444_3_fu_2027_p1 = complex_M_imag_read_3_reg_926;

assign bitcast_ln444_fu_2011_p1 = complex_M_real_read_3_reg_938;

assign count_fu_1510_p2 = (count_0_reg_828 + 3'd1);

assign eigval_0_1_fu_1669_p3 = ((icmp_ln41_2_fu_1615_p2[0:0] === 1'b1) ? eigval_0_0_reg_788 : select_ln41_4_fu_1661_p3);

assign eigval_1_1_fu_1645_p3 = ((icmp_ln41_2_fu_1615_p2[0:0] === 1'b1) ? eigval_1_0_reg_798 : select_ln41_2_fu_1637_p3);

assign eigval_2_1_fu_1629_p3 = ((icmp_ln41_2_fu_1615_p2[0:0] === 1'b1) ? eig_mat_M_real_q0 : eigval_2_0_reg_808);

assign eigval_3_1_fu_1621_p3 = ((icmp_ln41_2_fu_1615_p2[0:0] === 1'b1) ? eigval_3_0_reg_818 : select_ln41_1_fu_1607_p3);

assign grp_fu_1044_p0 = xor_ln444_1_fu_2031_p2;

assign grp_fu_1049_p0 = xor_ln444_fu_2015_p2;

assign grp_qrf_alt_fu_970_ap_start = grp_qrf_alt_fu_970_ap_start_reg;

assign i_10_fu_1409_p2 = (i17_0_reg_729 + 3'd1);

assign i_11_fu_1683_p2 = (i19_0_reg_840 + 3'd1);

assign i_12_fu_1771_p2 = (j_12_reg_863 + 2'd1);

assign i_13_fu_2049_p2 = (i25_0_reg_959 + 3'd1);

assign i_9_fu_1397_p2 = (i16_0_reg_718 + 4'd1);

assign i_fu_1346_p2 = (i_0_reg_696 + 3'd1);

assign icmp_ln11_1_fu_1220_p2 = ((phi_ln11_reg_604 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_1214_p2 = ((phi_ln11_1_reg_616 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_1258_p2 = ((phi_ln12_reg_627 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_1252_p2 = ((phi_ln12_1_reg_639 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_1_fu_1296_p2 = ((phi_ln13_reg_650 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1290_p2 = ((phi_ln13_1_reg_662 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_1_fu_1334_p2 = ((phi_ln14_reg_673 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_1328_p2 = ((phi_ln14_1_reg_685 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_1340_p2 = ((i_0_reg_696 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_1364_p2 = ((j_0_reg_707 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_1391_p2 = ((i16_0_reg_718 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_1403_p2 = ((i17_0_reg_729 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_1427_p2 = ((j18_0_reg_740 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1454_p2 = ((k_0_reg_777 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_1504_p2 = ((count_0_reg_828 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_1601_p2 = ((trunc_ln41_fu_1583_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln41_2_fu_1615_p2 = ((trunc_ln41_fu_1583_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1587_p2 = ((trunc_ln41_fu_1583_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1677_p2 = ((i19_0_reg_840 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1719_p2 = ((j20_0_reg_852 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1731_p2 = ((i19_0_reg_840 == j20_0_reg_852) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_1765_p2 = ((j_12_reg_863 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1803_p2 = ((j22_0_reg_875 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_1836_p2 = ((j23_0_in_reg_884 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1867_p2 = ((q_0_reg_893 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1961_p2 = ((j24_0_in_reg_950 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_2043_p2 = ((i25_0_reg_959 == 3'd4) ? 1'b1 : 1'b0);

assign j_10_fu_1955_p2 = (j24_0_in_reg_950 + 32'd1);

assign j_11_fu_1830_p2 = (j23_0_in_reg_884 + 32'd1);

assign j_7_fu_1433_p2 = (j18_0_reg_740 + 3'd1);

assign j_8_fu_1824_p2 = (32'd1 + j22_0_reg_875);

assign j_9_fu_1725_p2 = (j20_0_reg_852 + 3'd1);

assign j_fu_1370_p2 = (j_0_reg_707 + 3'd1);

assign k_fu_1460_p2 = (k_0_reg_777 + 3'd1);

assign m_fu_2005_p2 = ($signed(m_0_reg_914) + $signed(3'd7));

assign p_r_M_imag_12_fu_2037_p1 = xor_ln444_1_fu_2031_p2;

assign p_r_M_real_13_fu_2021_p1 = xor_ln444_fu_2015_p2;

assign q_1_fu_1893_p2 = (32'd1 + q_0_reg_893);

assign select_ln41_1_fu_1607_p3 = ((icmp_ln41_1_fu_1601_p2[0:0] === 1'b1) ? eigval_3_0_reg_818 : select_ln41_fu_1593_p3);

assign select_ln41_2_fu_1637_p3 = ((icmp_ln41_1_fu_1601_p2[0:0] === 1'b1) ? eig_mat_M_real_q0 : eigval_1_0_reg_798);

assign select_ln41_3_fu_1653_p3 = ((icmp_ln41_fu_1587_p2[0:0] === 1'b1) ? eig_mat_M_real_q0 : eigval_0_0_reg_788);

assign select_ln41_4_fu_1661_p3 = ((icmp_ln41_1_fu_1601_p2[0:0] === 1'b1) ? eigval_0_0_reg_788 : select_ln41_3_fu_1653_p3);

assign select_ln41_fu_1593_p3 = ((icmp_ln41_fu_1587_p2[0:0] === 1'b1) ? eigval_3_0_reg_818 : eig_mat_M_real_q0);

assign sext_ln1067_fu_1573_p1 = $signed(xor_ln1067_fu_1567_p2);

assign sext_ln54_fu_1818_p1 = $signed(add_ln54_fu_1813_p2);

assign sext_ln57_cast_fu_1860_p3 = {{trunc_ln57_reg_2492}, {2'd0}};

assign sext_ln57_fu_1854_p1 = $signed(tmp_63_fu_1846_p3);

assign sext_ln59_1_fu_1887_p1 = $signed(add_ln59_1_fu_1882_p2);

assign sext_ln59_fu_1899_p1 = $signed(add_ln59_reg_2515);

assign sext_ln65_fu_1904_p1 = m_0_reg_914;

assign sext_ln68_1_cast_fu_1975_p3 = {{trunc_ln68_1_fu_1971_p1}, {2'd0}};

assign sext_ln68_1_fu_1999_p1 = $signed(add_ln68_1_fu_1994_p2);

assign sext_ln68_fu_1988_p1 = $signed(add_ln68_fu_1983_p2);

assign sext_ln72_fu_1928_p1 = $signed(tmp_61_fu_1920_p3);

assign tmp_43_fu_1238_p3 = {{phi_ln12_reg_627}, {phi_ln12_1_reg_639}};

assign tmp_44_fu_1276_p3 = {{phi_ln13_reg_650}, {phi_ln13_1_reg_662}};

assign tmp_45_fu_1314_p3 = {{phi_ln14_reg_673}, {phi_ln14_1_reg_685}};

assign tmp_46_fu_1908_p3 = m_0_reg_914[32'd2];

assign tmp_53_fu_1200_p3 = {{phi_ln11_reg_604}, {phi_ln11_1_reg_616}};

assign tmp_54_fu_1352_p3 = {{i_0_reg_696}, {2'd0}};

assign tmp_55_fu_1520_p3 = {{count_0_reg_828}, {2'd0}};

assign tmp_56_fu_1415_p3 = {{i17_0_reg_729}, {2'd0}};

assign tmp_57_fu_1693_p3 = {{i19_0_reg_840}, {2'd0}};

assign tmp_58_fu_1791_p3 = {{j_12_reg_863}, {2'd0}};

assign tmp_59_fu_1777_p3 = {{j_12_reg_863}, {j_12_reg_863}};

assign tmp_60_fu_1470_p3 = {{k_0_reg_777}, {2'd0}};

assign tmp_61_fu_1920_p3 = {{m_0_reg_914}, {2'd0}};

assign tmp_62_fu_2055_p3 = {{i25_0_reg_959}, {2'd0}};

assign tmp_63_fu_1846_p3 = {{j_11_fu_1830_p2}, {j_12_reg_863}};

assign trunc_ln41_fu_1583_p1 = count_0_reg_828[1:0];

assign trunc_ln54_fu_1809_p1 = j22_0_reg_875[5:0];

assign trunc_ln57_fu_1842_p1 = j_11_fu_1830_p2[3:0];

assign trunc_ln59_fu_1873_p1 = q_0_reg_893[5:0];

assign trunc_ln68_1_fu_1971_p1 = j_10_fu_1955_p2[3:0];

assign trunc_ln68_fu_1967_p1 = j_10_fu_1955_p2[5:0];

assign xor_ln1067_fu_1567_p2 = (count_0_reg_828 ^ 3'd4);

assign xor_ln444_1_fu_2031_p2 = (bitcast_ln444_3_fu_2027_p1 ^ 32'd2147483648);

assign xor_ln444_fu_2015_p2 = (bitcast_ln444_fu_2011_p1 ^ 32'd2147483648);

assign zext_ln1027_10_fu_1284_p1 = tmp_44_fu_1276_p3;

assign zext_ln1027_11_fu_1322_p1 = tmp_45_fu_1314_p3;

assign zext_ln1027_9_fu_1246_p1 = tmp_43_fu_1238_p3;

assign zext_ln1027_fu_1208_p1 = tmp_53_fu_1200_p3;

assign zext_ln1044_1_fu_1538_p1 = add_ln1044_fu_1532_p2;

assign zext_ln1044_fu_1528_p1 = tmp_55_fu_1520_p3;

assign zext_ln1067_4_fu_1577_p1 = $unsigned(sext_ln1067_fu_1573_p1);

assign zext_ln1067_fu_1516_p1 = count_0_reg_828;

assign zext_ln20_fu_1360_p1 = tmp_54_fu_1352_p3;

assign zext_ln21_1_fu_1385_p1 = add_ln21_fu_1380_p2;

assign zext_ln21_fu_1376_p1 = j_0_reg_707;

assign zext_ln30_fu_1423_p1 = tmp_56_fu_1415_p3;

assign zext_ln34_1_fu_1478_p1 = tmp_60_fu_1470_p3;

assign zext_ln34_2_fu_1487_p1 = add_ln34_fu_1482_p2;

assign zext_ln34_3_fu_1498_p1 = add_ln34_1_fu_1493_p2;

assign zext_ln34_fu_1466_p1 = k_0_reg_777;

assign zext_ln36_1_fu_1448_p1 = add_ln36_fu_1443_p2;

assign zext_ln36_fu_1439_p1 = j18_0_reg_740;

assign zext_ln45_1_fu_1701_p1 = tmp_57_fu_1693_p3;

assign zext_ln45_2_fu_1711_p1 = add_ln45_fu_1705_p2;

assign zext_ln45_fu_1689_p1 = i19_0_reg_840;

assign zext_ln47_1_fu_1746_p1 = add_ln47_fu_1741_p2;

assign zext_ln47_fu_1737_p1 = j20_0_reg_852;

assign zext_ln51_fu_1761_p1 = j_12_reg_863;

assign zext_ln52_1_fu_1785_p1 = tmp_59_fu_1777_p3;

assign zext_ln52_fu_1799_p1 = tmp_58_fu_1791_p3;

assign zext_ln70_fu_1949_p1 = add_ln70_fu_1943_p2;

assign zext_ln72_1_fu_1937_p1 = add_ln72_fu_1932_p2;

assign zext_ln72_fu_1916_p1 = $unsigned(m_0_reg_914);

assign zext_ln76_1_fu_2072_p1 = add_ln76_fu_2067_p2;

assign zext_ln76_fu_2063_p1 = tmp_62_fu_2055_p3;

always @ (posedge ap_clk) begin
    zext_ln20_reg_2170[1:0] <= 2'b00;
    zext_ln20_reg_2170[5] <= 1'b0;
    zext_ln21_1_reg_2183[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln30_reg_2219[1:0] <= 2'b00;
    zext_ln30_reg_2219[5] <= 1'b0;
    zext_ln36_reg_2233[5:3] <= 3'b000;
    zext_ln1067_reg_2308[5:3] <= 3'b000;
    zext_ln45_1_reg_2367[1:0] <= 2'b00;
    zext_ln45_1_reg_2367[5] <= 1'b0;
    zext_ln47_1_reg_2414[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln51_reg_2435[31:2] <= 30'b000000000000000000000000000000;
    zext_ln52_reg_2460[1:0] <= 2'b00;
    zext_ln52_reg_2460[5:4] <= 2'b00;
    sext_ln57_cast_reg_2507[1:0] <= 2'b00;
    sext_ln72_reg_2553[1:0] <= 2'b00;
end

endmodule //eig_decompose
