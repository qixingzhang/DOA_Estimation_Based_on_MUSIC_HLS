-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity qrf_top_Loop_1_proc3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Qi_M_real_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_real_ce0 : OUT STD_LOGIC;
    Qi_M_real_we0 : OUT STD_LOGIC;
    Qi_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_real_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_real_ce1 : OUT STD_LOGIC;
    Qi_M_real_we1 : OUT STD_LOGIC;
    Qi_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_imag_ce0 : OUT STD_LOGIC;
    Qi_M_imag_we0 : OUT STD_LOGIC;
    Qi_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_imag_ce1 : OUT STD_LOGIC;
    Qi_M_imag_we1 : OUT STD_LOGIC;
    Qi_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_real_ce0 : OUT STD_LOGIC;
    Ri_M_real_we0 : OUT STD_LOGIC;
    Ri_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_real_ce1 : OUT STD_LOGIC;
    Ri_M_real_we1 : OUT STD_LOGIC;
    Ri_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_imag_ce0 : OUT STD_LOGIC;
    Ri_M_imag_we0 : OUT STD_LOGIC;
    Ri_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_imag_ce1 : OUT STD_LOGIC;
    Ri_M_imag_we1 : OUT STD_LOGIC;
    Ri_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_M_real_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_M_real_ce0 : OUT STD_LOGIC;
    A_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_M_imag_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_M_imag_ce0 : OUT STD_LOGIC;
    A_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of qrf_top_Loop_1_proc3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage4 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage5 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage6 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage7 : STD_LOGIC_VECTOR (114 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (114 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (114 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (114 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (114 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (114 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage4 : STD_LOGIC_VECTOR (114 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage5 : STD_LOGIC_VECTOR (114 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage6 : STD_LOGIC_VECTOR (114 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage7 : STD_LOGIC_VECTOR (114 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (114 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv31_3F800000 : STD_LOGIC_VECTOR (30 downto 0) := "0111111100000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (114 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal c12_0_i_reg_421 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_0_i_reg_645 : STD_LOGIC_VECTOR (2 downto 0);
    signal k13_0_i_reg_656 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state100_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state108_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_state116_pp2_stage1_iter2 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal icmp_ln511_reg_2674 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln513_reg_2683 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_853 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal grp_fu_767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_868 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_695_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_874 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state101_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state109_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage6 : signal is "none";
    signal ap_block_state105_pp2_stage6_iter0 : BOOLEAN;
    signal ap_block_state113_pp2_stage6_iter1 : BOOLEAN;
    signal ap_block_pp2_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state120_pp3_stage2_iter0 : BOOLEAN;
    signal ap_block_state128_pp3_stage2_iter1 : BOOLEAN;
    signal ap_block_pp3_stage2_11001 : BOOLEAN;
    signal icmp_ln519_reg_2716 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln521_reg_2725 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage6 : signal is "none";
    signal ap_block_state124_pp3_stage6_iter0 : BOOLEAN;
    signal ap_block_state132_pp3_stage6_iter1 : BOOLEAN;
    signal ap_block_pp3_stage6_11001 : BOOLEAN;
    signal grp_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_703_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_886 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal grp_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage4 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state103_pp2_stage4_iter0 : BOOLEAN;
    signal ap_block_state111_pp2_stage4_iter1 : BOOLEAN;
    signal ap_block_pp2_stage4_11001 : BOOLEAN;
    signal icmp_ln513_reg_2683_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_block_state99_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state107_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state115_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage4 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_state122_pp3_stage4_iter0 : BOOLEAN;
    signal ap_block_state130_pp3_stage4_iter1 : BOOLEAN;
    signal ap_block_pp3_stage4_11001 : BOOLEAN;
    signal icmp_ln521_reg_2725_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_block_state118_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state126_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state134_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal grp_fu_711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_block_state102_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state110_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage7 : signal is "none";
    signal ap_block_state106_pp2_stage7_iter0 : BOOLEAN;
    signal ap_block_state114_pp2_stage7_iter1 : BOOLEAN;
    signal ap_block_pp2_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage3 : signal is "none";
    signal ap_block_state121_pp3_stage3_iter0 : BOOLEAN;
    signal ap_block_state129_pp3_stage3_iter1 : BOOLEAN;
    signal ap_block_pp3_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage7 : signal is "none";
    signal ap_block_state125_pp3_stage7_iter0 : BOOLEAN;
    signal ap_block_state133_pp3_stage7_iter1 : BOOLEAN;
    signal ap_block_pp3_stage7_11001 : BOOLEAN;
    signal reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_937 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_943 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage5 : signal is "none";
    signal ap_block_state104_pp2_stage5_iter0 : BOOLEAN;
    signal ap_block_state112_pp2_stage5_iter1 : BOOLEAN;
    signal ap_block_pp2_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage5 : signal is "none";
    signal ap_block_state123_pp3_stage5_iter0 : BOOLEAN;
    signal ap_block_state131_pp3_stage5_iter1 : BOOLEAN;
    signal ap_block_pp3_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_block_state119_pp3_stage1_iter0 : BOOLEAN;
    signal ap_block_state127_pp3_stage1_iter1 : BOOLEAN;
    signal ap_block_state135_pp3_stage1_iter2 : BOOLEAN;
    signal ap_block_pp3_stage1_11001 : BOOLEAN;
    signal reg_955 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_961 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_966 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_971 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln459_fu_991_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln459_reg_2216 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln459_1_fu_1011_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln460_fu_1029_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln460_reg_2232 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln460_1_fu_1049_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln471_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal r_fu_1073_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_reg_2252 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1067_1_fu_1091_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1067_1_reg_2257 : STD_LOGIC_VECTOR (5 downto 0);
    signal Qi_M_real_addr_1_reg_2263 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_1_reg_2268 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_2_fu_1113_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln480_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln480_reg_2284 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal c_fu_1146_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln482_1_fu_1161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln482_1_reg_2293 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln486_fu_1183_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln486_reg_2312 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal select_ln486_fu_1195_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln486_reg_2317 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln486_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln486_1_fu_1216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln486_1_reg_2322 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln486_fu_1228_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln486_reg_2326 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_3_fu_1252_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_3_reg_2331 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_4_fu_1270_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_4_reg_2336 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln486_fu_1282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln486_reg_2341 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln498_fu_1288_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln498_reg_2346 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln499_fu_1292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln503_fu_1306_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln503_reg_2355 : STD_LOGIC_VECTOR (4 downto 0);
    signal Ri_M_real_addr_2_reg_2361 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_2_reg_2367 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln503_2_fu_1330_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln503_2_reg_2373 : STD_LOGIC_VECTOR (4 downto 0);
    signal Ri_M_real_addr_3_reg_2379 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_3_reg_2384 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_39_fu_1346_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_39_reg_2389 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_fu_1366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_reg_2394 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_5_fu_1395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_5_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_9_fu_1424_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_9_reg_2419 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_7_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_7_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln179_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_reg_2445 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_1_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_1_reg_2453 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_2_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_2_reg_2461 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_3_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_3_reg_2469 : STD_LOGIC_VECTOR (0 downto 0);
    signal largest_10_fu_1592_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_10_reg_2477 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_fu_1618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_reg_2485 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln189_fu_1645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln189_reg_2493 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln189_1_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln189_1_reg_2499 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_1_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_1_reg_2505 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal and_ln184_7_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_7_reg_2511 : STD_LOGIC_VECTOR (0 downto 0);
    signal d3_5_fu_1817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_5_reg_2518 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_8_fu_1831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_8_reg_2523 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_fu_1844_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal d2_4_fu_1856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_6_fu_1863_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln201_1_fu_1904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_1_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_771_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x3_1_reg_2552 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_820_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_2558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal and_ln284_2_fu_1942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_2_reg_2568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal c_tmp_M_real_fu_1963_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_721_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i1_reg_2577 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i2_reg_2582 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_i_i2_reg_2587 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_i2_reg_2592 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_681_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_i2_reg_2597 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_i2_reg_2602 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_tmp_M_real_1_reg_2607 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal c_tmp_M_imag_reg_2612 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tmp_M_real_1_reg_2617 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal complex_M_imag_writ_reg_2622 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln189_fu_2037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_reg_2627 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal largest_1_fu_2043_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_1_reg_2632 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_1_fu_2050_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal and_ln201_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_2646 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i7_reg_2650 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal and_ln306_fu_2107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln306_reg_2660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal s_tmp_M_real_reg_2664 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal complex_M_imag_writ_1_reg_2669 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln511_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_2119_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2678 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln513_fu_2125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln513_reg_2683_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Ri_M_real_addr_4_reg_2687 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_4_reg_2687_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_5_reg_2693 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_5_reg_2693_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_5_reg_2693_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_4_reg_2699 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_4_reg_2699_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_5_reg_2705 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_5_reg_2705_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_5_reg_2705_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln521_1_fu_2164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln521_1_reg_2711 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal icmp_ln519_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_fu_2175_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_2720 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln521_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln521_reg_2725_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Qi_M_real_addr_3_reg_2729 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_3_reg_2729_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_4_reg_2735 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_4_reg_2735_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_4_reg_2735_pp3_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_3_reg_2740 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_3_reg_2740_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_4_reg_2746 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_4_reg_2746_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_4_reg_2746_pp3_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_t_real_2_reg_2751 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_t_imag_2_reg_2756 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_t_real_3_reg_2761 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_t_imag_3_reg_2766 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_825_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state136 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state136 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state99 : STD_LOGIC;
    signal ap_block_pp2_stage7_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state118 : STD_LOGIC;
    signal ap_block_pp3_stage7_subdone : BOOLEAN;
    signal ap_block_pp3_stage1_subdone : BOOLEAN;
    signal phi_ln459_reg_352 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln459_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln459_1_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln459_1_reg_364 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln460_reg_375 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln460_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_1_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln460_1_reg_387 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_0_i_reg_398 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal c_0_i_reg_410 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln472_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_432 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_i_reg_443 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_i_reg_454 : STD_LOGIC_VECTOR (1 downto 0);
    signal sqrt_mag_a_mag_b_reg_465 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_real_1_phi_fu_480_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_1_reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_3_reg_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_real_2_phi_fu_501_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_2_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tmp_M_imag_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_real_phi_fu_523_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tmp_M_imag_2_reg_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal mag_M_real_reg_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_f_assign_phi_fu_544_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_2_fu_2022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_5_reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_6_reg_563 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_3_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_6_fu_1992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_5_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln444_1_fu_2007_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_3_reg_597 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_2_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_4_fu_1977_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_2_reg_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_k_0_i_phi_fu_649_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_k13_0_i_phi_fu_660_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln1027_fu_1005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1027_1_fu_1043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1067_2_fu_1101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1067_4_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln474_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln503_1_fu_1316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln503_3_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_1_fu_2139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_2_fu_2150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_4_fu_2199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_5_fu_2210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage4 : BOOLEAN;
    signal ap_block_pp3_stage1 : BOOLEAN;
    signal ap_block_pp3_stage5 : BOOLEAN;
    signal ap_block_pp2_stage4 : BOOLEAN;
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal ap_block_pp2_stage5 : BOOLEAN;
    signal grp_fu_667_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal ap_block_pp2_stage6 : BOOLEAN;
    signal ap_block_pp2_stage7 : BOOLEAN;
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal ap_block_pp3_stage3 : BOOLEAN;
    signal ap_block_pp3_stage6 : BOOLEAN;
    signal ap_block_pp3_stage7 : BOOLEAN;
    signal ap_block_pp3_stage2 : BOOLEAN;
    signal grp_fu_671_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_695_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal grp_fu_699_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_703_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_711_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_716_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal grp_fu_767_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_771_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_771_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_780_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_780_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_784_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_784_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_788_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_792_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_792_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_fu_825_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_997_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_1035_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_1083_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1067_fu_1079_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1067_fu_1095_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1067_3_fu_1125_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1067_1_fu_1129_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln482_fu_1152_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln482_fu_1156_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln490_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln498_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln513_1_fu_1204_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln490_1_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln499_1_fu_1224_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln499_fu_1173_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln499_fu_1232_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln499_1_fu_1238_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln513_fu_1264_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln486_1_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln486_2_fu_1244_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_1298_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln513_fu_1260_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln503_1_fu_1310_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_1322_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln503_2_fu_1334_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln368_2_fu_1350_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_26_fu_1358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_36_fu_1375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_3_fu_1379_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_27_fu_1387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_37_fu_1404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_4_fu_1408_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_28_fu_1416_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_38_fu_1433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_5_fu_1437_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_29_fu_1445_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1460_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_2_fu_1354_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_1_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1470_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_3_fu_1383_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_3_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_2_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1516_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_4_fu_1412_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_5_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_4_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1544_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_5_fu_1441_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_7_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_6_fu_1554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_fu_1576_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_30_fu_1584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_34_fu_1598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_1_fu_1602_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_31_fu_1610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1623_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_fu_1580_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln189_1_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1651_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_1_fu_1606_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln189_3_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_2_fu_1661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_fu_1679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_3_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_5_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_4_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_6_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_7_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_2_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_1_fu_1727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_3_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_6_fu_1759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_5_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_7_fu_1763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_8_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_4_fu_1747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_2_fu_1775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_2_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_4_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln179_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_6_fu_1805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_5_fu_1799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d3_4_fu_1781_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_6_fu_1787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_7_fu_1824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_fu_1839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_fu_1851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln201_1_fu_1869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1872_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln201_1_fu_1882_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln201_3_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln201_2_fu_1886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_1_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_fu_1910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_1_fu_1915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_3_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_4_fu_1925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_6_fu_1936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_5_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_1948_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_25_fu_1955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln155_3_fu_1967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln155_1_fu_1971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln155_5_fu_1982_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln155_2_fu_1986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln444_fu_1997_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln444_fu_2001_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln155_fu_2012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln155_fu_2016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln189_1_fu_2027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_3_fu_2031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln201_fu_2056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_2059_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln201_fu_2069_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln201_1_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln201_fu_2073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln306_1_fu_2097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln306_2_fu_2102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln114_fu_2130_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_fu_2134_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_2_fu_2145_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln521_fu_2156_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln521_fu_2160_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln519_fu_2181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln114_3_fu_2190_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_3_fu_2194_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_4_fu_2205_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_667_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp2_stage4_00001 : BOOLEAN;
    signal ap_block_pp2_stage6_00001 : BOOLEAN;
    signal ap_block_pp2_stage0_00001 : BOOLEAN;
    signal ap_block_pp2_stage1_00001 : BOOLEAN;
    signal ap_block_pp2_stage2_00001 : BOOLEAN;
    signal ap_block_pp3_stage4_00001 : BOOLEAN;
    signal ap_block_pp3_stage6_00001 : BOOLEAN;
    signal ap_block_pp3_stage0_00001 : BOOLEAN;
    signal ap_block_pp3_stage1_00001 : BOOLEAN;
    signal ap_block_pp3_stage2_00001 : BOOLEAN;
    signal ap_block_pp2_stage3_00001 : BOOLEAN;
    signal ap_block_pp2_stage5_00001 : BOOLEAN;
    signal ap_block_pp2_stage7_00001 : BOOLEAN;
    signal ap_block_pp3_stage3_00001 : BOOLEAN;
    signal ap_block_pp3_stage5_00001 : BOOLEAN;
    signal ap_block_pp3_stage7_00001 : BOOLEAN;
    signal grp_fu_671_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_780_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_784_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_788_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_792_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (114 downto 0);
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_block_pp2_stage4_subdone : BOOLEAN;
    signal ap_block_pp2_stage5_subdone : BOOLEAN;
    signal ap_block_pp2_stage6_subdone : BOOLEAN;
    signal ap_block_pp3_stage2_subdone : BOOLEAN;
    signal ap_block_pp3_stage3_subdone : BOOLEAN;
    signal ap_block_pp3_stage4_subdone : BOOLEAN;
    signal ap_block_pp3_stage5_subdone : BOOLEAN;
    signal ap_block_pp3_stage6_subdone : BOOLEAN;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component music_faddfsub_32jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fsub_32ns_3kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fadd_32ns_3lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fmul_32ns_3mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fdiv_32ns_3ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fcmp_32ns_3ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component music_fsqrt_32ns_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    music_faddfsub_32jbC_U21 : component music_faddfsub_32jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_667_p0,
        din1 => grp_fu_667_p1,
        opcode => grp_fu_667_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_667_p2);

    music_faddfsub_32jbC_U22 : component music_faddfsub_32jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_671_p0,
        din1 => grp_fu_671_p1,
        opcode => grp_fu_671_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_671_p2);

    music_fsub_32ns_3kbM_U23 : component music_fsub_32ns_3kbM
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_912,
        din1 => reg_917,
        ce => ap_const_logic_1,
        dout => grp_fu_677_p2);

    music_fadd_32ns_3lbW_U24 : component music_fadd_32ns_3lbW
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_i1_reg_2577,
        din1 => tmp_i_i2_reg_2582,
        ce => ap_const_logic_1,
        dout => grp_fu_681_p2);

    music_fsub_32ns_3kbM_U25 : component music_fsub_32ns_3kbM
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_5_i_i2_reg_2587,
        din1 => tmp_6_i_i2_reg_2592,
        ce => ap_const_logic_1,
        dout => grp_fu_685_p2);

    music_fmul_32ns_3mb6_U26 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_695_p0,
        din1 => grp_fu_695_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_695_p2);

    music_fmul_32ns_3mb6_U27 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_699_p0,
        din1 => grp_fu_699_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_699_p2);

    music_fmul_32ns_3mb6_U28 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_703_p0,
        din1 => grp_fu_703_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_703_p2);

    music_fmul_32ns_3mb6_U29 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_711_p0,
        din1 => grp_fu_711_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_711_p2);

    music_fmul_32ns_3mb6_U30 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_716_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_716_p2);

    music_fmul_32ns_3mb6_U31 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_844,
        din1 => sqrt_mag_a_mag_b_reg_465,
        ce => ap_const_logic_1,
        dout => grp_fu_721_p2);

    music_fmul_32ns_3mb6_U32 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_853,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_726_p2);

    music_fmul_32ns_3mb6_U33 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_853,
        din1 => sqrt_mag_a_mag_b_reg_465,
        ce => ap_const_logic_1,
        dout => grp_fu_731_p2);

    music_fmul_32ns_3mb6_U34 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_844,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_736_p2);

    music_fdiv_32ns_3ncg_U35 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_763_p0,
        din1 => grp_fu_763_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_763_p2);

    music_fdiv_32ns_3ncg_U36 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_767_p0,
        din1 => grp_fu_767_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_767_p2);

    music_fdiv_32ns_3ncg_U37 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_771_p0,
        din1 => grp_fu_771_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_771_p2);

    music_fdiv_32ns_3ncg_U38 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_7_i_i2_reg_2602,
        din1 => reg_900,
        ce => ap_const_logic_1,
        dout => grp_fu_775_p2);

    music_fcmp_32ns_3ocq_U39 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_780_p0,
        din1 => grp_fu_780_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_780_opcode,
        dout => grp_fu_780_p2);

    music_fcmp_32ns_3ocq_U40 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_784_p0,
        din1 => grp_fu_784_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_784_opcode,
        dout => grp_fu_784_p2);

    music_fcmp_32ns_3ocq_U41 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_788_p0,
        din1 => grp_fu_788_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_788_opcode,
        dout => grp_fu_788_p2);

    music_fcmp_32ns_3ocq_U42 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_792_p0,
        din1 => grp_fu_792_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_792_opcode,
        dout => grp_fu_792_p2);

    music_fcmp_32ns_3ocq_U43 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d2_5_fu_1395_p1,
        din1 => largest_9_fu_1424_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_796_p2);

    music_fcmp_32ns_3ocq_U44 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => d2_5_fu_1395_p1,
        din1 => d3_7_fu_1453_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_800_p2);

    music_fcmp_32ns_3ocq_U45 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_9_fu_1424_p1,
        din1 => grp_fu_804_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_804_p2);

    music_fcmp_32ns_3ocq_U46 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_9_fu_1424_p1,
        din1 => d2_5_fu_1395_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_808_p2);

    music_fcmp_32ns_3ocq_U47 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => largest_9_fu_1424_p1,
        din1 => d3_7_fu_1453_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_812_p2);

    music_fsqrt_32ns_pcA_U48 : component music_fsqrt_32ns_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => reg_892,
        ce => ap_const_logic_1,
        dout => grp_fu_820_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln486_fu_1177_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state99) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_const_boolean_0 = ap_block_pp2_stage7_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone)))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state118) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_const_boolean_0 = ap_block_pp3_stage7_subdone)))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c12_0_i_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                c12_0_i_reg_421 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln480_fu_1140_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                c12_0_i_reg_421 <= c_fu_1146_p2;
            end if; 
        end if;
    end process;

    c_0_i_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                c_0_i_reg_410 <= c_2_fu_1113_p2;
            elsif (((icmp_ln471_fu_1067_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                c_0_i_reg_410 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1067_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_0_i_reg_454 <= ap_const_lv2_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
                i_0_i_reg_454 <= grp_fu_825_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1067_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvar_flatten_reg_432 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
                indvar_flatten_reg_432 <= add_ln486_reg_2312;
            end if; 
        end if;
    end process;

    j_0_i_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1067_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                j_0_i_reg_443 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
                j_0_i_reg_443 <= select_ln486_3_reg_2331;
            end if; 
        end if;
    end process;

    k13_0_i_reg_656_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
                k13_0_i_reg_656 <= k_1_reg_2720;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state117)) then 
                k13_0_i_reg_656 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    k_0_i_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                k_0_i_reg_645 <= k_reg_2678;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                k_0_i_reg_645 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    mag_M_real_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln201_fu_2091_p2) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                mag_M_real_reg_632 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_0 = and_ln201_reg_2646) and (ap_const_logic_1 = ap_CS_fsm_state84))) then 
                mag_M_real_reg_632 <= grp_fu_695_p2;
            end if; 
        end if;
    end process;

    p_r_M_imag_2_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_imag_2_reg_609 <= tmp_M_imag_4_fu_1977_p1;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_imag_2_reg_609 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_imag_3_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_imag_3_reg_575 <= tmp_M_imag_6_fu_1992_p1;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_imag_3_reg_575 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_imag_5_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_imag_5_reg_552 <= ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_imag_5_reg_552 <= tmp_M_imag_2_fu_2022_p1;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_2_reg_620_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_real_2_reg_620 <= ap_phi_mux_tmp_M_real_1_phi_fu_480_p4;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_real_2_reg_620 <= ap_const_lv32_3F800000;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_3_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_real_3_reg_597 <= ap_phi_mux_tmp_M_real_2_phi_fu_501_p4;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_real_3_reg_597 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_5_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_real_5_reg_586 <= bitcast_ln444_1_fu_2007_p1;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_real_5_reg_586 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_6_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                    p_r_M_real_6_reg_563 <= ap_phi_mux_tmp_M_real_1_phi_fu_480_p4;
                elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                    p_r_M_real_6_reg_563 <= ap_phi_mux_tmp_M_real_phi_fu_523_p4;
                end if;
            end if; 
        end if;
    end process;

    phi_ln459_1_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln459_fu_1017_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln459_1_reg_364 <= add_ln459_1_fu_1011_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                phi_ln459_1_reg_364 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln459_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln459_fu_1017_p2 = ap_const_lv1_1) and (icmp_ln459_1_fu_1023_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln459_reg_352 <= add_ln459_reg_2216;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln459_reg_352 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln460_1_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln460_fu_1055_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_ln460_1_reg_387 <= add_ln460_1_fu_1049_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_ln460_1_reg_387 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln460_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln459_1_fu_1023_p2 = ap_const_lv1_1) and (icmp_ln459_fu_1017_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln460_reg_375 <= ap_const_lv2_0;
            elsif (((icmp_ln460_fu_1055_p2 = ap_const_lv1_1) and (icmp_ln460_1_fu_1061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_ln460_reg_375 <= add_ln460_reg_2232;
            end if; 
        end if;
    end process;

    r_0_i_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln460_1_fu_1061_p2 = ap_const_lv1_1) and (icmp_ln460_fu_1055_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                r_0_i_reg_398 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                r_0_i_reg_398 <= r_reg_2252;
            end if; 
        end if;
    end process;

    s_tmp_M_imag_2_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln306_fu_2107_p2) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                s_tmp_M_imag_2_reg_530 <= ap_const_lv32_0;
            elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln306_reg_2660) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                s_tmp_M_imag_2_reg_530 <= complex_M_imag_writ_1_reg_2669;
            end if; 
        end if;
    end process;

    s_tmp_M_imag_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                s_tmp_M_imag_reg_508 <= complex_M_imag_writ_reg_2622;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_1942_p2) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                s_tmp_M_imag_reg_508 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    sqrt_mag_a_mag_b_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln201_1_fu_1904_p2) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                sqrt_mag_a_mag_b_reg_465 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_0 = and_ln201_1_reg_2548) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                sqrt_mag_a_mag_b_reg_465 <= grp_fu_695_p2;
            end if; 
        end if;
    end process;

    tmp_M_imag_3_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                tmp_M_imag_3_reg_486 <= c_tmp_M_imag_reg_2612;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_1942_p2) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                tmp_M_imag_3_reg_486 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_M_real_1_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                tmp_M_real_1_reg_477 <= c_tmp_M_real_1_reg_2607;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_1942_p2) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                tmp_M_real_1_reg_477 <= c_tmp_M_real_fu_1963_p1;
            end if; 
        end if;
    end process;

    tmp_M_real_2_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                tmp_M_real_2_reg_497 <= s_tmp_M_real_1_reg_2617;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_1942_p2) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                tmp_M_real_2_reg_497 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_M_real_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln306_fu_2107_p2) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                tmp_M_real_reg_519 <= ap_const_lv32_3F800000;
            elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln306_reg_2660) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                tmp_M_real_reg_519 <= s_tmp_M_real_reg_2664;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1067_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                Qi_M_imag_addr_1_reg_2268 <= zext_ln1067_2_fu_1101_p1(4 - 1 downto 0);
                Qi_M_real_addr_1_reg_2263 <= zext_ln1067_2_fu_1101_p1(4 - 1 downto 0);
                    zext_ln1067_1_reg_2257(4 downto 2) <= zext_ln1067_1_fu_1091_p1(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln521_fu_2185_p2 = ap_const_lv1_0) and (icmp_ln519_fu_2169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                Qi_M_imag_addr_3_reg_2740 <= zext_ln114_4_fu_2199_p1(4 - 1 downto 0);
                Qi_M_imag_addr_4_reg_2746 <= zext_ln114_5_fu_2210_p1(4 - 1 downto 0);
                Qi_M_real_addr_3_reg_2729 <= zext_ln114_4_fu_2199_p1(4 - 1 downto 0);
                Qi_M_real_addr_4_reg_2735 <= zext_ln114_5_fu_2210_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                Qi_M_imag_addr_3_reg_2740_pp3_iter1_reg <= Qi_M_imag_addr_3_reg_2740;
                Qi_M_imag_addr_4_reg_2746_pp3_iter1_reg <= Qi_M_imag_addr_4_reg_2746;
                Qi_M_imag_addr_4_reg_2746_pp3_iter2_reg <= Qi_M_imag_addr_4_reg_2746_pp3_iter1_reg;
                Qi_M_real_addr_3_reg_2729_pp3_iter1_reg <= Qi_M_real_addr_3_reg_2729;
                Qi_M_real_addr_4_reg_2735_pp3_iter1_reg <= Qi_M_real_addr_4_reg_2735;
                Qi_M_real_addr_4_reg_2735_pp3_iter2_reg <= Qi_M_real_addr_4_reg_2735_pp3_iter1_reg;
                icmp_ln519_reg_2716 <= icmp_ln519_fu_2169_p2;
                icmp_ln521_reg_2725_pp3_iter1_reg <= icmp_ln521_reg_2725;
                icmp_ln521_reg_2725_pp3_iter2_reg <= icmp_ln521_reg_2725_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln499_fu_1292_p2 = ap_const_lv1_1) and (icmp_ln486_fu_1177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                Ri_M_imag_addr_2_reg_2367 <= zext_ln503_1_fu_1316_p1(4 - 1 downto 0);
                Ri_M_imag_addr_3_reg_2384 <= zext_ln503_3_fu_1340_p1(4 - 1 downto 0);
                Ri_M_real_addr_2_reg_2361 <= zext_ln503_1_fu_1316_p1(4 - 1 downto 0);
                Ri_M_real_addr_3_reg_2379 <= zext_ln503_3_fu_1340_p1(4 - 1 downto 0);
                    zext_ln503_2_reg_2373(3 downto 2) <= zext_ln503_2_fu_1330_p1(3 downto 2);
                    zext_ln503_reg_2355(3 downto 2) <= zext_ln503_fu_1306_p1(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln513_fu_2125_p2 = ap_const_lv1_0) and (icmp_ln511_fu_2113_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                Ri_M_imag_addr_4_reg_2699 <= zext_ln114_1_fu_2139_p1(4 - 1 downto 0);
                Ri_M_imag_addr_5_reg_2705 <= zext_ln114_2_fu_2150_p1(4 - 1 downto 0);
                Ri_M_real_addr_4_reg_2687 <= zext_ln114_1_fu_2139_p1(4 - 1 downto 0);
                Ri_M_real_addr_5_reg_2693 <= zext_ln114_2_fu_2150_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                Ri_M_imag_addr_4_reg_2699_pp2_iter1_reg <= Ri_M_imag_addr_4_reg_2699;
                Ri_M_imag_addr_5_reg_2705_pp2_iter1_reg <= Ri_M_imag_addr_5_reg_2705;
                Ri_M_imag_addr_5_reg_2705_pp2_iter2_reg <= Ri_M_imag_addr_5_reg_2705_pp2_iter1_reg;
                Ri_M_real_addr_4_reg_2687_pp2_iter1_reg <= Ri_M_real_addr_4_reg_2687;
                Ri_M_real_addr_5_reg_2693_pp2_iter1_reg <= Ri_M_real_addr_5_reg_2693;
                Ri_M_real_addr_5_reg_2693_pp2_iter2_reg <= Ri_M_real_addr_5_reg_2693_pp2_iter1_reg;
                icmp_ln511_reg_2674 <= icmp_ln511_fu_2113_p2;
                icmp_ln513_reg_2683_pp2_iter1_reg <= icmp_ln513_reg_2683;
                icmp_ln513_reg_2683_pp2_iter2_reg <= icmp_ln513_reg_2683_pp2_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln459_reg_2216 <= add_ln459_fu_991_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln460_reg_2232 <= add_ln460_fu_1029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln486_reg_2312 <= add_ln486_fu_1183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state117)) then
                add_ln521_1_reg_2711 <= add_ln521_1_fu_2164_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                and_ln179_1_reg_2505 <= and_ln179_1_fu_1715_p2;
                and_ln184_7_reg_2511 <= and_ln184_7_fu_1811_p2;
                    d3_5_reg_2518(30 downto 0) <= d3_5_fu_1817_p3(30 downto 0);
                    largest_8_reg_2523(30 downto 0) <= largest_8_fu_1831_p3(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                and_ln189_reg_2627 <= and_ln189_fu_2037_p2;
                    largest_1_reg_2632(30 downto 0) <= largest_1_fu_2043_p3(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                and_ln201_1_reg_2548 <= and_ln201_1_fu_1904_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                and_ln201_reg_2646 <= and_ln201_fu_2091_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                and_ln284_2_reg_2568 <= and_ln284_2_fu_1942_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                and_ln306_reg_2660 <= and_ln306_fu_2107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                c_tmp_M_imag_reg_2612 <= grp_fu_767_p2;
                c_tmp_M_real_1_reg_2607 <= grp_fu_763_p2;
                complex_M_imag_writ_reg_2622 <= grp_fu_775_p2;
                s_tmp_M_real_1_reg_2617 <= grp_fu_771_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                complex_M_imag_writ_1_reg_2669 <= grp_fu_767_p2;
                s_tmp_M_real_reg_2664 <= grp_fu_763_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    d1_4_reg_2394(30 downto 0) <= d1_4_fu_1366_p1(30 downto 0);
                    d2_5_reg_2406(30 downto 0) <= d2_5_fu_1395_p1(30 downto 0);
                    d3_7_reg_2433(30 downto 0) <= d3_7_fu_1453_p1(30 downto 0);
                    largest_9_reg_2419(30 downto 0) <= largest_9_fu_1424_p1(30 downto 0);
                or_ln179_1_reg_2453 <= or_ln179_1_fu_1510_p2;
                or_ln179_2_reg_2461 <= or_ln179_2_fu_1538_p2;
                or_ln179_3_reg_2469 <= or_ln179_3_fu_1566_p2;
                or_ln179_reg_2445 <= or_ln179_fu_1492_p2;
                p_Val2_39_reg_2389 <= p_Val2_39_fu_1346_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    d3_reg_2485(30 downto 0) <= d3_fu_1618_p1(30 downto 0);
                    largest_10_reg_2477(30 downto 0) <= largest_10_fu_1592_p1(30 downto 0);
                or_ln189_1_reg_2499 <= or_ln189_1_fu_1673_p2;
                or_ln189_reg_2493 <= or_ln189_fu_1645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln480_reg_2284 <= icmp_ln480_fu_1140_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln511_fu_2113_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln513_reg_2683 <= icmp_ln513_fu_2125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln519_fu_2169_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln521_reg_2725 <= icmp_ln521_fu_2185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                k_1_reg_2720 <= k_1_fu_2175_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                k_reg_2678 <= k_fu_2119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                p_t_imag_2_reg_2756 <= Qi_M_imag_q0;
                p_t_imag_3_reg_2766 <= Qi_M_imag_q1;
                p_t_real_2_reg_2751 <= Qi_M_real_q0;
                p_t_real_3_reg_2761 <= Qi_M_real_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                r_reg_2252 <= r_fu_1073_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then
                reg_830 <= Ri_M_real_q0;
                reg_837 <= Ri_M_imag_q0;
                reg_844 <= Ri_M_real_q1;
                reg_853 <= Ri_M_imag_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state22))) then
                reg_862 <= grp_fu_763_p2;
                reg_868 <= grp_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                reg_874 <= grp_fu_695_p2;
                reg_880 <= grp_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state24))) then
                reg_886 <= grp_fu_703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_boolean_0 = ap_block_pp3_stage6_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage6_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                reg_892 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then
                reg_900 <= grp_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state43))) then
                reg_912 <= grp_fu_711_p2;
                reg_917 <= grp_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state47))) then
                reg_922 <= grp_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage7_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                reg_927 <= grp_fu_695_p2;
                reg_932 <= grp_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                reg_937 <= grp_fu_695_p2;
                reg_943 <= grp_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then
                reg_949 <= grp_fu_695_p2;
                reg_955 <= grp_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage7_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage7_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                reg_961 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln521_reg_2725 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln513_reg_2683 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then
                reg_966 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then
                reg_971 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)))) then
                reg_976 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then
                reg_981 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then
                reg_986 <= grp_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln486_fu_1177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                select_ln486_1_reg_2322 <= select_ln486_1_fu_1216_p3;
                select_ln486_3_reg_2331 <= select_ln486_3_fu_1252_p3;
                select_ln486_4_reg_2336 <= select_ln486_4_fu_1270_p3;
                select_ln486_reg_2317 <= select_ln486_fu_1195_p3;
                xor_ln486_reg_2341 <= xor_ln486_fu_1282_p2;
                    zext_ln486_reg_2326(0) <= zext_ln486_fu_1228_p1(0);
                    zext_ln498_reg_2346(1 downto 0) <= zext_ln498_fu_1288_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                tmp_2_i_i2_reg_2597 <= grp_fu_681_p2;
                tmp_7_i_i2_reg_2602 <= grp_fu_685_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                tmp_5_i_i2_reg_2587 <= grp_fu_731_p2;
                tmp_6_i_i2_reg_2592 <= grp_fu_736_p2;
                tmp_i_i1_reg_2577 <= grp_fu_721_p2;
                tmp_i_i2_reg_2582 <= grp_fu_726_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                tmp_i_i7_reg_2650 <= grp_fu_820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                tmp_i_i_reg_2558 <= grp_fu_820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                x3_1_reg_2552 <= grp_fu_771_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln480_fu_1140_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                    zext_ln482_1_reg_2293(5 downto 0) <= zext_ln482_1_fu_1161_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln1067_1_reg_2257(1 downto 0) <= "00";
    zext_ln1067_1_reg_2257(5) <= '0';
    zext_ln482_1_reg_2293(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln486_reg_2326(2 downto 1) <= "00";
    zext_ln498_reg_2346(2) <= '0';
    zext_ln503_reg_2355(1 downto 0) <= "00";
    zext_ln503_reg_2355(4) <= '0';
    zext_ln503_2_reg_2373(1 downto 0) <= "00";
    zext_ln503_2_reg_2373(4) <= '0';
    d1_4_reg_2394(31) <= '0';
    d2_5_reg_2406(31) <= '0';
    largest_9_reg_2419(31) <= '0';
    d3_7_reg_2433(31) <= '0';
    largest_10_reg_2477(31) <= '0';
    d3_reg_2485(31) <= '0';
    d3_5_reg_2518(31) <= '0';
    largest_8_reg_2523(31) <= '0';
    largest_1_reg_2632(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state13, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln471_fu_1067_p2, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln480_fu_1140_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state12, icmp_ln486_fu_1177_p2, select_ln486_1_reg_2322, icmp_ln499_fu_1292_p2, ap_CS_fsm_state15, and_ln201_1_fu_1904_p2, and_ln284_2_fu_1942_p2, ap_CS_fsm_state42, ap_CS_fsm_state58, and_ln201_fu_2091_p2, and_ln306_fu_2107_p2, ap_CS_fsm_state85, icmp_ln511_fu_2113_p2, icmp_ln519_fu_2169_p2, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp2_stage7_subdone, ap_block_pp2_stage1_subdone, ap_block_pp3_stage0_subdone, ap_block_pp3_stage7_subdone, ap_block_pp3_stage1_subdone, icmp_ln459_fu_1017_p2, icmp_ln459_1_fu_1023_p2, icmp_ln460_fu_1055_p2, icmp_ln460_1_fu_1061_p2, icmp_ln472_fu_1107_p2, ap_block_pp2_stage2_subdone, ap_block_pp2_stage3_subdone, ap_block_pp2_stage4_subdone, ap_block_pp2_stage5_subdone, ap_block_pp2_stage6_subdone, ap_block_pp3_stage2_subdone, ap_block_pp3_stage3_subdone, ap_block_pp3_stage4_subdone, ap_block_pp3_stage5_subdone, ap_block_pp3_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln459_1_fu_1023_p2 = ap_const_lv1_1) and (icmp_ln459_fu_1017_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((icmp_ln459_fu_1017_p2 = ap_const_lv1_1) and (icmp_ln459_1_fu_1023_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln460_1_fu_1061_p2 = ap_const_lv1_1) and (icmp_ln460_fu_1055_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((icmp_ln460_fu_1055_p2 = ap_const_lv1_1) and (icmp_ln460_1_fu_1061_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln471_fu_1067_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln480_fu_1140_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln480_fu_1140_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln486_fu_1177_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln499_fu_1292_p2 = ap_const_lv1_0) and (icmp_ln486_fu_1177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state136;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_lv1_1 = and_ln201_1_fu_1904_p2) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if (((ap_const_lv1_1 = and_ln284_2_fu_1942_p2) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((ap_const_lv1_1 = and_ln201_fu_2091_p2) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                if (((ap_const_lv1_0 = and_ln306_fu_2107_p2) and (ap_const_logic_1 = ap_CS_fsm_state85))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((icmp_ln511_fu_2113_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((icmp_ln511_fu_2113_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state117;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state117;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_pp2_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage4;
                end if;
            when ap_ST_fsm_pp2_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage5;
                end if;
            when ap_ST_fsm_pp2_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage6;
                end if;
            when ap_ST_fsm_pp2_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage7;
                end if;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((icmp_ln519_fu_2169_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                elsif (((icmp_ln519_fu_2169_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state136;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp3_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state136;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                end if;
            when ap_ST_fsm_pp3_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                end if;
            when ap_ST_fsm_pp3_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                end if;
            when ap_ST_fsm_pp3_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage4;
                end if;
            when ap_ST_fsm_pp3_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage5;
                end if;
            when ap_ST_fsm_pp3_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage6;
                end if;
            when ap_ST_fsm_pp3_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage7;
                end if;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_M_imag_address0 <= zext_ln482_1_fu_1161_p1(4 - 1 downto 0);

    A_M_imag_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            A_M_imag_ce0 <= ap_const_logic_1;
        else 
            A_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_M_real_address0 <= zext_ln482_1_fu_1161_p1(4 - 1 downto 0);

    A_M_real_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            A_M_real_ce0 <= ap_const_logic_1;
        else 
            A_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_imag_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state3, Qi_M_imag_addr_1_reg_2268, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, ap_block_pp3_stage0, zext_ln1027_fu_1005_p1, zext_ln1067_4_fu_1134_p1, icmp_ln474_fu_1119_p2, zext_ln114_4_fu_2199_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            Qi_M_imag_address0 <= zext_ln114_4_fu_2199_p1(4 - 1 downto 0);
        elsif (((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Qi_M_imag_address0 <= Qi_M_imag_addr_1_reg_2268;
        elsif (((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Qi_M_imag_address0 <= zext_ln1067_4_fu_1134_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            Qi_M_imag_address0 <= zext_ln1027_fu_1005_p1(4 - 1 downto 0);
        else 
            Qi_M_imag_address0 <= "XXXX";
        end if; 
    end process;


    Qi_M_imag_address1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, Qi_M_imag_addr_3_reg_2740_pp3_iter1_reg, Qi_M_imag_addr_4_reg_2746_pp3_iter2_reg, ap_block_pp3_stage0, zext_ln114_5_fu_2210_p1, ap_block_pp3_stage1, ap_block_pp3_stage5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            Qi_M_imag_address1 <= Qi_M_imag_addr_4_reg_2746_pp3_iter2_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            Qi_M_imag_address1 <= Qi_M_imag_addr_3_reg_2740_pp3_iter1_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            Qi_M_imag_address1 <= zext_ln114_5_fu_2210_p1(4 - 1 downto 0);
        else 
            Qi_M_imag_address1 <= "XXXX";
        end if; 
    end process;


    Qi_M_imag_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, icmp_ln474_fu_1119_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_imag_ce0 <= ap_const_logic_1;
        else 
            Qi_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_imag_ce1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_imag_ce1 <= ap_const_logic_1;
        else 
            Qi_M_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Qi_M_imag_d0 <= ap_const_lv32_0;

    Qi_M_imag_d1_assign_proc : process(grp_fu_667_p2, grp_fu_671_p2, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1, ap_block_pp3_stage5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            Qi_M_imag_d1 <= grp_fu_671_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5))) then 
            Qi_M_imag_d1 <= grp_fu_667_p2;
        else 
            Qi_M_imag_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Qi_M_imag_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, icmp_ln474_fu_1119_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            Qi_M_imag_we0 <= ap_const_logic_1;
        else 
            Qi_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_imag_we1_assign_proc : process(ap_enable_reg_pp3_iter1, icmp_ln521_reg_2725_pp3_iter1_reg, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage5, ap_block_pp3_stage5_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, icmp_ln521_reg_2725_pp3_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (icmp_ln521_reg_2725_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage5_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            Qi_M_imag_we1 <= ap_const_logic_1;
        else 
            Qi_M_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state3, Qi_M_real_addr_1_reg_2263, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, ap_block_pp3_stage0, zext_ln1027_fu_1005_p1, zext_ln1067_4_fu_1134_p1, icmp_ln474_fu_1119_p2, zext_ln114_4_fu_2199_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            Qi_M_real_address0 <= zext_ln114_4_fu_2199_p1(4 - 1 downto 0);
        elsif (((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Qi_M_real_address0 <= Qi_M_real_addr_1_reg_2263;
        elsif (((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Qi_M_real_address0 <= zext_ln1067_4_fu_1134_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            Qi_M_real_address0 <= zext_ln1027_fu_1005_p1(4 - 1 downto 0);
        else 
            Qi_M_real_address0 <= "XXXX";
        end if; 
    end process;


    Qi_M_real_address1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage1, Qi_M_real_addr_3_reg_2729_pp3_iter1_reg, Qi_M_real_addr_4_reg_2735_pp3_iter2_reg, ap_block_pp3_stage0, zext_ln114_5_fu_2210_p1, ap_block_pp3_stage4, ap_block_pp3_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            Qi_M_real_address1 <= Qi_M_real_addr_4_reg_2735_pp3_iter2_reg;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            Qi_M_real_address1 <= Qi_M_real_addr_3_reg_2729_pp3_iter1_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            Qi_M_real_address1 <= zext_ln114_5_fu_2210_p1(4 - 1 downto 0);
        else 
            Qi_M_real_address1 <= "XXXX";
        end if; 
    end process;


    Qi_M_real_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, icmp_ln474_fu_1119_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_real_ce0 <= ap_const_logic_1;
        else 
            Qi_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_ce1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_block_pp3_stage4_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_real_ce1 <= ap_const_logic_1;
        else 
            Qi_M_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, icmp_ln474_fu_1119_p2)
    begin
        if (((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            Qi_M_real_d0 <= ap_const_lv32_3F800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            Qi_M_real_d0 <= ap_const_lv32_0;
        else 
            Qi_M_real_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Qi_M_real_d1_assign_proc : process(grp_fu_667_p2, reg_900, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage4, ap_block_pp3_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            Qi_M_real_d1 <= reg_900;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_const_boolean_0 = ap_block_pp3_stage4))) then 
            Qi_M_real_d1 <= grp_fu_667_p2;
        else 
            Qi_M_real_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Qi_M_real_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1107_p2, icmp_ln474_fu_1119_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln474_fu_1119_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1107_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            Qi_M_real_we0 <= ap_const_logic_1;
        else 
            Qi_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_we1_assign_proc : process(ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_block_pp3_stage4_11001, icmp_ln521_reg_2725_pp3_iter1_reg, ap_enable_reg_pp3_iter2, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, icmp_ln521_reg_2725_pp3_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (icmp_ln521_reg_2725_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage4_11001) and (icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4)))) then 
            Qi_M_real_we1 <= ap_const_logic_1;
        else 
            Qi_M_real_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, zext_ln482_1_reg_2293, ap_CS_fsm_state12, Ri_M_imag_addr_5_reg_2705_pp2_iter2_reg, ap_enable_reg_pp1_iter1, ap_block_pp2_stage0, zext_ln1027_1_fu_1043_p1, ap_block_pp1_stage0, zext_ln503_1_fu_1316_p1, zext_ln114_1_fu_2139_p1, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_imag_address0 <= Ri_M_imag_addr_5_reg_2705_pp2_iter2_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            Ri_M_imag_address0 <= zext_ln114_1_fu_2139_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_imag_address0 <= zext_ln503_1_fu_1316_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            Ri_M_imag_address0 <= zext_ln482_1_reg_2293(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_imag_address0 <= zext_ln1027_1_fu_1043_p1(4 - 1 downto 0);
        else 
            Ri_M_imag_address0 <= "XXXX";
        end if; 
    end process;


    Ri_M_imag_address1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp2_stage5, ap_CS_fsm_state12, select_ln486_1_reg_2322, Ri_M_imag_addr_2_reg_2367, Ri_M_imag_addr_3_reg_2384, Ri_M_imag_addr_4_reg_2699_pp2_iter1_reg, ap_CS_fsm_state56, ap_block_pp2_stage0, zext_ln503_3_fu_1340_p1, zext_ln114_2_fu_2150_p1, ap_block_pp2_stage5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5))) then 
            Ri_M_imag_address1 <= Ri_M_imag_addr_4_reg_2699_pp2_iter1_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            Ri_M_imag_address1 <= zext_ln114_2_fu_2150_p1(4 - 1 downto 0);
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            Ri_M_imag_address1 <= Ri_M_imag_addr_3_reg_2384;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            Ri_M_imag_address1 <= Ri_M_imag_addr_2_reg_2367;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_imag_address1 <= zext_ln503_3_fu_1340_p1(4 - 1 downto 0);
        else 
            Ri_M_imag_address1 <= "XXXX";
        end if; 
    end process;


    Ri_M_imag_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter2, ap_block_pp2_stage0_11001, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state12, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            Ri_M_imag_ce0 <= ap_const_logic_1;
        else 
            Ri_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_ce1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, ap_CS_fsm_state12, select_ln486_1_reg_2322, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            Ri_M_imag_ce1 <= ap_const_logic_1;
        else 
            Ri_M_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_d0_assign_proc : process(A_M_imag_q0, ap_CS_fsm_pp2_stage1, grp_fu_671_p2, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_imag_d0 <= grp_fu_671_p2;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            Ri_M_imag_d0 <= A_M_imag_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_imag_d0 <= ap_const_lv32_0;
        else 
            Ri_M_imag_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_imag_d1_assign_proc : process(grp_fu_667_p2, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage5, select_ln486_1_reg_2322, ap_CS_fsm_state56, ap_block_pp2_stage5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5))) then 
            Ri_M_imag_d1 <= grp_fu_667_p2;
        elsif ((((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            Ri_M_imag_d1 <= ap_const_lv32_0;
        else 
            Ri_M_imag_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_imag_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, icmp_ln480_reg_2284, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln513_reg_2683_pp2_iter2_reg, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln480_reg_2284 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln513_reg_2683_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            Ri_M_imag_we0 <= ap_const_logic_1;
        else 
            Ri_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_we1_assign_proc : process(ap_enable_reg_pp2_iter1, icmp_ln513_reg_2683_pp2_iter1_reg, ap_CS_fsm_pp2_stage5, ap_block_pp2_stage5_11001, select_ln486_1_reg_2322, ap_CS_fsm_state56)
    begin
        if ((((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_const_boolean_0 = ap_block_pp2_stage5_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)))) then 
            Ri_M_imag_we1 <= ap_const_logic_1;
        else 
            Ri_M_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, zext_ln482_1_reg_2293, ap_CS_fsm_state12, Ri_M_real_addr_5_reg_2693_pp2_iter2_reg, ap_enable_reg_pp1_iter1, ap_block_pp2_stage0, zext_ln1027_1_fu_1043_p1, ap_block_pp1_stage0, zext_ln503_1_fu_1316_p1, zext_ln114_1_fu_2139_p1, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_real_address0 <= Ri_M_real_addr_5_reg_2693_pp2_iter2_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            Ri_M_real_address0 <= zext_ln114_1_fu_2139_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_real_address0 <= zext_ln503_1_fu_1316_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            Ri_M_real_address0 <= zext_ln482_1_reg_2293(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_real_address0 <= zext_ln1027_1_fu_1043_p1(4 - 1 downto 0);
        else 
            Ri_M_real_address0 <= "XXXX";
        end if; 
    end process;


    Ri_M_real_address1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state12, select_ln486_1_reg_2322, Ri_M_real_addr_2_reg_2361, Ri_M_real_addr_3_reg_2379, Ri_M_real_addr_4_reg_2687_pp2_iter1_reg, ap_CS_fsm_state56, ap_block_pp2_stage0, zext_ln503_3_fu_1340_p1, zext_ln114_2_fu_2150_p1, ap_block_pp2_stage4)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4))) then 
            Ri_M_real_address1 <= Ri_M_real_addr_4_reg_2687_pp2_iter1_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            Ri_M_real_address1 <= zext_ln114_2_fu_2150_p1(4 - 1 downto 0);
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            Ri_M_real_address1 <= Ri_M_real_addr_3_reg_2379;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            Ri_M_real_address1 <= Ri_M_real_addr_2_reg_2361;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_real_address1 <= zext_ln503_3_fu_1340_p1(4 - 1 downto 0);
        else 
            Ri_M_real_address1 <= "XXXX";
        end if; 
    end process;


    Ri_M_real_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter2, ap_block_pp2_stage0_11001, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state12, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            Ri_M_real_ce0 <= ap_const_logic_1;
        else 
            Ri_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_ce1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_block_pp2_stage4_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state12, select_ln486_1_reg_2322, ap_CS_fsm_state56)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            Ri_M_real_ce1 <= ap_const_logic_1;
        else 
            Ri_M_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_d0_assign_proc : process(A_M_real_q0, ap_CS_fsm_pp2_stage1, reg_900, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_real_d0 <= reg_900;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            Ri_M_real_d0 <= A_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_real_d0 <= ap_const_lv32_0;
        else 
            Ri_M_real_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_real_d1_assign_proc : process(grp_fu_667_p2, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, select_ln486_1_reg_2322, ap_CS_fsm_state56, ap_phi_mux_p_f_assign_phi_fu_544_p4, ap_block_pp2_stage4)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_const_boolean_0 = ap_block_pp2_stage4))) then 
            Ri_M_real_d1 <= grp_fu_667_p2;
        elsif ((((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            Ri_M_real_d1 <= ap_phi_mux_p_f_assign_phi_fu_544_p4;
        else 
            Ri_M_real_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_real_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, icmp_ln480_reg_2284, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln513_reg_2683_pp2_iter2_reg, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln480_reg_2284 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln513_reg_2683_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            Ri_M_real_we0 <= ap_const_logic_1;
        else 
            Ri_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_we1_assign_proc : process(ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_block_pp2_stage4_11001, icmp_ln513_reg_2683_pp2_iter1_reg, select_ln486_1_reg_2322, ap_CS_fsm_state56)
    begin
        if ((((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56)) or ((ap_const_boolean_0 = ap_block_pp2_stage4_11001) and (icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4)))) then 
            Ri_M_real_we1 <= ap_const_logic_1;
        else 
            Ri_M_real_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1067_1_fu_1129_p2 <= std_logic_vector(unsigned(zext_ln1067_1_reg_2257) + unsigned(zext_ln1067_3_fu_1125_p1));
    add_ln1067_fu_1095_p2 <= std_logic_vector(unsigned(zext_ln1067_fu_1079_p1) + unsigned(zext_ln1067_1_fu_1091_p1));
    add_ln114_2_fu_2145_p2 <= std_logic_vector(unsigned(zext_ln503_2_reg_2373) + unsigned(zext_ln114_fu_2130_p1));
    add_ln114_3_fu_2194_p2 <= std_logic_vector(unsigned(zext_ln503_reg_2355) + unsigned(zext_ln114_3_fu_2190_p1));
    add_ln114_4_fu_2205_p2 <= std_logic_vector(unsigned(zext_ln503_2_reg_2373) + unsigned(zext_ln114_3_fu_2190_p1));
    add_ln114_fu_2134_p2 <= std_logic_vector(unsigned(zext_ln503_reg_2355) + unsigned(zext_ln114_fu_2130_p1));
    add_ln459_1_fu_1011_p2 <= std_logic_vector(unsigned(phi_ln459_1_reg_364) + unsigned(ap_const_lv2_1));
    add_ln459_fu_991_p2 <= std_logic_vector(unsigned(phi_ln459_reg_352) + unsigned(ap_const_lv2_1));
    add_ln460_1_fu_1049_p2 <= std_logic_vector(unsigned(phi_ln460_1_reg_387) + unsigned(ap_const_lv2_1));
    add_ln460_fu_1029_p2 <= std_logic_vector(unsigned(phi_ln460_reg_375) + unsigned(ap_const_lv2_1));
    add_ln482_fu_1156_p2 <= std_logic_vector(unsigned(zext_ln1067_1_reg_2257) + unsigned(zext_ln482_fu_1152_p1));
    add_ln486_fu_1183_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_432) + unsigned(ap_const_lv4_1));
    add_ln503_1_fu_1310_p2 <= std_logic_vector(unsigned(zext_ln513_fu_1260_p1) + unsigned(zext_ln503_fu_1306_p1));
    add_ln503_2_fu_1334_p2 <= std_logic_vector(unsigned(zext_ln513_fu_1260_p1) + unsigned(zext_ln503_2_fu_1330_p1));
    add_ln513_1_fu_1204_p2 <= std_logic_vector(unsigned(j_0_i_reg_443) + unsigned(ap_const_lv3_1));
    add_ln513_fu_1264_p2 <= std_logic_vector(unsigned(j_0_i_reg_443) + unsigned(ap_const_lv3_2));
    add_ln521_1_fu_2164_p2 <= std_logic_vector(unsigned(zext_ln521_fu_2160_p1) + unsigned(xor_ln486_reg_2341));
    add_ln521_fu_2156_p2 <= std_logic_vector(unsigned(zext_ln498_reg_2346) + unsigned(zext_ln486_reg_2326));
    and_ln179_1_fu_1715_p2 <= (and_ln179_7_fu_1709_p2 and and_ln179_2_fu_1683_p2);
    and_ln179_2_fu_1683_p2 <= (grp_fu_780_p2 and and_ln179_fu_1679_p2);
    and_ln179_3_fu_1689_p2 <= (or_ln179_reg_2445 and or_ln179_2_reg_2461);
    and_ln179_4_fu_1693_p2 <= (grp_fu_784_p2 and and_ln179_3_fu_1689_p2);
    and_ln179_5_fu_1699_p2 <= (or_ln179_reg_2445 and or_ln179_3_reg_2469);
    and_ln179_6_fu_1703_p2 <= (grp_fu_788_p2 and and_ln179_5_fu_1699_p2);
    and_ln179_7_fu_1709_p2 <= (and_ln179_6_fu_1703_p2 and and_ln179_4_fu_1693_p2);
    and_ln179_fu_1679_p2 <= (or_ln179_reg_2445 and or_ln179_1_reg_2453);
    and_ln184_1_fu_1727_p2 <= (or_ln179_2_reg_2461 and or_ln179_1_reg_2453);
    and_ln184_2_fu_1731_p2 <= (grp_fu_796_p2 and and_ln184_1_fu_1727_p2);
    and_ln184_3_fu_1737_p2 <= (or_ln179_3_reg_2469 and or_ln179_1_reg_2453);
    and_ln184_4_fu_1741_p2 <= (grp_fu_800_p2 and and_ln184_3_fu_1737_p2);
    and_ln184_5_fu_1799_p2 <= (and_ln184_4_fu_1741_p2 and and_ln184_2_fu_1731_p2);
    and_ln184_6_fu_1805_p2 <= (xor_ln179_fu_1793_p2 and and_ln184_fu_1721_p2);
    and_ln184_7_fu_1811_p2 <= (and_ln184_6_fu_1805_p2 and and_ln184_5_fu_1799_p2);
    and_ln184_fu_1721_p2 <= (grp_fu_792_p2 and and_ln179_fu_1679_p2);
    and_ln189_1_fu_2027_p2 <= (or_ln189_reg_2493 and or_ln189_1_reg_2499);
    and_ln189_2_fu_1775_p2 <= (and_ln189_8_fu_1769_p2 and and_ln189_4_fu_1747_p2);
    and_ln189_3_fu_2031_p2 <= (grp_fu_784_p2 and and_ln189_1_fu_2027_p2);
    and_ln189_4_fu_1747_p2 <= (grp_fu_804_p2 and and_ln179_3_fu_1689_p2);
    and_ln189_5_fu_1753_p2 <= (grp_fu_808_p2 and and_ln184_1_fu_1727_p2);
    and_ln189_6_fu_1759_p2 <= (or_ln179_3_reg_2469 and or_ln179_2_reg_2461);
    and_ln189_7_fu_1763_p2 <= (grp_fu_812_p2 and and_ln189_6_fu_1759_p2);
    and_ln189_8_fu_1769_p2 <= (and_ln189_7_fu_1763_p2 and and_ln189_5_fu_1753_p2);
    and_ln189_fu_2037_p2 <= (grp_fu_780_p2 and and_ln189_3_fu_2031_p2);
    and_ln201_1_fu_1904_p2 <= (or_ln201_1_fu_1898_p2 and grp_fu_780_p2);
    and_ln201_fu_2091_p2 <= (or_ln201_fu_2085_p2 and grp_fu_780_p2);
    and_ln284_1_fu_1915_p2 <= (or_ln179_1_reg_2453 and grp_fu_784_p2);
    and_ln284_2_fu_1942_p2 <= (and_ln284_6_fu_1936_p2 and and_ln284_5_fu_1930_p2);
    and_ln284_3_fu_1920_p2 <= (or_ln179_2_reg_2461 and grp_fu_788_p2);
    and_ln284_4_fu_1925_p2 <= (or_ln179_3_reg_2469 and grp_fu_792_p2);
    and_ln284_5_fu_1930_p2 <= (and_ln284_fu_1910_p2 and and_ln284_1_fu_1915_p2);
    and_ln284_6_fu_1936_p2 <= (and_ln284_4_fu_1925_p2 and and_ln284_3_fu_1920_p2);
    and_ln284_fu_1910_p2 <= (or_ln179_reg_2445 and grp_fu_780_p2);
    and_ln306_1_fu_2097_p2 <= (or_ln189_reg_2493 and grp_fu_780_p2);
    and_ln306_2_fu_2102_p2 <= (or_ln189_1_reg_2499 and grp_fu_784_p2);
    and_ln306_fu_2107_p2 <= (and_ln306_2_fu_2102_p2 and and_ln306_1_fu_2097_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(97);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(98);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(99);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(100);
    ap_CS_fsm_pp2_stage4 <= ap_CS_fsm(101);
    ap_CS_fsm_pp2_stage5 <= ap_CS_fsm(102);
    ap_CS_fsm_pp2_stage6 <= ap_CS_fsm(103);
    ap_CS_fsm_pp2_stage7 <= ap_CS_fsm(104);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(106);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(107);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(108);
    ap_CS_fsm_pp3_stage3 <= ap_CS_fsm(109);
    ap_CS_fsm_pp3_stage4 <= ap_CS_fsm(110);
    ap_CS_fsm_pp3_stage5 <= ap_CS_fsm(111);
    ap_CS_fsm_pp3_stage6 <= ap_CS_fsm(112);
    ap_CS_fsm_pp3_stage7 <= ap_CS_fsm(113);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state117 <= ap_CS_fsm(105);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state136 <= ap_CS_fsm(114);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state15 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(20);
    ap_CS_fsm_state23 <= ap_CS_fsm(21);
    ap_CS_fsm_state24 <= ap_CS_fsm(22);
    ap_CS_fsm_state25 <= ap_CS_fsm(23);
    ap_CS_fsm_state28 <= ap_CS_fsm(26);
    ap_CS_fsm_state29 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state32 <= ap_CS_fsm(30);
    ap_CS_fsm_state33 <= ap_CS_fsm(31);
    ap_CS_fsm_state39 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(38);
    ap_CS_fsm_state41 <= ap_CS_fsm(39);
    ap_CS_fsm_state42 <= ap_CS_fsm(40);
    ap_CS_fsm_state43 <= ap_CS_fsm(41);
    ap_CS_fsm_state44 <= ap_CS_fsm(42);
    ap_CS_fsm_state47 <= ap_CS_fsm(45);
    ap_CS_fsm_state48 <= ap_CS_fsm(46);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state55 <= ap_CS_fsm(53);
    ap_CS_fsm_state56 <= ap_CS_fsm(54);
    ap_CS_fsm_state57 <= ap_CS_fsm(55);
    ap_CS_fsm_state58 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state65 <= ap_CS_fsm(63);
    ap_CS_fsm_state66 <= ap_CS_fsm(64);
    ap_CS_fsm_state67 <= ap_CS_fsm(65);
    ap_CS_fsm_state68 <= ap_CS_fsm(66);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state71 <= ap_CS_fsm(69);
    ap_CS_fsm_state72 <= ap_CS_fsm(70);
    ap_CS_fsm_state75 <= ap_CS_fsm(73);
    ap_CS_fsm_state76 <= ap_CS_fsm(74);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state82 <= ap_CS_fsm(80);
    ap_CS_fsm_state83 <= ap_CS_fsm(81);
    ap_CS_fsm_state84 <= ap_CS_fsm(82);
    ap_CS_fsm_state85 <= ap_CS_fsm(83);
    ap_CS_fsm_state86 <= ap_CS_fsm(84);
    ap_CS_fsm_state87 <= ap_CS_fsm(85);
    ap_CS_fsm_state90 <= ap_CS_fsm(88);
    ap_CS_fsm_state91 <= ap_CS_fsm(89);
    ap_CS_fsm_state98 <= ap_CS_fsm(96);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state100_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp2_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp2_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp2_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp2_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp2_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp2_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp2_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp2_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp2_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp3_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state120_pp3_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp3_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp3_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp3_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp3_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state125_pp3_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state126_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp3_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp3_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp3_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state130_pp3_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state131_pp3_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state132_pp3_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state133_pp3_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state134_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state135_pp3_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln480_fu_1140_p2)
    begin
        if ((icmp_ln480_fu_1140_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state99_assign_proc : process(icmp_ln511_fu_2113_p2)
    begin
        if ((icmp_ln511_fu_2113_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state99 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state99 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state118_assign_proc : process(icmp_ln519_fu_2169_p2)
    begin
        if ((icmp_ln519_fu_2169_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state118 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state118 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12, icmp_ln486_fu_1177_p2)
    begin
        if (((icmp_ln486_fu_1177_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_k13_0_i_phi_fu_660_p4_assign_proc : process(k13_0_i_reg_656, icmp_ln519_reg_2716, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, k_1_reg_2720, ap_block_pp3_stage0)
    begin
        if (((icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_k13_0_i_phi_fu_660_p4 <= k_1_reg_2720;
        else 
            ap_phi_mux_k13_0_i_phi_fu_660_p4 <= k13_0_i_reg_656;
        end if; 
    end process;


    ap_phi_mux_k_0_i_phi_fu_649_p4_assign_proc : process(k_0_i_reg_645, icmp_ln511_reg_2674, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, k_reg_2678, ap_block_pp2_stage0)
    begin
        if (((icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_k_0_i_phi_fu_649_p4 <= k_reg_2678;
        else 
            ap_phi_mux_k_0_i_phi_fu_649_p4 <= k_0_i_reg_645;
        end if; 
    end process;


    ap_phi_mux_p_f_assign_phi_fu_544_p4_assign_proc : process(select_ln486_1_reg_2322, ap_CS_fsm_state56, sqrt_mag_a_mag_b_reg_465, mag_M_real_reg_632)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
            if ((select_ln486_1_reg_2322 = ap_const_lv1_0)) then 
                ap_phi_mux_p_f_assign_phi_fu_544_p4 <= sqrt_mag_a_mag_b_reg_465;
            elsif ((select_ln486_1_reg_2322 = ap_const_lv1_1)) then 
                ap_phi_mux_p_f_assign_phi_fu_544_p4 <= mag_M_real_reg_632;
            else 
                ap_phi_mux_p_f_assign_phi_fu_544_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_p_f_assign_phi_fu_544_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4_assign_proc : process(select_ln486_1_reg_2322, and_ln306_reg_2660, complex_M_imag_writ_1_reg_2669, ap_CS_fsm_state56, s_tmp_M_imag_2_reg_530)
    begin
        if (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln306_reg_2660) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4 <= complex_M_imag_writ_1_reg_2669;
        else 
            ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4 <= s_tmp_M_imag_2_reg_530;
        end if; 
    end process;


    ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4_assign_proc : process(select_ln486_1_reg_2322, and_ln284_2_reg_2568, complex_M_imag_writ_reg_2622, ap_CS_fsm_state56, s_tmp_M_imag_reg_508)
    begin
        if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4 <= complex_M_imag_writ_reg_2622;
        else 
            ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4 <= s_tmp_M_imag_reg_508;
        end if; 
    end process;


    ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4_assign_proc : process(select_ln486_1_reg_2322, and_ln284_2_reg_2568, c_tmp_M_imag_reg_2612, ap_CS_fsm_state56, tmp_M_imag_3_reg_486)
    begin
        if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4 <= c_tmp_M_imag_reg_2612;
        else 
            ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4 <= tmp_M_imag_3_reg_486;
        end if; 
    end process;


    ap_phi_mux_tmp_M_real_1_phi_fu_480_p4_assign_proc : process(select_ln486_1_reg_2322, and_ln284_2_reg_2568, c_tmp_M_real_1_reg_2607, ap_CS_fsm_state56, tmp_M_real_1_reg_477)
    begin
        if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            ap_phi_mux_tmp_M_real_1_phi_fu_480_p4 <= c_tmp_M_real_1_reg_2607;
        else 
            ap_phi_mux_tmp_M_real_1_phi_fu_480_p4 <= tmp_M_real_1_reg_477;
        end if; 
    end process;


    ap_phi_mux_tmp_M_real_2_phi_fu_501_p4_assign_proc : process(select_ln486_1_reg_2322, and_ln284_2_reg_2568, s_tmp_M_real_1_reg_2617, ap_CS_fsm_state56, tmp_M_real_2_reg_497)
    begin
        if (((ap_const_lv1_0 = and_ln284_2_reg_2568) and (select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            ap_phi_mux_tmp_M_real_2_phi_fu_501_p4 <= s_tmp_M_real_1_reg_2617;
        else 
            ap_phi_mux_tmp_M_real_2_phi_fu_501_p4 <= tmp_M_real_2_reg_497;
        end if; 
    end process;


    ap_phi_mux_tmp_M_real_phi_fu_523_p4_assign_proc : process(select_ln486_1_reg_2322, and_ln306_reg_2660, s_tmp_M_real_reg_2664, ap_CS_fsm_state56, tmp_M_real_reg_519)
    begin
        if (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln306_reg_2660) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
            ap_phi_mux_tmp_M_real_phi_fu_523_p4 <= s_tmp_M_real_reg_2664;
        else 
            ap_phi_mux_tmp_M_real_phi_fu_523_p4 <= tmp_M_real_reg_519;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, icmp_ln486_fu_1177_p2)
    begin
        if (((icmp_ln486_fu_1177_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln155_3_fu_1967_p1 <= ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4;
    bitcast_ln155_5_fu_1982_p1 <= ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4;
    bitcast_ln155_fu_2012_p1 <= ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4;
    bitcast_ln201_1_fu_1869_p1 <= largest_8_reg_2523;
    bitcast_ln201_fu_2056_p1 <= largest_1_reg_2632;
    bitcast_ln444_1_fu_2007_p1 <= xor_ln444_fu_2001_p2;
    bitcast_ln444_fu_1997_p1 <= ap_phi_mux_tmp_M_real_2_phi_fu_501_p4;
    c_2_fu_1113_p2 <= std_logic_vector(unsigned(c_0_i_reg_410) + unsigned(ap_const_lv3_1));
    c_fu_1146_p2 <= std_logic_vector(unsigned(c12_0_i_reg_421) + unsigned(ap_const_lv3_1));
    c_tmp_M_real_fu_1963_p1 <= p_Result_25_fu_1955_p3;
    d1_3_fu_1844_p3 <= 
        d1_4_reg_2394 when (and_ln184_7_reg_2511(0) = '1') else 
        d1_fu_1839_p3;
    d1_4_fu_1366_p1 <= p_Result_26_fu_1358_p3;
    d1_fu_1839_p3 <= 
        d2_5_reg_2406 when (and_ln179_1_reg_2505(0) = '1') else 
        d1_4_reg_2394;
    d2_4_fu_1856_p3 <= 
        largest_9_reg_2419 when (and_ln184_7_reg_2511(0) = '1') else 
        d2_fu_1851_p3;
    d2_5_fu_1395_p1 <= p_Result_27_fu_1387_p3;
    d2_fu_1851_p3 <= 
        largest_9_reg_2419 when (and_ln179_1_reg_2505(0) = '1') else 
        d2_5_reg_2406;
    d3_1_fu_2050_p3 <= 
        d3_reg_2485 when (and_ln189_reg_2627(0) = '1') else 
        largest_10_reg_2477;
    d3_4_fu_1781_p3 <= 
        d3_7_reg_2433 when (and_ln189_2_fu_1775_p2(0) = '1') else 
        largest_9_reg_2419;
    d3_5_fu_1817_p3 <= 
        d3_7_reg_2433 when (and_ln179_1_fu_1715_p2(0) = '1') else 
        d3_4_fu_1781_p3;
    d3_6_fu_1863_p3 <= 
        d3_7_reg_2433 when (and_ln184_7_reg_2511(0) = '1') else 
        d3_5_reg_2518;
    d3_7_fu_1453_p1 <= p_Result_29_fu_1445_p3;
    d3_fu_1618_p1 <= p_Result_31_fu_1610_p3;

    grp_fu_667_opcode_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, icmp_ln511_reg_2674, icmp_ln513_reg_2683, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, icmp_ln519_reg_2716, icmp_ln521_reg_2725, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2683_pp2_iter1_reg, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, icmp_ln521_reg_2725_pp3_iter1_reg, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state44, ap_CS_fsm_state68, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_block_pp2_stage4_00001, ap_block_pp2_stage6_00001, ap_block_pp2_stage0_00001, ap_block_pp2_stage1_00001, ap_block_pp2_stage2_00001, ap_block_pp3_stage4_00001, ap_block_pp3_stage6_00001, ap_block_pp3_stage0_00001, ap_block_pp3_stage1_00001, ap_block_pp3_stage2_00001, ap_block_pp2_stage3_00001, ap_block_pp2_stage5_00001, ap_block_pp2_stage7_00001, ap_block_pp3_stage3_00001, ap_block_pp3_stage5_00001, ap_block_pp3_stage7_00001)
    begin
        if ((((icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage5_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage7_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage3_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage5_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage7_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            grp_fu_667_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage1_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln521_reg_2725 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage4_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((icmp_ln521_reg_2725 = ap_const_lv1_0) and (icmp_ln519_reg_2716 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage6_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage2_00001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_00001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage4_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((icmp_ln513_reg_2683 = ap_const_lv1_0) and (icmp_ln511_reg_2674 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_00001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_667_opcode <= ap_const_lv2_0;
        else 
            grp_fu_667_opcode <= "XX";
        end if; 
    end process;


    grp_fu_667_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_874, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage6, reg_880, reg_892, reg_900, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, reg_927, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, reg_937, reg_949, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, reg_961, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage4, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage4, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state44, ap_CS_fsm_state68, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_block_pp2_stage3, ap_block_pp2_stage6, ap_block_pp2_stage7, ap_block_pp2_stage2, ap_block_pp3_stage3, ap_block_pp3_stage6, ap_block_pp3_stage7, ap_block_pp3_stage2)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_667_p0 <= reg_961;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_667_p0 <= reg_892;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6)))) then 
            grp_fu_667_p0 <= reg_949;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)))) then 
            grp_fu_667_p0 <= reg_937;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4)))) then 
            grp_fu_667_p0 <= reg_927;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_667_p0 <= reg_874;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_667_p0 <= reg_900;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_667_p0 <= reg_880;
        else 
            grp_fu_667_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_667_p1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage6, reg_880, reg_886, reg_892, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, reg_932, reg_943, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, reg_955, reg_966, reg_971, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage4, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage4, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state44, ap_CS_fsm_state68, ap_CS_fsm_state72, ap_CS_fsm_state87, ap_block_pp2_stage3, ap_block_pp2_stage6, ap_block_pp2_stage7, ap_block_pp2_stage2, ap_block_pp3_stage3, ap_block_pp3_stage6, ap_block_pp3_stage7, ap_block_pp3_stage2)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_667_p1 <= reg_971;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_667_p1 <= reg_966;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6)))) then 
            grp_fu_667_p1 <= reg_955;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)))) then 
            grp_fu_667_p1 <= reg_943;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4)))) then 
            grp_fu_667_p1 <= reg_932;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_667_p1 <= reg_880;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_667_p1 <= reg_892;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_667_p1 <= reg_886;
        else 
            grp_fu_667_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_671_opcode_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage6, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2683_pp2_iter1_reg, ap_enable_reg_pp3_iter1, icmp_ln521_reg_2725_pp3_iter1_reg, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state25, ap_CS_fsm_state44, ap_CS_fsm_state68, ap_CS_fsm_state87, ap_block_pp2_stage6_00001, ap_block_pp2_stage1_00001, ap_block_pp2_stage2_00001, ap_block_pp3_stage6_00001, ap_block_pp3_stage1_00001, ap_block_pp3_stage2_00001, ap_block_pp2_stage5_00001, ap_block_pp3_stage5_00001)
    begin
        if ((((icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage1_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_00001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
            grp_fu_671_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage5_00001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage5_00001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage6_00001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6)) or ((icmp_ln521_reg_2725_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage2_00001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage6_00001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6)) or ((icmp_ln513_reg_2683_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_00001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)))) then 
            grp_fu_671_opcode <= ap_const_lv2_0;
        else 
            grp_fu_671_opcode <= "XX";
        end if; 
    end process;


    grp_fu_671_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, reg_874, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage6, reg_886, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, reg_937, reg_949, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, reg_976, reg_981, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_CS_fsm_state25, ap_CS_fsm_state44, ap_CS_fsm_state68, ap_CS_fsm_state87, ap_block_pp2_stage6, ap_block_pp2_stage2, ap_block_pp3_stage6, ap_block_pp3_stage2)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6)))) then 
            grp_fu_671_p0 <= reg_981;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)))) then 
            grp_fu_671_p0 <= reg_976;
        elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_671_p0 <= reg_949;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_671_p0 <= reg_937;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_671_p0 <= reg_886;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_fu_671_p0 <= reg_874;
        else 
            grp_fu_671_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_671_p1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage6, reg_900, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, reg_943, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, reg_955, reg_986, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_CS_fsm_state25, ap_CS_fsm_state44, ap_CS_fsm_state68, ap_CS_fsm_state87, ap_block_pp2_stage6, ap_block_pp2_stage2, ap_block_pp3_stage6, ap_block_pp3_stage2)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_const_boolean_0 = ap_block_pp2_stage6)))) then 
            grp_fu_671_p1 <= reg_986;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)))) then 
            grp_fu_671_p1 <= reg_900;
        elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_671_p1 <= reg_955;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_671_p1 <= reg_943;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            grp_fu_671_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_fu_671_p1 <= ap_const_lv32_3F800000;
        else 
            grp_fu_671_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_695_p0_assign_proc : process(reg_830, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_844, reg_862, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, largest_8_reg_2523, ap_CS_fsm_state42, largest_1_reg_2632, ap_CS_fsm_state85, p_r_M_imag_5_reg_552, p_r_M_real_6_reg_563, p_r_M_imag_3_reg_575, p_r_M_real_5_reg_586, p_r_M_real_3_reg_597, p_r_M_imag_2_reg_609, p_r_M_real_2_reg_620, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage4, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage4, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_block_pp2_stage3, ap_block_pp2_stage6, ap_block_pp2_stage7, ap_block_pp2_stage2, ap_block_pp3_stage3, ap_block_pp3_stage6, ap_block_pp3_stage7, ap_block_pp3_stage2, ap_CS_fsm_state23, ap_CS_fsm_state40, ap_CS_fsm_state66, ap_CS_fsm_state83)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            grp_fu_695_p0 <= p_r_M_imag_5_reg_552;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)))) then 
            grp_fu_695_p0 <= p_r_M_real_6_reg_563;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)))) then 
            grp_fu_695_p0 <= p_r_M_real_5_reg_586;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6)))) then 
            grp_fu_695_p0 <= p_r_M_imag_3_reg_575;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_695_p0 <= p_r_M_real_3_reg_597;
        elsif ((((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_695_p0 <= p_r_M_imag_2_reg_609;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_695_p0 <= p_r_M_real_2_reg_620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_695_p0 <= reg_844;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            grp_fu_695_p0 <= largest_1_reg_2632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_695_p0 <= reg_830;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_695_p0 <= largest_8_reg_2523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_fu_695_p0 <= reg_862;
        else 
            grp_fu_695_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_695_p1_assign_proc : process(Qi_M_real_q0, Ri_M_real_q0, reg_830, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_844, reg_862, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, tmp_i_i_reg_2558, ap_CS_fsm_state42, tmp_i_i7_reg_2650, ap_CS_fsm_state85, p_t_real_2_reg_2751, p_t_real_3_reg_2761, sqrt_mag_a_mag_b_reg_465, mag_M_real_reg_632, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage4, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage4, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_block_pp2_stage3, ap_block_pp2_stage6, ap_block_pp2_stage7, ap_block_pp2_stage2, ap_block_pp3_stage3, ap_block_pp3_stage6, ap_block_pp3_stage7, ap_block_pp3_stage2, ap_CS_fsm_state23, ap_CS_fsm_state40, ap_CS_fsm_state66, ap_CS_fsm_state83)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage4)))) then 
            grp_fu_695_p1 <= p_t_real_3_reg_2761;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)))) then 
            grp_fu_695_p1 <= p_t_real_2_reg_2751;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            grp_fu_695_p1 <= Qi_M_real_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4)))) then 
            grp_fu_695_p1 <= reg_844;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_695_p1 <= reg_830;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_695_p1 <= Ri_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_695_p1 <= mag_M_real_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            grp_fu_695_p1 <= tmp_i_i7_reg_2650;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_695_p1 <= sqrt_mag_a_mag_b_reg_465;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_695_p1 <= tmp_i_i_reg_2558;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_fu_695_p1 <= reg_862;
        else 
            grp_fu_695_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_699_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_837, reg_853, reg_868, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state42, ap_CS_fsm_state85, p_r_M_imag_5_reg_552, p_r_M_real_6_reg_563, p_r_M_imag_3_reg_575, p_r_M_real_5_reg_586, p_r_M_real_3_reg_597, p_r_M_imag_2_reg_609, p_r_M_real_2_reg_620, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage4, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage4, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_block_pp2_stage3, ap_block_pp2_stage6, ap_block_pp2_stage7, ap_block_pp2_stage2, ap_block_pp3_stage3, ap_block_pp3_stage6, ap_block_pp3_stage7, ap_block_pp3_stage2, ap_CS_fsm_state23, ap_CS_fsm_state66)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            grp_fu_699_p0 <= p_r_M_real_6_reg_563;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)))) then 
            grp_fu_699_p0 <= p_r_M_imag_5_reg_552;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6)))) then 
            grp_fu_699_p0 <= p_r_M_real_5_reg_586;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4)))) then 
            grp_fu_699_p0 <= p_r_M_real_3_reg_597;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_699_p0 <= p_r_M_imag_3_reg_575;
        elsif ((((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_699_p0 <= p_r_M_real_2_reg_620;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_699_p0 <= p_r_M_imag_2_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_699_p0 <= reg_853;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_699_p0 <= reg_837;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_fu_699_p0 <= reg_868;
        else 
            grp_fu_699_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_699_p1_assign_proc : process(Qi_M_imag_q0, Ri_M_imag_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_837, reg_853, reg_868, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage6, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage6, ap_CS_fsm_pp2_stage4, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage4, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage7, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage7, ap_CS_fsm_pp2_stage5, ap_CS_fsm_pp3_stage5, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state42, ap_CS_fsm_state85, p_t_imag_2_reg_2756, p_t_imag_3_reg_2766, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage4, ap_block_pp3_stage1, ap_block_pp3_stage5, ap_block_pp2_stage4, ap_block_pp2_stage1, ap_block_pp2_stage5, ap_block_pp2_stage3, ap_block_pp2_stage6, ap_block_pp2_stage7, ap_block_pp2_stage2, ap_block_pp3_stage3, ap_block_pp3_stage6, ap_block_pp3_stage7, ap_block_pp3_stage2, ap_CS_fsm_state23, ap_CS_fsm_state66)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage7) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage4) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage4)))) then 
            grp_fu_699_p1 <= p_t_imag_3_reg_2766;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage5) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage6) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage6)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2)))) then 
            grp_fu_699_p1 <= p_t_imag_2_reg_2756;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1))) then 
            grp_fu_699_p1 <= Qi_M_imag_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage7) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage4) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage4)))) then 
            grp_fu_699_p1 <= reg_853;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage5) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage6) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_699_p1 <= reg_837;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_699_p1 <= Ri_M_imag_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            grp_fu_699_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            grp_fu_699_p1 <= reg_868;
        else 
            grp_fu_699_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_703_p0_assign_proc : process(x3_1_reg_2552, ap_CS_fsm_state42, ap_CS_fsm_state85, sqrt_mag_a_mag_b_reg_465, mag_M_real_reg_632, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_703_p0 <= mag_M_real_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_703_p0 <= sqrt_mag_a_mag_b_reg_465;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_703_p0 <= x3_1_reg_2552;
        else 
            grp_fu_703_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_703_p1_assign_proc : process(x3_1_reg_2552, ap_CS_fsm_state42, ap_CS_fsm_state85, sqrt_mag_a_mag_b_reg_465, mag_M_real_reg_632, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_703_p1 <= mag_M_real_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_703_p1 <= sqrt_mag_a_mag_b_reg_465;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_703_p1 <= x3_1_reg_2552;
        else 
            grp_fu_703_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_711_p0_assign_proc : process(reg_837, reg_853, ap_CS_fsm_state42, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_711_p0 <= reg_853;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_711_p0 <= reg_837;
        else 
            grp_fu_711_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_711_p1_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state85, sqrt_mag_a_mag_b_reg_465, mag_M_real_reg_632)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_711_p1 <= mag_M_real_reg_632;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_711_p1 <= sqrt_mag_a_mag_b_reg_465;
        else 
            grp_fu_711_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_716_p0_assign_proc : process(reg_830, reg_844, ap_CS_fsm_state42, ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            grp_fu_716_p0 <= reg_844;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_716_p0 <= reg_830;
        else 
            grp_fu_716_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_763_p0_assign_proc : process(reg_892, d1_3_fu_1844_p3, ap_CS_fsm_state15, ap_CS_fsm_state58, ap_CS_fsm_state48, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_763_p0 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_fu_763_p0 <= reg_892;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_763_p0 <= d1_3_fu_1844_p3;
        else 
            grp_fu_763_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_763_p1_assign_proc : process(reg_900, largest_8_reg_2523, ap_CS_fsm_state15, largest_1_reg_2632, ap_CS_fsm_state58, ap_CS_fsm_state48, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_763_p1 <= largest_1_reg_2632;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_fu_763_p1 <= reg_900;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_763_p1 <= largest_8_reg_2523;
        else 
            grp_fu_763_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_767_p0_assign_proc : process(reg_922, ap_CS_fsm_state15, d2_4_fu_1856_p3, d3_1_fu_2050_p3, ap_CS_fsm_state58, ap_CS_fsm_state48, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_767_p0 <= d3_1_fu_2050_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_fu_767_p0 <= reg_922;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_767_p0 <= d2_4_fu_1856_p3;
        else 
            grp_fu_767_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_767_p1_assign_proc : process(reg_900, largest_8_reg_2523, ap_CS_fsm_state15, largest_1_reg_2632, ap_CS_fsm_state58, ap_CS_fsm_state48, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_767_p1 <= largest_1_reg_2632;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_fu_767_p1 <= reg_900;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_767_p1 <= largest_8_reg_2523;
        else 
            grp_fu_767_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_771_p0_assign_proc : process(ap_CS_fsm_state15, d3_6_fu_1863_p3, tmp_2_i_i2_reg_2597, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_771_p0 <= tmp_2_i_i2_reg_2597;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_771_p0 <= d3_6_fu_1863_p3;
        else 
            grp_fu_771_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_771_p1_assign_proc : process(reg_900, largest_8_reg_2523, ap_CS_fsm_state15, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_771_p1 <= reg_900;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_771_p1 <= largest_8_reg_2523;
        else 
            grp_fu_771_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_780_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, ap_CS_fsm_state14, ap_CS_fsm_state41, ap_CS_fsm_state57, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_fu_780_opcode <= ap_const_lv5_1;
        elsif ((((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_780_opcode <= ap_const_lv5_2;
        else 
            grp_fu_780_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_780_p0_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, d1_4_fu_1366_p1, d1_4_reg_2394, largest_10_fu_1592_p1, largest_10_reg_2477, ap_CS_fsm_state14, largest_8_fu_1831_p3, ap_CS_fsm_state41, ap_CS_fsm_state57, largest_1_fu_2043_p3, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_780_p0 <= largest_10_reg_2477;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_780_p0 <= largest_1_fu_2043_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_780_p0 <= d1_4_reg_2394;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_780_p0 <= largest_8_fu_1831_p3;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_780_p0 <= largest_10_fu_1592_p1;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_780_p0 <= d1_4_fu_1366_p1;
        else 
            grp_fu_780_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_780_p1_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, d2_5_fu_1395_p1, ap_CS_fsm_state14, ap_CS_fsm_state41, ap_CS_fsm_state57, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_780_p1 <= ap_const_lv32_0;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_780_p1 <= d2_5_fu_1395_p1;
        else 
            grp_fu_780_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_784_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, ap_CS_fsm_state41, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            grp_fu_784_opcode <= ap_const_lv5_1;
        elsif ((((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_784_opcode <= ap_const_lv5_2;
        else 
            grp_fu_784_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_784_p0_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, d1_4_fu_1366_p1, d2_5_reg_2406, largest_10_fu_1592_p1, d3_reg_2485, ap_CS_fsm_state41, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_784_p0 <= d3_reg_2485;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_784_p0 <= d2_5_reg_2406;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_784_p0 <= largest_10_fu_1592_p1;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_784_p0 <= d1_4_fu_1366_p1;
        else 
            grp_fu_784_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_784_p1_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, largest_9_fu_1424_p1, d3_fu_1618_p1, ap_CS_fsm_state41, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            grp_fu_784_p1 <= ap_const_lv32_0;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_784_p1 <= d3_fu_1618_p1;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_784_p1 <= largest_9_fu_1424_p1;
        else 
            grp_fu_784_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_788_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_788_opcode <= ap_const_lv5_1;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_788_opcode <= ap_const_lv5_2;
        else 
            grp_fu_788_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_788_p0_assign_proc : process(ap_CS_fsm_state13, d1_4_fu_1366_p1, largest_9_reg_2419, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_788_p0 <= largest_9_reg_2419;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_788_p0 <= d1_4_fu_1366_p1;
        else 
            grp_fu_788_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_788_p1_assign_proc : process(ap_CS_fsm_state13, d3_7_fu_1453_p1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_788_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_788_p1 <= d3_7_fu_1453_p1;
        else 
            grp_fu_788_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_792_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2322, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_792_opcode <= ap_const_lv5_1;
        elsif (((select_ln486_1_reg_2322 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_792_opcode <= ap_const_lv5_2;
        else 
            grp_fu_792_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_792_p0_assign_proc : process(ap_CS_fsm_state13, d2_5_fu_1395_p1, d3_7_reg_2433, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_792_p0 <= d3_7_reg_2433;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_792_p0 <= d2_5_fu_1395_p1;
        else 
            grp_fu_792_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_792_p1_assign_proc : process(ap_CS_fsm_state13, d1_4_fu_1366_p1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_792_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_792_p1 <= d1_4_fu_1366_p1;
        else 
            grp_fu_792_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_804_p1 <= p_Result_26_fu_1358_p3;

    grp_fu_825_p0_assign_proc : process(ap_CS_fsm_state12, select_ln486_fu_1195_p3, select_ln486_reg_2317, ap_CS_fsm_state136)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state136)) then 
            grp_fu_825_p0 <= select_ln486_reg_2317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_825_p0 <= select_ln486_fu_1195_p3;
        else 
            grp_fu_825_p0 <= "XX";
        end if; 
    end process;

    grp_fu_825_p2 <= std_logic_vector(unsigned(grp_fu_825_p0) + unsigned(ap_const_lv2_3));
    icmp_ln179_1_fu_1486_p2 <= "1" when (trunc_ln189_2_fu_1354_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_2_fu_1498_p2 <= "0" when (tmp_14_fu_1470_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_3_fu_1504_p2 <= "1" when (trunc_ln189_3_fu_1383_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_4_fu_1526_p2 <= "0" when (tmp_16_fu_1516_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_5_fu_1532_p2 <= "1" when (trunc_ln189_4_fu_1412_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_6_fu_1554_p2 <= "0" when (tmp_18_fu_1544_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_7_fu_1560_p2 <= "1" when (trunc_ln189_5_fu_1441_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_fu_1480_p2 <= "0" when (tmp_13_fu_1460_p4 = ap_const_lv8_FF) else "1";
    icmp_ln189_1_fu_1639_p2 <= "1" when (trunc_ln189_fu_1580_p1 = ap_const_lv23_0) else "0";
    icmp_ln189_2_fu_1661_p2 <= "0" when (tmp_4_fu_1651_p4 = ap_const_lv8_FF) else "1";
    icmp_ln189_3_fu_1667_p2 <= "1" when (trunc_ln189_1_fu_1606_p1 = ap_const_lv23_0) else "0";
    icmp_ln189_fu_1633_p2 <= "0" when (tmp_1_fu_1623_p4 = ap_const_lv8_FF) else "1";
    icmp_ln201_1_fu_2079_p2 <= "1" when (trunc_ln201_fu_2069_p1 = ap_const_lv23_0) else "0";
    icmp_ln201_2_fu_1886_p2 <= "0" when (tmp_26_fu_1872_p4 = ap_const_lv8_FF) else "1";
    icmp_ln201_3_fu_1892_p2 <= "1" when (trunc_ln201_1_fu_1882_p1 = ap_const_lv23_0) else "0";
    icmp_ln201_fu_2073_p2 <= "0" when (tmp_11_fu_2059_p4 = ap_const_lv8_FF) else "1";
    icmp_ln459_1_fu_1023_p2 <= "1" when (phi_ln459_reg_352 = ap_const_lv2_3) else "0";
    icmp_ln459_fu_1017_p2 <= "1" when (phi_ln459_1_reg_364 = ap_const_lv2_3) else "0";
    icmp_ln460_1_fu_1061_p2 <= "1" when (phi_ln460_reg_375 = ap_const_lv2_3) else "0";
    icmp_ln460_fu_1055_p2 <= "1" when (phi_ln460_1_reg_387 = ap_const_lv2_3) else "0";
    icmp_ln471_fu_1067_p2 <= "1" when (r_0_i_reg_398 = ap_const_lv3_4) else "0";
    icmp_ln472_fu_1107_p2 <= "1" when (c_0_i_reg_410 = ap_const_lv3_4) else "0";
    icmp_ln474_fu_1119_p2 <= "1" when (r_0_i_reg_398 = c_0_i_reg_410) else "0";
    icmp_ln480_fu_1140_p2 <= "1" when (c12_0_i_reg_421 = ap_const_lv3_4) else "0";
    icmp_ln486_fu_1177_p2 <= "1" when (indvar_flatten_reg_432 = ap_const_lv4_C) else "0";
    icmp_ln490_1_fu_1210_p2 <= "1" when (add_ln513_1_fu_1204_p2 = ap_const_lv3_3) else "0";
    icmp_ln490_fu_1167_p2 <= "1" when (j_0_i_reg_443 = ap_const_lv3_3) else "0";
    icmp_ln498_fu_1189_p2 <= "1" when (i_0_i_reg_454 = ap_const_lv2_0) else "0";
    icmp_ln499_fu_1292_p2 <= "1" when (signed(zext_ln498_fu_1288_p1) > signed(select_ln486_2_fu_1244_p3)) else "0";
    icmp_ln511_fu_2113_p2 <= "1" when (ap_phi_mux_k_0_i_phi_fu_649_p4 = ap_const_lv3_4) else "0";
    icmp_ln513_fu_2125_p2 <= "1" when (unsigned(ap_phi_mux_k_0_i_phi_fu_649_p4) < unsigned(select_ln486_4_reg_2336)) else "0";
    icmp_ln519_fu_2169_p2 <= "1" when (ap_phi_mux_k13_0_i_phi_fu_660_p4 = ap_const_lv3_4) else "0";
    icmp_ln521_fu_2185_p2 <= "1" when (signed(zext_ln519_fu_2181_p1) < signed(add_ln521_1_reg_2711)) else "0";
    k_1_fu_2175_p2 <= std_logic_vector(unsigned(ap_phi_mux_k13_0_i_phi_fu_660_p4) + unsigned(ap_const_lv3_1));
    k_fu_2119_p2 <= std_logic_vector(unsigned(ap_phi_mux_k_0_i_phi_fu_649_p4) + unsigned(ap_const_lv3_1));
    largest_10_fu_1592_p1 <= p_Result_30_fu_1584_p3;
    largest_1_fu_2043_p3 <= 
        largest_10_reg_2477 when (and_ln189_fu_2037_p2(0) = '1') else 
        d3_reg_2485;
    largest_6_fu_1787_p3 <= 
        largest_9_reg_2419 when (and_ln189_2_fu_1775_p2(0) = '1') else 
        d3_7_reg_2433;
    largest_7_fu_1824_p3 <= 
        d1_4_reg_2394 when (and_ln179_1_fu_1715_p2(0) = '1') else 
        largest_6_fu_1787_p3;
    largest_8_fu_1831_p3 <= 
        d2_5_reg_2406 when (and_ln184_7_fu_1811_p2(0) = '1') else 
        largest_7_fu_1824_p3;
    largest_9_fu_1424_p1 <= p_Result_28_fu_1416_p3;
    or_ln179_1_fu_1510_p2 <= (icmp_ln179_3_fu_1504_p2 or icmp_ln179_2_fu_1498_p2);
    or_ln179_2_fu_1538_p2 <= (icmp_ln179_5_fu_1532_p2 or icmp_ln179_4_fu_1526_p2);
    or_ln179_3_fu_1566_p2 <= (icmp_ln179_7_fu_1560_p2 or icmp_ln179_6_fu_1554_p2);
    or_ln179_fu_1492_p2 <= (icmp_ln179_fu_1480_p2 or icmp_ln179_1_fu_1486_p2);
    or_ln189_1_fu_1673_p2 <= (icmp_ln189_3_fu_1667_p2 or icmp_ln189_2_fu_1661_p2);
    or_ln189_fu_1645_p2 <= (icmp_ln189_fu_1633_p2 or icmp_ln189_1_fu_1639_p2);
    or_ln201_1_fu_1898_p2 <= (icmp_ln201_3_fu_1892_p2 or icmp_ln201_2_fu_1886_p2);
    or_ln201_fu_2085_p2 <= (icmp_ln201_fu_2073_p2 or icmp_ln201_1_fu_2079_p2);
    p_Result_25_fu_1955_p3 <= (p_Result_s_fu_1948_p3 & ap_const_lv31_3F800000);
    p_Result_26_fu_1358_p3 <= (ap_const_lv1_0 & trunc_ln368_2_fu_1350_p1);
    p_Result_27_fu_1387_p3 <= (ap_const_lv1_0 & trunc_ln368_3_fu_1379_p1);
    p_Result_28_fu_1416_p3 <= (ap_const_lv1_0 & trunc_ln368_4_fu_1408_p1);
    p_Result_29_fu_1445_p3 <= (ap_const_lv1_0 & trunc_ln368_5_fu_1437_p1);
    p_Result_30_fu_1584_p3 <= (ap_const_lv1_0 & trunc_ln368_fu_1576_p1);
    p_Result_31_fu_1610_p3 <= (ap_const_lv1_0 & trunc_ln368_1_fu_1602_p1);
    p_Result_s_fu_1948_p3 <= p_Val2_39_reg_2389(31 downto 31);
    p_Val2_34_fu_1598_p1 <= Ri_M_imag_q1;
    p_Val2_36_fu_1375_p1 <= Ri_M_imag_q0;
    p_Val2_37_fu_1404_p1 <= Ri_M_real_q1;
    p_Val2_38_fu_1433_p1 <= Ri_M_imag_q1;
    p_Val2_39_fu_1346_p1 <= Ri_M_real_q0;
    p_Val2_s_fu_1572_p1 <= Ri_M_real_q1;
    r_fu_1073_p2 <= std_logic_vector(unsigned(r_0_i_reg_398) + unsigned(ap_const_lv3_1));
    select_ln486_1_fu_1216_p3 <= 
        icmp_ln490_1_fu_1210_p2 when (icmp_ln498_fu_1189_p2(0) = '1') else 
        icmp_ln490_fu_1167_p2;
    select_ln486_2_fu_1244_p3 <= 
        sub_ln499_fu_1232_p2 when (icmp_ln498_fu_1189_p2(0) = '1') else 
        sub_ln499_1_fu_1238_p2;
    select_ln486_3_fu_1252_p3 <= 
        add_ln513_1_fu_1204_p2 when (icmp_ln498_fu_1189_p2(0) = '1') else 
        j_0_i_reg_443;
    select_ln486_4_fu_1270_p3 <= 
        add_ln513_fu_1264_p2 when (icmp_ln498_fu_1189_p2(0) = '1') else 
        add_ln513_1_fu_1204_p2;
    select_ln486_fu_1195_p3 <= 
        ap_const_lv2_3 when (icmp_ln498_fu_1189_p2(0) = '1') else 
        i_0_i_reg_454;
    sub_ln499_1_fu_1238_p2 <= std_logic_vector(unsigned(j_0_i_reg_443) - unsigned(zext_ln499_fu_1173_p1));
    sub_ln499_fu_1232_p2 <= std_logic_vector(unsigned(add_ln513_1_fu_1204_p2) - unsigned(zext_ln499_1_fu_1224_p1));
    tmp_11_fu_2059_p4 <= bitcast_ln201_fu_2056_p1(30 downto 23);
    tmp_13_fu_1460_p4 <= p_Val2_39_fu_1346_p1(30 downto 23);
    tmp_14_fu_1470_p4 <= p_Val2_36_fu_1375_p1(30 downto 23);
    tmp_16_fu_1516_p4 <= p_Val2_37_fu_1404_p1(30 downto 23);
    tmp_18_fu_1544_p4 <= p_Val2_38_fu_1433_p1(30 downto 23);
    tmp_1_fu_1623_p4 <= p_Val2_s_fu_1572_p1(30 downto 23);
    tmp_26_fu_1872_p4 <= bitcast_ln201_1_fu_1869_p1(30 downto 23);
    tmp_3_fu_997_p3 <= (phi_ln459_reg_352 & phi_ln459_1_reg_364);
    tmp_4_fu_1651_p4 <= p_Val2_34_fu_1598_p1(30 downto 23);
    tmp_5_fu_1083_p3 <= (r_0_i_reg_398 & ap_const_lv2_0);
    tmp_7_fu_1298_p3 <= (grp_fu_825_p2 & ap_const_lv2_0);
    tmp_8_fu_1322_p3 <= (select_ln486_fu_1195_p3 & ap_const_lv2_0);
    tmp_9_fu_1035_p3 <= (phi_ln460_reg_375 & phi_ln460_1_reg_387);
    tmp_M_imag_2_fu_2022_p1 <= xor_ln155_fu_2016_p2;
    tmp_M_imag_4_fu_1977_p1 <= xor_ln155_1_fu_1971_p2;
    tmp_M_imag_6_fu_1992_p1 <= xor_ln155_2_fu_1986_p2;
    trunc_ln189_1_fu_1606_p1 <= p_Val2_34_fu_1598_p1(23 - 1 downto 0);
    trunc_ln189_2_fu_1354_p1 <= p_Val2_39_fu_1346_p1(23 - 1 downto 0);
    trunc_ln189_3_fu_1383_p1 <= p_Val2_36_fu_1375_p1(23 - 1 downto 0);
    trunc_ln189_4_fu_1412_p1 <= p_Val2_37_fu_1404_p1(23 - 1 downto 0);
    trunc_ln189_5_fu_1441_p1 <= p_Val2_38_fu_1433_p1(23 - 1 downto 0);
    trunc_ln189_fu_1580_p1 <= p_Val2_s_fu_1572_p1(23 - 1 downto 0);
    trunc_ln201_1_fu_1882_p1 <= bitcast_ln201_1_fu_1869_p1(23 - 1 downto 0);
    trunc_ln201_fu_2069_p1 <= bitcast_ln201_fu_2056_p1(23 - 1 downto 0);
    trunc_ln368_1_fu_1602_p1 <= p_Val2_34_fu_1598_p1(31 - 1 downto 0);
    trunc_ln368_2_fu_1350_p1 <= p_Val2_39_fu_1346_p1(31 - 1 downto 0);
    trunc_ln368_3_fu_1379_p1 <= p_Val2_36_fu_1375_p1(31 - 1 downto 0);
    trunc_ln368_4_fu_1408_p1 <= p_Val2_37_fu_1404_p1(31 - 1 downto 0);
    trunc_ln368_5_fu_1437_p1 <= p_Val2_38_fu_1433_p1(31 - 1 downto 0);
    trunc_ln368_fu_1576_p1 <= p_Val2_s_fu_1572_p1(31 - 1 downto 0);
    xor_ln155_1_fu_1971_p2 <= (bitcast_ln155_3_fu_1967_p1 xor ap_const_lv32_80000000);
    xor_ln155_2_fu_1986_p2 <= (bitcast_ln155_5_fu_1982_p1 xor ap_const_lv32_80000000);
    xor_ln155_fu_2016_p2 <= (bitcast_ln155_fu_2012_p1 xor ap_const_lv32_80000000);
    xor_ln179_fu_1793_p2 <= (ap_const_lv1_1 xor and_ln179_1_fu_1715_p2);
    xor_ln444_fu_2001_p2 <= (bitcast_ln444_fu_1997_p1 xor ap_const_lv32_80000000);
    xor_ln486_fu_1282_p2 <= (zext_ln486_1_fu_1278_p1 xor ap_const_lv32_FFFFFFFF);
    zext_ln1027_1_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1035_p3),64));
    zext_ln1027_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_997_p3),64));
    zext_ln1067_1_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1083_p3),6));
    zext_ln1067_2_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1067_fu_1095_p2),64));
    zext_ln1067_3_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_0_i_reg_410),6));
    zext_ln1067_4_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1067_1_fu_1129_p2),64));
    zext_ln1067_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_0_i_reg_398),6));
    zext_ln114_1_fu_2139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_fu_2134_p2),64));
    zext_ln114_2_fu_2150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_2_fu_2145_p2),64));
    zext_ln114_3_fu_2190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k13_0_i_phi_fu_660_p4),5));
    zext_ln114_4_fu_2199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_3_fu_2194_p2),64));
    zext_ln114_5_fu_2210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_4_fu_2205_p2),64));
    zext_ln114_fu_2130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k_0_i_phi_fu_649_p4),5));
    zext_ln482_1_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln482_fu_1156_p2),64));
    zext_ln482_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c12_0_i_reg_421),6));
    zext_ln486_1_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_3_fu_1252_p3),32));
    zext_ln486_fu_1228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_1_fu_1216_p3),3));
    zext_ln498_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_fu_1195_p3),3));
    zext_ln499_1_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln490_1_fu_1210_p2),3));
    zext_ln499_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln490_fu_1167_p2),3));
    zext_ln503_1_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln503_1_fu_1310_p2),64));
    zext_ln503_2_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1322_p3),5));
    zext_ln503_3_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln503_2_fu_1334_p2),64));
    zext_ln503_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1298_p3),5));
    zext_ln513_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_3_fu_1252_p3),5));
    zext_ln519_fu_2181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k13_0_i_phi_fu_660_p4),32));
    zext_ln521_fu_2160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln521_fu_2156_p2),32));
end behav;
