# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 106
set hasByteEnable 0
set MemName music_temp_array
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 361
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "00111001111110100000110000110001" "00111001111110100000110010111011" "00111001111110100000111010011100" "00111001111110100001000111010100" "00111001111110100001011010000111" "00111001111110100001110011010110" "00111001111110100010010011000001" "00111001111110100010111011110100" "00111001111110100011101101001110" "00111001111110100100101000110011" "00111001111110100101110000001101" "00111001111110100111000100100000" "00111001111110101000100110110000" "00111001111110101010011000100100" "00111001111110101100011011000001" "00111001111110101110101110101010" "00111001111110110001010101000110" "00111001111110110100001110110110" "00111001111110110111011011111100" "00111001111110111010111100111000" "00111001111110111110110001001010" "00111001111111000010110111101100" "00111001111111000111010001000000" "00111001111111001011111100000011" "00111001111111010000110111101110" "00111001111111010110000100100101" "00111001111111011011100001000001" "00111001111111100001001110000110" "00111001111111100111001101111101" "00111001111111101101100001101011" "00111001111111110100001101000010" "00111001111111111011010011001110" "00111010000000000001011100010010" "00111010000000000101100001001100" "00111010000000001001111001011100" "00111010000000001110100110010111" "00111010000000010011100111111100" "00111010000000011000111011110010" "00111010000000011110011100100000" "00111010000000100100000010111000" "00111010000000101001100010110010" "00111010000000101110101101100000" "00111010000000110011010000011111" "00111010000000110110110110110011" "00111010000000111001001010011100" "00111010000000111001110101011001" "00111010000000111000100100110111" "00111010000000110101001010010111" "00111010000000101111011111001010" "00111010000000100111100101001010" "00111010000000011101100111000110" "00111010000000010001111001111001" "00111010000000000100111010100011" "00111001111111101110011000011100" "00111001111111010010101100110001" "00111001111110111000000010000011" "00111001111110011111100110001001" "00111001111110001010100000011101" "00111001111101111001101101000110" "00111001111101101101111010010001" "00111001111101100111100111100111" "00111001111101100111000100001011" "00111001111101101100001011101010" "00111001111101110110100111100010" "00111001111110000101101101111010" "00111001111110011000100101010101" "00111001111110101110001001100111" "00111001111111000101010011111011" "00111001111111011101001011010100" "00111001111111110101010001110000" "00111010000000000110110110110101" "00111010000000010011101010111001" "00111010000000100001110011010000" "00111010000000110010001000110100" "00111010000001000101011101110001" "00111010000001011100001000001000" "00111010000001110101101100001111" "00111010000010010000101010010001" "00111010000010101010010111010000" "00111010000010111111001100110101" "00111010000011001011010000000011" "00111010000011001011010001011001" "00111010000010111101101011111011" "00111010000010100011001011011011" "00111010000001111110100010101000" "00111010000001010011110011110100" "00111010000000100111001001110010" "00111001111111110111110010110100" "00111001111110101000001000001001" "00111001111101100000110111011011" "00111001111100100010000001001100" "00111001111011101011010001100100" "00111001111010111100111111000111" "00111001111010011000100101000110" "00111001111010000000000011010010" "00111001111001110100110010110011" "00111001111001110110001110100111" "00111001111010000000110101110000" "00111001111010001110010001010010" "00111001111010010110111110000001" "00111001111010010101001101010001" "00111001111010001000001111010001" "00111001111001110101101101010101" "00111001111001101000010001110011" "00111001111001101011111010010000" "00111001111010001001101000111011" "00111001111011000100000110011000" "00111001111100010101011010110100" "00111001111101101111010110000100" "00111001111110111110110000101000" "00111001111111110010111011111101" "00111010000000000010101001100101" "00111001111111111100011111111111" "00111001111111101000000010000010" "00111001111111010111110011001100" "00111001111111010101000111011000" "00111001111111011111110111101010" "00111001111111110000001111101000" "00111001111111111011100000000111" "00111001111111111001110000111110" "00111001111111101001101111100011" "00111001111111010000001101110110" "00111001111110110100010001100010" "00111001111110011011011001001011" "00111001111110000111111110010100" "00111001111101111010110101000011" "00111001111101110101101111101101" "00111001111101111100111111000001" "00111001111110010110000111011111" "00111001111111000100101010000011" "00111010000000000011000100001010" "00111010000000100111111101110111" "00111010000001001000011110100000" "00111010000001011011111010001010" "00111010000001011101100101100010" "00111010000001001111010001010111" "00111010000000110111111101111100" "00111010000000100000001110100110" "00111010000000001110101011011101" "00111010000000000110010011001000" "00111010000000000110010001010000" "00111010000000001010101011101001" "00111010000000001101101001001010" "00111010000000001001000110001011" "00111001111111110010110110000011" "00111001111110111111111010101101" "00111001111110000111001010001111" "00111001111101011100101100100110" "00111001111101010010100011100001" "00111001111101110000011010010000" "00111001111110101110001100010011" "00111001111111110100001000001100" "00111010000000010001110001000010" "00111010000000010011111001101010" "00111010000000000001111100011111" "00111001111111001110100000010101" "00111001111110100000010101011001" "00111001111110000011111111110110" "00111001111101110010011000011010" "00111001111101011011010100100011" "00111001111100110100100101010010" "00111001111100000011111000110000" "00111001111011011010110111111111" "00111001111011001001011011110101" "00111001111011010010011001001101" "00111001111011101010100110101000" "00111001111100000011000000111010" "00111001111100010111001101101101" "00111001111100110011011101010110" "00111001111101101010011100000000" "00111001111111000001011100011011" "00111010000000010000011001110010" "00111010000000101011110101000101" "00111010000000011110111001100000" "00111001111111011101101011100010" "00111001111101110101000001100010" "00111001111101001010110101100111" "00111001111110001010100100001101" "00111010000000011010011010100011" "00111010000010001011111110111110" "00111010000011101011111100110001" "00111010000100010000011100101100" "00111010000011110101100001000101" "00111010000010111100011001110010" "00111010000010001011000111001000" "00111010000001110111010011000011" "00111010000010001010100001100011" "00111010000011010011100101101101" "00111010000101111010101011010111" "00111010001011011011110000100010" "00111010010111001011100001010010" "00111010101001010000001000000011" "00111011001000100100011010111100" "00111100000011100110111000000010" "00111101110110110100010101101011" "00111100000100001110001100011100" "00111011001010011111110100111111" "00111010101100010001001100001000" "00111010011100010101001000010010" "00111010001111111110110001111011" "00111010001001110011011101100111" "00111010000110001110101011110011" "00111010000011101100011111101011" "00111010000001100110100101110111" "00111001111111101101001111111101" "00111001111100111110110010001000" "00111001111011000000000100101100" "00111001111001100101100111000100" "00111001111000100100101100110001" "00111001110111111101100011001100" "00111001110111111011100101100100" "00111001111000101011111110110001" "00111001111010010001101000100100" "00111001111100011101100101001100" "00111001111110110001000100111111" "00111010000000010110011101011010" "00111010000001000010100101100111" "00111010000001100010010011100001" "00111010000001111100011100011010" "00111010000010001100111111111011" "00111010000010000010101111111000" "00111010000001001100101101010110" "00111001111111011011110101111101" "00111001111100000010010111100101" "00111001111001001111101110011000" "00111001110111110000111100010001" "00111001110111110010011111000011" "00111001111001000001111010101100" "00111001111010110010001000011010" "00111001111100001010011001111001" "00111001111100100110011110010001" "00111001111100010000000110011100" "00111001111011110011011101100011" "00111001111011111011100001011111" "00111001111100110111101010010100" "00111001111110010011100100110100" "00111001111111011111100011010000" "00111001111111101100100001110010" "00111001111110110000011111111100" "00111001111101001111111101101000" "00111001111100000001110100001001" "00111001111011101110011101000011" "00111001111100100001000101000100" "00111001111110000110000011111010" "00111001111111110000110111010110" "00111010000000010111010100101101" "00111010000000010010001001001100" "00111001111111011111101000101000" "00111001111110001000111111110100" "00111001111101000101010111100100" "00111001111100100011011010010100" "00111001111100011000101011000111" "00111001111100001010001010010101" "00111001111011011101000111010101" "00111001111010001001011000110101" "00111001111000100000010110101010" "00111001110111000011000011100101" "00111001110110010010000101010101" "00111001110110100011101111111111" "00111001111000000001011000100010" "00111001111010100110100010111111" "00111001111101111111001000111111" "00111010000000110011010001110101" "00111010000010010111000101010000" "00111010000011010111000111111111" "00111010000011101100000011110000" "00111010000011011100110101100110" "00111010000010111000000100011111" "00111010000010001011100010110010" "00111010000001011111110000010100" "00111010000000110111110110111101" "00111010000000010011110101010111" "00111001111111100101110110111110" "00111001111110101010010110111101" "00111001111101110111100101010001" "00111001111101010001001111001111" "00111001111100111010100010011110" "00111001111100110100110011001111" "00111001111100111110111110011110" "00111001111101010110000110000101" "00111001111101110110011000100000" "00111001111110011100101010110010" "00111001111111000111011011001101" "00111001111111110111001000111100" "00111010000000010110111000100001" "00111010000000110110110110100010" "00111010000001011100010010100110" "00111010000010000111010000111110" "00111010000010110111000110110000" "00111010000011101010110101111010" "00111010000100100010000010110010" "00111010000101011101110010011000" "00111010000110100001100010101100" "00111010000111110011101100110011" "00111010001001011101110011101011" "00111010001011101100110101110111" "00111010001110110001110110010010" "00111010010011000011011010011100" "00111010011001000000010110110101" "00111010100000101001110101100101" "00111010100110011100101011000010" "00111010101110100000100001111010" "00111010111001100001110001111111" "00111011000011111011000010001101" "00111011001100001000010101101110" "00111011010011001011100111010111" "00111011010101101101101010011000" "00111011010010010011101011110010" "00111011001011001100011001000111" "00111011000011100001011011011010" "00111010111001111101001010111000" "00111010101111110100111100001011" "00111010101000010001001000001001" "00111010100010101011000001001000" "00111010011101000001111101110111" "00111010010110110011011111111101" "00111010010010000110011100001100" "00111010001110100001001000100100" "00111010001011110001010001110111" "00111010001001101001101000001000" "00111010001000000000011110001100" "00111010000110101110100010110101" "00111010000101101110010101111001" "00111010000100111011101001110110" "00111010000100010011001111001101" "00111010000011110010100110001111" "00111010000011010111110100100011" "00111010000011000001011101010000" "00111010000010101110011011010111" "00111010000010011101111011010101" "00111010000010001111011001001101" "00111010000010000010011010101011" "00111010000001110110101100111011" "00111010000001101100000011010111" "00111010000001100010010101001001" "00111010000001011001011010111111" "00111010000001010001010000000100" "00111010000001001001110000000111" "00111010000001000010110111000100" "00111010000000111100100001101110" "00111010000000110110101100100110" "00111010000000110001010101000000" "00111010000000101100010111111111" "00111010000000100111110011011001" "00111010000000100011100100110011" "00111010000000011111101010010111" "00111010000000011100000010111101" "00111010000000011000101101000001" "00111010000000010101100111111111" "00111010000000010010110011010101" "00111010000000010000001101101101" "00111010000000001101111000001100" "00111010000000001011110001111110" "00111010000000001001111010110010" "00111010000000001000010011011100" "00111010000000000110111011011001" "00111010000000000101110011011101" "00111010000000000100111011000101" "00111010000000000100010010110100" "00111010000000000011111010101010" "00111010000000000011110010100110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 107
set hasByteEnable 0
set MemName music_FFT_Buffer_re
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 32
set AddrRange 1024
set AddrWd 10
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 108
set hasByteEnable 0
set MemName music_FFT_out_re
set CoreName ap_simcore_mem
set PortList { 2 0 }
set DataWd 32
set AddrRange 1024
set AddrWd 10
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

set axilite_register_dict [dict create]
set port_AXILiteS {
ap_start { }
ap_done { }
ap_ready { }
ap_idle { }
ap_return { 
	dir o
	width 32
	depth 1
	mode ap_ctrl_hs
	offset 16
	offset_end 0
}
data_re { 
	dir I
	width 32
	depth 1
	mode ap_none
	offset 24
	offset_end 31
}
data_im { 
	dir I
	width 32
	depth 1
	mode ap_none
	offset 32
	offset_end 39
}
}
dict set axilite_register_dict AXILiteS $port_AXILiteS


# Native S_AXILite:
if {${::AESL::PGuard_simmodel_gen}} {
	if {[info proc ::AESL_LIB_XILADAPTER::s_axilite_gen] == "::AESL_LIB_XILADAPTER::s_axilite_gen"} {
		eval "::AESL_LIB_XILADAPTER::s_axilite_gen { \
			id 109 \
			corename music_AXILiteS_axilite \
			name music_AXILiteS_s_axi \
			ports {$port_AXILiteS} \
			op interface \
			is_flushable 0 \ 
		} "
	} else {
		puts "@W \[IMPL-110\] Cannot find AXI Lite interface model in the library. Ignored generation of AXI Lite  interface for 'AXILiteS'"
	}
}

if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler music_AXILiteS_s_axi
}

# Native M_AXI:
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::m_axi_gen] == "::AESL_LIB_XILADAPTER::m_axi_gen"} {
eval "::AESL_LIB_XILADAPTER::m_axi_gen { \
    id 110 \
    corename {m_axi} \
    op interface \
    max_latency -1 \ 
    delay_budget 8.75 \ 
    is_flushable 0 \ 
    name {music_data_m_axi} \
} "
} else {
puts "@W \[IMPL-110\] Cannot find AXI interface model in the library. Ignored generation of AXI interface for 'data'"
}
}

if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler music_data_m_axi
}

# Native AXIS:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::native_axis_add] == "::AESL_LIB_XILADAPTER::native_axis_add"} {
eval "::AESL_LIB_XILADAPTER::native_axis_add { \
    id 111 \
    name P_sm_data \
    reset_level 0 \
    sync_rst true \
    corename {P_sm} \
    metadata {  } \
    op interface \
    ports { P_sm_TDATA { O 32 vector } P_sm_TREADY { I 1 bit } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'P_sm_data'"
}
}


# Native AXIS:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::native_axis_add] == "::AESL_LIB_XILADAPTER::native_axis_add"} {
eval "::AESL_LIB_XILADAPTER::native_axis_add { \
    id 112 \
    name P_sm_user_V \
    reset_level 0 \
    sync_rst true \
    corename {P_sm} \
    metadata {  } \
    op interface \
    ports { P_sm_TUSER { O 1 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'P_sm_user_V'"
}
}


# Native AXIS:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::native_axis_add] == "::AESL_LIB_XILADAPTER::native_axis_add"} {
eval "::AESL_LIB_XILADAPTER::native_axis_add { \
    id 113 \
    name P_sm_last_V \
    reset_level 0 \
    sync_rst true \
    corename {P_sm} \
    metadata {  } \
    op interface \
    ports { P_sm_TVALID { O 1 bit } P_sm_TLAST { O 1 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'P_sm_last_V'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_return \
    type ap_return \
    reset_level 0 \
    sync_rst true \
    corename ap_return \
    op interface \
    ports { ap_return { O 32 vector } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 0 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst_n
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 0 \
    sync_rst true \
    corename apif_ap_rst_n \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


