-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity qrf_top_Loop_1_proc3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Qi_M_real_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_real_ce0 : OUT STD_LOGIC;
    Qi_M_real_we0 : OUT STD_LOGIC;
    Qi_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_real_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_real_ce1 : OUT STD_LOGIC;
    Qi_M_real_we1 : OUT STD_LOGIC;
    Qi_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_imag_ce0 : OUT STD_LOGIC;
    Qi_M_imag_we0 : OUT STD_LOGIC;
    Qi_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Qi_M_imag_ce1 : OUT STD_LOGIC;
    Qi_M_imag_we1 : OUT STD_LOGIC;
    Qi_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Qi_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_real_ce0 : OUT STD_LOGIC;
    Ri_M_real_we0 : OUT STD_LOGIC;
    Ri_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_real_ce1 : OUT STD_LOGIC;
    Ri_M_real_we1 : OUT STD_LOGIC;
    Ri_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_imag_ce0 : OUT STD_LOGIC;
    Ri_M_imag_we0 : OUT STD_LOGIC;
    Ri_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    Ri_M_imag_ce1 : OUT STD_LOGIC;
    Ri_M_imag_we1 : OUT STD_LOGIC;
    Ri_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Ri_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_M_real_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_M_real_ce0 : OUT STD_LOGIC;
    A_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_M_imag_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_M_imag_ce0 : OUT STD_LOGIC;
    A_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of qrf_top_Loop_1_proc3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage3 : STD_LOGIC_VECTOR (66 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (66 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (66 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (66 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (66 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (66 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_3F800000 : STD_LOGIC_VECTOR (30 downto 0) := "0111111100000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal c12_0_i_reg_421 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_0_i_reg_645 : STD_LOGIC_VECTOR (2 downto 0);
    signal k13_0_i_reg_656 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_863 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_state60_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state64_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_state68_pp2_stage1_iter2 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal icmp_ln511_reg_2628 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln513_reg_2637 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_871 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_879 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_889 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state61_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state65_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage3 : signal is "none";
    signal ap_block_state62_pp2_stage3_iter0 : BOOLEAN;
    signal ap_block_state66_pp2_stage3_iter1 : BOOLEAN;
    signal ap_block_pp2_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state59_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state63_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state67_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln513_reg_2637_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state72_pp3_stage2_iter0 : BOOLEAN;
    signal ap_block_state76_pp3_stage2_iter1 : BOOLEAN;
    signal ap_block_pp3_stage2_11001 : BOOLEAN;
    signal icmp_ln519_reg_2670 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln521_reg_2679 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage3 : signal is "none";
    signal ap_block_state73_pp3_stage3_iter0 : BOOLEAN;
    signal ap_block_state77_pp3_stage3_iter1 : BOOLEAN;
    signal ap_block_pp3_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_state70_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state74_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state78_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_block_state71_pp3_stage1_iter0 : BOOLEAN;
    signal ap_block_state75_pp3_stage1_iter1 : BOOLEAN;
    signal ap_block_state79_pp3_stage1_iter2 : BOOLEAN;
    signal ap_block_pp3_stage1_11001 : BOOLEAN;
    signal icmp_ln521_reg_2679_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_931 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal grp_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_723_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_961 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_966 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_971 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal add_ln459_fu_992_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln459_reg_2254 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln459_1_fu_1012_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln460_fu_1030_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln460_reg_2270 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln460_1_fu_1050_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln471_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal r_fu_1074_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_reg_2290 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1067_1_fu_1092_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1067_1_reg_2295 : STD_LOGIC_VECTOR (5 downto 0);
    signal Qi_M_real_addr_1_reg_2301 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_1_reg_2306 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_2_fu_1114_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln480_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln480_reg_2322 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal c_fu_1147_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln482_1_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln482_1_reg_2331 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln486_fu_1184_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln486_reg_2350 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal select_ln486_fu_1196_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln486_reg_2355 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln486_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln486_1_fu_1217_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln486_1_reg_2360 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln486_fu_1229_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln486_reg_2364 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_3_fu_1253_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_3_reg_2369 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_4_fu_1271_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln486_4_reg_2374 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln486_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln486_reg_2379 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln498_fu_1289_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln498_reg_2384 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln499_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln503_fu_1307_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln503_reg_2393 : STD_LOGIC_VECTOR (4 downto 0);
    signal Ri_M_real_addr_2_reg_2399 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_2_reg_2405 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln503_2_fu_1331_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln503_2_reg_2411 : STD_LOGIC_VECTOR (4 downto 0);
    signal Ri_M_real_addr_3_reg_2417 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_3_reg_2422 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_39_fu_1347_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_39_reg_2427 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_fu_1367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_reg_2432 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_5_fu_1396_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_5_reg_2437 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_9_fu_1425_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_9_reg_2442 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_7_fu_1454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_7_reg_2447 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln179_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_reg_2452 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_1_fu_1511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_1_reg_2457 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_2_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_2_reg_2462 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_3_fu_1591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_3_reg_2467 : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_3_fu_1735_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_2472 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_fu_1751_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_reg_2477 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_6_fu_1767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_6_reg_2482 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_8_fu_1783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_8_reg_2487 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln201_1_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_1_reg_2495 : STD_LOGIC_VECTOR (0 downto 0);
    signal largest_10_fu_1854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_10_reg_2499 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_fu_1880_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_reg_2504 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln189_fu_1907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln189_reg_2509 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln189_1_fu_1935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln189_1_reg_2514 : STD_LOGIC_VECTOR (0 downto 0);
    signal largest_1_fu_1959_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_1_reg_2519 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_1_fu_1968_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_1_reg_2526 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln201_fu_2012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_reg_2531 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x3_1_reg_2535 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal and_ln284_2_fu_2050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_2_reg_2546 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal c_tmp_M_real_fu_2071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_729_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_735_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_i_reg_2575 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal tmp_4_i_i_reg_2580 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_i_reg_2588 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_681_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_i2_reg_2593 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_i2_reg_2598 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal and_ln306_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln306_reg_2608 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal tmp_2_i_i1_reg_2612 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal tmp_4_i_i1_reg_2617 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_i1_reg_2623 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln511_fu_2151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_2157_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2632 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln513_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln513_reg_2637_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Ri_M_real_addr_4_reg_2641 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_4_reg_2641_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_5_reg_2647 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_5_reg_2647_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_real_addr_5_reg_2647_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_4_reg_2653 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_4_reg_2653_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_5_reg_2659 : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_5_reg_2659_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Ri_M_imag_addr_5_reg_2659_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln521_1_fu_2202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln521_1_reg_2665 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal icmp_ln519_fu_2207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_fu_2213_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_2674 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln521_fu_2223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln521_reg_2679_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Qi_M_real_addr_3_reg_2683 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_3_reg_2683_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_4_reg_2689 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_4_reg_2689_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_real_addr_4_reg_2689_pp3_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_3_reg_2694 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_3_reg_2694_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_4_reg_2700 : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_4_reg_2700_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal Qi_M_imag_addr_4_reg_2700_pp3_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_t_real_2_reg_2705 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_t_imag_2_reg_2711 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_t_real_3_reg_2717 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_t_imag_3_reg_2723 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_858_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state59 : STD_LOGIC;
    signal ap_block_pp2_stage3_subdone : BOOLEAN;
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state70 : STD_LOGIC;
    signal ap_block_pp3_stage3_subdone : BOOLEAN;
    signal ap_block_pp3_stage1_subdone : BOOLEAN;
    signal phi_ln459_reg_352 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln459_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln459_1_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln459_1_reg_364 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_ln460_reg_375 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln460_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_1_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln460_1_reg_387 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_0_i_reg_398 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal c_0_i_reg_410 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln472_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_432 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_i_reg_443 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_i_reg_454 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sqrt_mag_a_mag_b_reg_465 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_real_1_phi_fu_480_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_1_reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_3_reg_486 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_real_2_phi_fu_501_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_2_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tmp_M_imag_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_M_real_phi_fu_523_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_tmp_M_imag_2_reg_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal mag_M_real_reg_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_f_assign_phi_fu_544_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_2_fu_2130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_5_reg_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_6_reg_563 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_3_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_6_fu_2100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_5_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln444_1_fu_2115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_3_reg_597 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_imag_2_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_4_fu_2085_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_r_M_real_2_reg_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_mag_M_real_phi_fu_637_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_k_0_i_phi_fu_649_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_k13_0_i_phi_fu_660_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln1027_fu_1006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1027_1_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1067_2_fu_1102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1067_4_fu_1135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln474_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln503_1_fu_1317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln503_3_fu_1341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_1_fu_2177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_2_fu_2188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_4_fu_2237_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_5_fu_2248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage2 : BOOLEAN;
    signal ap_block_pp3_stage1 : BOOLEAN;
    signal ap_block_pp3_stage3 : BOOLEAN;
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal ap_block_pp2_stage3 : BOOLEAN;
    signal grp_fu_667_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_fu_671_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_677_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_694_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_fu_699_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_704_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_717_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_717_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_723_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_784_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_784_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_fu_788_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_792_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_792_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_807_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_811_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_819_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal grp_fu_858_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_998_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_1036_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_1084_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1067_fu_1080_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1067_fu_1096_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1067_3_fu_1126_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1067_1_fu_1130_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln482_fu_1153_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln482_fu_1157_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln490_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln498_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln513_1_fu_1205_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln490_1_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln499_1_fu_1225_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln499_fu_1174_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln499_fu_1233_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln499_1_fu_1239_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln513_fu_1265_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln486_1_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln486_2_fu_1245_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_1299_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln513_fu_1261_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln503_1_fu_1311_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_1323_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln503_2_fu_1335_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln368_2_fu_1351_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_26_fu_1359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_36_fu_1376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_3_fu_1380_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_27_fu_1388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_37_fu_1405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_4_fu_1409_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_28_fu_1417_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_38_fu_1434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_5_fu_1438_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_29_fu_1446_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1461_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_2_fu_1355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_1_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1471_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_3_fu_1384_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_3_fu_1505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_2_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1529_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_4_fu_1413_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_5_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_4_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_3_fu_1557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1569_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_5_fu_1442_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln179_7_fu_1585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_6_fu_1579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_5_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_4_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_6_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_7_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_2_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_1_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_3_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_6_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_5_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_7_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_8_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_4_fu_1651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_2_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_1_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_2_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_4_fu_1645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln179_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_6_fu_1723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_5_fu_1717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln184_7_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_fu_1703_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_fu_1743_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_4_fu_1687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal d3_5_fu_1759_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_6_fu_1695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal largest_7_fu_1775_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln201_1_fu_1792_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1796_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln201_1_fu_1806_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln201_3_fu_1816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln201_2_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_1_fu_1822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_fu_1838_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_30_fu_1846_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_34_fu_1860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln368_1_fu_1864_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_31_fu_1872_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1885_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_fu_1842_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln189_1_fu_1901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1913_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_1_fu_1868_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln189_3_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_2_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_1_fu_1941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_3_fu_1947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln189_fu_1953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln201_fu_1976_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1980_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln201_fu_1990_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln201_1_fu_2000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln201_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_1_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_3_fu_2028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_4_fu_2033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_6_fu_2044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln284_5_fu_2038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_2056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_25_fu_2063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln155_3_fu_2075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln155_1_fu_2079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln155_5_fu_2090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln155_2_fu_2094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln444_fu_2105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln444_fu_2109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln155_fu_2120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln155_fu_2124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln306_1_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln306_2_fu_2140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln114_fu_2168_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_fu_2172_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_2_fu_2183_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln521_fu_2194_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln521_fu_2198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln519_fu_2219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln114_3_fu_2228_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_3_fu_2232_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln114_4_fu_2243_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_667_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp2_stage1_00001 : BOOLEAN;
    signal ap_block_pp3_stage1_00001 : BOOLEAN;
    signal ap_block_pp2_stage2_00001 : BOOLEAN;
    signal ap_block_pp2_stage3_00001 : BOOLEAN;
    signal ap_block_pp2_stage0_00001 : BOOLEAN;
    signal ap_block_pp3_stage2_00001 : BOOLEAN;
    signal ap_block_pp3_stage3_00001 : BOOLEAN;
    signal ap_block_pp3_stage0_00001 : BOOLEAN;
    signal grp_fu_671_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_677_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_807_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_811_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_815_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_819_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (66 downto 0);
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_block_pp3_stage2_subdone : BOOLEAN;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component music_faddfsub_32jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fadd_32ns_3kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fsub_32ns_3lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fmul_32ns_3mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fdiv_32ns_3ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component music_fcmp_32ns_3ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component music_fsqrt_32ns_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    music_faddfsub_32jbC_U21 : component music_faddfsub_32jbC
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_667_p0,
        din1 => grp_fu_667_p1,
        opcode => grp_fu_667_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_667_p2);

    music_faddfsub_32jbC_U22 : component music_faddfsub_32jbC
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_671_p0,
        din1 => grp_fu_671_p1,
        opcode => grp_fu_671_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_671_p2);

    music_faddfsub_32jbC_U23 : component music_faddfsub_32jbC
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_677_p0,
        din1 => grp_fu_677_p1,
        opcode => grp_fu_677_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_677_p2);

    music_fadd_32ns_3kbM_U24 : component music_fadd_32ns_3kbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_729_p2,
        din1 => grp_fu_735_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_681_p2);

    music_fsub_32ns_3lbW_U25 : component music_fsub_32ns_3lbW
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_741_p2,
        din1 => grp_fu_747_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_685_p2);

    music_fmul_32ns_3mb6_U26 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_694_p0,
        din1 => grp_fu_694_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_694_p2);

    music_fmul_32ns_3mb6_U27 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_699_p0,
        din1 => grp_fu_699_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_699_p2);

    music_fmul_32ns_3mb6_U28 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_704_p0,
        din1 => grp_fu_704_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_704_p2);

    music_fmul_32ns_3mb6_U29 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_717_p0,
        din1 => grp_fu_717_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_717_p2);

    music_fmul_32ns_3mb6_U30 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_723_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_723_p2);

    music_fmul_32ns_3mb6_U31 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_879,
        din1 => ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4,
        ce => ap_const_logic_1,
        dout => grp_fu_729_p2);

    music_fmul_32ns_3mb6_U32 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_889,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_735_p2);

    music_fmul_32ns_3mb6_U33 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_889,
        din1 => ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4,
        ce => ap_const_logic_1,
        dout => grp_fu_741_p2);

    music_fmul_32ns_3mb6_U34 : component music_fmul_32ns_3mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_879,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_747_p2);

    music_fdiv_32ns_3ncg_U35 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_784_p0,
        din1 => grp_fu_784_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_784_p2);

    music_fdiv_32ns_3ncg_U36 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_788_p0,
        din1 => grp_fu_788_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_788_p2);

    music_fdiv_32ns_3ncg_U37 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_792_p0,
        din1 => grp_fu_792_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_792_p2);

    music_fdiv_32ns_3ncg_U38 : component music_fdiv_32ns_3ncg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_7_i_i2_reg_2598,
        din1 => tmp_4_i_i_reg_2580,
        ce => ap_const_logic_1,
        dout => grp_fu_799_p2);

    music_fcmp_32ns_3ocq_U39 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_807_p0,
        din1 => grp_fu_807_p1,
        opcode => grp_fu_807_opcode,
        dout => grp_fu_807_p2);

    music_fcmp_32ns_3ocq_U40 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_811_p0,
        din1 => grp_fu_811_p1,
        opcode => grp_fu_811_opcode,
        dout => grp_fu_811_p2);

    music_fcmp_32ns_3ocq_U41 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_815_p0,
        din1 => grp_fu_815_p1,
        opcode => grp_fu_815_opcode,
        dout => grp_fu_815_p2);

    music_fcmp_32ns_3ocq_U42 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_819_p0,
        din1 => grp_fu_819_p1,
        opcode => grp_fu_819_opcode,
        dout => grp_fu_819_p2);

    music_fcmp_32ns_3ocq_U43 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => d2_5_fu_1396_p1,
        din1 => largest_9_fu_1425_p1,
        opcode => ap_const_lv5_2,
        dout => tmp_21_fu_823_p2);

    music_fcmp_32ns_3ocq_U44 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => d2_5_fu_1396_p1,
        din1 => d3_7_fu_1454_p1,
        opcode => ap_const_lv5_2,
        dout => tmp_22_fu_827_p2);

    music_fcmp_32ns_3ocq_U45 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => largest_9_fu_1425_p1,
        din1 => d1_4_fu_1367_p1,
        opcode => ap_const_lv5_2,
        dout => tmp_23_fu_831_p2);

    music_fcmp_32ns_3ocq_U46 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => largest_9_fu_1425_p1,
        din1 => d2_5_fu_1396_p1,
        opcode => ap_const_lv5_2,
        dout => tmp_24_fu_835_p2);

    music_fcmp_32ns_3ocq_U47 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => largest_9_fu_1425_p1,
        din1 => d3_7_fu_1454_p1,
        opcode => ap_const_lv5_2,
        dout => tmp_25_fu_839_p2);

    music_fcmp_32ns_3ocq_U48 : component music_fcmp_32ns_3ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => largest_8_fu_1783_p3,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_1,
        dout => tmp_27_fu_843_p2);

    music_fsqrt_32ns_pcA_U49 : component music_fsqrt_32ns_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => reg_931,
        ce => ap_const_logic_1,
        dout => grp_fu_852_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln486_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state59) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp2_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state70) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3)))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c12_0_i_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                c12_0_i_reg_421 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln480_fu_1141_p2 = ap_const_lv1_0))) then 
                c12_0_i_reg_421 <= c_fu_1147_p2;
            end if; 
        end if;
    end process;

    c_0_i_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then 
                c_0_i_reg_410 <= c_2_fu_1114_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln471_fu_1068_p2 = ap_const_lv1_0))) then 
                c_0_i_reg_410 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_0_i_reg_454 <= ap_const_lv2_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                i_0_i_reg_454 <= grp_fu_858_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvar_flatten_reg_432 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                indvar_flatten_reg_432 <= add_ln486_reg_2350;
            end if; 
        end if;
    end process;

    j_0_i_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln471_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                j_0_i_reg_443 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
                j_0_i_reg_443 <= select_ln486_3_reg_2369;
            end if; 
        end if;
    end process;

    k13_0_i_reg_656_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln519_reg_2670 = ap_const_lv1_0))) then 
                k13_0_i_reg_656 <= k_1_reg_2674;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                k13_0_i_reg_656 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    k_0_i_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln511_reg_2628 = ap_const_lv1_0))) then 
                k_0_i_reg_645 <= k_reg_2632;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                k_0_i_reg_645 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    mag_M_real_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln201_fu_2012_p2) and (select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                mag_M_real_reg_632 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (ap_const_lv1_0 = and_ln201_reg_2531))) then 
                mag_M_real_reg_632 <= grp_fu_694_p2;
            end if; 
        end if;
    end process;

    p_r_M_imag_2_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_imag_2_reg_609 <= tmp_M_imag_4_fu_2085_p1;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_imag_2_reg_609 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_imag_3_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_imag_3_reg_575 <= tmp_M_imag_6_fu_2100_p1;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_imag_3_reg_575 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_imag_5_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_imag_5_reg_552 <= ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_imag_5_reg_552 <= tmp_M_imag_2_fu_2130_p1;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_2_reg_620_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_real_2_reg_620 <= ap_phi_mux_tmp_M_real_1_phi_fu_480_p4;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_real_2_reg_620 <= ap_const_lv32_3F800000;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_3_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_real_3_reg_597 <= ap_phi_mux_tmp_M_real_2_phi_fu_501_p4;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_real_3_reg_597 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_5_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_real_5_reg_586 <= bitcast_ln444_1_fu_2115_p1;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_real_5_reg_586 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    p_r_M_real_6_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                    p_r_M_real_6_reg_563 <= ap_phi_mux_tmp_M_real_1_phi_fu_480_p4;
                elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                    p_r_M_real_6_reg_563 <= ap_phi_mux_tmp_M_real_phi_fu_523_p4;
                end if;
            end if; 
        end if;
    end process;

    phi_ln459_1_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln459_fu_1018_p2 = ap_const_lv1_0))) then 
                phi_ln459_1_reg_364 <= add_ln459_1_fu_1012_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                phi_ln459_1_reg_364 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln459_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln459_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln459_1_fu_1024_p2 = ap_const_lv1_0))) then 
                phi_ln459_reg_352 <= add_ln459_reg_2254;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_ln459_reg_352 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln460_1_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln460_fu_1056_p2 = ap_const_lv1_0))) then 
                phi_ln460_1_reg_387 <= add_ln460_1_fu_1050_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_ln460_1_reg_387 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_ln460_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln459_1_fu_1024_p2 = ap_const_lv1_1) and (icmp_ln459_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_ln460_reg_375 <= ap_const_lv2_0;
            elsif (((icmp_ln460_fu_1056_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln460_1_fu_1062_p2 = ap_const_lv1_0))) then 
                phi_ln460_reg_375 <= add_ln460_reg_2270;
            end if; 
        end if;
    end process;

    r_0_i_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln460_1_fu_1062_p2 = ap_const_lv1_1) and (icmp_ln460_fu_1056_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                r_0_i_reg_398 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                r_0_i_reg_398 <= r_reg_2290;
            end if; 
        end if;
    end process;

    s_tmp_M_imag_2_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln306_fu_2145_p2) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                s_tmp_M_imag_2_reg_530 <= ap_const_lv32_0;
            elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln306_reg_2608))) then 
                s_tmp_M_imag_2_reg_530 <= grp_fu_788_p2;
            end if; 
        end if;
    end process;

    s_tmp_M_imag_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
                s_tmp_M_imag_reg_508 <= grp_fu_799_p2;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_2050_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                s_tmp_M_imag_reg_508 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    sqrt_mag_a_mag_b_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln201_1_fu_1828_p2) and (ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
                sqrt_mag_a_mag_b_reg_465 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = and_ln201_1_reg_2495))) then 
                sqrt_mag_a_mag_b_reg_465 <= grp_fu_694_p2;
            end if; 
        end if;
    end process;

    tmp_M_imag_3_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
                tmp_M_imag_3_reg_486 <= grp_fu_788_p2;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_2050_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                tmp_M_imag_3_reg_486 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_M_real_1_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
                tmp_M_real_1_reg_477 <= grp_fu_784_p2;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_2050_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                tmp_M_real_1_reg_477 <= c_tmp_M_real_fu_2071_p1;
            end if; 
        end if;
    end process;

    tmp_M_real_2_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
                tmp_M_real_2_reg_497 <= grp_fu_792_p2;
            elsif (((ap_const_lv1_1 = and_ln284_2_fu_2050_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                tmp_M_real_2_reg_497 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_M_real_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln306_fu_2145_p2) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                tmp_M_real_reg_519 <= ap_const_lv32_3F800000;
            elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln306_reg_2608))) then 
                tmp_M_real_reg_519 <= grp_fu_784_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln471_fu_1068_p2 = ap_const_lv1_0))) then
                Qi_M_imag_addr_1_reg_2306 <= zext_ln1067_2_fu_1102_p1(4 - 1 downto 0);
                Qi_M_real_addr_1_reg_2301 <= zext_ln1067_2_fu_1102_p1(4 - 1 downto 0);
                    zext_ln1067_1_reg_2295(4 downto 2) <= zext_ln1067_1_fu_1092_p1(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln521_fu_2223_p2 = ap_const_lv1_0) and (icmp_ln519_fu_2207_p2 = ap_const_lv1_0))) then
                Qi_M_imag_addr_3_reg_2694 <= zext_ln114_4_fu_2237_p1(4 - 1 downto 0);
                Qi_M_imag_addr_4_reg_2700 <= zext_ln114_5_fu_2248_p1(4 - 1 downto 0);
                Qi_M_real_addr_3_reg_2683 <= zext_ln114_4_fu_2237_p1(4 - 1 downto 0);
                Qi_M_real_addr_4_reg_2689 <= zext_ln114_5_fu_2248_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                Qi_M_imag_addr_3_reg_2694_pp3_iter1_reg <= Qi_M_imag_addr_3_reg_2694;
                Qi_M_imag_addr_4_reg_2700_pp3_iter1_reg <= Qi_M_imag_addr_4_reg_2700;
                Qi_M_imag_addr_4_reg_2700_pp3_iter2_reg <= Qi_M_imag_addr_4_reg_2700_pp3_iter1_reg;
                Qi_M_real_addr_3_reg_2683_pp3_iter1_reg <= Qi_M_real_addr_3_reg_2683;
                Qi_M_real_addr_4_reg_2689_pp3_iter1_reg <= Qi_M_real_addr_4_reg_2689;
                Qi_M_real_addr_4_reg_2689_pp3_iter2_reg <= Qi_M_real_addr_4_reg_2689_pp3_iter1_reg;
                icmp_ln519_reg_2670 <= icmp_ln519_fu_2207_p2;
                icmp_ln521_reg_2679_pp3_iter1_reg <= icmp_ln521_reg_2679;
                icmp_ln521_reg_2679_pp3_iter2_reg <= icmp_ln521_reg_2679_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln499_fu_1293_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln486_fu_1178_p2 = ap_const_lv1_0))) then
                Ri_M_imag_addr_2_reg_2405 <= zext_ln503_1_fu_1317_p1(4 - 1 downto 0);
                Ri_M_imag_addr_3_reg_2422 <= zext_ln503_3_fu_1341_p1(4 - 1 downto 0);
                Ri_M_real_addr_2_reg_2399 <= zext_ln503_1_fu_1317_p1(4 - 1 downto 0);
                Ri_M_real_addr_3_reg_2417 <= zext_ln503_3_fu_1341_p1(4 - 1 downto 0);
                    zext_ln503_2_reg_2411(3 downto 2) <= zext_ln503_2_fu_1331_p1(3 downto 2);
                    zext_ln503_reg_2393(3 downto 2) <= zext_ln503_fu_1307_p1(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln513_fu_2163_p2 = ap_const_lv1_0) and (icmp_ln511_fu_2151_p2 = ap_const_lv1_0))) then
                Ri_M_imag_addr_4_reg_2653 <= zext_ln114_1_fu_2177_p1(4 - 1 downto 0);
                Ri_M_imag_addr_5_reg_2659 <= zext_ln114_2_fu_2188_p1(4 - 1 downto 0);
                Ri_M_real_addr_4_reg_2641 <= zext_ln114_1_fu_2177_p1(4 - 1 downto 0);
                Ri_M_real_addr_5_reg_2647 <= zext_ln114_2_fu_2188_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                Ri_M_imag_addr_4_reg_2653_pp2_iter1_reg <= Ri_M_imag_addr_4_reg_2653;
                Ri_M_imag_addr_5_reg_2659_pp2_iter1_reg <= Ri_M_imag_addr_5_reg_2659;
                Ri_M_imag_addr_5_reg_2659_pp2_iter2_reg <= Ri_M_imag_addr_5_reg_2659_pp2_iter1_reg;
                Ri_M_real_addr_4_reg_2641_pp2_iter1_reg <= Ri_M_real_addr_4_reg_2641;
                Ri_M_real_addr_5_reg_2647_pp2_iter1_reg <= Ri_M_real_addr_5_reg_2647;
                Ri_M_real_addr_5_reg_2647_pp2_iter2_reg <= Ri_M_real_addr_5_reg_2647_pp2_iter1_reg;
                icmp_ln511_reg_2628 <= icmp_ln511_fu_2151_p2;
                icmp_ln513_reg_2637_pp2_iter1_reg <= icmp_ln513_reg_2637;
                icmp_ln513_reg_2637_pp2_iter2_reg <= icmp_ln513_reg_2637_pp2_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln459_reg_2254 <= add_ln459_fu_992_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln460_reg_2270 <= add_ln460_fu_1030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln486_reg_2350 <= add_ln486_fu_1184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                add_ln521_1_reg_2665 <= add_ln521_1_fu_2202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then
                and_ln201_1_reg_2495 <= and_ln201_1_fu_1828_p2;
                    d1_3_reg_2472(30 downto 0) <= d1_3_fu_1735_p3(30 downto 0);
                    d1_4_reg_2432(30 downto 0) <= d1_4_fu_1367_p1(30 downto 0);
                    d2_4_reg_2477(30 downto 0) <= d2_4_fu_1751_p3(30 downto 0);
                    d2_5_reg_2437(30 downto 0) <= d2_5_fu_1396_p1(30 downto 0);
                    d3_6_reg_2482(30 downto 0) <= d3_6_fu_1767_p3(30 downto 0);
                    d3_7_reg_2447(30 downto 0) <= d3_7_fu_1454_p1(30 downto 0);
                    largest_8_reg_2487(30 downto 0) <= largest_8_fu_1783_p3(30 downto 0);
                    largest_9_reg_2442(30 downto 0) <= largest_9_fu_1425_p1(30 downto 0);
                or_ln179_1_reg_2457 <= or_ln179_1_fu_1511_p2;
                or_ln179_2_reg_2462 <= or_ln179_2_fu_1551_p2;
                or_ln179_3_reg_2467 <= or_ln179_3_fu_1591_p2;
                or_ln179_reg_2452 <= or_ln179_fu_1493_p2;
                p_Val2_39_reg_2427 <= p_Val2_39_fu_1347_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                and_ln201_reg_2531 <= and_ln201_fu_2012_p2;
                    d3_1_reg_2526(30 downto 0) <= d3_1_fu_1968_p3(30 downto 0);
                    d3_reg_2504(30 downto 0) <= d3_fu_1880_p1(30 downto 0);
                    largest_10_reg_2499(30 downto 0) <= largest_10_fu_1854_p1(30 downto 0);
                    largest_1_reg_2519(30 downto 0) <= largest_1_fu_1959_p3(30 downto 0);
                or_ln189_1_reg_2514 <= or_ln189_1_fu_1935_p2;
                or_ln189_reg_2509 <= or_ln189_fu_1907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                and_ln284_2_reg_2546 <= and_ln284_2_fu_2050_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                and_ln306_reg_2608 <= and_ln306_fu_2145_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln480_reg_2322 <= icmp_ln480_fu_1141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln511_fu_2151_p2 = ap_const_lv1_0))) then
                icmp_ln513_reg_2637 <= icmp_ln513_fu_2163_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln519_fu_2207_p2 = ap_const_lv1_0))) then
                icmp_ln521_reg_2679 <= icmp_ln521_fu_2223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                k_1_reg_2674 <= k_1_fu_2213_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                k_reg_2632 <= k_fu_2157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0))) then
                p_t_imag_2_reg_2711 <= Qi_M_imag_q0;
                p_t_imag_3_reg_2723 <= Qi_M_imag_q1;
                p_t_real_2_reg_2705 <= Qi_M_real_q0;
                p_t_real_3_reg_2717 <= Qi_M_real_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                r_reg_2290 <= r_fu_1074_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then
                reg_863 <= Ri_M_real_q0;
                reg_871 <= Ri_M_imag_q0;
                reg_879 <= Ri_M_real_q1;
                reg_889 <= Ri_M_imag_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state18))) then
                reg_899 <= grp_fu_784_p2;
                reg_905 <= grp_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0)))) then
                reg_931 <= grp_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0)))) then
                reg_938 <= grp_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln521_reg_2679 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln513_reg_2637 = ap_const_lv1_0)))) then
                reg_956 <= grp_fu_667_p2;
                reg_961 <= grp_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then
                reg_966 <= grp_fu_667_p2;
                reg_971 <= grp_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0)))) then
                reg_976 <= grp_fu_671_p2;
                reg_981 <= grp_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0)))) then
                reg_986 <= grp_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln486_fu_1178_p2 = ap_const_lv1_0))) then
                select_ln486_1_reg_2360 <= select_ln486_1_fu_1217_p3;
                select_ln486_3_reg_2369 <= select_ln486_3_fu_1253_p3;
                select_ln486_4_reg_2374 <= select_ln486_4_fu_1271_p3;
                select_ln486_reg_2355 <= select_ln486_fu_1196_p3;
                xor_ln486_reg_2379 <= xor_ln486_fu_1283_p2;
                    zext_ln486_reg_2364(0) <= zext_ln486_fu_1229_p1(0);
                    zext_ln498_reg_2384(1 downto 0) <= zext_ln498_fu_1289_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                tmp_2_i_i1_reg_2612 <= grp_fu_667_p2;
                tmp_4_i_i1_reg_2617 <= grp_fu_671_p2;
                tmp_7_i_i1_reg_2623 <= grp_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                tmp_2_i_i2_reg_2593 <= grp_fu_681_p2;
                tmp_2_i_i_reg_2575 <= grp_fu_667_p2;
                tmp_4_i_i_reg_2580 <= grp_fu_671_p2;
                tmp_7_i_i2_reg_2598 <= grp_fu_685_p2;
                tmp_7_i_i_reg_2588 <= grp_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                x3_1_reg_2535 <= grp_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln480_fu_1141_p2 = ap_const_lv1_0))) then
                    zext_ln482_1_reg_2331(5 downto 0) <= zext_ln482_1_fu_1162_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln1067_1_reg_2295(1 downto 0) <= "00";
    zext_ln1067_1_reg_2295(5) <= '0';
    zext_ln482_1_reg_2331(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln486_reg_2364(2 downto 1) <= "00";
    zext_ln498_reg_2384(2) <= '0';
    zext_ln503_reg_2393(1 downto 0) <= "00";
    zext_ln503_reg_2393(4) <= '0';
    zext_ln503_2_reg_2411(1 downto 0) <= "00";
    zext_ln503_2_reg_2411(4) <= '0';
    d1_4_reg_2432(31) <= '0';
    d2_5_reg_2437(31) <= '0';
    largest_9_reg_2442(31) <= '0';
    d3_7_reg_2447(31) <= '0';
    d1_3_reg_2472(31) <= '0';
    d2_4_reg_2477(31) <= '0';
    d3_6_reg_2482(31) <= '0';
    largest_8_reg_2487(31) <= '0';
    largest_10_reg_2499(31) <= '0';
    d3_reg_2504(31) <= '0';
    largest_1_reg_2519(31) <= '0';
    d3_1_reg_2526(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state13, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2, ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln471_fu_1068_p2, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln480_fu_1141_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state12, icmp_ln486_fu_1178_p2, select_ln486_1_reg_2360, icmp_ln499_fu_1293_p2, and_ln201_1_fu_1828_p2, and_ln201_fu_2012_p2, and_ln284_2_fu_2050_p2, ap_CS_fsm_state29, and_ln306_fu_2145_p2, ap_CS_fsm_state52, icmp_ln511_fu_2151_p2, icmp_ln519_fu_2207_p2, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp2_stage3_subdone, ap_block_pp2_stage1_subdone, ap_block_pp3_stage0_subdone, ap_block_pp3_stage3_subdone, ap_block_pp3_stage1_subdone, icmp_ln459_fu_1018_p2, icmp_ln459_1_fu_1024_p2, icmp_ln460_fu_1056_p2, icmp_ln460_1_fu_1062_p2, icmp_ln472_fu_1108_p2, ap_block_pp2_stage2_subdone, ap_block_pp3_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln459_1_fu_1024_p2 = ap_const_lv1_1) and (icmp_ln459_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((icmp_ln459_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln459_1_fu_1024_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln460_1_fu_1062_p2 = ap_const_lv1_1) and (icmp_ln460_fu_1056_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((icmp_ln460_fu_1056_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln460_1_fu_1062_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln471_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln480_fu_1141_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln480_fu_1141_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln486_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln499_fu_1293_p2 = ap_const_lv1_0) and (icmp_ln486_fu_1178_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_lv1_1 = and_ln201_fu_2012_p2) and (select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = and_ln201_fu_2012_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                elsif (((ap_const_lv1_1 = and_ln201_1_fu_1828_p2) and (ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_lv1_1 = and_ln284_2_fu_2050_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (ap_const_lv1_0 = and_ln306_fu_2145_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln511_fu_2151_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln511_fu_2151_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_pp2_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage3;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln519_fu_2207_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln519_fu_2207_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) and (ap_const_boolean_0 = ap_block_pp3_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage1_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                end if;
            when ap_ST_fsm_pp3_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                end if;
            when ap_ST_fsm_pp3_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                end if;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_M_imag_address0 <= zext_ln482_1_fu_1162_p1(4 - 1 downto 0);

    A_M_imag_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            A_M_imag_ce0 <= ap_const_logic_1;
        else 
            A_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_M_real_address0 <= zext_ln482_1_fu_1162_p1(4 - 1 downto 0);

    A_M_real_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            A_M_real_ce0 <= ap_const_logic_1;
        else 
            A_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_imag_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state3, Qi_M_imag_addr_1_reg_2306, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, ap_block_pp3_stage0, zext_ln1027_fu_1006_p1, zext_ln1067_4_fu_1135_p1, icmp_ln474_fu_1120_p2, zext_ln114_4_fu_2237_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            Qi_M_imag_address0 <= zext_ln114_4_fu_2237_p1(4 - 1 downto 0);
        elsif (((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then 
            Qi_M_imag_address0 <= Qi_M_imag_addr_1_reg_2306;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then 
            Qi_M_imag_address0 <= zext_ln1067_4_fu_1135_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            Qi_M_imag_address0 <= zext_ln1027_fu_1006_p1(4 - 1 downto 0);
        else 
            Qi_M_imag_address0 <= "XXXX";
        end if; 
    end process;


    Qi_M_imag_address1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp3_iter2, Qi_M_imag_addr_3_reg_2694_pp3_iter1_reg, Qi_M_imag_addr_4_reg_2700_pp3_iter2_reg, ap_block_pp3_stage0, zext_ln114_5_fu_2248_p1, ap_block_pp3_stage1, ap_block_pp3_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then 
            Qi_M_imag_address1 <= Qi_M_imag_addr_4_reg_2700_pp3_iter2_reg;
        elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            Qi_M_imag_address1 <= Qi_M_imag_addr_3_reg_2694_pp3_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            Qi_M_imag_address1 <= zext_ln114_5_fu_2248_p1(4 - 1 downto 0);
        else 
            Qi_M_imag_address1 <= "XXXX";
        end if; 
    end process;


    Qi_M_imag_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, icmp_ln474_fu_1120_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_imag_ce0 <= ap_const_logic_1;
        else 
            Qi_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_imag_ce1_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_block_pp3_stage3_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_imag_ce1 <= ap_const_logic_1;
        else 
            Qi_M_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Qi_M_imag_d0 <= ap_const_lv32_0;
    Qi_M_imag_d1 <= grp_fu_677_p2;

    Qi_M_imag_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, icmp_ln474_fu_1120_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)))) then 
            Qi_M_imag_we0 <= ap_const_logic_1;
        else 
            Qi_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_imag_we1_assign_proc : process(ap_CS_fsm_pp3_stage3, ap_block_pp3_stage3_11001, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, icmp_ln521_reg_2679_pp3_iter1_reg, ap_enable_reg_pp3_iter2, icmp_ln521_reg_2679_pp3_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (icmp_ln521_reg_2679_pp3_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0)))) then 
            Qi_M_imag_we1 <= ap_const_logic_1;
        else 
            Qi_M_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_address0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state3, Qi_M_real_addr_1_reg_2301, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, ap_block_pp3_stage0, zext_ln1027_fu_1006_p1, zext_ln1067_4_fu_1135_p1, icmp_ln474_fu_1120_p2, zext_ln114_4_fu_2237_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            Qi_M_real_address0 <= zext_ln114_4_fu_2237_p1(4 - 1 downto 0);
        elsif (((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then 
            Qi_M_real_address0 <= Qi_M_real_addr_1_reg_2301;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then 
            Qi_M_real_address0 <= zext_ln1067_4_fu_1135_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            Qi_M_real_address0 <= zext_ln1027_fu_1006_p1(4 - 1 downto 0);
        else 
            Qi_M_real_address0 <= "XXXX";
        end if; 
    end process;


    Qi_M_real_address1_assign_proc : process(ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_enable_reg_pp3_iter2, Qi_M_real_addr_3_reg_2683_pp3_iter1_reg, Qi_M_real_addr_4_reg_2689_pp3_iter2_reg, ap_block_pp3_stage0, zext_ln114_5_fu_2248_p1, ap_block_pp3_stage2, ap_block_pp3_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then 
            Qi_M_real_address1 <= Qi_M_real_addr_4_reg_2689_pp3_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2))) then 
            Qi_M_real_address1 <= Qi_M_real_addr_3_reg_2683_pp3_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            Qi_M_real_address1 <= zext_ln114_5_fu_2248_p1(4 - 1 downto 0);
        else 
            Qi_M_real_address1 <= "XXXX";
        end if; 
    end process;


    Qi_M_real_ce0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, icmp_ln474_fu_1120_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then 
            Qi_M_real_ce0 <= ap_const_logic_1;
        else 
            Qi_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_ce1_assign_proc : process(ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_block_pp3_stage2_11001, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)))) then 
            Qi_M_real_ce1 <= ap_const_logic_1;
        else 
            Qi_M_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, icmp_ln474_fu_1120_p2)
    begin
        if (((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0))) then 
            Qi_M_real_d0 <= ap_const_lv32_3F800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)))) then 
            Qi_M_real_d0 <= ap_const_lv32_0;
        else 
            Qi_M_real_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Qi_M_real_d1_assign_proc : process(ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_667_p2, reg_986, ap_enable_reg_pp3_iter2, ap_block_pp3_stage2, ap_block_pp3_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then 
            Qi_M_real_d1 <= reg_986;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2))) then 
            Qi_M_real_d1 <= grp_fu_667_p2;
        else 
            Qi_M_real_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Qi_M_real_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, icmp_ln472_fu_1108_p2, icmp_ln474_fu_1120_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln474_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln474_fu_1120_p2 = ap_const_lv1_0) and (icmp_ln472_fu_1108_p2 = ap_const_lv1_0)))) then 
            Qi_M_real_we0 <= ap_const_logic_1;
        else 
            Qi_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Qi_M_real_we1_assign_proc : process(ap_CS_fsm_pp3_stage2, ap_block_pp3_stage2_11001, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, icmp_ln521_reg_2679_pp3_iter1_reg, ap_enable_reg_pp3_iter2, icmp_ln521_reg_2679_pp3_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (icmp_ln521_reg_2679_pp3_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage2_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0)))) then 
            Qi_M_real_we1 <= ap_const_logic_1;
        else 
            Qi_M_real_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, zext_ln482_1_reg_2331, ap_CS_fsm_state12, Ri_M_imag_addr_5_reg_2659_pp2_iter2_reg, ap_enable_reg_pp1_iter1, ap_block_pp2_stage0, zext_ln1027_1_fu_1044_p1, ap_block_pp1_stage0, zext_ln503_1_fu_1317_p1, zext_ln114_1_fu_2177_p1, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_imag_address0 <= Ri_M_imag_addr_5_reg_2659_pp2_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            Ri_M_imag_address0 <= zext_ln114_1_fu_2177_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_imag_address0 <= zext_ln503_1_fu_1317_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Ri_M_imag_address0 <= zext_ln482_1_reg_2331(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_imag_address0 <= zext_ln1027_1_fu_1044_p1(4 - 1 downto 0);
        else 
            Ri_M_imag_address0 <= "XXXX";
        end if; 
    end process;


    Ri_M_imag_address1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state12, select_ln486_1_reg_2360, Ri_M_imag_addr_2_reg_2405, Ri_M_imag_addr_3_reg_2422, Ri_M_imag_addr_4_reg_2653_pp2_iter1_reg, ap_CS_fsm_state36, ap_block_pp2_stage0, zext_ln503_3_fu_1341_p1, zext_ln114_2_fu_2188_p1, ap_block_pp2_stage3)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            Ri_M_imag_address1 <= Ri_M_imag_addr_4_reg_2653_pp2_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            Ri_M_imag_address1 <= zext_ln114_2_fu_2188_p1(4 - 1 downto 0);
        elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            Ri_M_imag_address1 <= Ri_M_imag_addr_3_reg_2422;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            Ri_M_imag_address1 <= Ri_M_imag_addr_2_reg_2405;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_imag_address1 <= zext_ln503_3_fu_1341_p1(4 - 1 downto 0);
        else 
            Ri_M_imag_address1 <= "XXXX";
        end if; 
    end process;


    Ri_M_imag_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state12, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
            Ri_M_imag_ce0 <= ap_const_logic_1;
        else 
            Ri_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_ce1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_11001, ap_CS_fsm_state12, select_ln486_1_reg_2360, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            Ri_M_imag_ce1 <= ap_const_logic_1;
        else 
            Ri_M_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_d0_assign_proc : process(A_M_imag_q0, ap_CS_fsm_pp2_stage1, grp_fu_677_p2, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_imag_d0 <= grp_fu_677_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Ri_M_imag_d0 <= A_M_imag_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_imag_d0 <= ap_const_lv32_0;
        else 
            Ri_M_imag_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_imag_d1_assign_proc : process(ap_CS_fsm_pp2_stage3, ap_enable_reg_pp2_iter1, grp_fu_677_p2, select_ln486_1_reg_2360, ap_CS_fsm_state36, ap_block_pp2_stage3)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            Ri_M_imag_d1 <= grp_fu_677_p2;
        elsif ((((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0)))) then 
            Ri_M_imag_d1 <= ap_const_lv32_0;
        else 
            Ri_M_imag_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_imag_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, icmp_ln480_reg_2322, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln513_reg_2637_pp2_iter2_reg, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln480_reg_2322 = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
            Ri_M_imag_we0 <= ap_const_logic_1;
        else 
            Ri_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_imag_we1_assign_proc : process(ap_CS_fsm_pp2_stage3, ap_block_pp2_stage3_11001, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2637_pp2_iter1_reg, select_ln486_1_reg_2360, ap_CS_fsm_state36)
    begin
        if ((((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage3_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0)))) then 
            Ri_M_imag_we1 <= ap_const_logic_1;
        else 
            Ri_M_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_address0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, zext_ln482_1_reg_2331, ap_CS_fsm_state12, Ri_M_real_addr_5_reg_2647_pp2_iter2_reg, ap_enable_reg_pp1_iter1, ap_block_pp2_stage0, zext_ln1027_1_fu_1044_p1, ap_block_pp1_stage0, zext_ln503_1_fu_1317_p1, zext_ln114_1_fu_2177_p1, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_real_address0 <= Ri_M_real_addr_5_reg_2647_pp2_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            Ri_M_real_address0 <= zext_ln114_1_fu_2177_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_real_address0 <= zext_ln503_1_fu_1317_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Ri_M_real_address0 <= zext_ln482_1_reg_2331(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_real_address0 <= zext_ln1027_1_fu_1044_p1(4 - 1 downto 0);
        else 
            Ri_M_real_address0 <= "XXXX";
        end if; 
    end process;


    Ri_M_real_address1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state12, select_ln486_1_reg_2360, Ri_M_real_addr_2_reg_2399, Ri_M_real_addr_3_reg_2417, Ri_M_real_addr_4_reg_2641_pp2_iter1_reg, ap_CS_fsm_state36, ap_block_pp2_stage0, zext_ln503_3_fu_1341_p1, zext_ln114_2_fu_2188_p1, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            Ri_M_real_address1 <= Ri_M_real_addr_4_reg_2641_pp2_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            Ri_M_real_address1 <= zext_ln114_2_fu_2188_p1(4 - 1 downto 0);
        elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            Ri_M_real_address1 <= Ri_M_real_addr_3_reg_2417;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            Ri_M_real_address1 <= Ri_M_real_addr_2_reg_2399;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            Ri_M_real_address1 <= zext_ln503_3_fu_1341_p1(4 - 1 downto 0);
        else 
            Ri_M_real_address1 <= "XXXX";
        end if; 
    end process;


    Ri_M_real_ce0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state12, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
            Ri_M_real_ce0 <= ap_const_logic_1;
        else 
            Ri_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_ce1_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_11001, ap_CS_fsm_state12, select_ln486_1_reg_2360, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            Ri_M_real_ce1 <= ap_const_logic_1;
        else 
            Ri_M_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_d0_assign_proc : process(A_M_real_q0, ap_CS_fsm_pp2_stage1, reg_986, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            Ri_M_real_d0 <= reg_986;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Ri_M_real_d0 <= A_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            Ri_M_real_d0 <= ap_const_lv32_0;
        else 
            Ri_M_real_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_real_d1_assign_proc : process(ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter1, grp_fu_667_p2, select_ln486_1_reg_2360, ap_CS_fsm_state36, ap_phi_mux_p_f_assign_phi_fu_544_p4, ap_block_pp2_stage2)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2))) then 
            Ri_M_real_d1 <= grp_fu_667_p2;
        elsif ((((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0)))) then 
            Ri_M_real_d1 <= ap_phi_mux_p_f_assign_phi_fu_544_p4;
        else 
            Ri_M_real_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Ri_M_real_we0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state5, icmp_ln480_reg_2322, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln513_reg_2637_pp2_iter2_reg, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln480_reg_2322 = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
            Ri_M_real_we0 <= ap_const_logic_1;
        else 
            Ri_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Ri_M_real_we1_assign_proc : process(ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2637_pp2_iter1_reg, select_ln486_1_reg_2360, ap_CS_fsm_state36)
    begin
        if ((((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (select_ln486_1_reg_2360 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0)))) then 
            Ri_M_real_we1 <= ap_const_logic_1;
        else 
            Ri_M_real_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1067_1_fu_1130_p2 <= std_logic_vector(unsigned(zext_ln1067_1_reg_2295) + unsigned(zext_ln1067_3_fu_1126_p1));
    add_ln1067_fu_1096_p2 <= std_logic_vector(unsigned(zext_ln1067_fu_1080_p1) + unsigned(zext_ln1067_1_fu_1092_p1));
    add_ln114_2_fu_2183_p2 <= std_logic_vector(unsigned(zext_ln503_2_reg_2411) + unsigned(zext_ln114_fu_2168_p1));
    add_ln114_3_fu_2232_p2 <= std_logic_vector(unsigned(zext_ln503_reg_2393) + unsigned(zext_ln114_3_fu_2228_p1));
    add_ln114_4_fu_2243_p2 <= std_logic_vector(unsigned(zext_ln503_2_reg_2411) + unsigned(zext_ln114_3_fu_2228_p1));
    add_ln114_fu_2172_p2 <= std_logic_vector(unsigned(zext_ln503_reg_2393) + unsigned(zext_ln114_fu_2168_p1));
    add_ln459_1_fu_1012_p2 <= std_logic_vector(unsigned(phi_ln459_1_reg_364) + unsigned(ap_const_lv2_1));
    add_ln459_fu_992_p2 <= std_logic_vector(unsigned(phi_ln459_reg_352) + unsigned(ap_const_lv2_1));
    add_ln460_1_fu_1050_p2 <= std_logic_vector(unsigned(phi_ln460_1_reg_387) + unsigned(ap_const_lv2_1));
    add_ln460_fu_1030_p2 <= std_logic_vector(unsigned(phi_ln460_reg_375) + unsigned(ap_const_lv2_1));
    add_ln482_fu_1157_p2 <= std_logic_vector(unsigned(zext_ln1067_1_reg_2295) + unsigned(zext_ln482_fu_1153_p1));
    add_ln486_fu_1184_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_432) + unsigned(ap_const_lv4_1));
    add_ln503_1_fu_1311_p2 <= std_logic_vector(unsigned(zext_ln513_fu_1261_p1) + unsigned(zext_ln503_fu_1307_p1));
    add_ln503_2_fu_1335_p2 <= std_logic_vector(unsigned(zext_ln513_fu_1261_p1) + unsigned(zext_ln503_2_fu_1331_p1));
    add_ln513_1_fu_1205_p2 <= std_logic_vector(unsigned(j_0_i_reg_443) + unsigned(ap_const_lv3_1));
    add_ln513_fu_1265_p2 <= std_logic_vector(unsigned(j_0_i_reg_443) + unsigned(ap_const_lv3_2));
    add_ln521_1_fu_2202_p2 <= std_logic_vector(unsigned(zext_ln521_fu_2198_p1) + unsigned(xor_ln486_reg_2379));
    add_ln521_fu_2194_p2 <= std_logic_vector(unsigned(zext_ln498_reg_2384) + unsigned(zext_ln486_reg_2364));
    and_ln179_1_fu_1615_p2 <= (and_ln179_7_fu_1609_p2 and and_ln179_2_fu_1523_p2);
    and_ln179_2_fu_1523_p2 <= (grp_fu_807_p2 and and_ln179_fu_1517_p2);
    and_ln179_3_fu_1557_p2 <= (or_ln179_fu_1493_p2 and or_ln179_2_fu_1551_p2);
    and_ln179_4_fu_1563_p2 <= (grp_fu_811_p2 and and_ln179_3_fu_1557_p2);
    and_ln179_5_fu_1597_p2 <= (or_ln179_fu_1493_p2 and or_ln179_3_fu_1591_p2);
    and_ln179_6_fu_1603_p2 <= (grp_fu_815_p2 and and_ln179_5_fu_1597_p2);
    and_ln179_7_fu_1609_p2 <= (and_ln179_6_fu_1603_p2 and and_ln179_4_fu_1563_p2);
    and_ln179_fu_1517_p2 <= (or_ln179_fu_1493_p2 and or_ln179_1_fu_1511_p2);
    and_ln184_1_fu_1627_p2 <= (or_ln179_2_fu_1551_p2 and or_ln179_1_fu_1511_p2);
    and_ln184_2_fu_1633_p2 <= (tmp_21_fu_823_p2 and and_ln184_1_fu_1627_p2);
    and_ln184_3_fu_1639_p2 <= (or_ln179_3_fu_1591_p2 and or_ln179_1_fu_1511_p2);
    and_ln184_4_fu_1645_p2 <= (tmp_22_fu_827_p2 and and_ln184_3_fu_1639_p2);
    and_ln184_5_fu_1717_p2 <= (and_ln184_4_fu_1645_p2 and and_ln184_2_fu_1633_p2);
    and_ln184_6_fu_1723_p2 <= (xor_ln179_fu_1711_p2 and and_ln184_fu_1621_p2);
    and_ln184_7_fu_1729_p2 <= (and_ln184_6_fu_1723_p2 and and_ln184_5_fu_1717_p2);
    and_ln184_fu_1621_p2 <= (grp_fu_819_p2 and and_ln179_fu_1517_p2);
    and_ln189_1_fu_1941_p2 <= (or_ln189_fu_1907_p2 and or_ln189_1_fu_1935_p2);
    and_ln189_2_fu_1681_p2 <= (and_ln189_8_fu_1675_p2 and and_ln189_4_fu_1651_p2);
    and_ln189_3_fu_1947_p2 <= (grp_fu_811_p2 and and_ln189_1_fu_1941_p2);
    and_ln189_4_fu_1651_p2 <= (tmp_23_fu_831_p2 and and_ln179_3_fu_1557_p2);
    and_ln189_5_fu_1657_p2 <= (tmp_24_fu_835_p2 and and_ln184_1_fu_1627_p2);
    and_ln189_6_fu_1663_p2 <= (or_ln179_3_fu_1591_p2 and or_ln179_2_fu_1551_p2);
    and_ln189_7_fu_1669_p2 <= (tmp_25_fu_839_p2 and and_ln189_6_fu_1663_p2);
    and_ln189_8_fu_1675_p2 <= (and_ln189_7_fu_1669_p2 and and_ln189_5_fu_1657_p2);
    and_ln189_fu_1953_p2 <= (grp_fu_807_p2 and and_ln189_3_fu_1947_p2);
    and_ln201_1_fu_1828_p2 <= (tmp_27_fu_843_p2 and or_ln201_1_fu_1822_p2);
    and_ln201_fu_2012_p2 <= (or_ln201_fu_2006_p2 and grp_fu_815_p2);
    and_ln284_1_fu_2023_p2 <= (or_ln179_1_reg_2457 and grp_fu_811_p2);
    and_ln284_2_fu_2050_p2 <= (and_ln284_6_fu_2044_p2 and and_ln284_5_fu_2038_p2);
    and_ln284_3_fu_2028_p2 <= (or_ln179_2_reg_2462 and grp_fu_815_p2);
    and_ln284_4_fu_2033_p2 <= (or_ln179_3_reg_2467 and grp_fu_819_p2);
    and_ln284_5_fu_2038_p2 <= (and_ln284_fu_2018_p2 and and_ln284_1_fu_2023_p2);
    and_ln284_6_fu_2044_p2 <= (and_ln284_4_fu_2033_p2 and and_ln284_3_fu_2028_p2);
    and_ln284_fu_2018_p2 <= (or_ln179_reg_2452 and grp_fu_807_p2);
    and_ln306_1_fu_2135_p2 <= (or_ln189_reg_2509 and grp_fu_807_p2);
    and_ln306_2_fu_2140_p2 <= (or_ln189_1_reg_2514 and grp_fu_811_p2);
    and_ln306_fu_2145_p2 <= (and_ln306_2_fu_2140_p2 and and_ln306_1_fu_2135_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(57);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(58);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(59);
    ap_CS_fsm_pp2_stage3 <= ap_CS_fsm(60);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(62);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(63);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(64);
    ap_CS_fsm_pp3_stage3 <= ap_CS_fsm(65);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state18 <= ap_CS_fsm(16);
    ap_CS_fsm_state19 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
    ap_CS_fsm_state21 <= ap_CS_fsm(19);
    ap_CS_fsm_state22 <= ap_CS_fsm(20);
    ap_CS_fsm_state23 <= ap_CS_fsm(21);
    ap_CS_fsm_state24 <= ap_CS_fsm(22);
    ap_CS_fsm_state28 <= ap_CS_fsm(26);
    ap_CS_fsm_state29 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(28);
    ap_CS_fsm_state31 <= ap_CS_fsm(29);
    ap_CS_fsm_state32 <= ap_CS_fsm(30);
    ap_CS_fsm_state36 <= ap_CS_fsm(34);
    ap_CS_fsm_state37 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state41 <= ap_CS_fsm(39);
    ap_CS_fsm_state42 <= ap_CS_fsm(40);
    ap_CS_fsm_state43 <= ap_CS_fsm(41);
    ap_CS_fsm_state44 <= ap_CS_fsm(42);
    ap_CS_fsm_state45 <= ap_CS_fsm(43);
    ap_CS_fsm_state46 <= ap_CS_fsm(44);
    ap_CS_fsm_state47 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state51 <= ap_CS_fsm(49);
    ap_CS_fsm_state52 <= ap_CS_fsm(50);
    ap_CS_fsm_state53 <= ap_CS_fsm(51);
    ap_CS_fsm_state54 <= ap_CS_fsm(52);
    ap_CS_fsm_state55 <= ap_CS_fsm(53);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state69 <= ap_CS_fsm(61);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(66);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp2_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp2_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp2_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp3_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp3_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp3_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp3_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp3_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp3_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp3_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln480_fu_1141_p2)
    begin
        if ((icmp_ln480_fu_1141_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state59_assign_proc : process(icmp_ln511_fu_2151_p2)
    begin
        if ((icmp_ln511_fu_2151_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state59 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state59 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state70_assign_proc : process(icmp_ln519_fu_2207_p2)
    begin
        if ((icmp_ln519_fu_2207_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state70 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state70 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12, icmp_ln486_fu_1178_p2)
    begin
        if (((icmp_ln486_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_k13_0_i_phi_fu_660_p4_assign_proc : process(k13_0_i_reg_656, icmp_ln519_reg_2670, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, k_1_reg_2674, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln519_reg_2670 = ap_const_lv1_0))) then 
            ap_phi_mux_k13_0_i_phi_fu_660_p4 <= k_1_reg_2674;
        else 
            ap_phi_mux_k13_0_i_phi_fu_660_p4 <= k13_0_i_reg_656;
        end if; 
    end process;


    ap_phi_mux_k_0_i_phi_fu_649_p4_assign_proc : process(k_0_i_reg_645, icmp_ln511_reg_2628, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, k_reg_2632, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln511_reg_2628 = ap_const_lv1_0))) then 
            ap_phi_mux_k_0_i_phi_fu_649_p4 <= k_reg_2632;
        else 
            ap_phi_mux_k_0_i_phi_fu_649_p4 <= k_0_i_reg_645;
        end if; 
    end process;


    ap_phi_mux_mag_M_real_phi_fu_637_p4_assign_proc : process(grp_fu_694_p2, and_ln201_reg_2531, ap_CS_fsm_state52, mag_M_real_reg_632)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) and (ap_const_lv1_0 = and_ln201_reg_2531))) then 
            ap_phi_mux_mag_M_real_phi_fu_637_p4 <= grp_fu_694_p2;
        else 
            ap_phi_mux_mag_M_real_phi_fu_637_p4 <= mag_M_real_reg_632;
        end if; 
    end process;


    ap_phi_mux_p_f_assign_phi_fu_544_p4_assign_proc : process(select_ln486_1_reg_2360, ap_CS_fsm_state36, sqrt_mag_a_mag_b_reg_465, mag_M_real_reg_632)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
            if ((select_ln486_1_reg_2360 = ap_const_lv1_0)) then 
                ap_phi_mux_p_f_assign_phi_fu_544_p4 <= sqrt_mag_a_mag_b_reg_465;
            elsif ((select_ln486_1_reg_2360 = ap_const_lv1_1)) then 
                ap_phi_mux_p_f_assign_phi_fu_544_p4 <= mag_M_real_reg_632;
            else 
                ap_phi_mux_p_f_assign_phi_fu_544_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_p_f_assign_phi_fu_544_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4_assign_proc : process(grp_fu_788_p2, select_ln486_1_reg_2360, and_ln306_reg_2608, ap_CS_fsm_state36, s_tmp_M_imag_2_reg_530)
    begin
        if (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln306_reg_2608))) then 
            ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4 <= grp_fu_788_p2;
        else 
            ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4 <= s_tmp_M_imag_2_reg_530;
        end if; 
    end process;


    ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4_assign_proc : process(select_ln486_1_reg_2360, and_ln284_2_reg_2546, ap_CS_fsm_state36, s_tmp_M_imag_reg_508, grp_fu_799_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4 <= grp_fu_799_p2;
        else 
            ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4 <= s_tmp_M_imag_reg_508;
        end if; 
    end process;


    ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4_assign_proc : process(grp_fu_694_p2, and_ln201_1_reg_2495, ap_CS_fsm_state29, sqrt_mag_a_mag_b_reg_465)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_0 = and_ln201_1_reg_2495))) then 
            ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4 <= grp_fu_694_p2;
        else 
            ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4 <= sqrt_mag_a_mag_b_reg_465;
        end if; 
    end process;


    ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4_assign_proc : process(grp_fu_788_p2, select_ln486_1_reg_2360, and_ln284_2_reg_2546, ap_CS_fsm_state36, tmp_M_imag_3_reg_486)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4 <= grp_fu_788_p2;
        else 
            ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4 <= tmp_M_imag_3_reg_486;
        end if; 
    end process;


    ap_phi_mux_tmp_M_real_1_phi_fu_480_p4_assign_proc : process(grp_fu_784_p2, select_ln486_1_reg_2360, and_ln284_2_reg_2546, ap_CS_fsm_state36, tmp_M_real_1_reg_477)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_M_real_1_phi_fu_480_p4 <= grp_fu_784_p2;
        else 
            ap_phi_mux_tmp_M_real_1_phi_fu_480_p4 <= tmp_M_real_1_reg_477;
        end if; 
    end process;


    ap_phi_mux_tmp_M_real_2_phi_fu_501_p4_assign_proc : process(select_ln486_1_reg_2360, grp_fu_792_p2, and_ln284_2_reg_2546, ap_CS_fsm_state36, tmp_M_real_2_reg_497)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln284_2_reg_2546) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_M_real_2_phi_fu_501_p4 <= grp_fu_792_p2;
        else 
            ap_phi_mux_tmp_M_real_2_phi_fu_501_p4 <= tmp_M_real_2_reg_497;
        end if; 
    end process;


    ap_phi_mux_tmp_M_real_phi_fu_523_p4_assign_proc : process(grp_fu_784_p2, select_ln486_1_reg_2360, and_ln306_reg_2608, ap_CS_fsm_state36, tmp_M_real_reg_519)
    begin
        if (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36) and (ap_const_lv1_0 = and_ln306_reg_2608))) then 
            ap_phi_mux_tmp_M_real_phi_fu_523_p4 <= grp_fu_784_p2;
        else 
            ap_phi_mux_tmp_M_real_phi_fu_523_p4 <= tmp_M_real_reg_519;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, icmp_ln486_fu_1178_p2)
    begin
        if (((icmp_ln486_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln155_3_fu_2075_p1 <= ap_phi_mux_tmp_M_imag_3_phi_fu_490_p4;
    bitcast_ln155_5_fu_2090_p1 <= ap_phi_mux_s_tmp_M_imag_phi_fu_512_p4;
    bitcast_ln155_fu_2120_p1 <= ap_phi_mux_s_tmp_M_imag_2_phi_fu_534_p4;
    bitcast_ln201_1_fu_1792_p1 <= largest_8_fu_1783_p3;
    bitcast_ln201_fu_1976_p1 <= largest_1_fu_1959_p3;
    bitcast_ln444_1_fu_2115_p1 <= xor_ln444_fu_2109_p2;
    bitcast_ln444_fu_2105_p1 <= ap_phi_mux_tmp_M_real_2_phi_fu_501_p4;
    c_2_fu_1114_p2 <= std_logic_vector(unsigned(c_0_i_reg_410) + unsigned(ap_const_lv3_1));
    c_fu_1147_p2 <= std_logic_vector(unsigned(c12_0_i_reg_421) + unsigned(ap_const_lv3_1));
    c_tmp_M_real_fu_2071_p1 <= p_Result_25_fu_2063_p3;
    d1_3_fu_1735_p3 <= 
        d1_4_fu_1367_p1 when (and_ln184_7_fu_1729_p2(0) = '1') else 
        d1_fu_1703_p3;
    d1_4_fu_1367_p1 <= p_Result_26_fu_1359_p3;
    d1_fu_1703_p3 <= 
        d2_5_fu_1396_p1 when (and_ln179_1_fu_1615_p2(0) = '1') else 
        d1_4_fu_1367_p1;
    d2_4_fu_1751_p3 <= 
        largest_9_fu_1425_p1 when (and_ln184_7_fu_1729_p2(0) = '1') else 
        d2_fu_1743_p3;
    d2_5_fu_1396_p1 <= p_Result_27_fu_1388_p3;
    d2_fu_1743_p3 <= 
        largest_9_fu_1425_p1 when (and_ln179_1_fu_1615_p2(0) = '1') else 
        d2_5_fu_1396_p1;
    d3_1_fu_1968_p3 <= 
        d3_fu_1880_p1 when (and_ln189_fu_1953_p2(0) = '1') else 
        largest_10_fu_1854_p1;
    d3_4_fu_1687_p3 <= 
        d3_7_fu_1454_p1 when (and_ln189_2_fu_1681_p2(0) = '1') else 
        largest_9_fu_1425_p1;
    d3_5_fu_1759_p3 <= 
        d3_7_fu_1454_p1 when (and_ln179_1_fu_1615_p2(0) = '1') else 
        d3_4_fu_1687_p3;
    d3_6_fu_1767_p3 <= 
        d3_7_fu_1454_p1 when (and_ln184_7_fu_1729_p2(0) = '1') else 
        d3_5_fu_1759_p3;
    d3_7_fu_1454_p1 <= p_Result_29_fu_1446_p3;
    d3_fu_1880_p1 <= p_Result_31_fu_1872_p3;

    grp_fu_667_opcode_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, icmp_ln511_reg_2628, icmp_ln513_reg_2637, ap_CS_fsm_state20, ap_CS_fsm_state30, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2637_pp2_iter1_reg, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, icmp_ln519_reg_2670, icmp_ln521_reg_2679, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, icmp_ln521_reg_2679_pp3_iter1_reg, ap_CS_fsm_state22, ap_CS_fsm_state45, ap_block_pp2_stage1_00001, ap_block_pp3_stage1_00001, ap_block_pp2_stage2_00001, ap_block_pp2_stage3_00001, ap_block_pp2_stage0_00001, ap_block_pp3_stage2_00001, ap_block_pp3_stage3_00001, ap_block_pp3_stage0_00001)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage3_00001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage2_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_00001)))) then 
            grp_fu_667_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage1_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_00001)))) then 
            grp_fu_667_opcode <= ap_const_lv2_0;
        else 
            grp_fu_667_opcode <= "XX";
        end if; 
    end process;


    grp_fu_667_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, grp_fu_694_p2, ap_CS_fsm_state20, ap_CS_fsm_state30, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_699_p2, reg_931, reg_938, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state22, ap_CS_fsm_state45)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_667_p0 <= reg_931;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_667_p0 <= grp_fu_694_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_667_p0 <= reg_938;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_667_p0 <= grp_fu_699_p2;
        else 
            grp_fu_667_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_667_p1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_state20, ap_CS_fsm_state30, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_699_p2, grp_fu_704_p2, reg_931, reg_956, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state22, ap_CS_fsm_state45)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_667_p1 <= reg_956;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_667_p1 <= grp_fu_699_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_fu_667_p1 <= reg_931;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_667_p1 <= grp_fu_704_p2;
        else 
            grp_fu_667_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_671_opcode_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, icmp_ln511_reg_2628, icmp_ln513_reg_2637, ap_CS_fsm_state20, ap_CS_fsm_state30, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2637_pp2_iter1_reg, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, icmp_ln519_reg_2670, icmp_ln521_reg_2679, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, icmp_ln521_reg_2679_pp3_iter1_reg, ap_block_pp2_stage1_00001, ap_block_pp3_stage1_00001, ap_block_pp2_stage2_00001, ap_block_pp2_stage3_00001, ap_block_pp2_stage0_00001, ap_block_pp3_stage2_00001, ap_block_pp3_stage3_00001, ap_block_pp3_stage0_00001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage1_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_00001)))) then 
            grp_fu_671_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage3_00001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (icmp_ln521_reg_2679 = ap_const_lv1_0) and (icmp_ln519_reg_2670 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage2_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln513_reg_2637 = ap_const_lv1_0) and (icmp_ln511_reg_2628 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_00001)))) then 
            grp_fu_671_opcode <= ap_const_lv2_0;
        else 
            grp_fu_671_opcode <= "XX";
        end if; 
    end process;


    grp_fu_671_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, grp_fu_694_p2, ap_CS_fsm_state20, ap_CS_fsm_state30, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_704_p2, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_671_p0 <= grp_fu_704_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_671_p0 <= grp_fu_694_p2;
        else 
            grp_fu_671_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_671_p1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_state20, ap_CS_fsm_state30, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_699_p2, grp_fu_717_p2, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_671_p1 <= grp_fu_699_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_671_p1 <= grp_fu_717_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_671_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_671_p1 <= ap_const_lv32_3F800000;
        else 
            grp_fu_671_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_677_opcode_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_state30, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln513_reg_2637_pp2_iter1_reg, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, icmp_ln521_reg_2679_pp3_iter1_reg, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2, ap_block_pp2_stage1_00001, ap_block_pp3_stage1_00001, ap_block_pp2_stage2_00001, ap_block_pp2_stage3_00001, ap_block_pp2_stage0_00001, ap_block_pp3_stage2_00001, ap_block_pp3_stage3_00001, ap_block_pp3_stage0_00001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_677_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage1_00001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_00001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage3_00001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (icmp_ln521_reg_2679_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage2_00001)) or ((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage3_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage2_00001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (icmp_ln513_reg_2637_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage1_00001)))) then 
            grp_fu_677_opcode <= ap_const_lv2_0;
        else 
            grp_fu_677_opcode <= "XX";
        end if; 
    end process;


    grp_fu_677_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_state30, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_704_p2, reg_938, grp_fu_717_p2, reg_966, reg_971, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_677_p0 <= reg_971;
        elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_677_p0 <= reg_966;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_677_p0 <= reg_938;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_677_p0 <= grp_fu_704_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_677_p0 <= grp_fu_717_p2;
        else 
            grp_fu_677_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_677_p1_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_CS_fsm_state30, ap_CS_fsm_state53, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_717_p2, grp_fu_723_p2, reg_961, reg_976, reg_981, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_677_p1 <= reg_981;
        elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_677_p1 <= reg_976;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_677_p1 <= reg_961;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_677_p1 <= grp_fu_717_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_677_p1 <= grp_fu_723_p2;
        else 
            grp_fu_677_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_694_p0_assign_proc : process(reg_863, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_879, reg_899, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, largest_8_reg_2487, largest_1_reg_2519, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state51, ap_CS_fsm_state52, p_r_M_real_6_reg_563, p_r_M_real_5_reg_586, p_r_M_real_3_reg_597, p_r_M_real_2_reg_620, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state19, ap_CS_fsm_state42)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_694_p0 <= p_r_M_real_6_reg_563;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_694_p0 <= p_r_M_real_5_reg_586;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_694_p0 <= p_r_M_real_3_reg_597;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_694_p0 <= p_r_M_real_2_reg_620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_694_p0 <= reg_879;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_694_p0 <= largest_1_reg_2519;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_694_p0 <= reg_863;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_fu_694_p0 <= largest_8_reg_2487;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_694_p0 <= reg_899;
        else 
            grp_fu_694_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_694_p1_assign_proc : process(Qi_M_real_q0, Ri_M_real_q0, reg_863, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_879, reg_899, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, grp_fu_852_p2, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state51, ap_CS_fsm_state52, p_t_real_2_reg_2705, p_t_real_3_reg_2717, ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4, ap_phi_mux_mag_M_real_phi_fu_637_p4, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state19, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            grp_fu_694_p1 <= p_t_real_2_reg_2705;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)))) then 
            grp_fu_694_p1 <= p_t_real_3_reg_2717;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            grp_fu_694_p1 <= Qi_M_real_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            grp_fu_694_p1 <= reg_863;
        elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_694_p1 <= reg_879;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_694_p1 <= Ri_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_694_p1 <= ap_phi_mux_mag_M_real_phi_fu_637_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_694_p1 <= ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            grp_fu_694_p1 <= grp_fu_852_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_694_p1 <= reg_899;
        else 
            grp_fu_694_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_699_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_871, reg_889, reg_905, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state29, ap_CS_fsm_state52, p_r_M_imag_5_reg_552, p_r_M_imag_3_reg_575, p_r_M_imag_2_reg_609, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state19, ap_CS_fsm_state42)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_699_p0 <= p_r_M_imag_5_reg_552;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_699_p0 <= p_r_M_imag_3_reg_575;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_699_p0 <= p_r_M_imag_2_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_699_p0 <= reg_889;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_699_p0 <= reg_871;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_699_p0 <= reg_905;
        else 
            grp_fu_699_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_699_p1_assign_proc : process(Qi_M_imag_q0, Ri_M_imag_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_871, reg_889, reg_905, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state29, ap_CS_fsm_state52, p_t_imag_2_reg_2711, p_t_imag_3_reg_2723, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state19, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            grp_fu_699_p1 <= p_t_imag_2_reg_2711;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)))) then 
            grp_fu_699_p1 <= p_t_imag_3_reg_2723;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            grp_fu_699_p1 <= Qi_M_imag_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            grp_fu_699_p1 <= reg_871;
        elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_699_p1 <= reg_889;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_699_p1 <= Ri_M_imag_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_699_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_699_p1 <= reg_905;
        else 
            grp_fu_699_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_704_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, x3_1_reg_2535, ap_CS_fsm_state29, ap_CS_fsm_state52, ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4, p_r_M_imag_5_reg_552, p_r_M_imag_3_reg_575, p_r_M_imag_2_reg_609, ap_phi_mux_mag_M_real_phi_fu_637_p4, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state19)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_704_p0 <= p_r_M_imag_5_reg_552;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_704_p0 <= p_r_M_imag_3_reg_575;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_704_p0 <= p_r_M_imag_2_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_704_p0 <= ap_phi_mux_mag_M_real_phi_fu_637_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_704_p0 <= ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_704_p0 <= x3_1_reg_2535;
        else 
            grp_fu_704_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_704_p1_assign_proc : process(Qi_M_real_q0, Ri_M_real_q0, reg_863, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_879, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, x3_1_reg_2535, ap_CS_fsm_state29, ap_CS_fsm_state52, p_t_real_2_reg_2705, p_t_real_3_reg_2717, ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4, ap_phi_mux_mag_M_real_phi_fu_637_p4, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            grp_fu_704_p1 <= p_t_real_2_reg_2705;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)))) then 
            grp_fu_704_p1 <= p_t_real_3_reg_2717;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            grp_fu_704_p1 <= Qi_M_real_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            grp_fu_704_p1 <= reg_863;
        elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_704_p1 <= reg_879;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_704_p1 <= Ri_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_704_p1 <= ap_phi_mux_mag_M_real_phi_fu_637_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_704_p1 <= ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_704_p1 <= x3_1_reg_2535;
        else 
            grp_fu_704_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_717_p0_assign_proc : process(ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_871, reg_889, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state29, ap_CS_fsm_state52, p_r_M_real_6_reg_563, p_r_M_real_5_reg_586, p_r_M_real_3_reg_597, p_r_M_real_2_reg_620, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            grp_fu_717_p0 <= p_r_M_real_6_reg_563;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3)))) then 
            grp_fu_717_p0 <= p_r_M_real_5_reg_586;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_717_p0 <= p_r_M_real_3_reg_597;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1)))) then 
            grp_fu_717_p0 <= p_r_M_real_2_reg_620;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_717_p0 <= reg_889;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_717_p0 <= reg_871;
        else 
            grp_fu_717_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_717_p1_assign_proc : process(Qi_M_imag_q0, Ri_M_imag_q0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter0, reg_871, reg_889, ap_CS_fsm_pp2_stage2, ap_CS_fsm_pp2_stage3, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp3_stage1, ap_CS_fsm_state29, ap_CS_fsm_state52, p_t_imag_2_reg_2711, p_t_imag_3_reg_2723, ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4, ap_phi_mux_mag_M_real_phi_fu_637_p4, ap_block_pp2_stage0, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp3_stage1, ap_block_pp3_stage3, ap_block_pp2_stage2, ap_block_pp2_stage1, ap_block_pp2_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage3))) then 
            grp_fu_717_p1 <= p_t_imag_2_reg_2711;
        elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2)))) then 
            grp_fu_717_p1 <= p_t_imag_3_reg_2723;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            grp_fu_717_p1 <= Qi_M_imag_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage3) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage3))) then 
            grp_fu_717_p1 <= reg_871;
        elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage2)))) then 
            grp_fu_717_p1 <= reg_889;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            grp_fu_717_p1 <= Ri_M_imag_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_717_p1 <= ap_phi_mux_mag_M_real_phi_fu_637_p4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_717_p1 <= ap_phi_mux_sqrt_mag_a_mag_b_phi_fu_469_p4;
        else 
            grp_fu_717_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_723_p0_assign_proc : process(reg_863, reg_879, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_723_p0 <= reg_879;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_723_p0 <= reg_863;
        else 
            grp_fu_723_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_784_p0_assign_proc : process(d1_3_reg_2472, tmp_2_i_i_reg_2575, tmp_2_i_i1_reg_2612, ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state37, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_784_p0 <= tmp_2_i_i1_reg_2612;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_784_p0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_784_p0 <= tmp_2_i_i_reg_2575;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_784_p0 <= d1_3_reg_2472;
        else 
            grp_fu_784_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_784_p1_assign_proc : process(largest_8_reg_2487, largest_1_reg_2519, tmp_4_i_i_reg_2580, tmp_4_i_i1_reg_2617, ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state37, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_784_p1 <= tmp_4_i_i1_reg_2617;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_784_p1 <= largest_1_reg_2519;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_784_p1 <= tmp_4_i_i_reg_2580;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_784_p1 <= largest_8_reg_2487;
        else 
            grp_fu_784_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_788_p0_assign_proc : process(d2_4_reg_2477, d3_1_reg_2526, tmp_7_i_i_reg_2588, tmp_7_i_i1_reg_2623, ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state37, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_788_p0 <= tmp_7_i_i1_reg_2623;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_788_p0 <= d3_1_reg_2526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_788_p0 <= tmp_7_i_i_reg_2588;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_788_p0 <= d2_4_reg_2477;
        else 
            grp_fu_788_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_788_p1_assign_proc : process(largest_8_reg_2487, largest_1_reg_2519, tmp_4_i_i_reg_2580, tmp_4_i_i1_reg_2617, ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state37, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_788_p1 <= tmp_4_i_i1_reg_2617;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_788_p1 <= largest_1_reg_2519;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_788_p1 <= tmp_4_i_i_reg_2580;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_788_p1 <= largest_8_reg_2487;
        else 
            grp_fu_788_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_792_p0_assign_proc : process(d3_6_reg_2482, tmp_2_i_i2_reg_2593, ap_CS_fsm_state14, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_792_p0 <= tmp_2_i_i2_reg_2593;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_792_p0 <= d3_6_reg_2482;
        else 
            grp_fu_792_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_792_p1_assign_proc : process(largest_8_reg_2487, tmp_4_i_i_reg_2580, ap_CS_fsm_state14, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            grp_fu_792_p1 <= tmp_4_i_i_reg_2580;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_792_p1 <= largest_8_reg_2487;
        else 
            grp_fu_792_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_807_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_807_opcode <= ap_const_lv5_1;
        elsif ((((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0)))) then 
            grp_fu_807_opcode <= ap_const_lv5_2;
        else 
            grp_fu_807_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_807_p0_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, d1_4_fu_1367_p1, d1_4_reg_2432, largest_10_fu_1854_p1, largest_10_reg_2499, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_807_p0 <= largest_10_reg_2499;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_807_p0 <= d1_4_reg_2432;
        elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_807_p0 <= largest_10_fu_1854_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_807_p0 <= d1_4_fu_1367_p1;
        else 
            grp_fu_807_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_807_p1_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, d2_5_fu_1396_p1, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_807_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_807_p1 <= d2_5_fu_1396_p1;
        else 
            grp_fu_807_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_811_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_811_opcode <= ap_const_lv5_1;
        elsif ((((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0)))) then 
            grp_fu_811_opcode <= ap_const_lv5_2;
        else 
            grp_fu_811_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_811_p0_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, d1_4_fu_1367_p1, d2_5_reg_2437, largest_10_fu_1854_p1, d3_reg_2504, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_fu_811_p0 <= d3_reg_2504;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_811_p0 <= d2_5_reg_2437;
        elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_811_p0 <= largest_10_fu_1854_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_811_p0 <= d1_4_fu_1367_p1;
        else 
            grp_fu_811_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_811_p1_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, largest_9_fu_1425_p1, d3_fu_1880_p1, ap_CS_fsm_state29, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_811_p1 <= ap_const_lv32_0;
        elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_811_p1 <= d3_fu_1880_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_811_p1 <= largest_9_fu_1425_p1;
        else 
            grp_fu_811_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_815_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_815_opcode <= ap_const_lv5_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_815_opcode <= ap_const_lv5_2;
        else 
            grp_fu_815_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_815_p0_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, d1_4_fu_1367_p1, largest_9_reg_2442, largest_1_fu_1959_p3, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_815_p0 <= largest_9_reg_2442;
        elsif (((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_815_p0 <= largest_1_fu_1959_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_815_p0 <= d1_4_fu_1367_p1;
        else 
            grp_fu_815_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_815_p1_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, d3_7_fu_1454_p1, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((select_ln486_1_reg_2360 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_815_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_815_p1 <= d3_7_fu_1454_p1;
        else 
            grp_fu_815_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_819_opcode_assign_proc : process(ap_CS_fsm_state13, select_ln486_1_reg_2360, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_819_opcode <= ap_const_lv5_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (select_ln486_1_reg_2360 = ap_const_lv1_0))) then 
            grp_fu_819_opcode <= ap_const_lv5_2;
        else 
            grp_fu_819_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_819_p0_assign_proc : process(ap_CS_fsm_state13, d2_5_fu_1396_p1, d3_7_reg_2447, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_819_p0 <= d3_7_reg_2447;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_819_p0 <= d2_5_fu_1396_p1;
        else 
            grp_fu_819_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_819_p1_assign_proc : process(ap_CS_fsm_state13, d1_4_fu_1367_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_819_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_819_p1 <= d1_4_fu_1367_p1;
        else 
            grp_fu_819_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_858_p0_assign_proc : process(ap_CS_fsm_state12, select_ln486_fu_1196_p3, select_ln486_reg_2355, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_858_p0 <= select_ln486_reg_2355;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_858_p0 <= select_ln486_fu_1196_p3;
        else 
            grp_fu_858_p0 <= "XX";
        end if; 
    end process;

    grp_fu_858_p2 <= std_logic_vector(unsigned(grp_fu_858_p0) + unsigned(ap_const_lv2_3));
    icmp_ln179_1_fu_1487_p2 <= "1" when (trunc_ln189_2_fu_1355_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_2_fu_1499_p2 <= "0" when (tmp_14_fu_1471_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_3_fu_1505_p2 <= "1" when (trunc_ln189_3_fu_1384_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_4_fu_1539_p2 <= "0" when (tmp_16_fu_1529_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_5_fu_1545_p2 <= "1" when (trunc_ln189_4_fu_1413_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_6_fu_1579_p2 <= "0" when (tmp_18_fu_1569_p4 = ap_const_lv8_FF) else "1";
    icmp_ln179_7_fu_1585_p2 <= "1" when (trunc_ln189_5_fu_1442_p1 = ap_const_lv23_0) else "0";
    icmp_ln179_fu_1481_p2 <= "0" when (tmp_13_fu_1461_p4 = ap_const_lv8_FF) else "1";
    icmp_ln189_1_fu_1901_p2 <= "1" when (trunc_ln189_fu_1842_p1 = ap_const_lv23_0) else "0";
    icmp_ln189_2_fu_1923_p2 <= "0" when (tmp_4_fu_1913_p4 = ap_const_lv8_FF) else "1";
    icmp_ln189_3_fu_1929_p2 <= "1" when (trunc_ln189_1_fu_1868_p1 = ap_const_lv23_0) else "0";
    icmp_ln189_fu_1895_p2 <= "0" when (tmp_1_fu_1885_p4 = ap_const_lv8_FF) else "1";
    icmp_ln201_1_fu_2000_p2 <= "1" when (trunc_ln201_fu_1990_p1 = ap_const_lv23_0) else "0";
    icmp_ln201_2_fu_1810_p2 <= "0" when (tmp_26_fu_1796_p4 = ap_const_lv8_FF) else "1";
    icmp_ln201_3_fu_1816_p2 <= "1" when (trunc_ln201_1_fu_1806_p1 = ap_const_lv23_0) else "0";
    icmp_ln201_fu_1994_p2 <= "0" when (tmp_11_fu_1980_p4 = ap_const_lv8_FF) else "1";
    icmp_ln459_1_fu_1024_p2 <= "1" when (phi_ln459_reg_352 = ap_const_lv2_3) else "0";
    icmp_ln459_fu_1018_p2 <= "1" when (phi_ln459_1_reg_364 = ap_const_lv2_3) else "0";
    icmp_ln460_1_fu_1062_p2 <= "1" when (phi_ln460_reg_375 = ap_const_lv2_3) else "0";
    icmp_ln460_fu_1056_p2 <= "1" when (phi_ln460_1_reg_387 = ap_const_lv2_3) else "0";
    icmp_ln471_fu_1068_p2 <= "1" when (r_0_i_reg_398 = ap_const_lv3_4) else "0";
    icmp_ln472_fu_1108_p2 <= "1" when (c_0_i_reg_410 = ap_const_lv3_4) else "0";
    icmp_ln474_fu_1120_p2 <= "1" when (r_0_i_reg_398 = c_0_i_reg_410) else "0";
    icmp_ln480_fu_1141_p2 <= "1" when (c12_0_i_reg_421 = ap_const_lv3_4) else "0";
    icmp_ln486_fu_1178_p2 <= "1" when (indvar_flatten_reg_432 = ap_const_lv4_C) else "0";
    icmp_ln490_1_fu_1211_p2 <= "1" when (add_ln513_1_fu_1205_p2 = ap_const_lv3_3) else "0";
    icmp_ln490_fu_1168_p2 <= "1" when (j_0_i_reg_443 = ap_const_lv3_3) else "0";
    icmp_ln498_fu_1190_p2 <= "1" when (i_0_i_reg_454 = ap_const_lv2_0) else "0";
    icmp_ln499_fu_1293_p2 <= "1" when (signed(zext_ln498_fu_1289_p1) > signed(select_ln486_2_fu_1245_p3)) else "0";
    icmp_ln511_fu_2151_p2 <= "1" when (ap_phi_mux_k_0_i_phi_fu_649_p4 = ap_const_lv3_4) else "0";
    icmp_ln513_fu_2163_p2 <= "1" when (unsigned(ap_phi_mux_k_0_i_phi_fu_649_p4) < unsigned(select_ln486_4_reg_2374)) else "0";
    icmp_ln519_fu_2207_p2 <= "1" when (ap_phi_mux_k13_0_i_phi_fu_660_p4 = ap_const_lv3_4) else "0";
    icmp_ln521_fu_2223_p2 <= "1" when (signed(zext_ln519_fu_2219_p1) < signed(add_ln521_1_reg_2665)) else "0";
    k_1_fu_2213_p2 <= std_logic_vector(unsigned(ap_phi_mux_k13_0_i_phi_fu_660_p4) + unsigned(ap_const_lv3_1));
    k_fu_2157_p2 <= std_logic_vector(unsigned(ap_phi_mux_k_0_i_phi_fu_649_p4) + unsigned(ap_const_lv3_1));
    largest_10_fu_1854_p1 <= p_Result_30_fu_1846_p3;
    largest_1_fu_1959_p3 <= 
        largest_10_fu_1854_p1 when (and_ln189_fu_1953_p2(0) = '1') else 
        d3_fu_1880_p1;
    largest_6_fu_1695_p3 <= 
        largest_9_fu_1425_p1 when (and_ln189_2_fu_1681_p2(0) = '1') else 
        d3_7_fu_1454_p1;
    largest_7_fu_1775_p3 <= 
        d1_4_fu_1367_p1 when (and_ln179_1_fu_1615_p2(0) = '1') else 
        largest_6_fu_1695_p3;
    largest_8_fu_1783_p3 <= 
        d2_5_fu_1396_p1 when (and_ln184_7_fu_1729_p2(0) = '1') else 
        largest_7_fu_1775_p3;
    largest_9_fu_1425_p1 <= p_Result_28_fu_1417_p3;
    or_ln179_1_fu_1511_p2 <= (icmp_ln179_3_fu_1505_p2 or icmp_ln179_2_fu_1499_p2);
    or_ln179_2_fu_1551_p2 <= (icmp_ln179_5_fu_1545_p2 or icmp_ln179_4_fu_1539_p2);
    or_ln179_3_fu_1591_p2 <= (icmp_ln179_7_fu_1585_p2 or icmp_ln179_6_fu_1579_p2);
    or_ln179_fu_1493_p2 <= (icmp_ln179_fu_1481_p2 or icmp_ln179_1_fu_1487_p2);
    or_ln189_1_fu_1935_p2 <= (icmp_ln189_3_fu_1929_p2 or icmp_ln189_2_fu_1923_p2);
    or_ln189_fu_1907_p2 <= (icmp_ln189_fu_1895_p2 or icmp_ln189_1_fu_1901_p2);
    or_ln201_1_fu_1822_p2 <= (icmp_ln201_3_fu_1816_p2 or icmp_ln201_2_fu_1810_p2);
    or_ln201_fu_2006_p2 <= (icmp_ln201_fu_1994_p2 or icmp_ln201_1_fu_2000_p2);
    p_Result_25_fu_2063_p3 <= (p_Result_s_fu_2056_p3 & ap_const_lv31_3F800000);
    p_Result_26_fu_1359_p3 <= (ap_const_lv1_0 & trunc_ln368_2_fu_1351_p1);
    p_Result_27_fu_1388_p3 <= (ap_const_lv1_0 & trunc_ln368_3_fu_1380_p1);
    p_Result_28_fu_1417_p3 <= (ap_const_lv1_0 & trunc_ln368_4_fu_1409_p1);
    p_Result_29_fu_1446_p3 <= (ap_const_lv1_0 & trunc_ln368_5_fu_1438_p1);
    p_Result_30_fu_1846_p3 <= (ap_const_lv1_0 & trunc_ln368_fu_1838_p1);
    p_Result_31_fu_1872_p3 <= (ap_const_lv1_0 & trunc_ln368_1_fu_1864_p1);
    p_Result_s_fu_2056_p3 <= p_Val2_39_reg_2427(31 downto 31);
    p_Val2_34_fu_1860_p1 <= Ri_M_imag_q1;
    p_Val2_36_fu_1376_p1 <= Ri_M_imag_q0;
    p_Val2_37_fu_1405_p1 <= Ri_M_real_q1;
    p_Val2_38_fu_1434_p1 <= Ri_M_imag_q1;
    p_Val2_39_fu_1347_p1 <= Ri_M_real_q0;
    p_Val2_s_fu_1834_p1 <= Ri_M_real_q1;
    r_fu_1074_p2 <= std_logic_vector(unsigned(r_0_i_reg_398) + unsigned(ap_const_lv3_1));
    select_ln486_1_fu_1217_p3 <= 
        icmp_ln490_1_fu_1211_p2 when (icmp_ln498_fu_1190_p2(0) = '1') else 
        icmp_ln490_fu_1168_p2;
    select_ln486_2_fu_1245_p3 <= 
        sub_ln499_fu_1233_p2 when (icmp_ln498_fu_1190_p2(0) = '1') else 
        sub_ln499_1_fu_1239_p2;
    select_ln486_3_fu_1253_p3 <= 
        add_ln513_1_fu_1205_p2 when (icmp_ln498_fu_1190_p2(0) = '1') else 
        j_0_i_reg_443;
    select_ln486_4_fu_1271_p3 <= 
        add_ln513_fu_1265_p2 when (icmp_ln498_fu_1190_p2(0) = '1') else 
        add_ln513_1_fu_1205_p2;
    select_ln486_fu_1196_p3 <= 
        ap_const_lv2_3 when (icmp_ln498_fu_1190_p2(0) = '1') else 
        i_0_i_reg_454;
    sub_ln499_1_fu_1239_p2 <= std_logic_vector(unsigned(j_0_i_reg_443) - unsigned(zext_ln499_fu_1174_p1));
    sub_ln499_fu_1233_p2 <= std_logic_vector(unsigned(add_ln513_1_fu_1205_p2) - unsigned(zext_ln499_1_fu_1225_p1));
    tmp_11_fu_1980_p4 <= bitcast_ln201_fu_1976_p1(30 downto 23);
    tmp_13_fu_1461_p4 <= p_Val2_39_fu_1347_p1(30 downto 23);
    tmp_14_fu_1471_p4 <= p_Val2_36_fu_1376_p1(30 downto 23);
    tmp_16_fu_1529_p4 <= p_Val2_37_fu_1405_p1(30 downto 23);
    tmp_18_fu_1569_p4 <= p_Val2_38_fu_1434_p1(30 downto 23);
    tmp_1_fu_1885_p4 <= p_Val2_s_fu_1834_p1(30 downto 23);
    tmp_26_fu_1796_p4 <= bitcast_ln201_1_fu_1792_p1(30 downto 23);
    tmp_3_fu_998_p3 <= (phi_ln459_reg_352 & phi_ln459_1_reg_364);
    tmp_4_fu_1913_p4 <= p_Val2_34_fu_1860_p1(30 downto 23);
    tmp_5_fu_1084_p3 <= (r_0_i_reg_398 & ap_const_lv2_0);
    tmp_7_fu_1299_p3 <= (grp_fu_858_p2 & ap_const_lv2_0);
    tmp_8_fu_1323_p3 <= (select_ln486_fu_1196_p3 & ap_const_lv2_0);
    tmp_9_fu_1036_p3 <= (phi_ln460_reg_375 & phi_ln460_1_reg_387);
    tmp_M_imag_2_fu_2130_p1 <= xor_ln155_fu_2124_p2;
    tmp_M_imag_4_fu_2085_p1 <= xor_ln155_1_fu_2079_p2;
    tmp_M_imag_6_fu_2100_p1 <= xor_ln155_2_fu_2094_p2;
    trunc_ln189_1_fu_1868_p1 <= p_Val2_34_fu_1860_p1(23 - 1 downto 0);
    trunc_ln189_2_fu_1355_p1 <= p_Val2_39_fu_1347_p1(23 - 1 downto 0);
    trunc_ln189_3_fu_1384_p1 <= p_Val2_36_fu_1376_p1(23 - 1 downto 0);
    trunc_ln189_4_fu_1413_p1 <= p_Val2_37_fu_1405_p1(23 - 1 downto 0);
    trunc_ln189_5_fu_1442_p1 <= p_Val2_38_fu_1434_p1(23 - 1 downto 0);
    trunc_ln189_fu_1842_p1 <= p_Val2_s_fu_1834_p1(23 - 1 downto 0);
    trunc_ln201_1_fu_1806_p1 <= bitcast_ln201_1_fu_1792_p1(23 - 1 downto 0);
    trunc_ln201_fu_1990_p1 <= bitcast_ln201_fu_1976_p1(23 - 1 downto 0);
    trunc_ln368_1_fu_1864_p1 <= p_Val2_34_fu_1860_p1(31 - 1 downto 0);
    trunc_ln368_2_fu_1351_p1 <= p_Val2_39_fu_1347_p1(31 - 1 downto 0);
    trunc_ln368_3_fu_1380_p1 <= p_Val2_36_fu_1376_p1(31 - 1 downto 0);
    trunc_ln368_4_fu_1409_p1 <= p_Val2_37_fu_1405_p1(31 - 1 downto 0);
    trunc_ln368_5_fu_1438_p1 <= p_Val2_38_fu_1434_p1(31 - 1 downto 0);
    trunc_ln368_fu_1838_p1 <= p_Val2_s_fu_1834_p1(31 - 1 downto 0);
    xor_ln155_1_fu_2079_p2 <= (bitcast_ln155_3_fu_2075_p1 xor ap_const_lv32_80000000);
    xor_ln155_2_fu_2094_p2 <= (bitcast_ln155_5_fu_2090_p1 xor ap_const_lv32_80000000);
    xor_ln155_fu_2124_p2 <= (bitcast_ln155_fu_2120_p1 xor ap_const_lv32_80000000);
    xor_ln179_fu_1711_p2 <= (ap_const_lv1_1 xor and_ln179_1_fu_1615_p2);
    xor_ln444_fu_2109_p2 <= (bitcast_ln444_fu_2105_p1 xor ap_const_lv32_80000000);
    xor_ln486_fu_1283_p2 <= (zext_ln486_1_fu_1279_p1 xor ap_const_lv32_FFFFFFFF);
    zext_ln1027_1_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1036_p3),64));
    zext_ln1027_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_998_p3),64));
    zext_ln1067_1_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1084_p3),6));
    zext_ln1067_2_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1067_fu_1096_p2),64));
    zext_ln1067_3_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_0_i_reg_410),6));
    zext_ln1067_4_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1067_1_fu_1130_p2),64));
    zext_ln1067_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_0_i_reg_398),6));
    zext_ln114_1_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_fu_2172_p2),64));
    zext_ln114_2_fu_2188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_2_fu_2183_p2),64));
    zext_ln114_3_fu_2228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k13_0_i_phi_fu_660_p4),5));
    zext_ln114_4_fu_2237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_3_fu_2232_p2),64));
    zext_ln114_5_fu_2248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_4_fu_2243_p2),64));
    zext_ln114_fu_2168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k_0_i_phi_fu_649_p4),5));
    zext_ln482_1_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln482_fu_1157_p2),64));
    zext_ln482_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c12_0_i_reg_421),6));
    zext_ln486_1_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_3_fu_1253_p3),32));
    zext_ln486_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_1_fu_1217_p3),3));
    zext_ln498_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_fu_1196_p3),3));
    zext_ln499_1_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln490_1_fu_1211_p2),3));
    zext_ln499_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln490_fu_1168_p2),3));
    zext_ln503_1_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln503_1_fu_1311_p2),64));
    zext_ln503_2_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1323_p3),5));
    zext_ln503_3_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln503_2_fu_1335_p2),64));
    zext_ln503_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1299_p3),5));
    zext_ln513_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln486_3_fu_1253_p3),5));
    zext_ln519_fu_2219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_k13_0_i_phi_fu_660_p4),32));
    zext_ln521_fu_2198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln521_fu_2194_p2),32));
end behav;
